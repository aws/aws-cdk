.. Copyright 2010-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.

   This work is licensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0
   International License (the "License"). You may not use this file except in compliance with the
   License. A copy of the License is located at http://creativecommons.org/licenses/by-nc-sa/4.0/.

   This file is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
   either express or implied. See the License for the specific language governing permissions and
   limitations under the License.

.. _tools:

###########
|cdk| Tools
###########

.. _toolkit:

Command-line Toolkit (cdk)
==========================

``cdk`` (the |toolkit|) is the main tool you use to interact with your |*CDK App*|. It will execute
the CDK app you have written and compiled, interrogate the application
model you have defined, and produce and deploy the CloudFormation templates
generated by it.

You have to tell ``cdk`` what command to use to run your CDK app using the
``--app`` option. For example:

.. code-block:: sh

   cdk --app 'node bin/main.js' synth

Because this is rather tedious to repeat every time, you will generally put
this option in a file called *cdk.json*:

.. code-block:: javascript

   {
      "app": "node bin/main.js"
   }

Below are the actions you can take on your CDK app:

.. code-block:: sh

   Usage: cdk -a <cloud-executable> COMMAND

   Commands:
     docs                        Opens the documentation in a browser
     list                        Lists all stacks in the cloud executable (alias:
                                 ls)
     synth [STACKS..]            Synthesizes and prints the cloud formation
                                 template for this stack (alias: synthesize,
                                 construct, cons)
     bootstrap [ENVIRONMENTS..]  Deploys the CDK toolkit stack into an AWS
                                 environment
     deploy [STACKS...]          Deploys the stack(s) named STACKS into your AWS
                                 account
     destroy [STACKS...]         Destroy the stack(s) named STACKS
     diff [STACK]                Compares the specified stack with the deployed
                                 stack or a local template file
     metadata [STACK]            Returns all metadata associated with this stack
     init [TEMPLATE]             Create a new, empty CDK project from a template.
                                 Invoked without TEMPLATE, the app template will be
                                 used.
     doctor                      Check your set-up for potential problems

   Options:
     --app, -a            REQUIRED: Command-line for executing your CDK app (e.g.
                          "node bin/my-app.js")                            [string]
     --context, -c        Add contextual string parameter.                  [array]
     --plugin, -p         Name or path of a node package that extend the CDK
                          features. Can be specified multiple times         [array]
     --rename             Rename stack name if different then the one defined in
                          the cloud executable                             [string]
     --trace              Print trace for stack warnings                  [boolean]
     --strict             Do not construct stacks with warnings           [boolean]
     --ignore-errors      Ignores synthesis errors, which will likely produce an
                          invalid output                 [boolean] [default: false]
     --json, -j           Use JSON output instead of YAML                 [boolean]
     --verbose, -v        Show debug logs                                 [boolean]
     --profile            Use the indicated AWS profile as the default environment
                                                                           [string]
     --proxy              Use the indicated proxy. Will read from HTTPS_PROXY
                          environment variable if not specified.           [string]
     --version-reporting  Disable insersion of the CDKMetadata resource in
                          synthesized templates                           [boolean]
     --version            Show version number                             [boolean]
     --help               Show help                                       [boolean]


   If your app has a single stack, there is no need to specify the stack name

   If one of cdk.json or ~/.cdk.json exists, options specified there will be used
   as defaults. Settings in cdk.json take precedence.

.. _version-reporting:

Version Reporting
=================

In order to gain insights in how the |cdk| is used, the versions of libraries used by |cdk| applications are collected
and reported using a resource identified as ``AWS::CDK::Metadata`` that is added to CloudFormation templates, and can easily
be reviewed. This information may also be used to identify stacks using a package with known serious security or
reliability issues and contact their users with important information.

The |cdk| reports the name and version of npm modules that are loaded into the application at synthesis time, unless
their ``package.json`` file contains the ``"private": true`` attribute.

The ``AWS::CDK::Metadata`` resource looks like the following:

.. code-block:: yaml

   CDKMetadata:
     Type: "AWS::CDK::Metadata"
     Properties:
       Modules: "@aws-cdk/core=0.7.2-beta,@aws-cdk/s3=0.7.2-beta,lodash=4.17.10"

.. _version-reporting-opt-out:

Opting-out from Version Reporting
---------------------------------

To out-out, use one of the following methods:

* Use the ``--no-version-reporting`` in ``cdk`` invocations:

    .. code-block:: sh

        cdk --no-version-reporting synth

* Set ``versionReporting`` to ``false`` in **./cdk.json** or **~/cdk.json**:

    .. code-block:: js

        {
          "app": "...",
          "versionReporting": false
        }

