{
  "Resources": {
    "mymeshEA67EDEF": {
      "Type": "AWS::AppMesh::Mesh",
      "Properties": {
        "MeshName": "awsecsintegmymeshFCC0D554",
        "Spec": {}
      }
    },
    "productionenvironmentvpcAEB47DF7": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": "10.0.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": [
          {
            "Key": "Name",
            "Value": "aws-ecs-integ/production-environment-vpc"
          }
        ]
      }
    },
    "productionenvironmentvpcPublicSubnet1Subnet8D92C089": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.0.0/19",
        "VpcId": {
          "Ref": "productionenvironmentvpcAEB47DF7"
        },
        "AvailabilityZone": "test-region-1a",
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public"
          },
          {
            "Key": "Name",
            "Value": "aws-ecs-integ/production-environment-vpc/PublicSubnet1"
          }
        ]
      }
    },
    "productionenvironmentvpcPublicSubnet1RouteTable6E9ABC21": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "productionenvironmentvpcAEB47DF7"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "aws-ecs-integ/production-environment-vpc/PublicSubnet1"
          }
        ]
      }
    },
    "productionenvironmentvpcPublicSubnet1RouteTableAssociationA8117374": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "productionenvironmentvpcPublicSubnet1RouteTable6E9ABC21"
        },
        "SubnetId": {
          "Ref": "productionenvironmentvpcPublicSubnet1Subnet8D92C089"
        }
      }
    },
    "productionenvironmentvpcPublicSubnet1DefaultRoute524C894D": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "productionenvironmentvpcPublicSubnet1RouteTable6E9ABC21"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "productionenvironmentvpcIGWE7C39890"
        }
      },
      "DependsOn": [
        "productionenvironmentvpcVPCGW1B428D07"
      ]
    },
    "productionenvironmentvpcPublicSubnet1EIP54BA88DB": {
      "Type": "AWS::EC2::EIP",
      "Properties": {
        "Domain": "vpc",
        "Tags": [
          {
            "Key": "Name",
            "Value": "aws-ecs-integ/production-environment-vpc/PublicSubnet1"
          }
        ]
      }
    },
    "productionenvironmentvpcPublicSubnet1NATGateway6075E4CA": {
      "Type": "AWS::EC2::NatGateway",
      "Properties": {
        "AllocationId": {
          "Fn::GetAtt": [
            "productionenvironmentvpcPublicSubnet1EIP54BA88DB",
            "AllocationId"
          ]
        },
        "SubnetId": {
          "Ref": "productionenvironmentvpcPublicSubnet1Subnet8D92C089"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "aws-ecs-integ/production-environment-vpc/PublicSubnet1"
          }
        ]
      }
    },
    "productionenvironmentvpcPublicSubnet2Subnet298E6C31": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.32.0/19",
        "VpcId": {
          "Ref": "productionenvironmentvpcAEB47DF7"
        },
        "AvailabilityZone": "test-region-1b",
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public"
          },
          {
            "Key": "Name",
            "Value": "aws-ecs-integ/production-environment-vpc/PublicSubnet2"
          }
        ]
      }
    },
    "productionenvironmentvpcPublicSubnet2RouteTable842A68D7": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "productionenvironmentvpcAEB47DF7"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "aws-ecs-integ/production-environment-vpc/PublicSubnet2"
          }
        ]
      }
    },
    "productionenvironmentvpcPublicSubnet2RouteTableAssociation0A7549F3": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "productionenvironmentvpcPublicSubnet2RouteTable842A68D7"
        },
        "SubnetId": {
          "Ref": "productionenvironmentvpcPublicSubnet2Subnet298E6C31"
        }
      }
    },
    "productionenvironmentvpcPublicSubnet2DefaultRoute92CD697D": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "productionenvironmentvpcPublicSubnet2RouteTable842A68D7"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "productionenvironmentvpcIGWE7C39890"
        }
      },
      "DependsOn": [
        "productionenvironmentvpcVPCGW1B428D07"
      ]
    },
    "productionenvironmentvpcPublicSubnet2EIP14CA46AA": {
      "Type": "AWS::EC2::EIP",
      "Properties": {
        "Domain": "vpc",
        "Tags": [
          {
            "Key": "Name",
            "Value": "aws-ecs-integ/production-environment-vpc/PublicSubnet2"
          }
        ]
      }
    },
    "productionenvironmentvpcPublicSubnet2NATGatewayE1850FCC": {
      "Type": "AWS::EC2::NatGateway",
      "Properties": {
        "AllocationId": {
          "Fn::GetAtt": [
            "productionenvironmentvpcPublicSubnet2EIP14CA46AA",
            "AllocationId"
          ]
        },
        "SubnetId": {
          "Ref": "productionenvironmentvpcPublicSubnet2Subnet298E6C31"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "aws-ecs-integ/production-environment-vpc/PublicSubnet2"
          }
        ]
      }
    },
    "productionenvironmentvpcPublicSubnet3SubnetC7B5665D": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.64.0/19",
        "VpcId": {
          "Ref": "productionenvironmentvpcAEB47DF7"
        },
        "AvailabilityZone": "test-region-1c",
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public"
          },
          {
            "Key": "Name",
            "Value": "aws-ecs-integ/production-environment-vpc/PublicSubnet3"
          }
        ]
      }
    },
    "productionenvironmentvpcPublicSubnet3RouteTable00E3BF60": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "productionenvironmentvpcAEB47DF7"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "aws-ecs-integ/production-environment-vpc/PublicSubnet3"
          }
        ]
      }
    },
    "productionenvironmentvpcPublicSubnet3RouteTableAssociationFA34D6E7": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "productionenvironmentvpcPublicSubnet3RouteTable00E3BF60"
        },
        "SubnetId": {
          "Ref": "productionenvironmentvpcPublicSubnet3SubnetC7B5665D"
        }
      }
    },
    "productionenvironmentvpcPublicSubnet3DefaultRouteE1ADEA6C": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "productionenvironmentvpcPublicSubnet3RouteTable00E3BF60"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "productionenvironmentvpcIGWE7C39890"
        }
      },
      "DependsOn": [
        "productionenvironmentvpcVPCGW1B428D07"
      ]
    },
    "productionenvironmentvpcPublicSubnet3EIP53405AED": {
      "Type": "AWS::EC2::EIP",
      "Properties": {
        "Domain": "vpc",
        "Tags": [
          {
            "Key": "Name",
            "Value": "aws-ecs-integ/production-environment-vpc/PublicSubnet3"
          }
        ]
      }
    },
    "productionenvironmentvpcPublicSubnet3NATGateway94604057": {
      "Type": "AWS::EC2::NatGateway",
      "Properties": {
        "AllocationId": {
          "Fn::GetAtt": [
            "productionenvironmentvpcPublicSubnet3EIP53405AED",
            "AllocationId"
          ]
        },
        "SubnetId": {
          "Ref": "productionenvironmentvpcPublicSubnet3SubnetC7B5665D"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "aws-ecs-integ/production-environment-vpc/PublicSubnet3"
          }
        ]
      }
    },
    "productionenvironmentvpcPrivateSubnet1Subnet53F632E6": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.96.0/19",
        "VpcId": {
          "Ref": "productionenvironmentvpcAEB47DF7"
        },
        "AvailabilityZone": "test-region-1a",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private"
          },
          {
            "Key": "Name",
            "Value": "aws-ecs-integ/production-environment-vpc/PrivateSubnet1"
          }
        ]
      }
    },
    "productionenvironmentvpcPrivateSubnet1RouteTable2C6DFF0C": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "productionenvironmentvpcAEB47DF7"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "aws-ecs-integ/production-environment-vpc/PrivateSubnet1"
          }
        ]
      }
    },
    "productionenvironmentvpcPrivateSubnet1RouteTableAssociation8BA32463": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "productionenvironmentvpcPrivateSubnet1RouteTable2C6DFF0C"
        },
        "SubnetId": {
          "Ref": "productionenvironmentvpcPrivateSubnet1Subnet53F632E6"
        }
      }
    },
    "productionenvironmentvpcPrivateSubnet1DefaultRouteFBB3DE6C": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "productionenvironmentvpcPrivateSubnet1RouteTable2C6DFF0C"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "productionenvironmentvpcPublicSubnet1NATGateway6075E4CA"
        }
      }
    },
    "productionenvironmentvpcPrivateSubnet2Subnet756FB93C": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.128.0/19",
        "VpcId": {
          "Ref": "productionenvironmentvpcAEB47DF7"
        },
        "AvailabilityZone": "test-region-1b",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private"
          },
          {
            "Key": "Name",
            "Value": "aws-ecs-integ/production-environment-vpc/PrivateSubnet2"
          }
        ]
      }
    },
    "productionenvironmentvpcPrivateSubnet2RouteTable2F77D0D2": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "productionenvironmentvpcAEB47DF7"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "aws-ecs-integ/production-environment-vpc/PrivateSubnet2"
          }
        ]
      }
    },
    "productionenvironmentvpcPrivateSubnet2RouteTableAssociation09188261": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "productionenvironmentvpcPrivateSubnet2RouteTable2F77D0D2"
        },
        "SubnetId": {
          "Ref": "productionenvironmentvpcPrivateSubnet2Subnet756FB93C"
        }
      }
    },
    "productionenvironmentvpcPrivateSubnet2DefaultRoute5F9AB6C1": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "productionenvironmentvpcPrivateSubnet2RouteTable2F77D0D2"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "productionenvironmentvpcPublicSubnet2NATGatewayE1850FCC"
        }
      }
    },
    "productionenvironmentvpcPrivateSubnet3Subnet3BD4064E": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.160.0/19",
        "VpcId": {
          "Ref": "productionenvironmentvpcAEB47DF7"
        },
        "AvailabilityZone": "test-region-1c",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private"
          },
          {
            "Key": "Name",
            "Value": "aws-ecs-integ/production-environment-vpc/PrivateSubnet3"
          }
        ]
      }
    },
    "productionenvironmentvpcPrivateSubnet3RouteTable1A244D34": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "productionenvironmentvpcAEB47DF7"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "aws-ecs-integ/production-environment-vpc/PrivateSubnet3"
          }
        ]
      }
    },
    "productionenvironmentvpcPrivateSubnet3RouteTableAssociation65F18B9C": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "productionenvironmentvpcPrivateSubnet3RouteTable1A244D34"
        },
        "SubnetId": {
          "Ref": "productionenvironmentvpcPrivateSubnet3Subnet3BD4064E"
        }
      }
    },
    "productionenvironmentvpcPrivateSubnet3DefaultRoute2438918B": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "productionenvironmentvpcPrivateSubnet3RouteTable1A244D34"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "productionenvironmentvpcPublicSubnet3NATGateway94604057"
        }
      }
    },
    "productionenvironmentvpcIGWE7C39890": {
      "Type": "AWS::EC2::InternetGateway",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "aws-ecs-integ/production-environment-vpc"
          }
        ]
      }
    },
    "productionenvironmentvpcVPCGW1B428D07": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "VpcId": {
          "Ref": "productionenvironmentvpcAEB47DF7"
        },
        "InternetGatewayId": {
          "Ref": "productionenvironmentvpcIGWE7C39890"
        }
      }
    },
    "productionenvironmentclusterC6599D2D": {
      "Type": "AWS::ECS::Cluster"
    },
    "productionenvironmentclusterDefaultServiceDiscoveryNamespaceBE74D64D": {
      "Type": "AWS::ServiceDiscovery::PrivateDnsNamespace",
      "Properties": {
        "Name": "production",
        "Vpc": {
          "Ref": "productionenvironmentvpcAEB47DF7"
        }
      }
    },
    "namelogsF4B17D31": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "name-logs",
        "RetentionInDays": 7
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete"
    },
    "nametaskdefinitionTaskRole50FE844E": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/AWSXRayDaemonWriteAccess"
              ]
            ]
          }
        ]
      }
    },
    "nametaskdefinitionTaskRoleDefaultPolicyE66EDC68": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:DescribeLogStreams",
                "logs:PutLogEvents"
              ],
              "Effect": "Allow",
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "nametaskdefinitionTaskRoleDefaultPolicyE66EDC68",
        "Roles": [
          {
            "Ref": "nametaskdefinitionTaskRole50FE844E"
          }
        ]
      }
    },
    "nametaskdefinition690762BB": {
      "Type": "AWS::ECS::TaskDefinition",
      "Properties": {
        "ContainerDefinitions": [
          {
            "Cpu": 1024,
            "DependsOn": [
              {
                "Condition": "START",
                "ContainerName": "firelens"
              },
              {
                "Condition": "HEALTHY",
                "ContainerName": "envoy"
              },
              {
                "Condition": "START",
                "ContainerName": "cloudwatch-agent"
              },
              {
                "Condition": "HEALTHY",
                "ContainerName": "xray"
              }
            ],
            "Environment": [
              {
                "Name": "PORT",
                "Value": "80"
              }
            ],
            "Essential": true,
            "Image": "nathanpeck/name",
            "LogConfiguration": {
              "LogDriver": "awsfirelens",
              "Options": {
                "Name": "cloudwatch",
                "region": {
                  "Ref": "AWS::Region"
                },
                "log_group_name": {
                  "Ref": "namelogsF4B17D31"
                },
                "log_stream_prefix": "name/"
              }
            },
            "Memory": 2048,
            "Name": "app",
            "PortMappings": [
              {
                "ContainerPort": 80,
                "Protocol": "tcp"
              }
            ],
            "Ulimits": [
              {
                "HardLimit": 1024000,
                "Name": "nofile",
                "SoftLimit": 1024000
              }
            ]
          },
          {
            "Environment": [
              {
                "Name": "APPMESH_VIRTUAL_NODE_NAME",
                "Value": {
                  "Fn::Join": [
                    "",
                    [
                      "mesh/",
                      {
                        "Fn::GetAtt": [
                          "mymeshEA67EDEF",
                          "MeshName"
                        ]
                      },
                      "/virtualNode/name"
                    ]
                  ]
                }
              },
              {
                "Name": "AWS_REGION",
                "Value": {
                  "Ref": "AWS::Region"
                }
              },
              {
                "Name": "ENABLE_ENVOY_STATS_TAGS",
                "Value": "1"
              },
              {
                "Name": "ENABLE_ENVOY_DOG_STATSD",
                "Value": "1"
              }
            ],
            "Essential": true,
            "HealthCheck": {
              "Command": [
                "CMD-SHELL",
                "curl -s http://localhost:9901/server_info | grep state | grep -q LIVE"
              ],
              "Interval": 5,
              "Retries": 3,
              "StartPeriod": 10,
              "Timeout": 2
            },
            "Image": {
              "Fn::Join": [
                "",
                [
                  {
                    "Fn::FindInMap": [
                      "nameenvoyimageaccountmapping",
                      {
                        "Ref": "AWS::Region"
                      },
                      "ecrRepo"
                    ]
                  },
                  ".dkr.ecr.",
                  {
                    "Ref": "AWS::Region"
                  },
                  ".",
                  {
                    "Ref": "AWS::URLSuffix"
                  },
                  "/aws-appmesh-envoy:v1.15.1.0-prod"
                ]
              ]
            },
            "LogConfiguration": {
              "LogDriver": "awslogs",
              "Options": {
                "awslogs-group": {
                  "Ref": "nametaskdefinitionenvoyLogGroup258B673B"
                },
                "awslogs-stream-prefix": "envoy",
                "awslogs-region": {
                  "Ref": "AWS::Region"
                }
              }
            },
            "MemoryReservation": 128,
            "Name": "envoy",
            "Ulimits": [
              {
                "HardLimit": 1024000,
                "Name": "nofile",
                "SoftLimit": 1024000
              }
            ],
            "User": "1337"
          },
          {
            "DependsOn": [
              {
                "Condition": "HEALTHY",
                "ContainerName": "envoy"
              }
            ],
            "Essential": true,
            "FirelensConfiguration": {
              "Type": "fluentbit"
            },
            "Image": {
              "Ref": "SsmParameterValueawsserviceawsforfluentbitlatestC96584B6F00A464EAD1953AFF4B05118Parameter"
            },
            "LogConfiguration": {
              "LogDriver": "awslogs",
              "Options": {
                "awslogs-group": {
                  "Ref": "nametaskdefinitionfirelensLogGroup80DDA60F"
                },
                "awslogs-stream-prefix": "firelens",
                "awslogs-region": {
                  "Ref": "AWS::Region"
                }
              }
            },
            "MemoryReservation": 50,
            "Name": "firelens",
            "User": "0:1338"
          },
          {
            "DependsOn": [
              {
                "Condition": "HEALTHY",
                "ContainerName": "envoy"
              }
            ],
            "Environment": [
              {
                "Name": "AWS_REGION",
                "Value": {
                  "Ref": "AWS::Region"
                }
              }
            ],
            "Essential": true,
            "HealthCheck": {
              "Command": [
                "CMD-SHELL",
                "curl -s http://localhost:2000"
              ],
              "Interval": 5,
              "Retries": 3,
              "StartPeriod": 10,
              "Timeout": 2
            },
            "Image": "amazon/aws-xray-daemon:latest",
            "LogConfiguration": {
              "LogDriver": "awslogs",
              "Options": {
                "awslogs-group": {
                  "Ref": "nametaskdefinitionxrayLogGroup4AF4CA37"
                },
                "awslogs-stream-prefix": "xray",
                "awslogs-region": {
                  "Ref": "AWS::Region"
                }
              }
            },
            "MemoryReservation": 256,
            "Name": "xray",
            "User": "1337"
          },
          {
            "DependsOn": [
              {
                "Condition": "HEALTHY",
                "ContainerName": "envoy"
              }
            ],
            "Environment": [
              {
                "Name": "CW_CONFIG_CONTENT",
                "Value": "{\"logs\":{\"metrics_collected\":{\"emf\":{}}},\"metrics\":{\"metrics_collected\":{\"statsd\":{}}}}"
              }
            ],
            "Essential": true,
            "Image": "amazon/cloudwatch-agent:latest",
            "LogConfiguration": {
              "LogDriver": "awslogs",
              "Options": {
                "awslogs-group": {
                  "Ref": "nametaskdefinitioncloudwatchagentLogGroup78DDC685"
                },
                "awslogs-stream-prefix": "cloudwatch-agent",
                "awslogs-region": {
                  "Ref": "AWS::Region"
                }
              }
            },
            "MemoryReservation": 50,
            "Name": "cloudwatch-agent",
            "User": "0:1338"
          }
        ],
        "Cpu": "1024",
        "ExecutionRoleArn": {
          "Fn::GetAtt": [
            "nametaskdefinitionExecutionRole45AC5C9A",
            "Arn"
          ]
        },
        "Family": "awsecsintegnametaskdefinition0EA6A1A0",
        "Memory": "2048",
        "NetworkMode": "awsvpc",
        "ProxyConfiguration": {
          "ContainerName": "envoy",
          "ProxyConfigurationProperties": [
            {
              "Name": "AppPorts",
              "Value": "80"
            },
            {
              "Name": "ProxyEgressPort",
              "Value": "15001"
            },
            {
              "Name": "ProxyIngressPort",
              "Value": "15000"
            },
            {
              "Name": "IgnoredUID",
              "Value": "1337"
            },
            {
              "Name": "IgnoredGID",
              "Value": "1338"
            },
            {
              "Name": "EgressIgnoredIPs",
              "Value": "169.254.170.2,169.254.169.254"
            }
          ],
          "Type": "APPMESH"
        },
        "RequiresCompatibilities": [
          "EC2",
          "FARGATE"
        ],
        "TaskRoleArn": {
          "Fn::GetAtt": [
            "nametaskdefinitionTaskRole50FE844E",
            "Arn"
          ]
        }
      }
    },
    "nametaskdefinitionenvoyLogGroup258B673B": {
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain"
    },
    "nametaskdefinitionExecutionRole45AC5C9A": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        }
      }
    },
    "nametaskdefinitionExecutionRoleDefaultPolicyF7942D20": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "ecr:BatchCheckLayerAvailability",
                "ecr:GetDownloadUrlForLayer",
                "ecr:BatchGetImage"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:ecr:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Fn::FindInMap": [
                        "nameenvoyimageaccountmapping",
                        {
                          "Ref": "AWS::Region"
                        },
                        "ecrRepo"
                      ]
                    },
                    ":repository/aws-appmesh-envoy"
                  ]
                ]
              }
            },
            {
              "Action": "ecr:GetAuthorizationToken",
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "nametaskdefinitionenvoyLogGroup258B673B",
                  "Arn"
                ]
              }
            },
            {
              "Action": [
                "ecr:GetAuthorizationToken",
                "ecr:BatchCheckLayerAvailability",
                "ecr:GetDownloadUrlForLayer",
                "ecr:BatchGetImage"
              ],
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "nametaskdefinitionfirelensLogGroup80DDA60F",
                  "Arn"
                ]
              }
            },
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "nametaskdefinitionxrayLogGroup4AF4CA37",
                  "Arn"
                ]
              }
            },
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "nametaskdefinitioncloudwatchagentLogGroup78DDC685",
                  "Arn"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "nametaskdefinitionExecutionRoleDefaultPolicyF7942D20",
        "Roles": [
          {
            "Ref": "nametaskdefinitionExecutionRole45AC5C9A"
          }
        ]
      }
    },
    "nametaskdefinitionfirelensLogGroup80DDA60F": {
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain"
    },
    "nametaskdefinitionxrayLogGroup4AF4CA37": {
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain"
    },
    "nametaskdefinitioncloudwatchagentLogGroup78DDC685": {
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain"
    },
    "nameenvoytoappmesh2767D3E6": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "appmesh:StreamAggregatedResources",
              "Effect": "Allow",
              "Resource": {
                "Ref": "mymeshEA67EDEF"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "nameenvoytoappmesh2767D3E6",
        "Roles": [
          {
            "Ref": "nametaskdefinitionTaskRole50FE844E"
          }
        ]
      }
    },
    "namepublishmetricsF329C7AE": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "cloudwatch:PutMetricData",
              "Effect": "Allow",
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "namepublishmetricsF329C7AE",
        "Roles": [
          {
            "Ref": "nametaskdefinitionTaskRole50FE844E"
          }
        ]
      }
    },
    "nameserviceService8015C8D6": {
      "Type": "AWS::ECS::Service",
      "Properties": {
        "Cluster": {
          "Ref": "productionenvironmentclusterC6599D2D"
        },
        "DeploymentConfiguration": {
          "MaximumPercent": 150,
          "MinimumHealthyPercent": 100
        },
        "DesiredCount": 2,
        "EnableECSManagedTags": false,
        "LaunchType": "FARGATE",
        "NetworkConfiguration": {
          "AwsvpcConfiguration": {
            "AssignPublicIp": "DISABLED",
            "SecurityGroups": [
              {
                "Fn::GetAtt": [
                  "nameserviceSecurityGroup33F4662C",
                  "GroupId"
                ]
              }
            ],
            "Subnets": [
              {
                "Ref": "productionenvironmentvpcPrivateSubnet1Subnet53F632E6"
              },
              {
                "Ref": "productionenvironmentvpcPrivateSubnet2Subnet756FB93C"
              },
              {
                "Ref": "productionenvironmentvpcPrivateSubnet3Subnet3BD4064E"
              }
            ]
          }
        },
        "ServiceRegistries": [
          {
            "RegistryArn": {
              "Fn::GetAtt": [
                "nameserviceCloudmapService3D5B0548",
                "Arn"
              ]
            }
          }
        ],
        "TaskDefinition": {
          "Ref": "nametaskdefinition690762BB"
        }
      }
    },
    "nameserviceCloudmapService3D5B0548": {
      "Type": "AWS::ServiceDiscovery::Service",
      "Properties": {
        "DnsConfig": {
          "DnsRecords": [
            {
              "TTL": 10,
              "Type": "A"
            }
          ],
          "NamespaceId": {
            "Fn::GetAtt": [
              "productionenvironmentclusterDefaultServiceDiscoveryNamespaceBE74D64D",
              "Id"
            ]
          },
          "RoutingPolicy": "MULTIVALUE"
        },
        "HealthCheckCustomConfig": {
          "FailureThreshold": 2
        },
        "Name": "name",
        "NamespaceId": {
          "Fn::GetAtt": [
            "productionenvironmentclusterDefaultServiceDiscoveryNamespaceBE74D64D",
            "Id"
          ]
        }
      }
    },
    "nameserviceSecurityGroup33F4662C": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "aws-ecs-integ/name-service/SecurityGroup",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1"
          }
        ],
        "VpcId": {
          "Ref": "productionenvironmentvpcAEB47DF7"
        }
      }
    },
    "nameserviceSecurityGroupfromawsecsinteggreeterserviceSecurityGroup055DC23B8048057EFF": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "IpProtocol": "tcp",
        "Description": "Accept inbound traffic from greeter",
        "FromPort": 80,
        "GroupId": {
          "Fn::GetAtt": [
            "nameserviceSecurityGroup33F4662C",
            "GroupId"
          ]
        },
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "greeterserviceSecurityGroupDB4AC3A9",
            "GroupId"
          ]
        },
        "ToPort": 80
      }
    },
    "nameserviceTaskCountTarget366C2B3A": {
      "Type": "AWS::ApplicationAutoScaling::ScalableTarget",
      "Properties": {
        "MaxCapacity": 8,
        "MinCapacity": 2,
        "ResourceId": {
          "Fn::Join": [
            "",
            [
              "service/",
              {
                "Ref": "productionenvironmentclusterC6599D2D"
              },
              "/",
              {
                "Fn::GetAtt": [
                  "nameserviceService8015C8D6",
                  "Name"
                ]
              }
            ]
          ]
        },
        "RoleARN": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":iam::",
              {
                "Ref": "AWS::AccountId"
              },
              ":role/aws-service-role/ecs.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_ECSService"
            ]
          ]
        },
        "ScalableDimension": "ecs:service:DesiredCount",
        "ServiceNamespace": "ecs"
      }
    },
    "nameserviceTaskCountTargetnametargetcpuutilization5018B16243": {
      "Type": "AWS::ApplicationAutoScaling::ScalingPolicy",
      "Properties": {
        "PolicyName": "awsecsintegnameserviceTaskCountTargetnametargetcpuutilization50CAB59E05",
        "PolicyType": "TargetTrackingScaling",
        "ScalingTargetId": {
          "Ref": "nameserviceTaskCountTarget366C2B3A"
        },
        "TargetTrackingScalingPolicyConfiguration": {
          "PredefinedMetricSpecification": {
            "PredefinedMetricType": "ECSServiceAverageCPUUtilization"
          },
          "ScaleInCooldown": 60,
          "ScaleOutCooldown": 60,
          "TargetValue": 50
        }
      }
    },
    "namevirtualnode6C99CB14": {
      "Type": "AWS::AppMesh::VirtualNode",
      "Properties": {
        "MeshName": {
          "Fn::GetAtt": [
            "mymeshEA67EDEF",
            "MeshName"
          ]
        },
        "Spec": {
          "Listeners": [
            {
              "PortMapping": {
                "Port": 80,
                "Protocol": "http"
              }
            }
          ],
          "ServiceDiscovery": {
            "AWSCloudMap": {
              "NamespaceName": "production",
              "ServiceName": {
                "Fn::GetAtt": [
                  "nameserviceCloudmapService3D5B0548",
                  "Name"
                ]
              }
            }
          }
        },
        "VirtualNodeName": "name"
      }
    },
    "namevirtualrouterC00E1ACE": {
      "Type": "AWS::AppMesh::VirtualRouter",
      "Properties": {
        "MeshName": {
          "Fn::GetAtt": [
            "mymeshEA67EDEF",
            "MeshName"
          ]
        },
        "Spec": {
          "Listeners": [
            {
              "PortMapping": {
                "Port": 80,
                "Protocol": "http"
              }
            }
          ]
        },
        "VirtualRouterName": "name"
      }
    },
    "namevirtualrouternamerouteDCDF3715": {
      "Type": "AWS::AppMesh::Route",
      "Properties": {
        "MeshName": {
          "Fn::GetAtt": [
            "mymeshEA67EDEF",
            "MeshName"
          ]
        },
        "RouteName": "name-route",
        "Spec": {
          "HttpRoute": {
            "Action": {
              "WeightedTargets": [
                {
                  "VirtualNode": {
                    "Fn::GetAtt": [
                      "namevirtualnode6C99CB14",
                      "VirtualNodeName"
                    ]
                  },
                  "Weight": 1
                }
              ]
            },
            "Match": {
              "Prefix": "/"
            }
          }
        },
        "VirtualRouterName": {
          "Fn::GetAtt": [
            "namevirtualrouterC00E1ACE",
            "VirtualRouterName"
          ]
        }
      }
    },
    "namevirtualservice3DDDDF1E": {
      "Type": "AWS::AppMesh::VirtualService",
      "Properties": {
        "MeshName": {
          "Fn::GetAtt": [
            "mymeshEA67EDEF",
            "MeshName"
          ]
        },
        "Spec": {
          "Provider": {
            "VirtualRouter": {
              "VirtualRouterName": {
                "Fn::GetAtt": [
                  "namevirtualrouterC00E1ACE",
                  "VirtualRouterName"
                ]
              }
            }
          }
        },
        "VirtualServiceName": "name.production"
      }
    },
    "greetinglogsCC360934": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "greeting-logs",
        "RetentionInDays": 7
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete"
    },
    "greetingtaskdefinitionTaskRole9179DA4A": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/AWSXRayDaemonWriteAccess"
              ]
            ]
          }
        ]
      }
    },
    "greetingtaskdefinitionTaskRoleDefaultPolicy5DB4510A": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:DescribeLogStreams",
                "logs:PutLogEvents"
              ],
              "Effect": "Allow",
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "greetingtaskdefinitionTaskRoleDefaultPolicy5DB4510A",
        "Roles": [
          {
            "Ref": "greetingtaskdefinitionTaskRole9179DA4A"
          }
        ]
      }
    },
    "greetingtaskdefinition31690093": {
      "Type": "AWS::ECS::TaskDefinition",
      "Properties": {
        "ContainerDefinitions": [
          {
            "Cpu": 1024,
            "DependsOn": [
              {
                "Condition": "START",
                "ContainerName": "firelens"
              },
              {
                "Condition": "HEALTHY",
                "ContainerName": "envoy"
              },
              {
                "Condition": "START",
                "ContainerName": "cloudwatch-agent"
              },
              {
                "Condition": "HEALTHY",
                "ContainerName": "xray"
              }
            ],
            "Environment": [
              {
                "Name": "PORT",
                "Value": "80"
              }
            ],
            "Essential": true,
            "Image": "nathanpeck/greeting",
            "LogConfiguration": {
              "LogDriver": "awsfirelens",
              "Options": {
                "Name": "cloudwatch",
                "region": {
                  "Ref": "AWS::Region"
                },
                "log_group_name": {
                  "Ref": "greetinglogsCC360934"
                },
                "log_stream_prefix": "greeting/"
              }
            },
            "Memory": 2048,
            "Name": "app",
            "PortMappings": [
              {
                "ContainerPort": 80,
                "Protocol": "tcp"
              }
            ],
            "Ulimits": [
              {
                "HardLimit": 1024000,
                "Name": "nofile",
                "SoftLimit": 1024000
              }
            ]
          },
          {
            "Environment": [
              {
                "Name": "APPMESH_VIRTUAL_NODE_NAME",
                "Value": {
                  "Fn::Join": [
                    "",
                    [
                      "mesh/",
                      {
                        "Fn::GetAtt": [
                          "mymeshEA67EDEF",
                          "MeshName"
                        ]
                      },
                      "/virtualNode/greeting"
                    ]
                  ]
                }
              },
              {
                "Name": "AWS_REGION",
                "Value": {
                  "Ref": "AWS::Region"
                }
              },
              {
                "Name": "ENABLE_ENVOY_STATS_TAGS",
                "Value": "1"
              },
              {
                "Name": "ENABLE_ENVOY_DOG_STATSD",
                "Value": "1"
              }
            ],
            "Essential": true,
            "HealthCheck": {
              "Command": [
                "CMD-SHELL",
                "curl -s http://localhost:9901/server_info | grep state | grep -q LIVE"
              ],
              "Interval": 5,
              "Retries": 3,
              "StartPeriod": 10,
              "Timeout": 2
            },
            "Image": {
              "Fn::Join": [
                "",
                [
                  {
                    "Fn::FindInMap": [
                      "greetingenvoyimageaccountmapping",
                      {
                        "Ref": "AWS::Region"
                      },
                      "ecrRepo"
                    ]
                  },
                  ".dkr.ecr.",
                  {
                    "Ref": "AWS::Region"
                  },
                  ".",
                  {
                    "Ref": "AWS::URLSuffix"
                  },
                  "/aws-appmesh-envoy:v1.15.1.0-prod"
                ]
              ]
            },
            "LogConfiguration": {
              "LogDriver": "awslogs",
              "Options": {
                "awslogs-group": {
                  "Ref": "greetingtaskdefinitionenvoyLogGroup6556AC35"
                },
                "awslogs-stream-prefix": "envoy",
                "awslogs-region": {
                  "Ref": "AWS::Region"
                }
              }
            },
            "MemoryReservation": 128,
            "Name": "envoy",
            "Ulimits": [
              {
                "HardLimit": 1024000,
                "Name": "nofile",
                "SoftLimit": 1024000
              }
            ],
            "User": "1337"
          },
          {
            "DependsOn": [
              {
                "Condition": "HEALTHY",
                "ContainerName": "envoy"
              }
            ],
            "Essential": true,
            "FirelensConfiguration": {
              "Type": "fluentbit"
            },
            "Image": {
              "Ref": "SsmParameterValueawsserviceawsforfluentbitlatestC96584B6F00A464EAD1953AFF4B05118Parameter"
            },
            "LogConfiguration": {
              "LogDriver": "awslogs",
              "Options": {
                "awslogs-group": {
                  "Ref": "greetingtaskdefinitionfirelensLogGroupD7A398A7"
                },
                "awslogs-stream-prefix": "firelens",
                "awslogs-region": {
                  "Ref": "AWS::Region"
                }
              }
            },
            "MemoryReservation": 50,
            "Name": "firelens",
            "User": "0:1338"
          },
          {
            "DependsOn": [
              {
                "Condition": "HEALTHY",
                "ContainerName": "envoy"
              }
            ],
            "Environment": [
              {
                "Name": "AWS_REGION",
                "Value": {
                  "Ref": "AWS::Region"
                }
              }
            ],
            "Essential": true,
            "HealthCheck": {
              "Command": [
                "CMD-SHELL",
                "curl -s http://localhost:2000"
              ],
              "Interval": 5,
              "Retries": 3,
              "StartPeriod": 10,
              "Timeout": 2
            },
            "Image": "amazon/aws-xray-daemon:latest",
            "LogConfiguration": {
              "LogDriver": "awslogs",
              "Options": {
                "awslogs-group": {
                  "Ref": "greetingtaskdefinitionxrayLogGroupD25C072D"
                },
                "awslogs-stream-prefix": "xray",
                "awslogs-region": {
                  "Ref": "AWS::Region"
                }
              }
            },
            "MemoryReservation": 256,
            "Name": "xray",
            "User": "1337"
          },
          {
            "DependsOn": [
              {
                "Condition": "HEALTHY",
                "ContainerName": "envoy"
              }
            ],
            "Environment": [
              {
                "Name": "CW_CONFIG_CONTENT",
                "Value": "{\"logs\":{\"metrics_collected\":{\"emf\":{}}},\"metrics\":{\"metrics_collected\":{\"statsd\":{}}}}"
              }
            ],
            "Essential": true,
            "Image": "amazon/cloudwatch-agent:latest",
            "LogConfiguration": {
              "LogDriver": "awslogs",
              "Options": {
                "awslogs-group": {
                  "Ref": "greetingtaskdefinitioncloudwatchagentLogGroupCEF72742"
                },
                "awslogs-stream-prefix": "cloudwatch-agent",
                "awslogs-region": {
                  "Ref": "AWS::Region"
                }
              }
            },
            "MemoryReservation": 50,
            "Name": "cloudwatch-agent",
            "User": "0:1338"
          }
        ],
        "Cpu": "1024",
        "ExecutionRoleArn": {
          "Fn::GetAtt": [
            "greetingtaskdefinitionExecutionRole9E3A7CF3",
            "Arn"
          ]
        },
        "Family": "awsecsinteggreetingtaskdefinitionA6E8A57B",
        "Memory": "2048",
        "NetworkMode": "awsvpc",
        "ProxyConfiguration": {
          "ContainerName": "envoy",
          "ProxyConfigurationProperties": [
            {
              "Name": "AppPorts",
              "Value": "80"
            },
            {
              "Name": "ProxyEgressPort",
              "Value": "15001"
            },
            {
              "Name": "ProxyIngressPort",
              "Value": "15000"
            },
            {
              "Name": "IgnoredUID",
              "Value": "1337"
            },
            {
              "Name": "IgnoredGID",
              "Value": "1338"
            },
            {
              "Name": "EgressIgnoredIPs",
              "Value": "169.254.170.2,169.254.169.254"
            }
          ],
          "Type": "APPMESH"
        },
        "RequiresCompatibilities": [
          "EC2",
          "FARGATE"
        ],
        "TaskRoleArn": {
          "Fn::GetAtt": [
            "greetingtaskdefinitionTaskRole9179DA4A",
            "Arn"
          ]
        }
      }
    },
    "greetingtaskdefinitionenvoyLogGroup6556AC35": {
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain"
    },
    "greetingtaskdefinitionExecutionRole9E3A7CF3": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        }
      }
    },
    "greetingtaskdefinitionExecutionRoleDefaultPolicy31B93022": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "ecr:BatchCheckLayerAvailability",
                "ecr:GetDownloadUrlForLayer",
                "ecr:BatchGetImage"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:ecr:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Fn::FindInMap": [
                        "greetingenvoyimageaccountmapping",
                        {
                          "Ref": "AWS::Region"
                        },
                        "ecrRepo"
                      ]
                    },
                    ":repository/aws-appmesh-envoy"
                  ]
                ]
              }
            },
            {
              "Action": "ecr:GetAuthorizationToken",
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "greetingtaskdefinitionenvoyLogGroup6556AC35",
                  "Arn"
                ]
              }
            },
            {
              "Action": [
                "ecr:GetAuthorizationToken",
                "ecr:BatchCheckLayerAvailability",
                "ecr:GetDownloadUrlForLayer",
                "ecr:BatchGetImage"
              ],
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "greetingtaskdefinitionfirelensLogGroupD7A398A7",
                  "Arn"
                ]
              }
            },
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "greetingtaskdefinitionxrayLogGroupD25C072D",
                  "Arn"
                ]
              }
            },
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "greetingtaskdefinitioncloudwatchagentLogGroupCEF72742",
                  "Arn"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "greetingtaskdefinitionExecutionRoleDefaultPolicy31B93022",
        "Roles": [
          {
            "Ref": "greetingtaskdefinitionExecutionRole9E3A7CF3"
          }
        ]
      }
    },
    "greetingtaskdefinitionfirelensLogGroupD7A398A7": {
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain"
    },
    "greetingtaskdefinitionxrayLogGroupD25C072D": {
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain"
    },
    "greetingtaskdefinitioncloudwatchagentLogGroupCEF72742": {
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain"
    },
    "greetingenvoytoappmesh97051B23": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "appmesh:StreamAggregatedResources",
              "Effect": "Allow",
              "Resource": {
                "Ref": "mymeshEA67EDEF"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "greetingenvoytoappmesh97051B23",
        "Roles": [
          {
            "Ref": "greetingtaskdefinitionTaskRole9179DA4A"
          }
        ]
      }
    },
    "greetingpublishmetricsF17124EF": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "cloudwatch:PutMetricData",
              "Effect": "Allow",
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "greetingpublishmetricsF17124EF",
        "Roles": [
          {
            "Ref": "greetingtaskdefinitionTaskRole9179DA4A"
          }
        ]
      }
    },
    "greetingserviceService8DA58640": {
      "Type": "AWS::ECS::Service",
      "Properties": {
        "Cluster": {
          "Ref": "productionenvironmentclusterC6599D2D"
        },
        "DeploymentConfiguration": {
          "MaximumPercent": 150,
          "MinimumHealthyPercent": 100
        },
        "DesiredCount": 2,
        "EnableECSManagedTags": false,
        "LaunchType": "FARGATE",
        "NetworkConfiguration": {
          "AwsvpcConfiguration": {
            "AssignPublicIp": "DISABLED",
            "SecurityGroups": [
              {
                "Fn::GetAtt": [
                  "greetingserviceSecurityGroupE9BE665B",
                  "GroupId"
                ]
              }
            ],
            "Subnets": [
              {
                "Ref": "productionenvironmentvpcPrivateSubnet1Subnet53F632E6"
              },
              {
                "Ref": "productionenvironmentvpcPrivateSubnet2Subnet756FB93C"
              },
              {
                "Ref": "productionenvironmentvpcPrivateSubnet3Subnet3BD4064E"
              }
            ]
          }
        },
        "ServiceRegistries": [
          {
            "RegistryArn": {
              "Fn::GetAtt": [
                "greetingserviceCloudmapService0A2D7385",
                "Arn"
              ]
            }
          }
        ],
        "TaskDefinition": {
          "Ref": "greetingtaskdefinition31690093"
        }
      }
    },
    "greetingserviceCloudmapService0A2D7385": {
      "Type": "AWS::ServiceDiscovery::Service",
      "Properties": {
        "DnsConfig": {
          "DnsRecords": [
            {
              "TTL": 10,
              "Type": "A"
            }
          ],
          "NamespaceId": {
            "Fn::GetAtt": [
              "productionenvironmentclusterDefaultServiceDiscoveryNamespaceBE74D64D",
              "Id"
            ]
          },
          "RoutingPolicy": "MULTIVALUE"
        },
        "HealthCheckCustomConfig": {
          "FailureThreshold": 2
        },
        "Name": "greeting",
        "NamespaceId": {
          "Fn::GetAtt": [
            "productionenvironmentclusterDefaultServiceDiscoveryNamespaceBE74D64D",
            "Id"
          ]
        }
      }
    },
    "greetingserviceSecurityGroupE9BE665B": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "aws-ecs-integ/greeting-service/SecurityGroup",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1"
          }
        ],
        "VpcId": {
          "Ref": "productionenvironmentvpcAEB47DF7"
        }
      }
    },
    "greetingserviceSecurityGroupfromawsecsinteggreeterserviceSecurityGroup055DC23B807B9C4357": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "IpProtocol": "tcp",
        "Description": "Accept inbound traffic from greeter",
        "FromPort": 80,
        "GroupId": {
          "Fn::GetAtt": [
            "greetingserviceSecurityGroupE9BE665B",
            "GroupId"
          ]
        },
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "greeterserviceSecurityGroupDB4AC3A9",
            "GroupId"
          ]
        },
        "ToPort": 80
      }
    },
    "greetingserviceTaskCountTargetA036048C": {
      "Type": "AWS::ApplicationAutoScaling::ScalableTarget",
      "Properties": {
        "MaxCapacity": 8,
        "MinCapacity": 2,
        "ResourceId": {
          "Fn::Join": [
            "",
            [
              "service/",
              {
                "Ref": "productionenvironmentclusterC6599D2D"
              },
              "/",
              {
                "Fn::GetAtt": [
                  "greetingserviceService8DA58640",
                  "Name"
                ]
              }
            ]
          ]
        },
        "RoleARN": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":iam::",
              {
                "Ref": "AWS::AccountId"
              },
              ":role/aws-service-role/ecs.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_ECSService"
            ]
          ]
        },
        "ScalableDimension": "ecs:service:DesiredCount",
        "ServiceNamespace": "ecs"
      }
    },
    "greetingserviceTaskCountTargetgreetingtargetcpuutilization50FEAF6434": {
      "Type": "AWS::ApplicationAutoScaling::ScalingPolicy",
      "Properties": {
        "PolicyName": "awsecsinteggreetingserviceTaskCountTargetgreetingtargetcpuutilization504C76B1F4",
        "PolicyType": "TargetTrackingScaling",
        "ScalingTargetId": {
          "Ref": "greetingserviceTaskCountTargetA036048C"
        },
        "TargetTrackingScalingPolicyConfiguration": {
          "PredefinedMetricSpecification": {
            "PredefinedMetricType": "ECSServiceAverageCPUUtilization"
          },
          "ScaleInCooldown": 60,
          "ScaleOutCooldown": 60,
          "TargetValue": 50
        }
      }
    },
    "greetingvirtualnodeC4A2C517": {
      "Type": "AWS::AppMesh::VirtualNode",
      "Properties": {
        "MeshName": {
          "Fn::GetAtt": [
            "mymeshEA67EDEF",
            "MeshName"
          ]
        },
        "Spec": {
          "Listeners": [
            {
              "PortMapping": {
                "Port": 80,
                "Protocol": "http"
              }
            }
          ],
          "ServiceDiscovery": {
            "AWSCloudMap": {
              "NamespaceName": "production",
              "ServiceName": {
                "Fn::GetAtt": [
                  "greetingserviceCloudmapService0A2D7385",
                  "Name"
                ]
              }
            }
          }
        },
        "VirtualNodeName": "greeting"
      }
    },
    "greetingvirtualrouter0F898D1A": {
      "Type": "AWS::AppMesh::VirtualRouter",
      "Properties": {
        "MeshName": {
          "Fn::GetAtt": [
            "mymeshEA67EDEF",
            "MeshName"
          ]
        },
        "Spec": {
          "Listeners": [
            {
              "PortMapping": {
                "Port": 80,
                "Protocol": "http"
              }
            }
          ]
        },
        "VirtualRouterName": "greeting"
      }
    },
    "greetingvirtualroutergreetingroute46305F50": {
      "Type": "AWS::AppMesh::Route",
      "Properties": {
        "MeshName": {
          "Fn::GetAtt": [
            "mymeshEA67EDEF",
            "MeshName"
          ]
        },
        "RouteName": "greeting-route",
        "Spec": {
          "HttpRoute": {
            "Action": {
              "WeightedTargets": [
                {
                  "VirtualNode": {
                    "Fn::GetAtt": [
                      "greetingvirtualnodeC4A2C517",
                      "VirtualNodeName"
                    ]
                  },
                  "Weight": 1
                }
              ]
            },
            "Match": {
              "Prefix": "/"
            }
          }
        },
        "VirtualRouterName": {
          "Fn::GetAtt": [
            "greetingvirtualrouter0F898D1A",
            "VirtualRouterName"
          ]
        }
      }
    },
    "greetingvirtualservice60AD3AD9": {
      "Type": "AWS::AppMesh::VirtualService",
      "Properties": {
        "MeshName": {
          "Fn::GetAtt": [
            "mymeshEA67EDEF",
            "MeshName"
          ]
        },
        "Spec": {
          "Provider": {
            "VirtualRouter": {
              "VirtualRouterName": {
                "Fn::GetAtt": [
                  "greetingvirtualrouter0F898D1A",
                  "VirtualRouterName"
                ]
              }
            }
          }
        },
        "VirtualServiceName": "greeting.production"
      }
    },
    "greeterlogsCCD2F8B2": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "greeter-logs",
        "RetentionInDays": 7
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete"
    },
    "greeterloadbalancer85256741": {
      "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
      "Properties": {
        "LoadBalancerAttributes": [
          {
            "Key": "deletion_protection.enabled",
            "Value": "false"
          }
        ],
        "Scheme": "internet-facing",
        "SecurityGroups": [
          {
            "Fn::GetAtt": [
              "greeterloadbalancerSecurityGroupEE1B20F3",
              "GroupId"
            ]
          }
        ],
        "Subnets": [
          {
            "Ref": "productionenvironmentvpcPublicSubnet1Subnet8D92C089"
          },
          {
            "Ref": "productionenvironmentvpcPublicSubnet2Subnet298E6C31"
          },
          {
            "Ref": "productionenvironmentvpcPublicSubnet3SubnetC7B5665D"
          }
        ],
        "Type": "application"
      },
      "DependsOn": [
        "productionenvironmentvpcPublicSubnet1DefaultRoute524C894D",
        "productionenvironmentvpcPublicSubnet2DefaultRoute92CD697D",
        "productionenvironmentvpcPublicSubnet3DefaultRouteE1ADEA6C"
      ]
    },
    "greeterloadbalancerSecurityGroupEE1B20F3": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Automatically created Security Group for ELB awsecsinteggreeterloadbalancer147D1D5C",
        "SecurityGroupIngress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow from anyone on port 80",
            "FromPort": 80,
            "IpProtocol": "tcp",
            "ToPort": 80
          }
        ],
        "VpcId": {
          "Ref": "productionenvironmentvpcAEB47DF7"
        }
      }
    },
    "greeterloadbalancerSecurityGrouptoawsecsinteggreeterserviceSecurityGroup055DC23B803EEF3320": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Fn::GetAtt": [
            "greeterloadbalancerSecurityGroupEE1B20F3",
            "GroupId"
          ]
        },
        "IpProtocol": "tcp",
        "Description": "Load balancer to target",
        "DestinationSecurityGroupId": {
          "Fn::GetAtt": [
            "greeterserviceSecurityGroupDB4AC3A9",
            "GroupId"
          ]
        },
        "FromPort": 80,
        "ToPort": 80
      }
    },
    "greeterloadbalancergreeterlistener952E028B": {
      "Type": "AWS::ElasticLoadBalancingV2::Listener",
      "Properties": {
        "DefaultActions": [
          {
            "TargetGroupArn": {
              "Ref": "greeterloadbalancergreeterlistenergreeterGroupFFBFF0C2"
            },
            "Type": "forward"
          }
        ],
        "LoadBalancerArn": {
          "Ref": "greeterloadbalancer85256741"
        },
        "Port": 80,
        "Protocol": "HTTP"
      }
    },
    "greeterloadbalancergreeterlistenergreeterGroupFFBFF0C2": {
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
      "Properties": {
        "Port": 80,
        "Protocol": "HTTP",
        "TargetGroupAttributes": [
          {
            "Key": "deregistration_delay.timeout_seconds",
            "Value": "10"
          }
        ],
        "TargetType": "ip",
        "VpcId": {
          "Ref": "productionenvironmentvpcAEB47DF7"
        }
      }
    },
    "greetertaskdefinitionTaskRole2A098ACC": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/AWSXRayDaemonWriteAccess"
              ]
            ]
          }
        ]
      }
    },
    "greetertaskdefinitionTaskRoleDefaultPolicyD0F53B1C": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:DescribeLogStreams",
                "logs:PutLogEvents"
              ],
              "Effect": "Allow",
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "greetertaskdefinitionTaskRoleDefaultPolicyD0F53B1C",
        "Roles": [
          {
            "Ref": "greetertaskdefinitionTaskRole2A098ACC"
          }
        ]
      }
    },
    "greetertaskdefinitionE956EEA2": {
      "Type": "AWS::ECS::TaskDefinition",
      "Properties": {
        "ContainerDefinitions": [
          {
            "Cpu": 1024,
            "DependsOn": [
              {
                "Condition": "START",
                "ContainerName": "firelens"
              },
              {
                "Condition": "HEALTHY",
                "ContainerName": "envoy"
              },
              {
                "Condition": "START",
                "ContainerName": "cloudwatch-agent"
              },
              {
                "Condition": "HEALTHY",
                "ContainerName": "xray"
              }
            ],
            "Environment": [
              {
                "Name": "PORT",
                "Value": "80"
              },
              {
                "Name": "GREETING_URL",
                "Value": "http://greeting.production"
              },
              {
                "Name": "NAME_URL",
                "Value": "http://name.production"
              }
            ],
            "Essential": true,
            "Image": "nathanpeck/greeter",
            "LogConfiguration": {
              "LogDriver": "awsfirelens",
              "Options": {
                "Name": "cloudwatch",
                "region": {
                  "Ref": "AWS::Region"
                },
                "log_group_name": {
                  "Ref": "greeterlogsCCD2F8B2"
                },
                "log_stream_prefix": "greeter/"
              }
            },
            "Memory": 2048,
            "Name": "app",
            "PortMappings": [
              {
                "ContainerPort": 80,
                "Protocol": "tcp"
              }
            ],
            "Ulimits": [
              {
                "HardLimit": 1024000,
                "Name": "nofile",
                "SoftLimit": 1024000
              }
            ]
          },
          {
            "Environment": [
              {
                "Name": "APPMESH_VIRTUAL_NODE_NAME",
                "Value": {
                  "Fn::Join": [
                    "",
                    [
                      "mesh/",
                      {
                        "Fn::GetAtt": [
                          "mymeshEA67EDEF",
                          "MeshName"
                        ]
                      },
                      "/virtualNode/greeter"
                    ]
                  ]
                }
              },
              {
                "Name": "AWS_REGION",
                "Value": {
                  "Ref": "AWS::Region"
                }
              },
              {
                "Name": "ENABLE_ENVOY_STATS_TAGS",
                "Value": "1"
              },
              {
                "Name": "ENABLE_ENVOY_DOG_STATSD",
                "Value": "1"
              }
            ],
            "Essential": true,
            "HealthCheck": {
              "Command": [
                "CMD-SHELL",
                "curl -s http://localhost:9901/server_info | grep state | grep -q LIVE"
              ],
              "Interval": 5,
              "Retries": 3,
              "StartPeriod": 10,
              "Timeout": 2
            },
            "Image": {
              "Fn::Join": [
                "",
                [
                  {
                    "Fn::FindInMap": [
                      "greeterenvoyimageaccountmapping",
                      {
                        "Ref": "AWS::Region"
                      },
                      "ecrRepo"
                    ]
                  },
                  ".dkr.ecr.",
                  {
                    "Ref": "AWS::Region"
                  },
                  ".",
                  {
                    "Ref": "AWS::URLSuffix"
                  },
                  "/aws-appmesh-envoy:v1.15.1.0-prod"
                ]
              ]
            },
            "LogConfiguration": {
              "LogDriver": "awslogs",
              "Options": {
                "awslogs-group": {
                  "Ref": "greetertaskdefinitionenvoyLogGroup6E10B93E"
                },
                "awslogs-stream-prefix": "envoy",
                "awslogs-region": {
                  "Ref": "AWS::Region"
                }
              }
            },
            "MemoryReservation": 128,
            "Name": "envoy",
            "Ulimits": [
              {
                "HardLimit": 1024000,
                "Name": "nofile",
                "SoftLimit": 1024000
              }
            ],
            "User": "1337"
          },
          {
            "DependsOn": [
              {
                "Condition": "HEALTHY",
                "ContainerName": "envoy"
              }
            ],
            "Essential": true,
            "FirelensConfiguration": {
              "Type": "fluentbit"
            },
            "Image": {
              "Ref": "SsmParameterValueawsserviceawsforfluentbitlatestC96584B6F00A464EAD1953AFF4B05118Parameter"
            },
            "LogConfiguration": {
              "LogDriver": "awslogs",
              "Options": {
                "awslogs-group": {
                  "Ref": "greetertaskdefinitionfirelensLogGroupD5BAAC35"
                },
                "awslogs-stream-prefix": "firelens",
                "awslogs-region": {
                  "Ref": "AWS::Region"
                }
              }
            },
            "MemoryReservation": 50,
            "Name": "firelens",
            "User": "0:1338"
          },
          {
            "DependsOn": [
              {
                "Condition": "HEALTHY",
                "ContainerName": "envoy"
              }
            ],
            "Environment": [
              {
                "Name": "AWS_REGION",
                "Value": {
                  "Ref": "AWS::Region"
                }
              }
            ],
            "Essential": true,
            "HealthCheck": {
              "Command": [
                "CMD-SHELL",
                "curl -s http://localhost:2000"
              ],
              "Interval": 5,
              "Retries": 3,
              "StartPeriod": 10,
              "Timeout": 2
            },
            "Image": "amazon/aws-xray-daemon:latest",
            "LogConfiguration": {
              "LogDriver": "awslogs",
              "Options": {
                "awslogs-group": {
                  "Ref": "greetertaskdefinitionxrayLogGroupBC1558B6"
                },
                "awslogs-stream-prefix": "xray",
                "awslogs-region": {
                  "Ref": "AWS::Region"
                }
              }
            },
            "MemoryReservation": 256,
            "Name": "xray",
            "User": "1337"
          },
          {
            "DependsOn": [
              {
                "Condition": "HEALTHY",
                "ContainerName": "envoy"
              }
            ],
            "Environment": [
              {
                "Name": "CW_CONFIG_CONTENT",
                "Value": "{\"logs\":{\"metrics_collected\":{\"emf\":{}}},\"metrics\":{\"metrics_collected\":{\"statsd\":{}}}}"
              }
            ],
            "Essential": true,
            "Image": "amazon/cloudwatch-agent:latest",
            "LogConfiguration": {
              "LogDriver": "awslogs",
              "Options": {
                "awslogs-group": {
                  "Ref": "greetertaskdefinitioncloudwatchagentLogGroupE7EAF327"
                },
                "awslogs-stream-prefix": "cloudwatch-agent",
                "awslogs-region": {
                  "Ref": "AWS::Region"
                }
              }
            },
            "MemoryReservation": 50,
            "Name": "cloudwatch-agent",
            "User": "0:1338"
          }
        ],
        "Cpu": "1024",
        "ExecutionRoleArn": {
          "Fn::GetAtt": [
            "greetertaskdefinitionExecutionRoleAED0EC79",
            "Arn"
          ]
        },
        "Family": "awsecsinteggreetertaskdefinitionB95239FB",
        "Memory": "2048",
        "NetworkMode": "awsvpc",
        "ProxyConfiguration": {
          "ContainerName": "envoy",
          "ProxyConfigurationProperties": [
            {
              "Name": "AppPorts",
              "Value": "80"
            },
            {
              "Name": "ProxyEgressPort",
              "Value": "15001"
            },
            {
              "Name": "ProxyIngressPort",
              "Value": "15000"
            },
            {
              "Name": "IgnoredUID",
              "Value": "1337"
            },
            {
              "Name": "IgnoredGID",
              "Value": "1338"
            },
            {
              "Name": "EgressIgnoredIPs",
              "Value": "169.254.170.2,169.254.169.254"
            }
          ],
          "Type": "APPMESH"
        },
        "RequiresCompatibilities": [
          "EC2",
          "FARGATE"
        ],
        "TaskRoleArn": {
          "Fn::GetAtt": [
            "greetertaskdefinitionTaskRole2A098ACC",
            "Arn"
          ]
        }
      }
    },
    "greetertaskdefinitionenvoyLogGroup6E10B93E": {
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain"
    },
    "greetertaskdefinitionExecutionRoleAED0EC79": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        }
      }
    },
    "greetertaskdefinitionExecutionRoleDefaultPolicy0D8E9106": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "ecr:BatchCheckLayerAvailability",
                "ecr:GetDownloadUrlForLayer",
                "ecr:BatchGetImage"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:ecr:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Fn::FindInMap": [
                        "greeterenvoyimageaccountmapping",
                        {
                          "Ref": "AWS::Region"
                        },
                        "ecrRepo"
                      ]
                    },
                    ":repository/aws-appmesh-envoy"
                  ]
                ]
              }
            },
            {
              "Action": "ecr:GetAuthorizationToken",
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "greetertaskdefinitionenvoyLogGroup6E10B93E",
                  "Arn"
                ]
              }
            },
            {
              "Action": [
                "ecr:GetAuthorizationToken",
                "ecr:BatchCheckLayerAvailability",
                "ecr:GetDownloadUrlForLayer",
                "ecr:BatchGetImage"
              ],
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "greetertaskdefinitionfirelensLogGroupD5BAAC35",
                  "Arn"
                ]
              }
            },
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "greetertaskdefinitionxrayLogGroupBC1558B6",
                  "Arn"
                ]
              }
            },
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "greetertaskdefinitioncloudwatchagentLogGroupE7EAF327",
                  "Arn"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "greetertaskdefinitionExecutionRoleDefaultPolicy0D8E9106",
        "Roles": [
          {
            "Ref": "greetertaskdefinitionExecutionRoleAED0EC79"
          }
        ]
      }
    },
    "greetertaskdefinitionfirelensLogGroupD5BAAC35": {
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain"
    },
    "greetertaskdefinitionxrayLogGroupBC1558B6": {
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain"
    },
    "greetertaskdefinitioncloudwatchagentLogGroupE7EAF327": {
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain"
    },
    "greeterenvoytoappmesh1A94938B": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "appmesh:StreamAggregatedResources",
              "Effect": "Allow",
              "Resource": {
                "Ref": "mymeshEA67EDEF"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "greeterenvoytoappmesh1A94938B",
        "Roles": [
          {
            "Ref": "greetertaskdefinitionTaskRole2A098ACC"
          }
        ]
      }
    },
    "greeterpublishmetrics0CCA359A": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "cloudwatch:PutMetricData",
              "Effect": "Allow",
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "greeterpublishmetrics0CCA359A",
        "Roles": [
          {
            "Ref": "greetertaskdefinitionTaskRole2A098ACC"
          }
        ]
      }
    },
    "greeterserviceService8EDD3244": {
      "Type": "AWS::ECS::Service",
      "Properties": {
        "Cluster": {
          "Ref": "productionenvironmentclusterC6599D2D"
        },
        "DeploymentConfiguration": {
          "MaximumPercent": 150,
          "MinimumHealthyPercent": 100
        },
        "DesiredCount": 2,
        "EnableECSManagedTags": false,
        "HealthCheckGracePeriodSeconds": 60,
        "LaunchType": "FARGATE",
        "LoadBalancers": [
          {
            "ContainerName": "app",
            "ContainerPort": 80,
            "TargetGroupArn": {
              "Ref": "greeterloadbalancergreeterlistenergreeterGroupFFBFF0C2"
            }
          }
        ],
        "NetworkConfiguration": {
          "AwsvpcConfiguration": {
            "AssignPublicIp": "DISABLED",
            "SecurityGroups": [
              {
                "Fn::GetAtt": [
                  "greeterserviceSecurityGroupDB4AC3A9",
                  "GroupId"
                ]
              }
            ],
            "Subnets": [
              {
                "Ref": "productionenvironmentvpcPrivateSubnet1Subnet53F632E6"
              },
              {
                "Ref": "productionenvironmentvpcPrivateSubnet2Subnet756FB93C"
              },
              {
                "Ref": "productionenvironmentvpcPrivateSubnet3Subnet3BD4064E"
              }
            ]
          }
        },
        "ServiceRegistries": [
          {
            "RegistryArn": {
              "Fn::GetAtt": [
                "greeterserviceCloudmapServiceEE292978",
                "Arn"
              ]
            }
          }
        ],
        "TaskDefinition": {
          "Ref": "greetertaskdefinitionE956EEA2"
        }
      },
      "DependsOn": [
        "greeterloadbalancergreeterlistenergreeterGroupFFBFF0C2",
        "greeterloadbalancergreeterlistener952E028B"
      ]
    },
    "greeterserviceCloudmapServiceEE292978": {
      "Type": "AWS::ServiceDiscovery::Service",
      "Properties": {
        "DnsConfig": {
          "DnsRecords": [
            {
              "TTL": 10,
              "Type": "A"
            }
          ],
          "NamespaceId": {
            "Fn::GetAtt": [
              "productionenvironmentclusterDefaultServiceDiscoveryNamespaceBE74D64D",
              "Id"
            ]
          },
          "RoutingPolicy": "MULTIVALUE"
        },
        "HealthCheckCustomConfig": {
          "FailureThreshold": 2
        },
        "Name": "greeter",
        "NamespaceId": {
          "Fn::GetAtt": [
            "productionenvironmentclusterDefaultServiceDiscoveryNamespaceBE74D64D",
            "Id"
          ]
        }
      }
    },
    "greeterserviceSecurityGroupDB4AC3A9": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "aws-ecs-integ/greeter-service/SecurityGroup",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1"
          }
        ],
        "VpcId": {
          "Ref": "productionenvironmentvpcAEB47DF7"
        }
      }
    },
    "greeterserviceSecurityGroupfromawsecsinteggreeterloadbalancerSecurityGroupF791FA838037FDF8F5": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "IpProtocol": "tcp",
        "Description": "Load balancer to target",
        "FromPort": 80,
        "GroupId": {
          "Fn::GetAtt": [
            "greeterserviceSecurityGroupDB4AC3A9",
            "GroupId"
          ]
        },
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "greeterloadbalancerSecurityGroupEE1B20F3",
            "GroupId"
          ]
        },
        "ToPort": 80
      }
    },
    "greeterserviceTaskCountTargetAB95B3D0": {
      "Type": "AWS::ApplicationAutoScaling::ScalableTarget",
      "Properties": {
        "MaxCapacity": 8,
        "MinCapacity": 2,
        "ResourceId": {
          "Fn::Join": [
            "",
            [
              "service/",
              {
                "Ref": "productionenvironmentclusterC6599D2D"
              },
              "/",
              {
                "Fn::GetAtt": [
                  "greeterserviceService8EDD3244",
                  "Name"
                ]
              }
            ]
          ]
        },
        "RoleARN": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":iam::",
              {
                "Ref": "AWS::AccountId"
              },
              ":role/aws-service-role/ecs.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_ECSService"
            ]
          ]
        },
        "ScalableDimension": "ecs:service:DesiredCount",
        "ServiceNamespace": "ecs"
      }
    },
    "greeterserviceTaskCountTargetgreetertargetcpuutilization50299508D1": {
      "Type": "AWS::ApplicationAutoScaling::ScalingPolicy",
      "Properties": {
        "PolicyName": "awsecsinteggreeterserviceTaskCountTargetgreetertargetcpuutilization50A75D0C0D",
        "PolicyType": "TargetTrackingScaling",
        "ScalingTargetId": {
          "Ref": "greeterserviceTaskCountTargetAB95B3D0"
        },
        "TargetTrackingScalingPolicyConfiguration": {
          "PredefinedMetricSpecification": {
            "PredefinedMetricType": "ECSServiceAverageCPUUtilization"
          },
          "ScaleInCooldown": 60,
          "ScaleOutCooldown": 60,
          "TargetValue": 50
        }
      }
    },
    "greetervirtualnode21EA7CC9": {
      "Type": "AWS::AppMesh::VirtualNode",
      "Properties": {
        "MeshName": {
          "Fn::GetAtt": [
            "mymeshEA67EDEF",
            "MeshName"
          ]
        },
        "Spec": {
          "Backends": [
            {
              "VirtualService": {
                "VirtualServiceName": {
                  "Fn::GetAtt": [
                    "namevirtualservice3DDDDF1E",
                    "VirtualServiceName"
                  ]
                }
              }
            },
            {
              "VirtualService": {
                "VirtualServiceName": {
                  "Fn::GetAtt": [
                    "greetingvirtualservice60AD3AD9",
                    "VirtualServiceName"
                  ]
                }
              }
            }
          ],
          "Listeners": [
            {
              "PortMapping": {
                "Port": 80,
                "Protocol": "http"
              }
            }
          ],
          "ServiceDiscovery": {
            "AWSCloudMap": {
              "NamespaceName": "production",
              "ServiceName": {
                "Fn::GetAtt": [
                  "greeterserviceCloudmapServiceEE292978",
                  "Name"
                ]
              }
            }
          }
        },
        "VirtualNodeName": "greeter"
      }
    },
    "greetervirtualrouter193840BB": {
      "Type": "AWS::AppMesh::VirtualRouter",
      "Properties": {
        "MeshName": {
          "Fn::GetAtt": [
            "mymeshEA67EDEF",
            "MeshName"
          ]
        },
        "Spec": {
          "Listeners": [
            {
              "PortMapping": {
                "Port": 80,
                "Protocol": "http"
              }
            }
          ]
        },
        "VirtualRouterName": "greeter"
      }
    },
    "greetervirtualroutergreeterroute3EC6ACB0": {
      "Type": "AWS::AppMesh::Route",
      "Properties": {
        "MeshName": {
          "Fn::GetAtt": [
            "mymeshEA67EDEF",
            "MeshName"
          ]
        },
        "RouteName": "greeter-route",
        "Spec": {
          "HttpRoute": {
            "Action": {
              "WeightedTargets": [
                {
                  "VirtualNode": {
                    "Fn::GetAtt": [
                      "greetervirtualnode21EA7CC9",
                      "VirtualNodeName"
                    ]
                  },
                  "Weight": 1
                }
              ]
            },
            "Match": {
              "Prefix": "/"
            }
          }
        },
        "VirtualRouterName": {
          "Fn::GetAtt": [
            "greetervirtualrouter193840BB",
            "VirtualRouterName"
          ]
        }
      }
    },
    "greetervirtualservice6559950C": {
      "Type": "AWS::AppMesh::VirtualService",
      "Properties": {
        "MeshName": {
          "Fn::GetAtt": [
            "mymeshEA67EDEF",
            "MeshName"
          ]
        },
        "Spec": {
          "Provider": {
            "VirtualRouter": {
              "VirtualRouterName": {
                "Fn::GetAtt": [
                  "greetervirtualrouter193840BB",
                  "VirtualRouterName"
                ]
              }
            }
          }
        },
        "VirtualServiceName": "greeter.production"
      }
    }
  },
  "Mappings": {
    "nameenvoyimageaccountmapping": {
      "ap-northeast-1": {
        "ecrRepo": "840364872350"
      },
      "ap-northeast-2": {
        "ecrRepo": "840364872350"
      },
      "ap-south-1": {
        "ecrRepo": "840364872350"
      },
      "ap-southeast-1": {
        "ecrRepo": "840364872350"
      },
      "ap-southeast-2": {
        "ecrRepo": "840364872350"
      },
      "ca-central-1": {
        "ecrRepo": "840364872350"
      },
      "eu-central-1": {
        "ecrRepo": "840364872350"
      },
      "eu-north-1": {
        "ecrRepo": "840364872350"
      },
      "eu-south-1": {
        "ecrRepo": "422531588944"
      },
      "eu-west-1": {
        "ecrRepo": "840364872350"
      },
      "eu-west-2": {
        "ecrRepo": "840364872350"
      },
      "eu-west-3": {
        "ecrRepo": "840364872350"
      },
      "sa-east-1": {
        "ecrRepo": "840364872350"
      },
      "us-east-1": {
        "ecrRepo": "840364872350"
      },
      "us-east-2": {
        "ecrRepo": "840364872350"
      },
      "us-west-1": {
        "ecrRepo": "840364872350"
      },
      "us-west-2": {
        "ecrRepo": "840364872350"
      },
      "me-south-1": {
        "ecrRepo": "772975370895"
      },
      "ap-east-1": {
        "ecrRepo": "856666278305"
      }
    },
    "greetingenvoyimageaccountmapping": {
      "ap-northeast-1": {
        "ecrRepo": "840364872350"
      },
      "ap-northeast-2": {
        "ecrRepo": "840364872350"
      },
      "ap-south-1": {
        "ecrRepo": "840364872350"
      },
      "ap-southeast-1": {
        "ecrRepo": "840364872350"
      },
      "ap-southeast-2": {
        "ecrRepo": "840364872350"
      },
      "ca-central-1": {
        "ecrRepo": "840364872350"
      },
      "eu-central-1": {
        "ecrRepo": "840364872350"
      },
      "eu-north-1": {
        "ecrRepo": "840364872350"
      },
      "eu-south-1": {
        "ecrRepo": "422531588944"
      },
      "eu-west-1": {
        "ecrRepo": "840364872350"
      },
      "eu-west-2": {
        "ecrRepo": "840364872350"
      },
      "eu-west-3": {
        "ecrRepo": "840364872350"
      },
      "sa-east-1": {
        "ecrRepo": "840364872350"
      },
      "us-east-1": {
        "ecrRepo": "840364872350"
      },
      "us-east-2": {
        "ecrRepo": "840364872350"
      },
      "us-west-1": {
        "ecrRepo": "840364872350"
      },
      "us-west-2": {
        "ecrRepo": "840364872350"
      },
      "me-south-1": {
        "ecrRepo": "772975370895"
      },
      "ap-east-1": {
        "ecrRepo": "856666278305"
      }
    },
    "greeterenvoyimageaccountmapping": {
      "ap-northeast-1": {
        "ecrRepo": "840364872350"
      },
      "ap-northeast-2": {
        "ecrRepo": "840364872350"
      },
      "ap-south-1": {
        "ecrRepo": "840364872350"
      },
      "ap-southeast-1": {
        "ecrRepo": "840364872350"
      },
      "ap-southeast-2": {
        "ecrRepo": "840364872350"
      },
      "ca-central-1": {
        "ecrRepo": "840364872350"
      },
      "eu-central-1": {
        "ecrRepo": "840364872350"
      },
      "eu-north-1": {
        "ecrRepo": "840364872350"
      },
      "eu-south-1": {
        "ecrRepo": "422531588944"
      },
      "eu-west-1": {
        "ecrRepo": "840364872350"
      },
      "eu-west-2": {
        "ecrRepo": "840364872350"
      },
      "eu-west-3": {
        "ecrRepo": "840364872350"
      },
      "sa-east-1": {
        "ecrRepo": "840364872350"
      },
      "us-east-1": {
        "ecrRepo": "840364872350"
      },
      "us-east-2": {
        "ecrRepo": "840364872350"
      },
      "us-west-1": {
        "ecrRepo": "840364872350"
      },
      "us-west-2": {
        "ecrRepo": "840364872350"
      },
      "me-south-1": {
        "ecrRepo": "772975370895"
      },
      "ap-east-1": {
        "ecrRepo": "856666278305"
      }
    }
  },
  "Parameters": {
    "SsmParameterValueawsserviceawsforfluentbitlatestC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Type": "AWS::SSM::Parameter::Value<String>",
      "Default": "/aws/service/aws-for-fluent-bit/latest"
    }
  },
  "Outputs": {
    "greeterloadbalancerdnsoutput": {
      "Value": {
        "Fn::GetAtt": [
          "greeterloadbalancer85256741",
          "DNSName"
        ]
      }
    }
  }
}
