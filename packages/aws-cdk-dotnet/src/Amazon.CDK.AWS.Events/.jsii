{
  "fingerprint": "Nv45/7O0QxhFDNF9QXyaweBYSqTbdZt1RPIKGQw3UNw=",
  "bundled": {
    "@aws-cdk/util": "^0.7.3-beta"
  },
  "dependencies": {
    "@aws-cdk/aws-iam": {
      "dependencies": {
        "@aws-cdk/cdk": {
          "dependencies": {
            "@aws-cdk/cx-api": {
              "targets": {
                "dotnet": {
                  "namespace": "Amazon.CDK.CXAPI"
                },
                "java": {
                  "maven": {
                    "artifactId": "cxapi",
                    "groupId": "com.amazonaws.cdk"
                  },
                  "package": "com.amazonaws.cdk.cxapi"
                },
                "js": {
                  "npm": "@aws-cdk/cx-api"
                }
              },
              "version": "0.7.3-beta"
            }
          },
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK"
            },
            "java": {
              "maven": {
                "artifactId": "cdk",
                "groupId": "com.amazonaws.cdk"
              },
              "package": "com.amazonaws.cdk"
            },
            "js": {
              "npm": "@aws-cdk/cdk"
            }
          },
          "version": "0.7.3-beta"
        }
      },
      "targets": {
        "dotnet": {
          "namespace": "Amazon.CDK.AWS.IAM"
        },
        "java": {
          "maven": {
            "artifactId": "aws-iam",
            "groupId": "com.amazonaws.cdk"
          },
          "package": "com.amazonaws.cdk.aws.iam"
        },
        "js": {
          "npm": "@aws-cdk/aws-iam"
        }
      },
      "version": "0.7.3-beta"
    },
    "@aws-cdk/cdk": {
      "dependencies": {
        "@aws-cdk/cx-api": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.CXAPI"
            },
            "java": {
              "maven": {
                "artifactId": "cxapi",
                "groupId": "com.amazonaws.cdk"
              },
              "package": "com.amazonaws.cdk.cxapi"
            },
            "js": {
              "npm": "@aws-cdk/cx-api"
            }
          },
          "version": "0.7.3-beta"
        }
      },
      "targets": {
        "dotnet": {
          "namespace": "Amazon.CDK"
        },
        "java": {
          "maven": {
            "artifactId": "cdk",
            "groupId": "com.amazonaws.cdk"
          },
          "package": "com.amazonaws.cdk"
        },
        "js": {
          "npm": "@aws-cdk/cdk"
        }
      },
      "version": "0.7.3-beta"
    }
  },
  "externals": {
    "@aws-cdk/aws-iam.RoleArn": {
      "assembly": "@aws-cdk/aws-iam",
      "base": {
        "fqn": "@aws-cdk/cdk.Arn"
      },
      "fqn": "@aws-cdk/aws-iam.RoleArn",
      "initializer": {
        "docs": {
          "comment": "Creates a token that resolves to `value`. If value is a function,\nthe function is evaluated upon resolution and the value it returns will be\nuesd as the token's value."
        },
        "initializer": true,
        "parameters": [
          {
            "name": "valueOrFunction",
            "type": {
              "optional": true,
              "primitive": "any"
            }
          }
        ]
      },
      "kind": "class",
      "name": "RoleArn",
      "namespace": "@aws-cdk/aws-iam"
    },
    "@aws-cdk/cdk.Arn": {
      "assembly": "@aws-cdk/cdk",
      "base": {
        "fqn": "@aws-cdk/cdk.Token"
      },
      "docs": {
        "comment": "An Amazon Resource Name (ARN).\nhttp://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html"
      },
      "fqn": "@aws-cdk/cdk.Arn",
      "initializer": {
        "docs": {
          "comment": "Creates a token that resolves to `value`. If value is a function,\nthe function is evaluated upon resolution and the value it returns will be\nuesd as the token's value."
        },
        "initializer": true,
        "parameters": [
          {
            "name": "valueOrFunction",
            "type": {
              "optional": true,
              "primitive": "any"
            }
          }
        ]
      },
      "kind": "class",
      "methods": [
        {
          "docs": {
            "comment": "Creates an ARN from components.\nIf any component is the empty string,\nan empty string will be inserted into the generated ARN\nat the location that component corresponds to."
          },
          "name": "fromComponents",
          "parameters": [
            {
              "name": "components",
              "type": {
                "fqn": "@aws-cdk/cdk.ArnComponents"
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/cdk.Arn"
          },
          "static": true
        },
        {
          "docs": {
            "comment": "Given an ARN, parses it and returns components.\n\nThe ARN it will be parsed and validated. The separator (`sep`) will be\nset to '/' if the 6th component includes a '/', in which case, `resource`\nwill be set to the value before the '/' and `resourceName` will be the\nrest. In case there is no '/', `resource` will be set to the 6th\ncomponents and `resourceName` will be set to the rest of the string.",
            "returns": "an ArnComponents object which allows access to the various\ncomponents of the ARN."
          },
          "name": "parse",
          "parameters": [
            {
              "name": "arn",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/cdk.ArnComponents"
          },
          "static": true
        },
        {
          "docs": {
            "comment": "Given a Token evaluating to ARN, parses it and returns components.\n\nThe ARN cannot be validated, since we don't have the actual value yet\nat the time of this function call. You will have to know the separator\nand the type of ARN.\n\nThe resulting `ArnComponents` object will contain tokens for the\nsubexpressions of the ARN, not string literals.\n\nWARNING: this function cannot properly parse the complete final\nresourceName (path) out of ARNs that use '/' to both separate the\n'resource' from the 'resourceName' AND to subdivide the resourceName\nfurther. For example, in S3 ARNs:\n\n      arn:aws:s3:::my_corporate_bucket/path/to/exampleobject.png\n\nAfter parsing the resourceName will not contain 'path/to/exampleobject.png'\nbut simply 'path'. This is a limitation because there is no slicing\nfunctionality in CloudFormation templates.",
            "returns": "an ArnComponents object which allows access to the various\ncomponents of the ARN."
          },
          "name": "parseToken",
          "parameters": [
            {
              "docs": {
                "comment": "The input token that contains an ARN"
              },
              "name": "arn",
              "type": {
                "fqn": "@aws-cdk/cdk.Token"
              }
            },
            {
              "docs": {
                "comment": "The separator used to separate resource from resourceName"
              },
              "name": "sep",
              "type": {
                "optional": true,
                "primitive": "string"
              }
            },
            {
              "docs": {
                "comment": "Whether there is a name component in the ARN at all.\nFor example, SNS Topics ARNs have the 'resource' component contain the\ntopic name, and no 'resourceName' component."
              },
              "name": "hasName",
              "type": {
                "optional": true,
                "primitive": "boolean"
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/cdk.ArnComponents"
          },
          "static": true
        }
      ],
      "name": "Arn",
      "namespace": "@aws-cdk/cdk"
    },
    "@aws-cdk/cdk.Construct": {
      "assembly": "@aws-cdk/cdk",
      "docs": {
        "comment": "Represents the building block of the construct graph.\nWhen a construct is created, it is always added as a child"
      },
      "fqn": "@aws-cdk/cdk.Construct",
      "initializer": {
        "docs": {
          "comment": "Creates a new construct node."
        },
        "initializer": true,
        "parameters": [
          {
            "docs": {
              "comment": "The parent construct"
            },
            "name": "parent",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "name": "name",
            "type": {
              "primitive": "string"
            }
          }
        ]
      },
      "kind": "class",
      "methods": [
        {
          "docs": {
            "comment": "Returns a string representation of this construct."
          },
          "name": "toString",
          "returns": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "comment": "Returns a string with a tree representation of this construct and it's children."
          },
          "name": "toTreeString",
          "parameters": [
            {
              "name": "depth",
              "type": {
                "optional": true,
                "primitive": "number"
              }
            }
          ],
          "returns": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "comment": "Return a descendant by path, or undefined",
            "returns": "a child by path or undefined if not found."
          },
          "name": "tryFindChild",
          "parameters": [
            {
              "name": "path",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/cdk.Construct",
            "optional": true
          }
        },
        {
          "docs": {
            "comment": "Return a descendant by path\n\nThrows an exception if the descendant is not found.",
            "returns": "Child with the given path."
          },
          "name": "findChild",
          "parameters": [
            {
              "name": "path",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/cdk.Construct"
          }
        },
        {
          "docs": {
            "comment": "This can be used to set contextual values.\nContext must be set before any children are added, since children may consult context info during construction.\nIf the key already exists, it will be overridden."
          },
          "name": "setContext",
          "parameters": [
            {
              "docs": {
                "comment": "The context key"
              },
              "name": "key",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "comment": "The context value"
              },
              "name": "value",
              "type": {
                "primitive": "any"
              }
            }
          ]
        },
        {
          "docs": {
            "comment": "Retrieves a value from tree context.\n\nContext is usually initialized at the root, but can be overridden at any point in the tree.",
            "returns": "The context value or undefined"
          },
          "name": "getContext",
          "parameters": [
            {
              "docs": {
                "comment": "The context key"
              },
              "name": "key",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "primitive": "any"
          }
        },
        {
          "docs": {
            "comment": "Retrieve a value from tree-global context\n\nIt is an error if the context object is not available."
          },
          "name": "requireContext",
          "parameters": [
            {
              "name": "key",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "primitive": "any"
          }
        },
        {
          "docs": {
            "comment": "Adds a metadata entry to this construct.\nEntries are arbitrary values and will also include a stack trace to allow tracing back to\nthe code location for when the entry was added. It can be used, for example, to include source\nmapping in CloudFormation templates to improve diagnostics."
          },
          "name": "addMetadata",
          "parameters": [
            {
              "docs": {
                "comment": "a string denoting the type of metadata"
              },
              "name": "type",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "comment": "the value of the metadata (can be a Token). If null/undefined, metadata will not be added."
              },
              "name": "data",
              "type": {
                "primitive": "any"
              }
            },
            {
              "docs": {
                "comment": "a function under which to restrict the metadata entry's stack trace (defaults to this.addMetadata)"
              },
              "name": "from",
              "type": {
                "optional": true,
                "primitive": "any"
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/cdk.Construct"
          }
        },
        {
          "docs": {
            "comment": "Adds a { \"aws:cdk:info\": <message> } metadata entry to this construct.\nThe toolkit will display the info message when apps are synthesized."
          },
          "name": "addInfo",
          "parameters": [
            {
              "docs": {
                "comment": "The info message."
              },
              "name": "message",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/cdk.Construct"
          }
        },
        {
          "docs": {
            "comment": "Adds a { warning: <message> } metadata entry to this construct.\nThe toolkit will display the warning when an app is synthesized, or fail\nif run in --strict mode."
          },
          "name": "addWarning",
          "parameters": [
            {
              "docs": {
                "comment": "The warning message."
              },
              "name": "message",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/cdk.Construct"
          }
        },
        {
          "docs": {
            "comment": "Adds an { error: <message> } metadata entry to this construct.\nThe toolkit will fail synthesis when errors are reported."
          },
          "name": "addError",
          "parameters": [
            {
              "docs": {
                "comment": "The error message."
              },
              "name": "message",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/cdk.Construct"
          }
        },
        {
          "docs": {
            "comment": "This method can be implemented by derived constructs in order to perform\nvalidation logic. It is called on all constructs before synthesis.",
            "returns": "An array of validation error messages, or an empty array if there the construct is valid."
          },
          "name": "validate",
          "returns": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "comment": "Invokes 'validate' on all child constructs and then on this construct (depth-first).",
            "returns": "A list of validation errors. If the list is empty, all constructs are valid."
          },
          "name": "validateTree",
          "returns": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/cdk.ValidationError"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "comment": "Return the ancestors (including self) of this Construct up until and excluding the indicated component"
          },
          "name": "ancestors",
          "parameters": [
            {
              "name": "upTo",
              "type": {
                "fqn": "@aws-cdk/cdk.Construct",
                "optional": true
              }
            }
          ],
          "protected": true,
          "returns": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/cdk.Construct"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "aws": "-cdk/runtime`` instead.",
            "comment": "Throws if the `props` bag doesn't include the property `name`.\nIn the future we can add some type-checking here, maybe even auto-generate during compilation.",
            "deprecated": "use ``requireProperty`` from ``"
          },
          "name": "required",
          "parameters": [
            {
              "docs": {
                "comment": "The props bag."
              },
              "name": "props",
              "type": {
                "primitive": "any"
              }
            },
            {
              "docs": {
                "comment": "The name of the required property."
              },
              "name": "name",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "protected": true,
          "returns": {
            "primitive": "any"
          }
        },
        {
          "docs": {
            "comment": "Adds a child construct to this node.",
            "returns": "The resolved path part name of the child"
          },
          "name": "addChild",
          "parameters": [
            {
              "docs": {
                "comment": "The child construct"
              },
              "name": "child",
              "type": {
                "fqn": "@aws-cdk/cdk.Construct"
              }
            },
            {
              "name": "childName",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "protected": true
        },
        {
          "docs": {
            "comment": "Locks this construct from allowing more children to be added. After this\ncall, no more children can be added to this construct or to any children."
          },
          "name": "lock",
          "protected": true
        },
        {
          "docs": {
            "comment": "Unlocks this costruct and allows mutations (adding children)."
          },
          "name": "unlock",
          "protected": true
        }
      ],
      "name": "Construct",
      "namespace": "@aws-cdk/cdk",
      "properties": [
        {
          "docs": {
            "comment": "Returns the parent of this node or undefined if this is a root node."
          },
          "immutable": true,
          "name": "parent",
          "type": {
            "fqn": "@aws-cdk/cdk.Construct",
            "optional": true
          }
        },
        {
          "docs": {
            "comment": "The name of this construct"
          },
          "immutable": true,
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "comment": "All direct children of this construct."
          },
          "immutable": true,
          "name": "children",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/cdk.Construct"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "comment": "Returns the path of all constructs from root to this construct, in string form.",
            "returns": "/-separated path of this Construct."
          },
          "immutable": true,
          "name": "path",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "comment": "An array of metadata objects associated with this construct.\nThis can be used, for example, to implement support for deprecation notices, source mapping, etc."
          },
          "immutable": true,
          "name": "metadata",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/cdk.MetadataEntry"
              },
              "kind": "array"
            }
          }
        }
      ]
    },
    "@aws-cdk/cdk.IDependable": {
      "assembly": "@aws-cdk/cdk",
      "datatype": true,
      "docs": {
        "comment": "Represents a construct that can be \"depended on\" via `addDependency`."
      },
      "fqn": "@aws-cdk/cdk.IDependable",
      "kind": "interface",
      "name": "IDependable",
      "namespace": "@aws-cdk/cdk",
      "properties": [
        {
          "docs": {
            "comment": "Returns the set of all stack elements (resources, parameters, conditions)\nthat should be added when a resource \"depends on\" this construct."
          },
          "immutable": true,
          "name": "dependencyElements",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/cdk.IDependable"
              },
              "kind": "array"
            }
          }
        }
      ]
    },
    "@aws-cdk/cdk.Referenceable": {
      "abstract": true,
      "assembly": "@aws-cdk/cdk",
      "base": {
        "fqn": "@aws-cdk/cdk.StackElement"
      },
      "docs": {
        "comment": "A construct, which is part of a stack and can be referenced using it's logical ID\nusing the CloudFormation intrinsic function { Ref: ID }."
      },
      "fqn": "@aws-cdk/cdk.Referenceable",
      "initializer": {
        "docs": {
          "comment": "Creates an entity and binds it to a tree.\nNote that the root of the tree must be a Stack object (not just any Root)."
        },
        "initializer": true,
        "parameters": [
          {
            "docs": {
              "comment": "The parent construct"
            },
            "name": "parent",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "name": "name",
            "type": {
              "primitive": "string"
            }
          }
        ]
      },
      "kind": "class",
      "name": "Referenceable",
      "namespace": "@aws-cdk/cdk",
      "properties": [
        {
          "docs": {
            "comment": "Returns a token to a CloudFormation { Ref } that references this entity based on it's logical ID."
          },
          "immutable": true,
          "name": "ref",
          "type": {
            "fqn": "@aws-cdk/cdk.Token"
          }
        }
      ]
    },
    "@aws-cdk/cdk.Resource": {
      "assembly": "@aws-cdk/cdk",
      "base": {
        "fqn": "@aws-cdk/cdk.Referenceable"
      },
      "docs": {
        "comment": "Represents a CloudFormation resource."
      },
      "fqn": "@aws-cdk/cdk.Resource",
      "initializer": {
        "docs": {
          "comment": "Creates a resource construct."
        },
        "initializer": true,
        "parameters": [
          {
            "name": "parent",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "name": "name",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/cdk.ResourceProps"
            }
          }
        ]
      },
      "kind": "class",
      "methods": [
        {
          "docs": {
            "comment": "A decoration used to create a CloudFormation attribute property."
          },
          "name": "attribute",
          "parameters": [
            {
              "docs": {
                "comment": "Custom name for the attribute (default is the name of the property)\nNOTE: we return \"any\" here to satistfy jsii, which doesn't support lambdas."
              },
              "name": "customName",
              "type": {
                "optional": true,
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "primitive": "any"
          },
          "static": true
        },
        {
          "docs": {
            "comment": "Returns a token for an runtime attribute of this resource.\nIdeally, use generated attribute accessors (e.g. `resource.arn`), but this can be used for future compatibility\nin case there is no generated attribute."
          },
          "name": "getAtt",
          "parameters": [
            {
              "docs": {
                "comment": "The name of the attribute."
              },
              "name": "attributeName",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/cdk.Token"
          }
        },
        {
          "docs": {
            "comment": "Adds a dependency on another resource."
          },
          "name": "addDependency",
          "parameters": [
            {
              "docs": {
                "comment": "The other resource."
              },
              "name": "other",
              "type": {
                "fqn": "@aws-cdk/cdk.IDependable"
              },
              "variadic": true
            }
          ],
          "variadic": true
        },
        {
          "docs": {
            "comment": "Emits CloudFormation for this resource."
          },
          "name": "toCloudFormation",
          "returns": {
            "primitive": "json"
          }
        },
        {
          "name": "renderProperties",
          "protected": true,
          "returns": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        }
      ],
      "name": "Resource",
      "namespace": "@aws-cdk/cdk",
      "properties": [
        {
          "docs": {
            "comment": "Options for this resource, such as condition, update policy etc."
          },
          "immutable": true,
          "name": "options",
          "type": {
            "fqn": "@aws-cdk/cdk.ResourceOptions"
          }
        },
        {
          "docs": {
            "comment": "AWS resource type."
          },
          "immutable": true,
          "name": "resourceType",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "comment": "AWS resource properties"
          },
          "immutable": true,
          "name": "properties",
          "protected": true,
          "type": {
            "primitive": "any"
          }
        }
      ]
    },
    "@aws-cdk/cdk.StackElement": {
      "abstract": true,
      "assembly": "@aws-cdk/cdk",
      "base": {
        "fqn": "@aws-cdk/cdk.Construct"
      },
      "docs": {
        "comment": "An element of a CloudFormation stack."
      },
      "fqn": "@aws-cdk/cdk.StackElement",
      "initializer": {
        "docs": {
          "comment": "Creates an entity and binds it to a tree.\nNote that the root of the tree must be a Stack object (not just any Root)."
        },
        "initializer": true,
        "parameters": [
          {
            "docs": {
              "comment": "The parent construct"
            },
            "name": "parent",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "name": "name",
            "type": {
              "primitive": "string"
            }
          }
        ]
      },
      "interfaces": [
        {
          "fqn": "@aws-cdk/cdk.IDependable"
        }
      ],
      "kind": "class",
      "methods": [
        {
          "abstract": true,
          "docs": {
            "comment": "Returns the CloudFormation 'snippet' for this entity. The snippet will only be merged\nat the root level to ensure there are no identity conflicts.\n\nFor example, a Resource class will return something like:\n{\n     Resources: {\n         [this.logicalId]: {\n             Type: this.resourceType,\n             Properties: this.props,\n             Condition: this.condition\n         }\n     }\n}"
          },
          "name": "toCloudFormation",
          "returns": {
            "primitive": "json"
          }
        }
      ],
      "name": "StackElement",
      "namespace": "@aws-cdk/cdk",
      "properties": [
        {
          "docs": {
            "comment": "The logical ID for this CloudFormation stack element"
          },
          "immutable": true,
          "name": "logicalId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "comment": "The stack this Construct has been made a part of"
          },
          "name": "stack",
          "protected": true,
          "type": {
            "fqn": "@aws-cdk/cdk.Stack"
          }
        },
        {
          "docs": {
            "returns": "the stack trace of the point where this Resource was created from, sourced\nfrom the +metadata+ entry typed +aws:cdk:logicalId+, and with the bottom-most\nnode +internal+ entries filtered."
          },
          "immutable": true,
          "name": "creationStackTrace",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "comment": "Return the path with respect to the stack"
          },
          "immutable": true,
          "name": "stackPath",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "comment": "Returns the set of all stack elements (resources, parameters, conditions)\nthat should be added when a resource \"depends on\" this construct."
          },
          "immutable": true,
          "name": "dependencyElements",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/cdk.IDependable"
              },
              "kind": "array"
            }
          }
        }
      ]
    },
    "@aws-cdk/cdk.Token": {
      "assembly": "@aws-cdk/cdk",
      "docs": {
        "comment": "Represents a lazy-evaluated value. Can be used to delay evaluation of a certain value\nin case, for example, that it requires some context or late-bound data."
      },
      "fqn": "@aws-cdk/cdk.Token",
      "initializer": {
        "docs": {
          "comment": "Creates a token that resolves to `value`. If value is a function,\nthe function is evaluated upon resolution and the value it returns will be\nuesd as the token's value."
        },
        "initializer": true,
        "parameters": [
          {
            "name": "valueOrFunction",
            "type": {
              "optional": true,
              "primitive": "any"
            }
          }
        ]
      },
      "kind": "class",
      "methods": [
        {
          "docs": {
            "returns": "The resolved value for this token."
          },
          "name": "resolve",
          "returns": {
            "primitive": "any"
          }
        }
      ],
      "name": "Token",
      "namespace": "@aws-cdk/cdk"
    }
  },
  "name": "@aws-cdk/aws-events",
  "readme": {
    "markdown": "## AWS CloudWatch Events Construct Library\n\nAmazon CloudWatch Events delivers a near real-time stream of system events that\ndescribe changes in AWS resources. For example, an AWS CodePipeline emits the\n[State\nChange](https://docs.aws.amazon.com/AmazonCloudWatch/latest/events/EventTypes.html#codepipeline_event_type)\nevent when the pipeline changes it's state.\n\n* __Events__: An event indicates a change in your AWS environment. AWS resources\n  can generate events when their state changes. For example, Amazon EC2\n  generates an event when the state of an EC2 instance changes from pending to\n  running, and Amazon EC2 Auto Scaling generates events when it launches or\n  terminates instances. AWS CloudTrail publishes events when you make API calls.\n  You can generate custom application-level events and publish them to\n  CloudWatch Events. You can also set up scheduled events that are generated on\n  a periodic basis. For a list of services that generate events, and sample\n  events from each service, see [CloudWatch Events Event Examples From Each\n  Supported\n  Service](https://docs.aws.amazon.com/AmazonCloudWatch/latest/events/EventTypes.html).\n* __Targets__: A target processes events. Targets can include Amazon EC2\n  instances, AWS Lambda functions, Kinesis streams, Amazon ECS tasks, Step\n  Functions state machines, Amazon SNS topics, Amazon SQS queues, and built-in\n  targets. A target receives events in JSON format.\n* __Rules__: A rule matches incoming events and routes them to targets for\n  processing. A single rule can route to multiple targets, all of which are\n  processed in parallel. Rules are not processed in a particular order. This\n  enables different parts of an organization to look for and process the events\n  that are of interest to them. A rule can customize the JSON sent to the\n  target, by passing only certain parts or by overwriting it with a constant.\n\nThe `EventRule` construct defines a CloudWatch events rule which monitors an\nevent based on an [event\npattern](https://docs.aws.amazon.com/AmazonCloudWatch/latest/events/CloudWatchEventsandEventPatterns.html)\nand invoke __event targets__ when the pattern is matched against a triggered\nevent. Event targets are objects that implement the `IEventTarget` interface.\n\nNormally, you will use one of the `source.onXxx(name[, target[, options]]) ->\nEventRule` methods on the event source to define an event rule associated with\nthe specific activity. You can targets either via props, or add targets using\n`rule.addTarget`.\n\nFor example, to define an rule that triggers a CodeBuild project build when a\ncommit is pushed to the \"master\" branch of a CodeCommit repository:\n\n```ts\nconst onCommitRule = repo.onCommit('OnCommitToMaster', buildProject, 'master');\n```\n\nYou can add additional targets, with optional [input\ntransformer](https://docs.aws.amazon.com/AmazonCloudWatchEvents/latest/APIReference/API_InputTransformer.html)\nusing `eventRule.addTarget(target[, input])`. For example, we can add a SNS\ntopic target which formats a human-readable message for the commit.\n\nFor example, this adds an SNS topic as a target:\n\n```ts\nonCommitRule.addTarget(topic, {\n    template: 'A commit was pushed to the repository <repo> on branch <branch>',\n    pathsMap: {\n        branch: '$.detail.referenceName',\n        repo: '$.detail.repositoryName'\n    }\n});\n```\n"
  },
  "schema": "jsii/1.0",
  "targets": {
    "dotnet": {
      "namespace": "Amazon.CDK.AWS.Events"
    },
    "java": {
      "maven": {
        "artifactId": "aws-events",
        "groupId": "com.amazonaws.cdk"
      },
      "package": "com.amazonaws.cdk.aws.events"
    },
    "js": {
      "npm": "@aws-cdk/aws-events"
    }
  },
  "types": {
    "@aws-cdk/aws-events.EventPattern": {
      "assembly": "@aws-cdk/aws-events",
      "datatype": true,
      "docs": {
        "comment": "Events in Amazon CloudWatch Events are represented as JSON objects. For more\ninformation about JSON objects, see RFC 7159.\n\nRules use event patterns to select events and route them to targets. A\npattern either matches an event or it doesn't. Event patterns are represented\nas JSON objects with a structure that is similar to that of events, for\nexample:\n\nIt is important to remember the following about event pattern matching:\n\n- For a pattern to match an event, the event must contain all the field names\n   listed in the pattern. The field names must appear in the event with the\n   same nesting structure.\n\n- Other fields of the event not mentioned in the pattern are ignored;\n   effectively, there is a ``\"*\": \"*\"`` wildcard for fields not mentioned.\n\n- The matching is exact (character-by-character), without case-folding or any\n   other string normalization.\n\n- The values being matched follow JSON rules: Strings enclosed in quotes,\n   numbers, and the unquoted keywords true, false, and null.\n\n- Number matching is at the string representation level. For example, 300,\n   300.0, and 3.0e2 are not considered equal.",
        "see": "https://docs.aws.amazon.com/AmazonCloudWatch/latest/events/CloudWatchEventsandEventPatterns.html"
      },
      "fqn": "@aws-cdk/aws-events.EventPattern",
      "kind": "interface",
      "name": "EventPattern",
      "namespace": "@aws-cdk/aws-events",
      "properties": [
        {
          "docs": {
            "comment": "By default, this is set to 0 (zero) in all events."
          },
          "name": "version",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            },
            "optional": true
          }
        },
        {
          "docs": {
            "comment": "A unique value is generated for every event. This can be helpful in\ntracing events as they move through rules to targets, and are processed."
          },
          "name": "id",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            },
            "optional": true
          }
        },
        {
          "docs": {
            "comment": "Identifies, in combination with the source field, the fields and values\nthat appear in the detail field.\n\nRepresents the \"detail-type\" event field."
          },
          "name": "detailType",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            },
            "optional": true
          }
        },
        {
          "docs": {
            "comment": "Identifies the service that sourced the event. All events sourced from\nwithin AWS begin with \"aws.\" Customer-generated events can have any value\nhere, as long as it doesn't begin with \"aws.\" We recommend the use of\nJava package-name style reverse domain-name strings.\n\nTo find the correct value for source for an AWS service, see the table in\nAWS Service Namespaces. For example, the source value for Amazon\nCloudFront is aws.cloudfront.",
            "see": "http://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html#genref-aws-service-namespaces"
          },
          "name": "source",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            },
            "optional": true
          }
        },
        {
          "docs": {
            "comment": "The 12-digit number identifying an AWS account."
          },
          "name": "account",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            },
            "optional": true
          }
        },
        {
          "docs": {
            "comment": "The event timestamp, which can be specified by the service originating\nthe event. If the event spans a time interval, the service might choose\nto report the start time, so this value can be noticeably before the time\nthe event is actually received."
          },
          "name": "time",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            },
            "optional": true
          }
        },
        {
          "docs": {
            "comment": "Identifies the AWS region where the event originated."
          },
          "name": "region",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            },
            "optional": true
          }
        },
        {
          "docs": {
            "comment": "This JSON array contains ARNs that identify resources that are involved\nin the event. Inclusion of these ARNs is at the discretion of the\nservice.\n\nFor example, Amazon EC2 instance state-changes include Amazon EC2\ninstance ARNs, Auto Scaling events include ARNs for both instances and\nAuto Scaling groups, but API calls with AWS CloudTrail do not include\nresource ARNs."
          },
          "name": "resources",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/cdk.Arn"
              },
              "kind": "array"
            },
            "optional": true
          }
        },
        {
          "docs": {
            "comment": "A JSON object, whose content is at the discretion of the service\noriginating the event."
          },
          "name": "detail",
          "type": {
            "optional": true,
            "primitive": "any"
          }
        }
      ]
    },
    "@aws-cdk/aws-events.EventRule": {
      "assembly": "@aws-cdk/aws-events",
      "base": {
        "fqn": "@aws-cdk/aws-events.EventRuleRef"
      },
      "docs": {
        "comment": "Defines a CloudWatch Event Rule in this stack."
      },
      "fqn": "@aws-cdk/aws-events.EventRule",
      "initializer": {
        "initializer": true,
        "parameters": [
          {
            "name": "parent",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "name": "name",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-events.EventRuleProps",
              "optional": true
            }
          }
        ]
      },
      "kind": "class",
      "methods": [
        {
          "docs": {
            "comment": "Adds a target to the rule. The abstract class RuleTarget can be extended to define new\ntargets.\n\nNo-op if target is undefined."
          },
          "name": "addTarget",
          "parameters": [
            {
              "name": "target",
              "type": {
                "fqn": "@aws-cdk/aws-events.IEventRuleTargetProps",
                "optional": true
              }
            },
            {
              "name": "inputOptions",
              "type": {
                "fqn": "@aws-cdk/aws-events.TargetInputTemplate",
                "optional": true
              }
            }
          ]
        },
        {
          "docs": {
            "comment": "Adds an event pattern filter to this rule. If a pattern was already specified,\nthese values are merged into the existing pattern.\n\nFor example, if the rule already contains the pattern:\n\n      {\n          \"resources\": [ \"r1\" ],\n          \"detail\": {\n              \"hello\": [ 1 ]\n          }\n      }\n\nAnd `addEventPattern` is called with the pattern:\n\n      {\n          \"resources\": [ \"r2\" ],\n          \"detail\": {\n              \"foo\": [ \"bar\" ]\n          }\n      }\n\nThe resulting event pattern will be:\n\n      {\n          \"resources\": [ \"r1\", \"r2\" ],\n          \"detail\": {\n              \"hello\": [ 1 ],\n              \"foo\": [ \"bar\" ]\n          }\n      }"
          },
          "name": "addEventPattern",
          "parameters": [
            {
              "name": "eventPattern",
              "type": {
                "fqn": "@aws-cdk/aws-events.EventPattern",
                "optional": true
              }
            }
          ]
        },
        {
          "docs": {
            "comment": "This method can be implemented by derived constructs in order to perform\nvalidation logic. It is called on all constructs before synthesis."
          },
          "name": "validate",
          "returns": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ],
      "name": "EventRule",
      "namespace": "@aws-cdk/aws-events",
      "properties": [
        {
          "docs": {
            "comment": "The value of the event rule Amazon Resource Name (ARN), such as\narn:aws:events:us-east-2:123456789012:rule/example."
          },
          "immutable": true,
          "name": "ruleArn",
          "type": {
            "fqn": "@aws-cdk/aws-events.RuleArn"
          }
        }
      ]
    },
    "@aws-cdk/aws-events.EventRuleProps": {
      "assembly": "@aws-cdk/aws-events",
      "datatype": true,
      "fqn": "@aws-cdk/aws-events.EventRuleProps",
      "kind": "interface",
      "name": "EventRuleProps",
      "namespace": "@aws-cdk/aws-events",
      "properties": [
        {
          "docs": {
            "comment": "A description of the rule's purpose."
          },
          "name": "description",
          "type": {
            "optional": true,
            "primitive": "string"
          }
        },
        {
          "docs": {
            "comment": "A name for the rule. If you don't specify a name, AWS CloudFormation\ngenerates a unique physical ID and uses that ID for the rule name. For\nmore information, see Name Type."
          },
          "name": "ruleName",
          "type": {
            "optional": true,
            "primitive": "string"
          }
        },
        {
          "docs": {
            "comment": "Indicates whether the rule is enabled.",
            "default": "Rule is enabled"
          },
          "name": "enabled",
          "type": {
            "optional": true,
            "primitive": "boolean"
          }
        },
        {
          "docs": {
            "comment": "The schedule or rate (frequency) that determines when CloudWatch Events\nruns the rule. For more information, see Schedule Expression Syntax for\nRules in the Amazon CloudWatch User Guide.",
            "see": "http://docs.aws.amazon.com/AmazonCloudWatch/latest/events/ScheduledEvents.html\n\nYou must specify this property, the `eventPattern` property, or both."
          },
          "name": "scheduleExpression",
          "type": {
            "optional": true,
            "primitive": "string"
          }
        },
        {
          "docs": {
            "comment": "Describes which events CloudWatch Events routes to the specified target.\nThese routed events are matched events. For more information, see Events\nand Event Patterns in the Amazon CloudWatch User Guide.",
            "see": "http://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/CloudWatchEventsandEventPatterns.html\n\nYou must specify this property (either via props or via\n`addEventPattern`), the `scheduleExpression` property, or both. The\nmethod `addEventPattern` can be used to add filter values to the event\npattern."
          },
          "name": "eventPattern",
          "type": {
            "fqn": "@aws-cdk/aws-events.EventPattern",
            "optional": true
          }
        },
        {
          "docs": {
            "comment": "Targets to invoke when this rule matches an event.\n\nInput will be the full matched event. If you wish to specify custom\ntarget input, use `addTarget(target[, inputOptions])`."
          },
          "name": "targets",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-events.IEventRuleTargetProps"
              },
              "kind": "array"
            },
            "optional": true
          }
        }
      ]
    },
    "@aws-cdk/aws-events.EventRuleRef": {
      "abstract": true,
      "assembly": "@aws-cdk/aws-events",
      "base": {
        "fqn": "@aws-cdk/cdk.Construct"
      },
      "fqn": "@aws-cdk/aws-events.EventRuleRef",
      "initializer": {
        "docs": {
          "comment": "Creates a new construct node."
        },
        "initializer": true,
        "parameters": [
          {
            "docs": {
              "comment": "The parent construct"
            },
            "name": "parent",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "name": "name",
            "type": {
              "primitive": "string"
            }
          }
        ]
      },
      "kind": "class",
      "methods": [
        {
          "docs": {
            "comment": "Imports a rule by ARN into this stack."
          },
          "name": "import",
          "parameters": [
            {
              "name": "parent",
              "type": {
                "fqn": "@aws-cdk/cdk.Construct"
              }
            },
            {
              "name": "name",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "props",
              "type": {
                "fqn": "@aws-cdk/aws-events.EventRuleRefProps"
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/aws-events.EventRuleRef"
          },
          "static": true
        },
        {
          "docs": {
            "comment": "Exports this rule resource from this stack and returns an import token."
          },
          "name": "export",
          "returns": {
            "fqn": "@aws-cdk/aws-events.EventRuleRefProps"
          }
        }
      ],
      "name": "EventRuleRef",
      "namespace": "@aws-cdk/aws-events",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "comment": "The value of the event rule Amazon Resource Name (ARN), such as\narn:aws:events:us-east-2:123456789012:rule/example."
          },
          "immutable": true,
          "name": "ruleArn",
          "type": {
            "fqn": "@aws-cdk/aws-events.RuleArn"
          }
        }
      ]
    },
    "@aws-cdk/aws-events.EventRuleRefProps": {
      "assembly": "@aws-cdk/aws-events",
      "datatype": true,
      "fqn": "@aws-cdk/aws-events.EventRuleRefProps",
      "kind": "interface",
      "name": "EventRuleRefProps",
      "namespace": "@aws-cdk/aws-events",
      "properties": [
        {
          "docs": {
            "comment": "The value of the event rule Amazon Resource Name (ARN), such as\narn:aws:events:us-east-2:123456789012:rule/example."
          },
          "name": "eventRuleArn",
          "type": {
            "fqn": "@aws-cdk/aws-events.RuleArn"
          }
        }
      ]
    },
    "@aws-cdk/aws-events.EventRuleTarget": {
      "assembly": "@aws-cdk/aws-events",
      "datatype": true,
      "fqn": "@aws-cdk/aws-events.EventRuleTarget",
      "kind": "interface",
      "name": "EventRuleTarget",
      "namespace": "@aws-cdk/aws-events",
      "properties": [
        {
          "docs": {
            "comment": "A unique, user-defined identifier for the target. Acceptable values\ninclude alphanumeric characters, periods (.), hyphens (-), and\nunderscores (_)."
          },
          "name": "id",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "comment": "The Amazon Resource Name (ARN) of the target."
          },
          "name": "arn",
          "type": {
            "fqn": "@aws-cdk/cdk.Arn"
          }
        },
        {
          "docs": {
            "comment": "The Amazon Resource Name (ARN) of the AWS Identity and Access Management\n(IAM) role to use for this target when the rule is triggered. If one rule\ntriggers multiple targets, you can use a different IAM role for each\ntarget."
          },
          "name": "roleArn",
          "type": {
            "fqn": "@aws-cdk/aws-iam.RoleArn",
            "optional": true
          }
        },
        {
          "docs": {
            "comment": "The Amazon ECS task definition and task count to use, if the event target\nis an Amazon ECS task."
          },
          "name": "ecsParameters",
          "type": {
            "fqn": "@aws-cdk/aws-events.cloudformation.RuleResource.EcsParametersProperty",
            "optional": true
          }
        },
        {
          "docs": {
            "comment": "Settings that control shard assignment, when the target is a Kinesis\nstream. If you don't include this parameter, eventId is used as the\npartition key."
          },
          "name": "kinesisParameters",
          "type": {
            "fqn": "@aws-cdk/aws-events.cloudformation.RuleResource.KinesisParametersProperty",
            "optional": true
          }
        },
        {
          "docs": {
            "comment": "Parameters used when the rule invokes Amazon EC2 Systems Manager Run\nCommand."
          },
          "name": "runCommandParameters",
          "type": {
            "fqn": "@aws-cdk/aws-events.cloudformation.RuleResource.RunCommandParametersProperty",
            "optional": true
          }
        }
      ]
    },
    "@aws-cdk/aws-events.IEventRuleTargetProps": {
      "assembly": "@aws-cdk/aws-events",
      "datatype": true,
      "docs": {
        "comment": "An abstract target for EventRules."
      },
      "fqn": "@aws-cdk/aws-events.IEventRuleTargetProps",
      "kind": "interface",
      "name": "IEventRuleTargetProps",
      "namespace": "@aws-cdk/aws-events",
      "properties": [
        {
          "docs": {
            "comment": "Returns the rule target specification.\nNOTE: Do not use the various `inputXxx` options. They can be set in a call to `addTarget`."
          },
          "immutable": true,
          "name": "eventRuleTarget",
          "type": {
            "fqn": "@aws-cdk/aws-events.EventRuleTarget"
          }
        }
      ]
    },
    "@aws-cdk/aws-events.RuleArn": {
      "assembly": "@aws-cdk/aws-events",
      "base": {
        "fqn": "@aws-cdk/cdk.Arn"
      },
      "fqn": "@aws-cdk/aws-events.RuleArn",
      "initializer": {
        "docs": {
          "comment": "Creates a token that resolves to `value`. If value is a function,\nthe function is evaluated upon resolution and the value it returns will be\nuesd as the token's value."
        },
        "initializer": true,
        "parameters": [
          {
            "name": "valueOrFunction",
            "type": {
              "optional": true,
              "primitive": "any"
            }
          }
        ]
      },
      "kind": "class",
      "name": "RuleArn",
      "namespace": "@aws-cdk/aws-events"
    },
    "@aws-cdk/aws-events.TargetInputTemplate": {
      "assembly": "@aws-cdk/aws-events",
      "datatype": true,
      "docs": {
        "comment": "Specifies settings that provide custom input to an Amazon CloudWatch Events\nrule target based on certain event data.",
        "see": "https://docs.aws.amazon.com/AmazonCloudWatchEvents/latest/APIReference/API_InputTransformer.html"
      },
      "fqn": "@aws-cdk/aws-events.TargetInputTemplate",
      "kind": "interface",
      "name": "TargetInputTemplate",
      "namespace": "@aws-cdk/aws-events",
      "properties": [
        {
          "docs": {
            "comment": "Input template where you can use the values of the keys from\ninputPathsMap to customize the data sent to the target. Enclose each\nInputPathsMaps value in brackets: <value>\n\nThe value passed here will be double-quoted to indicate it's a string value.\nThis option is mutually exclusive with `jsonTemplate`.",
            "example": "{\n   textTemplate: 'Build <buildid> started',\n   pathsMap: {\n     buildid: '$.detail.id'\n   }\n}"
          },
          "name": "textTemplate",
          "type": {
            "optional": true,
            "primitive": "any"
          }
        },
        {
          "docs": {
            "comment": "Input template where you can use the values of the keys from\ninputPathsMap to customize the data sent to the target. Enclose each\nInputPathsMaps value in brackets: <value>\n\nThis option is mutually exclusive with `textTemplate`.",
            "example": "{\n   jsonTemplate: '{ \"commands\": <commandsToRun> }' ,\n   pathsMap: {\n     commandsToRun: '$.detail.commands'\n   }\n}"
          },
          "name": "jsonTemplate",
          "type": {
            "optional": true,
            "primitive": "any"
          }
        },
        {
          "docs": {
            "comment": "Map of JSON paths to be extracted from the event. These are key-value\npairs, where each value is a JSON path. You must use JSON dot notation,\nnot bracket notation."
          },
          "name": "pathsMap",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "map"
            },
            "optional": true
          }
        }
      ]
    },
    "@aws-cdk/aws-events.cloudformation.RuleResource": {
      "assembly": "@aws-cdk/aws-events",
      "base": {
        "fqn": "@aws-cdk/cdk.Resource"
      },
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-events-rule.html"
      },
      "fqn": "@aws-cdk/aws-events.cloudformation.RuleResource",
      "initializer": {
        "docs": {
          "comment": "Creates a new ``AWS::Events::Rule``."
        },
        "initializer": true,
        "parameters": [
          {
            "docs": {
              "comment": "the ``cdk.Construct`` this ``RuleResource`` is a part of"
            },
            "name": "parent",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "docs": {
              "comment": "the name of the resource in the ``cdk.Construct`` tree"
            },
            "name": "name",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "comment": "the properties of this ``RuleResource``"
            },
            "name": "properties",
            "type": {
              "fqn": "@aws-cdk/aws-events.cloudformation.RuleResourceProps",
              "optional": true
            }
          }
        ]
      },
      "kind": "class",
      "methods": [
        {
          "name": "renderProperties",
          "protected": true,
          "returns": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        }
      ],
      "name": "RuleResource",
      "namespace": "@aws-cdk/aws-events.cloudformation",
      "properties": [
        {
          "const": true,
          "docs": {
            "comment": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "name": "resourceTypeName",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "cloudformation_attribute": "Arn"
          },
          "immutable": true,
          "name": "ruleArn",
          "type": {
            "fqn": "@aws-cdk/aws-events.RuleArn"
          }
        }
      ],
      "subtypes": [
        "@aws-cdk/aws-events.cloudformation.RuleResource.EcsParametersProperty",
        "@aws-cdk/aws-events.cloudformation.RuleResource.InputTransformerProperty",
        "@aws-cdk/aws-events.cloudformation.RuleResource.KinesisParametersProperty",
        "@aws-cdk/aws-events.cloudformation.RuleResource.RunCommandParametersProperty",
        "@aws-cdk/aws-events.cloudformation.RuleResource.RunCommandTargetProperty",
        "@aws-cdk/aws-events.cloudformation.RuleResource.TargetProperty"
      ]
    },
    "@aws-cdk/aws-events.cloudformation.RuleResource.EcsParametersProperty": {
      "assembly": "@aws-cdk/aws-events",
      "datatype": true,
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-events-rule-ecsparameters.html"
      },
      "fqn": "@aws-cdk/aws-events.cloudformation.RuleResource.EcsParametersProperty",
      "kind": "interface",
      "name": "EcsParametersProperty",
      "namespace": "@aws-cdk/aws-events.cloudformation.RuleResource",
      "parenttype": "@aws-cdk/aws-events.cloudformation.RuleResource",
      "properties": [
        {
          "docs": {
            "comment": "``RuleResource.EcsParametersProperty.TaskCount``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-events-rule-ecsparameters.html#cfn-events-rule-ecsparameters-taskcount"
          },
          "name": "taskCount",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "number"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``RuleResource.EcsParametersProperty.TaskDefinitionArn``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-events-rule-ecsparameters.html#cfn-events-rule-ecsparameters-taskdefinitionarn"
          },
          "name": "taskDefinitionArn",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-events.cloudformation.RuleResource.InputTransformerProperty": {
      "assembly": "@aws-cdk/aws-events",
      "datatype": true,
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-events-rule-inputtransformer.html"
      },
      "fqn": "@aws-cdk/aws-events.cloudformation.RuleResource.InputTransformerProperty",
      "kind": "interface",
      "name": "InputTransformerProperty",
      "namespace": "@aws-cdk/aws-events.cloudformation.RuleResource",
      "parenttype": "@aws-cdk/aws-events.cloudformation.RuleResource",
      "properties": [
        {
          "docs": {
            "comment": "``RuleResource.InputTransformerProperty.InputPathsMap``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-events-rule-inputtransformer.html#cfn-events-rule-inputtransformer-inputpathsmap"
          },
          "name": "inputPathsMap",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "primitive": "string"
                          },
                          {
                            "fqn": "@aws-cdk/cdk.Token"
                          }
                        ]
                      }
                    },
                    "kind": "map"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``RuleResource.InputTransformerProperty.InputTemplate``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-events-rule-inputtransformer.html#cfn-events-rule-inputtransformer-inputtemplate"
          },
          "name": "inputTemplate",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-events.cloudformation.RuleResource.KinesisParametersProperty": {
      "assembly": "@aws-cdk/aws-events",
      "datatype": true,
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-events-rule-kinesisparameters.html"
      },
      "fqn": "@aws-cdk/aws-events.cloudformation.RuleResource.KinesisParametersProperty",
      "kind": "interface",
      "name": "KinesisParametersProperty",
      "namespace": "@aws-cdk/aws-events.cloudformation.RuleResource",
      "parenttype": "@aws-cdk/aws-events.cloudformation.RuleResource",
      "properties": [
        {
          "docs": {
            "comment": "``RuleResource.KinesisParametersProperty.PartitionKeyPath``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-events-rule-kinesisparameters.html#cfn-events-rule-kinesisparameters-partitionkeypath"
          },
          "name": "partitionKeyPath",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-events.cloudformation.RuleResource.RunCommandParametersProperty": {
      "assembly": "@aws-cdk/aws-events",
      "datatype": true,
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-events-rule-runcommandparameters.html"
      },
      "fqn": "@aws-cdk/aws-events.cloudformation.RuleResource.RunCommandParametersProperty",
      "kind": "interface",
      "name": "RunCommandParametersProperty",
      "namespace": "@aws-cdk/aws-events.cloudformation.RuleResource",
      "parenttype": "@aws-cdk/aws-events.cloudformation.RuleResource",
      "properties": [
        {
          "docs": {
            "comment": "``RuleResource.RunCommandParametersProperty.RunCommandTargets``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-events-rule-runcommandparameters.html#cfn-events-rule-runcommandparameters-runcommandtargets"
          },
          "name": "runCommandTargets",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/cdk.Token"
                          },
                          {
                            "fqn": "@aws-cdk/aws-events.cloudformation.RuleResource.RunCommandTargetProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-events.cloudformation.RuleResource.RunCommandTargetProperty": {
      "assembly": "@aws-cdk/aws-events",
      "datatype": true,
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-events-rule-runcommandtarget.html"
      },
      "fqn": "@aws-cdk/aws-events.cloudformation.RuleResource.RunCommandTargetProperty",
      "kind": "interface",
      "name": "RunCommandTargetProperty",
      "namespace": "@aws-cdk/aws-events.cloudformation.RuleResource",
      "parenttype": "@aws-cdk/aws-events.cloudformation.RuleResource",
      "properties": [
        {
          "docs": {
            "comment": "``RuleResource.RunCommandTargetProperty.Key``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-events-rule-runcommandtarget.html#cfn-events-rule-runcommandtarget-key"
          },
          "name": "key",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``RuleResource.RunCommandTargetProperty.Values``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-events-rule-runcommandtarget.html#cfn-events-rule-runcommandtarget-values"
          },
          "name": "values",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "primitive": "string"
                          },
                          {
                            "fqn": "@aws-cdk/cdk.Token"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-events.cloudformation.RuleResource.TargetProperty": {
      "assembly": "@aws-cdk/aws-events",
      "datatype": true,
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-events-rule-target.html"
      },
      "fqn": "@aws-cdk/aws-events.cloudformation.RuleResource.TargetProperty",
      "kind": "interface",
      "name": "TargetProperty",
      "namespace": "@aws-cdk/aws-events.cloudformation.RuleResource",
      "parenttype": "@aws-cdk/aws-events.cloudformation.RuleResource",
      "properties": [
        {
          "docs": {
            "comment": "``RuleResource.TargetProperty.Arn``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-events-rule-target.html#cfn-events-rule-target-arn"
          },
          "name": "arn",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``RuleResource.TargetProperty.EcsParameters``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-events-rule-target.html#cfn-events-rule-target-ecsparameters"
          },
          "name": "ecsParameters",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/aws-events.cloudformation.RuleResource.EcsParametersProperty"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``RuleResource.TargetProperty.Id``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-events-rule-target.html#cfn-events-rule-target-id"
          },
          "name": "id",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``RuleResource.TargetProperty.Input``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-events-rule-target.html#cfn-events-rule-target-input"
          },
          "name": "input",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``RuleResource.TargetProperty.InputPath``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-events-rule-target.html#cfn-events-rule-target-inputpath"
          },
          "name": "inputPath",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``RuleResource.TargetProperty.InputTransformer``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-events-rule-target.html#cfn-events-rule-target-inputtransformer"
          },
          "name": "inputTransformer",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "fqn": "@aws-cdk/aws-events.cloudformation.RuleResource.InputTransformerProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``RuleResource.TargetProperty.KinesisParameters``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-events-rule-target.html#cfn-events-rule-target-kinesisparameters"
          },
          "name": "kinesisParameters",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/aws-events.cloudformation.RuleResource.KinesisParametersProperty"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``RuleResource.TargetProperty.RoleArn``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-events-rule-target.html#cfn-events-rule-target-rolearn"
          },
          "name": "roleArn",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``RuleResource.TargetProperty.RunCommandParameters``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-events-rule-target.html#cfn-events-rule-target-runcommandparameters"
          },
          "name": "runCommandParameters",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/aws-events.cloudformation.RuleResource.RunCommandParametersProperty"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-events.cloudformation.RuleResourceProps": {
      "assembly": "@aws-cdk/aws-events",
      "datatype": true,
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-events-rule.html"
      },
      "fqn": "@aws-cdk/aws-events.cloudformation.RuleResourceProps",
      "kind": "interface",
      "name": "RuleResourceProps",
      "namespace": "@aws-cdk/aws-events.cloudformation",
      "properties": [
        {
          "docs": {
            "comment": "``AWS::Events::Rule.Description``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-events-rule.html#cfn-events-rule-description"
          },
          "name": "description",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::Events::Rule.EventPattern``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-events-rule.html#cfn-events-rule-eventpattern"
          },
          "name": "eventPattern",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "json"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::Events::Rule.Name``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-events-rule.html#cfn-events-rule-name"
          },
          "name": "ruleName",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::Events::Rule.RoleArn``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-events-rule.html#cfn-events-rule-rolearn"
          },
          "name": "roleArn",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::Events::Rule.ScheduleExpression``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-events-rule.html#cfn-events-rule-scheduleexpression"
          },
          "name": "scheduleExpression",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::Events::Rule.State``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-events-rule.html#cfn-events-rule-state"
          },
          "name": "state",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::Events::Rule.Targets``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-events-rule.html#cfn-events-rule-targets"
          },
          "name": "targets",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/cdk.Token"
                          },
                          {
                            "fqn": "@aws-cdk/aws-events.cloudformation.RuleResource.TargetProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ]
    }
  },
  "version": "0.7.3-beta"
}
