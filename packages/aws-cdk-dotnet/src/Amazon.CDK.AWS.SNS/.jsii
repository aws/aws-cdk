{
  "fingerprint": "e6dybOIDOBopouAH5ifnkBjo2rYf6G2wZjK/Dbm11Mo=",
  "dependencies": {
    "@aws-cdk/aws-cloudwatch": {
      "dependencies": {
        "@aws-cdk/aws-iam": {
          "dependencies": {
            "@aws-cdk/cdk": {
              "dependencies": {
                "@aws-cdk/cx-api": {
                  "targets": {
                    "dotnet": {
                      "namespace": "Amazon.CDK.CXAPI"
                    },
                    "java": {
                      "maven": {
                        "artifactId": "cxapi",
                        "groupId": "com.amazonaws.cdk"
                      },
                      "package": "com.amazonaws.cdk.cxapi"
                    },
                    "js": {
                      "npm": "@aws-cdk/cx-api"
                    }
                  },
                  "version": "0.7.3-beta"
                }
              },
              "targets": {
                "dotnet": {
                  "namespace": "Amazon.CDK"
                },
                "java": {
                  "maven": {
                    "artifactId": "cdk",
                    "groupId": "com.amazonaws.cdk"
                  },
                  "package": "com.amazonaws.cdk"
                },
                "js": {
                  "npm": "@aws-cdk/cdk"
                }
              },
              "version": "0.7.3-beta"
            }
          },
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.IAM"
            },
            "java": {
              "maven": {
                "artifactId": "aws-iam",
                "groupId": "com.amazonaws.cdk"
              },
              "package": "com.amazonaws.cdk.aws.iam"
            },
            "js": {
              "npm": "@aws-cdk/aws-iam"
            }
          },
          "version": "0.7.3-beta"
        },
        "@aws-cdk/cdk": {
          "dependencies": {
            "@aws-cdk/cx-api": {
              "targets": {
                "dotnet": {
                  "namespace": "Amazon.CDK.CXAPI"
                },
                "java": {
                  "maven": {
                    "artifactId": "cxapi",
                    "groupId": "com.amazonaws.cdk"
                  },
                  "package": "com.amazonaws.cdk.cxapi"
                },
                "js": {
                  "npm": "@aws-cdk/cx-api"
                }
              },
              "version": "0.7.3-beta"
            }
          },
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK"
            },
            "java": {
              "maven": {
                "artifactId": "cdk",
                "groupId": "com.amazonaws.cdk"
              },
              "package": "com.amazonaws.cdk"
            },
            "js": {
              "npm": "@aws-cdk/cdk"
            }
          },
          "version": "0.7.3-beta"
        }
      },
      "targets": {
        "dotnet": {
          "namespace": "Amazon.CDK.AWS.CloudWatch"
        },
        "java": {
          "maven": {
            "artifactId": "aws-cloudwatch",
            "groupId": "com.amazonaws.cdk"
          },
          "package": "com.amazonaws.cdk.aws.cloudwatch"
        },
        "js": {
          "npm": "@aws-cdk/aws-cloudwatch"
        }
      },
      "version": "0.7.3-beta"
    },
    "@aws-cdk/aws-events": {
      "dependencies": {
        "@aws-cdk/aws-iam": {
          "dependencies": {
            "@aws-cdk/cdk": {
              "dependencies": {
                "@aws-cdk/cx-api": {
                  "targets": {
                    "dotnet": {
                      "namespace": "Amazon.CDK.CXAPI"
                    },
                    "java": {
                      "maven": {
                        "artifactId": "cxapi",
                        "groupId": "com.amazonaws.cdk"
                      },
                      "package": "com.amazonaws.cdk.cxapi"
                    },
                    "js": {
                      "npm": "@aws-cdk/cx-api"
                    }
                  },
                  "version": "0.7.3-beta"
                }
              },
              "targets": {
                "dotnet": {
                  "namespace": "Amazon.CDK"
                },
                "java": {
                  "maven": {
                    "artifactId": "cdk",
                    "groupId": "com.amazonaws.cdk"
                  },
                  "package": "com.amazonaws.cdk"
                },
                "js": {
                  "npm": "@aws-cdk/cdk"
                }
              },
              "version": "0.7.3-beta"
            }
          },
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.IAM"
            },
            "java": {
              "maven": {
                "artifactId": "aws-iam",
                "groupId": "com.amazonaws.cdk"
              },
              "package": "com.amazonaws.cdk.aws.iam"
            },
            "js": {
              "npm": "@aws-cdk/aws-iam"
            }
          },
          "version": "0.7.3-beta"
        },
        "@aws-cdk/cdk": {
          "dependencies": {
            "@aws-cdk/cx-api": {
              "targets": {
                "dotnet": {
                  "namespace": "Amazon.CDK.CXAPI"
                },
                "java": {
                  "maven": {
                    "artifactId": "cxapi",
                    "groupId": "com.amazonaws.cdk"
                  },
                  "package": "com.amazonaws.cdk.cxapi"
                },
                "js": {
                  "npm": "@aws-cdk/cx-api"
                }
              },
              "version": "0.7.3-beta"
            }
          },
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK"
            },
            "java": {
              "maven": {
                "artifactId": "cdk",
                "groupId": "com.amazonaws.cdk"
              },
              "package": "com.amazonaws.cdk"
            },
            "js": {
              "npm": "@aws-cdk/cdk"
            }
          },
          "version": "0.7.3-beta"
        }
      },
      "targets": {
        "dotnet": {
          "namespace": "Amazon.CDK.AWS.Events"
        },
        "java": {
          "maven": {
            "artifactId": "aws-events",
            "groupId": "com.amazonaws.cdk"
          },
          "package": "com.amazonaws.cdk.aws.events"
        },
        "js": {
          "npm": "@aws-cdk/aws-events"
        }
      },
      "version": "0.7.3-beta"
    },
    "@aws-cdk/aws-iam": {
      "dependencies": {
        "@aws-cdk/cdk": {
          "dependencies": {
            "@aws-cdk/cx-api": {
              "targets": {
                "dotnet": {
                  "namespace": "Amazon.CDK.CXAPI"
                },
                "java": {
                  "maven": {
                    "artifactId": "cxapi",
                    "groupId": "com.amazonaws.cdk"
                  },
                  "package": "com.amazonaws.cdk.cxapi"
                },
                "js": {
                  "npm": "@aws-cdk/cx-api"
                }
              },
              "version": "0.7.3-beta"
            }
          },
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK"
            },
            "java": {
              "maven": {
                "artifactId": "cdk",
                "groupId": "com.amazonaws.cdk"
              },
              "package": "com.amazonaws.cdk"
            },
            "js": {
              "npm": "@aws-cdk/cdk"
            }
          },
          "version": "0.7.3-beta"
        }
      },
      "targets": {
        "dotnet": {
          "namespace": "Amazon.CDK.AWS.IAM"
        },
        "java": {
          "maven": {
            "artifactId": "aws-iam",
            "groupId": "com.amazonaws.cdk"
          },
          "package": "com.amazonaws.cdk.aws.iam"
        },
        "js": {
          "npm": "@aws-cdk/aws-iam"
        }
      },
      "version": "0.7.3-beta"
    },
    "@aws-cdk/aws-lambda": {
      "dependencies": {
        "@aws-cdk/aws-cloudwatch": {
          "dependencies": {
            "@aws-cdk/aws-iam": {
              "dependencies": {
                "@aws-cdk/cdk": {
                  "dependencies": {
                    "@aws-cdk/cx-api": {
                      "targets": {
                        "dotnet": {
                          "namespace": "Amazon.CDK.CXAPI"
                        },
                        "java": {
                          "maven": {
                            "artifactId": "cxapi",
                            "groupId": "com.amazonaws.cdk"
                          },
                          "package": "com.amazonaws.cdk.cxapi"
                        },
                        "js": {
                          "npm": "@aws-cdk/cx-api"
                        }
                      },
                      "version": "0.7.3-beta"
                    }
                  },
                  "targets": {
                    "dotnet": {
                      "namespace": "Amazon.CDK"
                    },
                    "java": {
                      "maven": {
                        "artifactId": "cdk",
                        "groupId": "com.amazonaws.cdk"
                      },
                      "package": "com.amazonaws.cdk"
                    },
                    "js": {
                      "npm": "@aws-cdk/cdk"
                    }
                  },
                  "version": "0.7.3-beta"
                }
              },
              "targets": {
                "dotnet": {
                  "namespace": "Amazon.CDK.AWS.IAM"
                },
                "java": {
                  "maven": {
                    "artifactId": "aws-iam",
                    "groupId": "com.amazonaws.cdk"
                  },
                  "package": "com.amazonaws.cdk.aws.iam"
                },
                "js": {
                  "npm": "@aws-cdk/aws-iam"
                }
              },
              "version": "0.7.3-beta"
            },
            "@aws-cdk/cdk": {
              "dependencies": {
                "@aws-cdk/cx-api": {
                  "targets": {
                    "dotnet": {
                      "namespace": "Amazon.CDK.CXAPI"
                    },
                    "java": {
                      "maven": {
                        "artifactId": "cxapi",
                        "groupId": "com.amazonaws.cdk"
                      },
                      "package": "com.amazonaws.cdk.cxapi"
                    },
                    "js": {
                      "npm": "@aws-cdk/cx-api"
                    }
                  },
                  "version": "0.7.3-beta"
                }
              },
              "targets": {
                "dotnet": {
                  "namespace": "Amazon.CDK"
                },
                "java": {
                  "maven": {
                    "artifactId": "cdk",
                    "groupId": "com.amazonaws.cdk"
                  },
                  "package": "com.amazonaws.cdk"
                },
                "js": {
                  "npm": "@aws-cdk/cdk"
                }
              },
              "version": "0.7.3-beta"
            }
          },
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.CloudWatch"
            },
            "java": {
              "maven": {
                "artifactId": "aws-cloudwatch",
                "groupId": "com.amazonaws.cdk"
              },
              "package": "com.amazonaws.cdk.aws.cloudwatch"
            },
            "js": {
              "npm": "@aws-cdk/aws-cloudwatch"
            }
          },
          "version": "0.7.3-beta"
        },
        "@aws-cdk/aws-events": {
          "dependencies": {
            "@aws-cdk/aws-iam": {
              "dependencies": {
                "@aws-cdk/cdk": {
                  "dependencies": {
                    "@aws-cdk/cx-api": {
                      "targets": {
                        "dotnet": {
                          "namespace": "Amazon.CDK.CXAPI"
                        },
                        "java": {
                          "maven": {
                            "artifactId": "cxapi",
                            "groupId": "com.amazonaws.cdk"
                          },
                          "package": "com.amazonaws.cdk.cxapi"
                        },
                        "js": {
                          "npm": "@aws-cdk/cx-api"
                        }
                      },
                      "version": "0.7.3-beta"
                    }
                  },
                  "targets": {
                    "dotnet": {
                      "namespace": "Amazon.CDK"
                    },
                    "java": {
                      "maven": {
                        "artifactId": "cdk",
                        "groupId": "com.amazonaws.cdk"
                      },
                      "package": "com.amazonaws.cdk"
                    },
                    "js": {
                      "npm": "@aws-cdk/cdk"
                    }
                  },
                  "version": "0.7.3-beta"
                }
              },
              "targets": {
                "dotnet": {
                  "namespace": "Amazon.CDK.AWS.IAM"
                },
                "java": {
                  "maven": {
                    "artifactId": "aws-iam",
                    "groupId": "com.amazonaws.cdk"
                  },
                  "package": "com.amazonaws.cdk.aws.iam"
                },
                "js": {
                  "npm": "@aws-cdk/aws-iam"
                }
              },
              "version": "0.7.3-beta"
            },
            "@aws-cdk/cdk": {
              "dependencies": {
                "@aws-cdk/cx-api": {
                  "targets": {
                    "dotnet": {
                      "namespace": "Amazon.CDK.CXAPI"
                    },
                    "java": {
                      "maven": {
                        "artifactId": "cxapi",
                        "groupId": "com.amazonaws.cdk"
                      },
                      "package": "com.amazonaws.cdk.cxapi"
                    },
                    "js": {
                      "npm": "@aws-cdk/cx-api"
                    }
                  },
                  "version": "0.7.3-beta"
                }
              },
              "targets": {
                "dotnet": {
                  "namespace": "Amazon.CDK"
                },
                "java": {
                  "maven": {
                    "artifactId": "cdk",
                    "groupId": "com.amazonaws.cdk"
                  },
                  "package": "com.amazonaws.cdk"
                },
                "js": {
                  "npm": "@aws-cdk/cdk"
                }
              },
              "version": "0.7.3-beta"
            }
          },
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Events"
            },
            "java": {
              "maven": {
                "artifactId": "aws-events",
                "groupId": "com.amazonaws.cdk"
              },
              "package": "com.amazonaws.cdk.aws.events"
            },
            "js": {
              "npm": "@aws-cdk/aws-events"
            }
          },
          "version": "0.7.3-beta"
        },
        "@aws-cdk/aws-iam": {
          "dependencies": {
            "@aws-cdk/cdk": {
              "dependencies": {
                "@aws-cdk/cx-api": {
                  "targets": {
                    "dotnet": {
                      "namespace": "Amazon.CDK.CXAPI"
                    },
                    "java": {
                      "maven": {
                        "artifactId": "cxapi",
                        "groupId": "com.amazonaws.cdk"
                      },
                      "package": "com.amazonaws.cdk.cxapi"
                    },
                    "js": {
                      "npm": "@aws-cdk/cx-api"
                    }
                  },
                  "version": "0.7.3-beta"
                }
              },
              "targets": {
                "dotnet": {
                  "namespace": "Amazon.CDK"
                },
                "java": {
                  "maven": {
                    "artifactId": "cdk",
                    "groupId": "com.amazonaws.cdk"
                  },
                  "package": "com.amazonaws.cdk"
                },
                "js": {
                  "npm": "@aws-cdk/cdk"
                }
              },
              "version": "0.7.3-beta"
            }
          },
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.IAM"
            },
            "java": {
              "maven": {
                "artifactId": "aws-iam",
                "groupId": "com.amazonaws.cdk"
              },
              "package": "com.amazonaws.cdk.aws.iam"
            },
            "js": {
              "npm": "@aws-cdk/aws-iam"
            }
          },
          "version": "0.7.3-beta"
        },
        "@aws-cdk/aws-logs": {
          "dependencies": {
            "@aws-cdk/aws-iam": {
              "dependencies": {
                "@aws-cdk/cdk": {
                  "dependencies": {
                    "@aws-cdk/cx-api": {
                      "targets": {
                        "dotnet": {
                          "namespace": "Amazon.CDK.CXAPI"
                        },
                        "java": {
                          "maven": {
                            "artifactId": "cxapi",
                            "groupId": "com.amazonaws.cdk"
                          },
                          "package": "com.amazonaws.cdk.cxapi"
                        },
                        "js": {
                          "npm": "@aws-cdk/cx-api"
                        }
                      },
                      "version": "0.7.3-beta"
                    }
                  },
                  "targets": {
                    "dotnet": {
                      "namespace": "Amazon.CDK"
                    },
                    "java": {
                      "maven": {
                        "artifactId": "cdk",
                        "groupId": "com.amazonaws.cdk"
                      },
                      "package": "com.amazonaws.cdk"
                    },
                    "js": {
                      "npm": "@aws-cdk/cdk"
                    }
                  },
                  "version": "0.7.3-beta"
                }
              },
              "targets": {
                "dotnet": {
                  "namespace": "Amazon.CDK.AWS.IAM"
                },
                "java": {
                  "maven": {
                    "artifactId": "aws-iam",
                    "groupId": "com.amazonaws.cdk"
                  },
                  "package": "com.amazonaws.cdk.aws.iam"
                },
                "js": {
                  "npm": "@aws-cdk/aws-iam"
                }
              },
              "version": "0.7.3-beta"
            },
            "@aws-cdk/cdk": {
              "dependencies": {
                "@aws-cdk/cx-api": {
                  "targets": {
                    "dotnet": {
                      "namespace": "Amazon.CDK.CXAPI"
                    },
                    "java": {
                      "maven": {
                        "artifactId": "cxapi",
                        "groupId": "com.amazonaws.cdk"
                      },
                      "package": "com.amazonaws.cdk.cxapi"
                    },
                    "js": {
                      "npm": "@aws-cdk/cx-api"
                    }
                  },
                  "version": "0.7.3-beta"
                }
              },
              "targets": {
                "dotnet": {
                  "namespace": "Amazon.CDK"
                },
                "java": {
                  "maven": {
                    "artifactId": "cdk",
                    "groupId": "com.amazonaws.cdk"
                  },
                  "package": "com.amazonaws.cdk"
                },
                "js": {
                  "npm": "@aws-cdk/cdk"
                }
              },
              "version": "0.7.3-beta"
            }
          },
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Logs"
            },
            "java": {
              "maven": {
                "artifactId": "aws-logs",
                "groupId": "com.amazonaws.cdk"
              },
              "package": "com.amazonaws.cdk.aws.logs"
            },
            "js": {
              "npm": "@aws-cdk/aws-logs"
            }
          },
          "version": "0.7.3-beta"
        },
        "@aws-cdk/aws-s3": {
          "dependencies": {
            "@aws-cdk/aws-iam": {
              "dependencies": {
                "@aws-cdk/cdk": {
                  "dependencies": {
                    "@aws-cdk/cx-api": {
                      "targets": {
                        "dotnet": {
                          "namespace": "Amazon.CDK.CXAPI"
                        },
                        "java": {
                          "maven": {
                            "artifactId": "cxapi",
                            "groupId": "com.amazonaws.cdk"
                          },
                          "package": "com.amazonaws.cdk.cxapi"
                        },
                        "js": {
                          "npm": "@aws-cdk/cx-api"
                        }
                      },
                      "version": "0.7.3-beta"
                    }
                  },
                  "targets": {
                    "dotnet": {
                      "namespace": "Amazon.CDK"
                    },
                    "java": {
                      "maven": {
                        "artifactId": "cdk",
                        "groupId": "com.amazonaws.cdk"
                      },
                      "package": "com.amazonaws.cdk"
                    },
                    "js": {
                      "npm": "@aws-cdk/cdk"
                    }
                  },
                  "version": "0.7.3-beta"
                }
              },
              "targets": {
                "dotnet": {
                  "namespace": "Amazon.CDK.AWS.IAM"
                },
                "java": {
                  "maven": {
                    "artifactId": "aws-iam",
                    "groupId": "com.amazonaws.cdk"
                  },
                  "package": "com.amazonaws.cdk.aws.iam"
                },
                "js": {
                  "npm": "@aws-cdk/aws-iam"
                }
              },
              "version": "0.7.3-beta"
            },
            "@aws-cdk/aws-kms": {
              "dependencies": {
                "@aws-cdk/aws-iam": {
                  "dependencies": {
                    "@aws-cdk/cdk": {
                      "dependencies": {
                        "@aws-cdk/cx-api": {
                          "targets": {
                            "dotnet": {
                              "namespace": "Amazon.CDK.CXAPI"
                            },
                            "java": {
                              "maven": {
                                "artifactId": "cxapi",
                                "groupId": "com.amazonaws.cdk"
                              },
                              "package": "com.amazonaws.cdk.cxapi"
                            },
                            "js": {
                              "npm": "@aws-cdk/cx-api"
                            }
                          },
                          "version": "0.7.3-beta"
                        }
                      },
                      "targets": {
                        "dotnet": {
                          "namespace": "Amazon.CDK"
                        },
                        "java": {
                          "maven": {
                            "artifactId": "cdk",
                            "groupId": "com.amazonaws.cdk"
                          },
                          "package": "com.amazonaws.cdk"
                        },
                        "js": {
                          "npm": "@aws-cdk/cdk"
                        }
                      },
                      "version": "0.7.3-beta"
                    }
                  },
                  "targets": {
                    "dotnet": {
                      "namespace": "Amazon.CDK.AWS.IAM"
                    },
                    "java": {
                      "maven": {
                        "artifactId": "aws-iam",
                        "groupId": "com.amazonaws.cdk"
                      },
                      "package": "com.amazonaws.cdk.aws.iam"
                    },
                    "js": {
                      "npm": "@aws-cdk/aws-iam"
                    }
                  },
                  "version": "0.7.3-beta"
                },
                "@aws-cdk/cdk": {
                  "dependencies": {
                    "@aws-cdk/cx-api": {
                      "targets": {
                        "dotnet": {
                          "namespace": "Amazon.CDK.CXAPI"
                        },
                        "java": {
                          "maven": {
                            "artifactId": "cxapi",
                            "groupId": "com.amazonaws.cdk"
                          },
                          "package": "com.amazonaws.cdk.cxapi"
                        },
                        "js": {
                          "npm": "@aws-cdk/cx-api"
                        }
                      },
                      "version": "0.7.3-beta"
                    }
                  },
                  "targets": {
                    "dotnet": {
                      "namespace": "Amazon.CDK"
                    },
                    "java": {
                      "maven": {
                        "artifactId": "cdk",
                        "groupId": "com.amazonaws.cdk"
                      },
                      "package": "com.amazonaws.cdk"
                    },
                    "js": {
                      "npm": "@aws-cdk/cdk"
                    }
                  },
                  "version": "0.7.3-beta"
                }
              },
              "targets": {
                "dotnet": {
                  "namespace": "Amazon.CDK.AWS.KMS"
                },
                "java": {
                  "maven": {
                    "artifactId": "aws-kms",
                    "groupId": "com.amazonaws.cdk"
                  },
                  "package": "com.amazonaws.cdk.aws.kms"
                },
                "js": {
                  "npm": "@aws-cdk/aws-kms"
                }
              },
              "version": "0.7.3-beta"
            },
            "@aws-cdk/cdk": {
              "dependencies": {
                "@aws-cdk/cx-api": {
                  "targets": {
                    "dotnet": {
                      "namespace": "Amazon.CDK.CXAPI"
                    },
                    "java": {
                      "maven": {
                        "artifactId": "cxapi",
                        "groupId": "com.amazonaws.cdk"
                      },
                      "package": "com.amazonaws.cdk.cxapi"
                    },
                    "js": {
                      "npm": "@aws-cdk/cx-api"
                    }
                  },
                  "version": "0.7.3-beta"
                }
              },
              "targets": {
                "dotnet": {
                  "namespace": "Amazon.CDK"
                },
                "java": {
                  "maven": {
                    "artifactId": "cdk",
                    "groupId": "com.amazonaws.cdk"
                  },
                  "package": "com.amazonaws.cdk"
                },
                "js": {
                  "npm": "@aws-cdk/cdk"
                }
              },
              "version": "0.7.3-beta"
            }
          },
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.S3"
            },
            "java": {
              "maven": {
                "artifactId": "aws-s3",
                "groupId": "com.amazonaws.cdk"
              },
              "package": "com.amazonaws.cdk.aws.s3"
            },
            "js": {
              "npm": "@aws-cdk/aws-s3"
            }
          },
          "version": "0.7.3-beta"
        },
        "@aws-cdk/cdk": {
          "dependencies": {
            "@aws-cdk/cx-api": {
              "targets": {
                "dotnet": {
                  "namespace": "Amazon.CDK.CXAPI"
                },
                "java": {
                  "maven": {
                    "artifactId": "cxapi",
                    "groupId": "com.amazonaws.cdk"
                  },
                  "package": "com.amazonaws.cdk.cxapi"
                },
                "js": {
                  "npm": "@aws-cdk/cx-api"
                }
              },
              "version": "0.7.3-beta"
            }
          },
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK"
            },
            "java": {
              "maven": {
                "artifactId": "cdk",
                "groupId": "com.amazonaws.cdk"
              },
              "package": "com.amazonaws.cdk"
            },
            "js": {
              "npm": "@aws-cdk/cdk"
            }
          },
          "version": "0.7.3-beta"
        }
      },
      "targets": {
        "dotnet": {
          "namespace": "Amazon.CDK.AWS.Lambda"
        },
        "java": {
          "maven": {
            "artifactId": "aws-lambda",
            "groupId": "com.amazonaws.cdk"
          },
          "package": "com.amazonaws.cdk.aws.lambda"
        },
        "js": {
          "npm": "@aws-cdk/aws-lambda"
        }
      },
      "version": "0.7.3-beta"
    },
    "@aws-cdk/aws-sqs": {
      "dependencies": {
        "@aws-cdk/aws-kms": {
          "dependencies": {
            "@aws-cdk/aws-iam": {
              "dependencies": {
                "@aws-cdk/cdk": {
                  "dependencies": {
                    "@aws-cdk/cx-api": {
                      "targets": {
                        "dotnet": {
                          "namespace": "Amazon.CDK.CXAPI"
                        },
                        "java": {
                          "maven": {
                            "artifactId": "cxapi",
                            "groupId": "com.amazonaws.cdk"
                          },
                          "package": "com.amazonaws.cdk.cxapi"
                        },
                        "js": {
                          "npm": "@aws-cdk/cx-api"
                        }
                      },
                      "version": "0.7.3-beta"
                    }
                  },
                  "targets": {
                    "dotnet": {
                      "namespace": "Amazon.CDK"
                    },
                    "java": {
                      "maven": {
                        "artifactId": "cdk",
                        "groupId": "com.amazonaws.cdk"
                      },
                      "package": "com.amazonaws.cdk"
                    },
                    "js": {
                      "npm": "@aws-cdk/cdk"
                    }
                  },
                  "version": "0.7.3-beta"
                }
              },
              "targets": {
                "dotnet": {
                  "namespace": "Amazon.CDK.AWS.IAM"
                },
                "java": {
                  "maven": {
                    "artifactId": "aws-iam",
                    "groupId": "com.amazonaws.cdk"
                  },
                  "package": "com.amazonaws.cdk.aws.iam"
                },
                "js": {
                  "npm": "@aws-cdk/aws-iam"
                }
              },
              "version": "0.7.3-beta"
            },
            "@aws-cdk/cdk": {
              "dependencies": {
                "@aws-cdk/cx-api": {
                  "targets": {
                    "dotnet": {
                      "namespace": "Amazon.CDK.CXAPI"
                    },
                    "java": {
                      "maven": {
                        "artifactId": "cxapi",
                        "groupId": "com.amazonaws.cdk"
                      },
                      "package": "com.amazonaws.cdk.cxapi"
                    },
                    "js": {
                      "npm": "@aws-cdk/cx-api"
                    }
                  },
                  "version": "0.7.3-beta"
                }
              },
              "targets": {
                "dotnet": {
                  "namespace": "Amazon.CDK"
                },
                "java": {
                  "maven": {
                    "artifactId": "cdk",
                    "groupId": "com.amazonaws.cdk"
                  },
                  "package": "com.amazonaws.cdk"
                },
                "js": {
                  "npm": "@aws-cdk/cdk"
                }
              },
              "version": "0.7.3-beta"
            }
          },
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.KMS"
            },
            "java": {
              "maven": {
                "artifactId": "aws-kms",
                "groupId": "com.amazonaws.cdk"
              },
              "package": "com.amazonaws.cdk.aws.kms"
            },
            "js": {
              "npm": "@aws-cdk/aws-kms"
            }
          },
          "version": "0.7.3-beta"
        },
        "@aws-cdk/cdk": {
          "dependencies": {
            "@aws-cdk/cx-api": {
              "targets": {
                "dotnet": {
                  "namespace": "Amazon.CDK.CXAPI"
                },
                "java": {
                  "maven": {
                    "artifactId": "cxapi",
                    "groupId": "com.amazonaws.cdk"
                  },
                  "package": "com.amazonaws.cdk.cxapi"
                },
                "js": {
                  "npm": "@aws-cdk/cx-api"
                }
              },
              "version": "0.7.3-beta"
            }
          },
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK"
            },
            "java": {
              "maven": {
                "artifactId": "cdk",
                "groupId": "com.amazonaws.cdk"
              },
              "package": "com.amazonaws.cdk"
            },
            "js": {
              "npm": "@aws-cdk/cdk"
            }
          },
          "version": "0.7.3-beta"
        }
      },
      "targets": {
        "dotnet": {
          "namespace": "Amazon.CDK.AWS.SQS"
        },
        "java": {
          "maven": {
            "artifactId": "aws-sqs",
            "groupId": "com.amazonaws.cdk"
          },
          "package": "com.amazonaws.cdk.aws.sqs"
        },
        "js": {
          "npm": "@aws-cdk/aws-sqs"
        }
      },
      "version": "0.7.3-beta"
    },
    "@aws-cdk/cdk": {
      "dependencies": {
        "@aws-cdk/cx-api": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.CXAPI"
            },
            "java": {
              "maven": {
                "artifactId": "cxapi",
                "groupId": "com.amazonaws.cdk"
              },
              "package": "com.amazonaws.cdk.cxapi"
            },
            "js": {
              "npm": "@aws-cdk/cx-api"
            }
          },
          "version": "0.7.3-beta"
        }
      },
      "targets": {
        "dotnet": {
          "namespace": "Amazon.CDK"
        },
        "java": {
          "maven": {
            "artifactId": "cdk",
            "groupId": "com.amazonaws.cdk"
          },
          "package": "com.amazonaws.cdk"
        },
        "js": {
          "npm": "@aws-cdk/cdk"
        }
      },
      "version": "0.7.3-beta"
    }
  },
  "externals": {
    "@aws-cdk/aws-cloudwatch.IAlarmAction": {
      "assembly": "@aws-cdk/aws-cloudwatch",
      "datatype": true,
      "docs": {
        "comment": "Interface for objects that can be the targets of CloudWatch alarm actions"
      },
      "fqn": "@aws-cdk/aws-cloudwatch.IAlarmAction",
      "kind": "interface",
      "name": "IAlarmAction",
      "namespace": "@aws-cdk/aws-cloudwatch",
      "properties": [
        {
          "docs": {
            "comment": "Return the ARN that should be used for a CloudWatch Alarm action"
          },
          "immutable": true,
          "name": "alarmActionArn",
          "type": {
            "fqn": "@aws-cdk/cdk.Arn"
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudwatch.Metric": {
      "assembly": "@aws-cdk/aws-cloudwatch",
      "docs": {
        "comment": "A metric emitted by a service\n\nThe metric is a combination of a metric identifier (namespace, name and dimensions)\nand an aggregation function (statistic, period and unit).\n\nIt also contains metadata which is used only in graphs, such as color and label.\nIt makes sense to embed this in here, so that compound constructs can attach\nthat metadata to metrics they expose.\n\nThis class does not represent a resource, so hence is not a construct. Instead,\nMetric is an abstraction that makes it easy to specify metrics for use in both\nalarms and graphs."
      },
      "fqn": "@aws-cdk/aws-cloudwatch.Metric",
      "initializer": {
        "initializer": true,
        "parameters": [
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.MetricProps"
            }
          }
        ]
      },
      "kind": "class",
      "methods": [
        {
          "docs": {
            "comment": "Grant permissions to the given identity to write metrics."
          },
          "name": "grantPutMetricData",
          "parameters": [
            {
              "docs": {
                "comment": "The IAM identity to give permissions to."
              },
              "name": "identity",
              "type": {
                "fqn": "@aws-cdk/aws-iam.IIdentityResource",
                "optional": true
              }
            }
          ],
          "static": true
        },
        {
          "docs": {
            "comment": "Return a copy of Metric with properties changed.\n\nAll properties except namespace and metricName can be changed."
          },
          "name": "with",
          "parameters": [
            {
              "docs": {
                "comment": "The set of properties to change."
              },
              "name": "props",
              "type": {
                "fqn": "@aws-cdk/aws-cloudwatch.MetricCustomization"
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/aws-cloudwatch.Metric"
          }
        },
        {
          "docs": {
            "comment": "Make a new Alarm for this metric\n\nCombines both properties that may adjust the metric (aggregation) as well\nas alarm properties."
          },
          "name": "newAlarm",
          "parameters": [
            {
              "name": "parent",
              "type": {
                "fqn": "@aws-cdk/cdk.Construct"
              }
            },
            {
              "name": "name",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "props",
              "type": {
                "fqn": "@aws-cdk/aws-cloudwatch.NewAlarmProps"
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/aws-cloudwatch.Alarm"
          }
        },
        {
          "docs": {
            "comment": "Return the dimensions of this Metric as a list of Dimension."
          },
          "name": "dimensionsAsList",
          "returns": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-cloudwatch.Dimension"
              },
              "kind": "array"
            }
          }
        }
      ],
      "name": "Metric",
      "namespace": "@aws-cdk/aws-cloudwatch",
      "properties": [
        {
          "immutable": true,
          "name": "dimensions",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            },
            "optional": true
          }
        },
        {
          "immutable": true,
          "name": "namespace",
          "type": {
            "primitive": "string"
          }
        },
        {
          "immutable": true,
          "name": "metricName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "immutable": true,
          "name": "periodSec",
          "type": {
            "primitive": "number"
          }
        },
        {
          "immutable": true,
          "name": "statistic",
          "type": {
            "primitive": "string"
          }
        },
        {
          "immutable": true,
          "name": "unit",
          "type": {
            "fqn": "@aws-cdk/aws-cloudwatch.Unit",
            "optional": true
          }
        },
        {
          "immutable": true,
          "name": "label",
          "type": {
            "optional": true,
            "primitive": "string"
          }
        },
        {
          "immutable": true,
          "name": "color",
          "type": {
            "optional": true,
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudwatch.MetricCustomization": {
      "assembly": "@aws-cdk/aws-cloudwatch",
      "datatype": true,
      "docs": {
        "comment": "Properties of a metric that can be changed"
      },
      "fqn": "@aws-cdk/aws-cloudwatch.MetricCustomization",
      "kind": "interface",
      "name": "MetricCustomization",
      "namespace": "@aws-cdk/aws-cloudwatch",
      "properties": [
        {
          "docs": {
            "comment": "Dimensions of the metric",
            "default": "No dimensions"
          },
          "name": "dimensions",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            },
            "optional": true
          }
        },
        {
          "docs": {
            "comment": "The period over which the specified statistic is applied.\n\nSpecify time in seconds, in multiples of 60.",
            "default": "300"
          },
          "name": "periodSec",
          "type": {
            "optional": true,
            "primitive": "number"
          }
        },
        {
          "docs": {
            "comment": "What function to use for aggregating.\n\nCan be one of the following:\n\n- \"Minimum\" | \"min\"\n- \"Maximum\" | \"max\"\n- \"Average\" | \"avg\"\n- \"Sum\" | \"sum\"\n- \"SampleCount | \"n\"\n- \"pNN.NN\"",
            "default": "Average"
          },
          "name": "statistic",
          "type": {
            "optional": true,
            "primitive": "string"
          }
        },
        {
          "docs": {
            "comment": "Unit for the metric that is associated with the alarm"
          },
          "name": "unit",
          "type": {
            "fqn": "@aws-cdk/aws-cloudwatch.Unit",
            "optional": true
          }
        },
        {
          "docs": {
            "comment": "Label for this metric when added to a Graph in a Dashboard"
          },
          "name": "label",
          "type": {
            "optional": true,
            "primitive": "string"
          }
        },
        {
          "docs": {
            "comment": "Color for this metric when added to a Graph in a Dashboard"
          },
          "name": "color",
          "type": {
            "optional": true,
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-events.EventRuleTarget": {
      "assembly": "@aws-cdk/aws-events",
      "datatype": true,
      "fqn": "@aws-cdk/aws-events.EventRuleTarget",
      "kind": "interface",
      "name": "EventRuleTarget",
      "namespace": "@aws-cdk/aws-events",
      "properties": [
        {
          "docs": {
            "comment": "A unique, user-defined identifier for the target. Acceptable values\ninclude alphanumeric characters, periods (.), hyphens (-), and\nunderscores (_)."
          },
          "name": "id",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "comment": "The Amazon Resource Name (ARN) of the target."
          },
          "name": "arn",
          "type": {
            "fqn": "@aws-cdk/cdk.Arn"
          }
        },
        {
          "docs": {
            "comment": "The Amazon Resource Name (ARN) of the AWS Identity and Access Management\n(IAM) role to use for this target when the rule is triggered. If one rule\ntriggers multiple targets, you can use a different IAM role for each\ntarget."
          },
          "name": "roleArn",
          "type": {
            "fqn": "@aws-cdk/aws-iam.RoleArn",
            "optional": true
          }
        },
        {
          "docs": {
            "comment": "The Amazon ECS task definition and task count to use, if the event target\nis an Amazon ECS task."
          },
          "name": "ecsParameters",
          "type": {
            "fqn": "@aws-cdk/aws-events.cloudformation.RuleResource.EcsParametersProperty",
            "optional": true
          }
        },
        {
          "docs": {
            "comment": "Settings that control shard assignment, when the target is a Kinesis\nstream. If you don't include this parameter, eventId is used as the\npartition key."
          },
          "name": "kinesisParameters",
          "type": {
            "fqn": "@aws-cdk/aws-events.cloudformation.RuleResource.KinesisParametersProperty",
            "optional": true
          }
        },
        {
          "docs": {
            "comment": "Parameters used when the rule invokes Amazon EC2 Systems Manager Run\nCommand."
          },
          "name": "runCommandParameters",
          "type": {
            "fqn": "@aws-cdk/aws-events.cloudformation.RuleResource.RunCommandParametersProperty",
            "optional": true
          }
        }
      ]
    },
    "@aws-cdk/aws-events.IEventRuleTargetProps": {
      "assembly": "@aws-cdk/aws-events",
      "datatype": true,
      "docs": {
        "comment": "An abstract target for EventRules."
      },
      "fqn": "@aws-cdk/aws-events.IEventRuleTargetProps",
      "kind": "interface",
      "name": "IEventRuleTargetProps",
      "namespace": "@aws-cdk/aws-events",
      "properties": [
        {
          "docs": {
            "comment": "Returns the rule target specification.\nNOTE: Do not use the various `inputXxx` options. They can be set in a call to `addTarget`."
          },
          "immutable": true,
          "name": "eventRuleTarget",
          "type": {
            "fqn": "@aws-cdk/aws-events.EventRuleTarget"
          }
        }
      ]
    },
    "@aws-cdk/aws-iam.IIdentityResource": {
      "assembly": "@aws-cdk/aws-iam",
      "docs": {
        "deprecated": "Use IPrincipal"
      },
      "fqn": "@aws-cdk/aws-iam.IIdentityResource",
      "interfaces": [
        {
          "fqn": "@aws-cdk/aws-iam.IPrincipal"
        }
      ],
      "kind": "interface",
      "name": "IIdentityResource",
      "namespace": "@aws-cdk/aws-iam"
    },
    "@aws-cdk/aws-iam.IPrincipal": {
      "assembly": "@aws-cdk/aws-iam",
      "docs": {
        "comment": "A construct that represents an IAM principal, such as a user, group or role."
      },
      "fqn": "@aws-cdk/aws-iam.IPrincipal",
      "kind": "interface",
      "methods": [
        {
          "docs": {
            "comment": "Adds an IAM statement to the default inline policy associated with this\nprincipal. If a policy doesn't exist, it is created."
          },
          "name": "addToPolicy",
          "parameters": [
            {
              "name": "statement",
              "type": {
                "fqn": "@aws-cdk/cdk.PolicyStatement"
              }
            }
          ]
        },
        {
          "docs": {
            "comment": "Attaches an inline policy to this principal.\nThis is the same as calling `policy.addToXxx(principal)`."
          },
          "name": "attachInlinePolicy",
          "parameters": [
            {
              "docs": {
                "comment": "The policy resource to attach to this principal."
              },
              "name": "policy",
              "type": {
                "fqn": "@aws-cdk/aws-iam.Policy"
              }
            }
          ]
        },
        {
          "docs": {
            "comment": "Attaches a managed policy to this principal."
          },
          "name": "attachManagedPolicy",
          "parameters": [
            {
              "docs": {
                "comment": "The ARN of the managed policy"
              },
              "name": "arn",
              "type": {
                "primitive": "any"
              }
            }
          ]
        }
      ],
      "name": "IPrincipal",
      "namespace": "@aws-cdk/aws-iam",
      "properties": [
        {
          "docs": {
            "comment": "The IAM principal of this identity (i.e. AWS principal, service principal, etc)."
          },
          "immutable": true,
          "name": "principal",
          "type": {
            "fqn": "@aws-cdk/cdk.PolicyPrincipal"
          }
        }
      ]
    },
    "@aws-cdk/aws-lambda.LambdaRef": {
      "abstract": true,
      "assembly": "@aws-cdk/aws-lambda",
      "base": {
        "fqn": "@aws-cdk/cdk.Construct"
      },
      "fqn": "@aws-cdk/aws-lambda.LambdaRef",
      "initializer": {
        "docs": {
          "comment": "Creates a new construct node."
        },
        "initializer": true,
        "parameters": [
          {
            "docs": {
              "comment": "The parent construct"
            },
            "name": "parent",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "name": "name",
            "type": {
              "primitive": "string"
            }
          }
        ]
      },
      "interfaces": [
        {
          "fqn": "@aws-cdk/aws-events.IEventRuleTargetProps"
        },
        {
          "fqn": "@aws-cdk/aws-logs.ILogSubscriptionDestination"
        }
      ],
      "kind": "class",
      "methods": [
        {
          "docs": {
            "comment": "Creates a Lambda function object which represents a function not defined\nwithin this stack.\n\n      Lambda.import(this, 'MyImportedFunction', { lambdaArn: new LambdaArn('arn:aws:...') });"
          },
          "name": "import",
          "parameters": [
            {
              "docs": {
                "comment": "The parent construct"
              },
              "name": "parent",
              "type": {
                "fqn": "@aws-cdk/cdk.Construct"
              }
            },
            {
              "docs": {
                "comment": "The name of the lambda construct"
              },
              "name": "name",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "comment": "A reference to a Lambda function. Can be created manually (see\nexample above) or obtained through a call to `lambda.export()`."
              },
              "name": "ref",
              "type": {
                "fqn": "@aws-cdk/aws-lambda.LambdaRefProps"
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/aws-lambda.LambdaRef"
          },
          "static": true
        },
        {
          "docs": {
            "comment": "Return the given named metric for this Lambda"
          },
          "name": "metricAll",
          "parameters": [
            {
              "name": "metricName",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "props",
              "type": {
                "fqn": "@aws-cdk/aws-cloudwatch.MetricCustomization",
                "optional": true
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/aws-cloudwatch.Metric"
          },
          "static": true
        },
        {
          "docs": {
            "comment": "Metric for the number of Errors executing all Lambdas",
            "default": "sum over 5 minutes"
          },
          "name": "metricAllErrors",
          "parameters": [
            {
              "name": "props",
              "type": {
                "fqn": "@aws-cdk/aws-cloudwatch.MetricCustomization",
                "optional": true
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/aws-cloudwatch.Metric"
          },
          "static": true
        },
        {
          "docs": {
            "comment": "Metric for the Duration executing all Lambdas",
            "default": "average over 5 minutes"
          },
          "name": "metricAllDuration",
          "parameters": [
            {
              "name": "props",
              "type": {
                "fqn": "@aws-cdk/aws-cloudwatch.MetricCustomization",
                "optional": true
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/aws-cloudwatch.Metric"
          },
          "static": true
        },
        {
          "docs": {
            "comment": "Metric for the number of invocations of all Lambdas",
            "default": "sum over 5 minutes"
          },
          "name": "metricAllInvocations",
          "parameters": [
            {
              "name": "props",
              "type": {
                "fqn": "@aws-cdk/aws-cloudwatch.MetricCustomization",
                "optional": true
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/aws-cloudwatch.Metric"
          },
          "static": true
        },
        {
          "docs": {
            "comment": "Metric for the number of throttled invocations of all Lambdas",
            "default": "sum over 5 minutes"
          },
          "name": "metricAllThrottles",
          "parameters": [
            {
              "name": "props",
              "type": {
                "fqn": "@aws-cdk/aws-cloudwatch.MetricCustomization",
                "optional": true
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/aws-cloudwatch.Metric"
          },
          "static": true
        },
        {
          "docs": {
            "comment": "Metric for the number of concurrent executions across all Lambdas",
            "default": "max over 5 minutes"
          },
          "name": "metricAllConcurrentExecutions",
          "parameters": [
            {
              "name": "props",
              "type": {
                "fqn": "@aws-cdk/aws-cloudwatch.MetricCustomization",
                "optional": true
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/aws-cloudwatch.Metric"
          },
          "static": true
        },
        {
          "docs": {
            "comment": "Metric for the number of unreserved concurrent executions across all Lambdas",
            "default": "max over 5 minutes"
          },
          "name": "metricAllUnreservedConcurrentExecutions",
          "parameters": [
            {
              "name": "props",
              "type": {
                "fqn": "@aws-cdk/aws-cloudwatch.MetricCustomization",
                "optional": true
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/aws-cloudwatch.Metric"
          },
          "static": true
        },
        {
          "docs": {
            "comment": "Adds a permission to the Lambda resource policy."
          },
          "name": "addPermission",
          "parameters": [
            {
              "docs": {
                "comment": "A name for the permission construct"
              },
              "name": "name",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "permission",
              "type": {
                "fqn": "@aws-cdk/aws-lambda.LambdaPermission"
              }
            }
          ]
        },
        {
          "name": "addToRolePolicy",
          "parameters": [
            {
              "name": "statement",
              "type": {
                "fqn": "@aws-cdk/cdk.PolicyStatement"
              }
            }
          ]
        },
        {
          "docs": {
            "comment": "Return the given named metric for this Lambda"
          },
          "name": "metric",
          "parameters": [
            {
              "name": "metricName",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "props",
              "type": {
                "fqn": "@aws-cdk/aws-cloudwatch.MetricCustomization",
                "optional": true
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/aws-cloudwatch.Metric"
          }
        },
        {
          "docs": {
            "comment": "Metric for the Errors executing this Lambda",
            "default": "sum over 5 minutes"
          },
          "name": "metricErrors",
          "parameters": [
            {
              "name": "props",
              "type": {
                "fqn": "@aws-cdk/aws-cloudwatch.MetricCustomization",
                "optional": true
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/aws-cloudwatch.Metric"
          }
        },
        {
          "docs": {
            "comment": "Metric for the Duration of this Lambda",
            "default": "average over 5 minutes"
          },
          "name": "metricDuration",
          "parameters": [
            {
              "name": "props",
              "type": {
                "fqn": "@aws-cdk/aws-cloudwatch.MetricCustomization",
                "optional": true
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/aws-cloudwatch.Metric"
          }
        },
        {
          "docs": {
            "comment": "Metric for the number of invocations of this Lambda",
            "default": "sum over 5 minutes"
          },
          "name": "metricInvocations",
          "parameters": [
            {
              "name": "props",
              "type": {
                "fqn": "@aws-cdk/aws-cloudwatch.MetricCustomization",
                "optional": true
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/aws-cloudwatch.Metric"
          }
        },
        {
          "docs": {
            "comment": "Metric for the number of throttled invocations of this Lambda",
            "default": "sum over 5 minutes"
          },
          "name": "metricThrottles",
          "parameters": [
            {
              "name": "props",
              "type": {
                "fqn": "@aws-cdk/aws-cloudwatch.MetricCustomization",
                "optional": true
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/aws-cloudwatch.Metric"
          }
        },
        {
          "docs": {
            "comment": "Return the properties required to send subscription events to this destination.\n\nIf necessary, the destination can use the properties of the SubscriptionFilter\nobject itself to configure its permissions to allow the subscription to write\nto it.\n\nThe destination may reconfigure its own permissions in response to this\nfunction call."
          },
          "name": "logSubscriptionDestination",
          "parameters": [
            {
              "name": "sourceLogGroup",
              "type": {
                "fqn": "@aws-cdk/aws-logs.LogGroup"
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/aws-logs.LogSubscriptionDestination"
          }
        },
        {
          "docs": {
            "comment": "Export this Function (without the role)"
          },
          "name": "export",
          "returns": {
            "fqn": "@aws-cdk/aws-lambda.LambdaRefProps"
          }
        }
      ],
      "name": "LambdaRef",
      "namespace": "@aws-cdk/aws-lambda",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "comment": "The name of the function."
          },
          "immutable": true,
          "name": "functionName",
          "type": {
            "fqn": "@aws-cdk/aws-lambda.FunctionName"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "The ARN fo the function."
          },
          "immutable": true,
          "name": "functionArn",
          "type": {
            "fqn": "@aws-cdk/aws-lambda.FunctionArn"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "The IAM role associated with this function."
          },
          "immutable": true,
          "name": "role",
          "type": {
            "fqn": "@aws-cdk/aws-iam.Role",
            "optional": true
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "Whether the addPermission() call adds any permissions\n\nTrue for new Lambdas, false for imported Lambdas (they might live in different accounts)."
          },
          "immutable": true,
          "name": "canCreatePermissions",
          "protected": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "docs": {
            "comment": "Returns a RuleTarget that can be used to trigger this Lambda as a\nresult from a CloudWatch event."
          },
          "immutable": true,
          "name": "eventRuleTarget",
          "type": {
            "fqn": "@aws-cdk/aws-events.EventRuleTarget"
          }
        }
      ]
    },
    "@aws-cdk/aws-logs.ILogSubscriptionDestination": {
      "assembly": "@aws-cdk/aws-logs",
      "docs": {
        "comment": "Interface for classes that can be the destination of a log Subscription"
      },
      "fqn": "@aws-cdk/aws-logs.ILogSubscriptionDestination",
      "kind": "interface",
      "methods": [
        {
          "docs": {
            "comment": "Return the properties required to send subscription events to this destination.\n\nIf necessary, the destination can use the properties of the SubscriptionFilter\nobject itself to configure its permissions to allow the subscription to write\nto it.\n\nThe destination may reconfigure its own permissions in response to this\nfunction call."
          },
          "name": "logSubscriptionDestination",
          "parameters": [
            {
              "name": "sourceLogGroup",
              "type": {
                "fqn": "@aws-cdk/aws-logs.LogGroup"
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/aws-logs.LogSubscriptionDestination"
          }
        }
      ],
      "name": "ILogSubscriptionDestination",
      "namespace": "@aws-cdk/aws-logs"
    },
    "@aws-cdk/aws-sqs.QueueRef": {
      "abstract": true,
      "assembly": "@aws-cdk/aws-sqs",
      "base": {
        "fqn": "@aws-cdk/cdk.Construct"
      },
      "docs": {
        "comment": "Reference to a new or existing Amazon SQS queue"
      },
      "fqn": "@aws-cdk/aws-sqs.QueueRef",
      "initializer": {
        "docs": {
          "comment": "Creates a new construct node."
        },
        "initializer": true,
        "parameters": [
          {
            "docs": {
              "comment": "The parent construct"
            },
            "name": "parent",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "name": "name",
            "type": {
              "primitive": "string"
            }
          }
        ]
      },
      "kind": "class",
      "methods": [
        {
          "docs": {
            "comment": "Import an existing queue"
          },
          "name": "import",
          "parameters": [
            {
              "name": "parent",
              "type": {
                "fqn": "@aws-cdk/cdk.Construct"
              }
            },
            {
              "name": "name",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "props",
              "type": {
                "fqn": "@aws-cdk/aws-sqs.QueueRefProps"
              }
            }
          ],
          "static": true
        },
        {
          "docs": {
            "comment": "Export a queue"
          },
          "name": "export",
          "returns": {
            "fqn": "@aws-cdk/aws-sqs.QueueRefProps"
          }
        },
        {
          "docs": {
            "comment": "Adds a statement to the IAM resource policy associated with this queue.\n\nIf this queue was created in this stack (`new Queue`), a queue policy\nwill be automatically created upon the first call to `addToPolicy`. If\nthe queue is improted (`Queue.import`), then this is a no-op."
          },
          "name": "addToResourcePolicy",
          "parameters": [
            {
              "name": "statement",
              "type": {
                "fqn": "@aws-cdk/cdk.PolicyStatement"
              }
            }
          ]
        }
      ],
      "name": "QueueRef",
      "namespace": "@aws-cdk/aws-sqs",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "comment": "The ARN of this queue"
          },
          "immutable": true,
          "name": "queueArn",
          "type": {
            "fqn": "@aws-cdk/aws-sqs.QueueArn"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "The URL of this queue"
          },
          "immutable": true,
          "name": "queueUrl",
          "type": {
            "fqn": "@aws-cdk/aws-sqs.QueueUrl"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "Controls automatic creation of policy objects.\n\nSet by subclasses."
          },
          "immutable": true,
          "name": "autoCreatePolicy",
          "protected": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ]
    },
    "@aws-cdk/cdk.Arn": {
      "assembly": "@aws-cdk/cdk",
      "base": {
        "fqn": "@aws-cdk/cdk.Token"
      },
      "docs": {
        "comment": "An Amazon Resource Name (ARN).\nhttp://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html"
      },
      "fqn": "@aws-cdk/cdk.Arn",
      "initializer": {
        "docs": {
          "comment": "Creates a token that resolves to `value`. If value is a function,\nthe function is evaluated upon resolution and the value it returns will be\nuesd as the token's value."
        },
        "initializer": true,
        "parameters": [
          {
            "name": "valueOrFunction",
            "type": {
              "optional": true,
              "primitive": "any"
            }
          }
        ]
      },
      "kind": "class",
      "methods": [
        {
          "docs": {
            "comment": "Creates an ARN from components.\nIf any component is the empty string,\nan empty string will be inserted into the generated ARN\nat the location that component corresponds to."
          },
          "name": "fromComponents",
          "parameters": [
            {
              "name": "components",
              "type": {
                "fqn": "@aws-cdk/cdk.ArnComponents"
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/cdk.Arn"
          },
          "static": true
        },
        {
          "docs": {
            "comment": "Given an ARN, parses it and returns components.\n\nThe ARN it will be parsed and validated. The separator (`sep`) will be\nset to '/' if the 6th component includes a '/', in which case, `resource`\nwill be set to the value before the '/' and `resourceName` will be the\nrest. In case there is no '/', `resource` will be set to the 6th\ncomponents and `resourceName` will be set to the rest of the string.",
            "returns": "an ArnComponents object which allows access to the various\ncomponents of the ARN."
          },
          "name": "parse",
          "parameters": [
            {
              "name": "arn",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/cdk.ArnComponents"
          },
          "static": true
        },
        {
          "docs": {
            "comment": "Given a Token evaluating to ARN, parses it and returns components.\n\nThe ARN cannot be validated, since we don't have the actual value yet\nat the time of this function call. You will have to know the separator\nand the type of ARN.\n\nThe resulting `ArnComponents` object will contain tokens for the\nsubexpressions of the ARN, not string literals.\n\nWARNING: this function cannot properly parse the complete final\nresourceName (path) out of ARNs that use '/' to both separate the\n'resource' from the 'resourceName' AND to subdivide the resourceName\nfurther. For example, in S3 ARNs:\n\n      arn:aws:s3:::my_corporate_bucket/path/to/exampleobject.png\n\nAfter parsing the resourceName will not contain 'path/to/exampleobject.png'\nbut simply 'path'. This is a limitation because there is no slicing\nfunctionality in CloudFormation templates.",
            "returns": "an ArnComponents object which allows access to the various\ncomponents of the ARN."
          },
          "name": "parseToken",
          "parameters": [
            {
              "docs": {
                "comment": "The input token that contains an ARN"
              },
              "name": "arn",
              "type": {
                "fqn": "@aws-cdk/cdk.Token"
              }
            },
            {
              "docs": {
                "comment": "The separator used to separate resource from resourceName"
              },
              "name": "sep",
              "type": {
                "optional": true,
                "primitive": "string"
              }
            },
            {
              "docs": {
                "comment": "Whether there is a name component in the ARN at all.\nFor example, SNS Topics ARNs have the 'resource' component contain the\ntopic name, and no 'resourceName' component."
              },
              "name": "hasName",
              "type": {
                "optional": true,
                "primitive": "boolean"
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/cdk.ArnComponents"
          },
          "static": true
        }
      ],
      "name": "Arn",
      "namespace": "@aws-cdk/cdk"
    },
    "@aws-cdk/cdk.Construct": {
      "assembly": "@aws-cdk/cdk",
      "docs": {
        "comment": "Represents the building block of the construct graph.\nWhen a construct is created, it is always added as a child"
      },
      "fqn": "@aws-cdk/cdk.Construct",
      "initializer": {
        "docs": {
          "comment": "Creates a new construct node."
        },
        "initializer": true,
        "parameters": [
          {
            "docs": {
              "comment": "The parent construct"
            },
            "name": "parent",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "name": "name",
            "type": {
              "primitive": "string"
            }
          }
        ]
      },
      "kind": "class",
      "methods": [
        {
          "docs": {
            "comment": "Returns a string representation of this construct."
          },
          "name": "toString",
          "returns": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "comment": "Returns a string with a tree representation of this construct and it's children."
          },
          "name": "toTreeString",
          "parameters": [
            {
              "name": "depth",
              "type": {
                "optional": true,
                "primitive": "number"
              }
            }
          ],
          "returns": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "comment": "Return a descendant by path, or undefined",
            "returns": "a child by path or undefined if not found."
          },
          "name": "tryFindChild",
          "parameters": [
            {
              "name": "path",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/cdk.Construct",
            "optional": true
          }
        },
        {
          "docs": {
            "comment": "Return a descendant by path\n\nThrows an exception if the descendant is not found.",
            "returns": "Child with the given path."
          },
          "name": "findChild",
          "parameters": [
            {
              "name": "path",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/cdk.Construct"
          }
        },
        {
          "docs": {
            "comment": "This can be used to set contextual values.\nContext must be set before any children are added, since children may consult context info during construction.\nIf the key already exists, it will be overridden."
          },
          "name": "setContext",
          "parameters": [
            {
              "docs": {
                "comment": "The context key"
              },
              "name": "key",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "comment": "The context value"
              },
              "name": "value",
              "type": {
                "primitive": "any"
              }
            }
          ]
        },
        {
          "docs": {
            "comment": "Retrieves a value from tree context.\n\nContext is usually initialized at the root, but can be overridden at any point in the tree.",
            "returns": "The context value or undefined"
          },
          "name": "getContext",
          "parameters": [
            {
              "docs": {
                "comment": "The context key"
              },
              "name": "key",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "primitive": "any"
          }
        },
        {
          "docs": {
            "comment": "Retrieve a value from tree-global context\n\nIt is an error if the context object is not available."
          },
          "name": "requireContext",
          "parameters": [
            {
              "name": "key",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "primitive": "any"
          }
        },
        {
          "docs": {
            "comment": "Adds a metadata entry to this construct.\nEntries are arbitrary values and will also include a stack trace to allow tracing back to\nthe code location for when the entry was added. It can be used, for example, to include source\nmapping in CloudFormation templates to improve diagnostics."
          },
          "name": "addMetadata",
          "parameters": [
            {
              "docs": {
                "comment": "a string denoting the type of metadata"
              },
              "name": "type",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "comment": "the value of the metadata (can be a Token). If null/undefined, metadata will not be added."
              },
              "name": "data",
              "type": {
                "primitive": "any"
              }
            },
            {
              "docs": {
                "comment": "a function under which to restrict the metadata entry's stack trace (defaults to this.addMetadata)"
              },
              "name": "from",
              "type": {
                "optional": true,
                "primitive": "any"
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/cdk.Construct"
          }
        },
        {
          "docs": {
            "comment": "Adds a { \"aws:cdk:info\": <message> } metadata entry to this construct.\nThe toolkit will display the info message when apps are synthesized."
          },
          "name": "addInfo",
          "parameters": [
            {
              "docs": {
                "comment": "The info message."
              },
              "name": "message",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/cdk.Construct"
          }
        },
        {
          "docs": {
            "comment": "Adds a { warning: <message> } metadata entry to this construct.\nThe toolkit will display the warning when an app is synthesized, or fail\nif run in --strict mode."
          },
          "name": "addWarning",
          "parameters": [
            {
              "docs": {
                "comment": "The warning message."
              },
              "name": "message",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/cdk.Construct"
          }
        },
        {
          "docs": {
            "comment": "Adds an { error: <message> } metadata entry to this construct.\nThe toolkit will fail synthesis when errors are reported."
          },
          "name": "addError",
          "parameters": [
            {
              "docs": {
                "comment": "The error message."
              },
              "name": "message",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/cdk.Construct"
          }
        },
        {
          "docs": {
            "comment": "This method can be implemented by derived constructs in order to perform\nvalidation logic. It is called on all constructs before synthesis.",
            "returns": "An array of validation error messages, or an empty array if there the construct is valid."
          },
          "name": "validate",
          "returns": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "comment": "Invokes 'validate' on all child constructs and then on this construct (depth-first).",
            "returns": "A list of validation errors. If the list is empty, all constructs are valid."
          },
          "name": "validateTree",
          "returns": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/cdk.ValidationError"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "comment": "Return the ancestors (including self) of this Construct up until and excluding the indicated component"
          },
          "name": "ancestors",
          "parameters": [
            {
              "name": "upTo",
              "type": {
                "fqn": "@aws-cdk/cdk.Construct",
                "optional": true
              }
            }
          ],
          "protected": true,
          "returns": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/cdk.Construct"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "aws": "-cdk/runtime`` instead.",
            "comment": "Throws if the `props` bag doesn't include the property `name`.\nIn the future we can add some type-checking here, maybe even auto-generate during compilation.",
            "deprecated": "use ``requireProperty`` from ``"
          },
          "name": "required",
          "parameters": [
            {
              "docs": {
                "comment": "The props bag."
              },
              "name": "props",
              "type": {
                "primitive": "any"
              }
            },
            {
              "docs": {
                "comment": "The name of the required property."
              },
              "name": "name",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "protected": true,
          "returns": {
            "primitive": "any"
          }
        },
        {
          "docs": {
            "comment": "Adds a child construct to this node.",
            "returns": "The resolved path part name of the child"
          },
          "name": "addChild",
          "parameters": [
            {
              "docs": {
                "comment": "The child construct"
              },
              "name": "child",
              "type": {
                "fqn": "@aws-cdk/cdk.Construct"
              }
            },
            {
              "name": "childName",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "protected": true
        },
        {
          "docs": {
            "comment": "Locks this construct from allowing more children to be added. After this\ncall, no more children can be added to this construct or to any children."
          },
          "name": "lock",
          "protected": true
        },
        {
          "docs": {
            "comment": "Unlocks this costruct and allows mutations (adding children)."
          },
          "name": "unlock",
          "protected": true
        }
      ],
      "name": "Construct",
      "namespace": "@aws-cdk/cdk",
      "properties": [
        {
          "docs": {
            "comment": "Returns the parent of this node or undefined if this is a root node."
          },
          "immutable": true,
          "name": "parent",
          "type": {
            "fqn": "@aws-cdk/cdk.Construct",
            "optional": true
          }
        },
        {
          "docs": {
            "comment": "The name of this construct"
          },
          "immutable": true,
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "comment": "All direct children of this construct."
          },
          "immutable": true,
          "name": "children",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/cdk.Construct"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "comment": "Returns the path of all constructs from root to this construct, in string form.",
            "returns": "/-separated path of this Construct."
          },
          "immutable": true,
          "name": "path",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "comment": "An array of metadata objects associated with this construct.\nThis can be used, for example, to implement support for deprecation notices, source mapping, etc."
          },
          "immutable": true,
          "name": "metadata",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/cdk.MetadataEntry"
              },
              "kind": "array"
            }
          }
        }
      ]
    },
    "@aws-cdk/cdk.IDependable": {
      "assembly": "@aws-cdk/cdk",
      "datatype": true,
      "docs": {
        "comment": "Represents a construct that can be \"depended on\" via `addDependency`."
      },
      "fqn": "@aws-cdk/cdk.IDependable",
      "kind": "interface",
      "name": "IDependable",
      "namespace": "@aws-cdk/cdk",
      "properties": [
        {
          "docs": {
            "comment": "Returns the set of all stack elements (resources, parameters, conditions)\nthat should be added when a resource \"depends on\" this construct."
          },
          "immutable": true,
          "name": "dependencyElements",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/cdk.IDependable"
              },
              "kind": "array"
            }
          }
        }
      ]
    },
    "@aws-cdk/cdk.PolicyDocument": {
      "assembly": "@aws-cdk/cdk",
      "base": {
        "fqn": "@aws-cdk/cdk.Token"
      },
      "fqn": "@aws-cdk/cdk.PolicyDocument",
      "initializer": {
        "docs": {
          "comment": "Creates a new IAM policy document."
        },
        "initializer": true,
        "parameters": [
          {
            "name": "baseDocument",
            "type": {
              "optional": true,
              "primitive": "any"
            }
          }
        ]
      },
      "kind": "class",
      "methods": [
        {
          "name": "resolve",
          "returns": {
            "primitive": "any"
          }
        },
        {
          "name": "addStatement",
          "parameters": [
            {
              "name": "statement",
              "type": {
                "fqn": "@aws-cdk/cdk.PolicyStatement"
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/cdk.PolicyDocument"
          }
        }
      ],
      "name": "PolicyDocument",
      "namespace": "@aws-cdk/cdk",
      "properties": [
        {
          "immutable": true,
          "name": "isEmpty",
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "docs": {
            "comment": "The number of statements already added to this policy.\nCan be used, for example, to generate uniuqe \"sid\"s within the policy."
          },
          "immutable": true,
          "name": "statementCount",
          "type": {
            "primitive": "number"
          }
        }
      ]
    },
    "@aws-cdk/cdk.PolicyStatement": {
      "assembly": "@aws-cdk/cdk",
      "base": {
        "fqn": "@aws-cdk/cdk.Token"
      },
      "docs": {
        "comment": "Represents a statement in an IAM policy document."
      },
      "fqn": "@aws-cdk/cdk.PolicyStatement",
      "initializer": {
        "initializer": true,
        "parameters": [
          {
            "name": "effect",
            "type": {
              "fqn": "@aws-cdk/cdk.PolicyStatementEffect",
              "optional": true
            }
          }
        ]
      },
      "kind": "class",
      "methods": [
        {
          "name": "addAction",
          "parameters": [
            {
              "name": "action",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/cdk.PolicyStatement"
          }
        },
        {
          "name": "addActions",
          "parameters": [
            {
              "name": "actions",
              "type": {
                "primitive": "string"
              },
              "variadic": true
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/cdk.PolicyStatement"
          },
          "variadic": true
        },
        {
          "name": "addPrincipal",
          "parameters": [
            {
              "name": "principal",
              "type": {
                "fqn": "@aws-cdk/cdk.PolicyPrincipal"
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/cdk.PolicyStatement"
          }
        },
        {
          "name": "addAwsPrincipal",
          "parameters": [
            {
              "name": "arn",
              "type": {
                "primitive": "any"
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/cdk.PolicyStatement"
          }
        },
        {
          "name": "addAwsAccountPrincipal",
          "parameters": [
            {
              "name": "accountId",
              "type": {
                "primitive": "any"
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/cdk.PolicyStatement"
          }
        },
        {
          "name": "addServicePrincipal",
          "parameters": [
            {
              "name": "service",
              "type": {
                "primitive": "any"
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/cdk.PolicyStatement"
          }
        },
        {
          "name": "addFederatedPrincipal",
          "parameters": [
            {
              "name": "federated",
              "type": {
                "primitive": "any"
              }
            },
            {
              "name": "conditions",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/cdk.PolicyStatement"
          }
        },
        {
          "name": "addAccountRootPrincipal",
          "returns": {
            "fqn": "@aws-cdk/cdk.PolicyStatement"
          }
        },
        {
          "name": "addResource",
          "parameters": [
            {
              "name": "resource",
              "type": {
                "primitive": "any"
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/cdk.PolicyStatement"
          }
        },
        {
          "docs": {
            "comment": "Adds a ``\"*\"`` resource to this statement."
          },
          "name": "addAllResources",
          "returns": {
            "fqn": "@aws-cdk/cdk.PolicyStatement"
          }
        },
        {
          "name": "addResources",
          "parameters": [
            {
              "name": "resources",
              "type": {
                "primitive": "any"
              },
              "variadic": true
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/cdk.PolicyStatement"
          },
          "variadic": true
        },
        {
          "name": "describe",
          "parameters": [
            {
              "name": "sid",
              "type": {
                "primitive": "any"
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/cdk.PolicyStatement"
          }
        },
        {
          "docs": {
            "comment": "Sets the permission effect to deny access to resources."
          },
          "name": "allow",
          "returns": {
            "fqn": "@aws-cdk/cdk.PolicyStatement"
          }
        },
        {
          "docs": {
            "comment": "Sets the permission effect to allow access to resources."
          },
          "name": "deny",
          "returns": {
            "fqn": "@aws-cdk/cdk.PolicyStatement"
          }
        },
        {
          "docs": {
            "comment": "Add a condition to the Policy"
          },
          "name": "addCondition",
          "parameters": [
            {
              "name": "key",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "value",
              "type": {
                "primitive": "any"
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/cdk.PolicyStatement"
          }
        },
        {
          "docs": {
            "comment": "Add multiple conditions to the Policy"
          },
          "name": "addConditions",
          "parameters": [
            {
              "name": "conditions",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/cdk.PolicyStatement"
          }
        },
        {
          "docs": {
            "comment": "Add a condition to the Policy.",
            "deprecated": "For backwards compatibility. Use addCondition() instead."
          },
          "name": "setCondition",
          "parameters": [
            {
              "name": "key",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "value",
              "type": {
                "primitive": "any"
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/cdk.PolicyStatement"
          }
        },
        {
          "name": "limitToAccount",
          "parameters": [
            {
              "name": "accountId",
              "type": {
                "primitive": "any"
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/cdk.PolicyStatement"
          }
        },
        {
          "name": "resolve",
          "returns": {
            "primitive": "any"
          }
        },
        {
          "name": "toJson",
          "returns": {
            "primitive": "any"
          }
        }
      ],
      "name": "PolicyStatement",
      "namespace": "@aws-cdk/cdk",
      "properties": [
        {
          "docs": {
            "comment": "Indicates if this permission has a \"Principal\" section."
          },
          "immutable": true,
          "name": "hasPrincipal",
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "docs": {
            "comment": "Indicates if this permission as at least one resource associated with it."
          },
          "immutable": true,
          "name": "hasResource",
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "docs": {
            "comment": "Indicates if this permission has only a ``\"*\"`` resource associated with it."
          },
          "immutable": true,
          "name": "isOnlyStarResource",
          "type": {
            "primitive": "boolean"
          }
        }
      ]
    },
    "@aws-cdk/cdk.Referenceable": {
      "abstract": true,
      "assembly": "@aws-cdk/cdk",
      "base": {
        "fqn": "@aws-cdk/cdk.StackElement"
      },
      "docs": {
        "comment": "A construct, which is part of a stack and can be referenced using it's logical ID\nusing the CloudFormation intrinsic function { Ref: ID }."
      },
      "fqn": "@aws-cdk/cdk.Referenceable",
      "initializer": {
        "docs": {
          "comment": "Creates an entity and binds it to a tree.\nNote that the root of the tree must be a Stack object (not just any Root)."
        },
        "initializer": true,
        "parameters": [
          {
            "docs": {
              "comment": "The parent construct"
            },
            "name": "parent",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "name": "name",
            "type": {
              "primitive": "string"
            }
          }
        ]
      },
      "kind": "class",
      "name": "Referenceable",
      "namespace": "@aws-cdk/cdk",
      "properties": [
        {
          "docs": {
            "comment": "Returns a token to a CloudFormation { Ref } that references this entity based on it's logical ID."
          },
          "immutable": true,
          "name": "ref",
          "type": {
            "fqn": "@aws-cdk/cdk.Token"
          }
        }
      ]
    },
    "@aws-cdk/cdk.Resource": {
      "assembly": "@aws-cdk/cdk",
      "base": {
        "fqn": "@aws-cdk/cdk.Referenceable"
      },
      "docs": {
        "comment": "Represents a CloudFormation resource."
      },
      "fqn": "@aws-cdk/cdk.Resource",
      "initializer": {
        "docs": {
          "comment": "Creates a resource construct."
        },
        "initializer": true,
        "parameters": [
          {
            "name": "parent",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "name": "name",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/cdk.ResourceProps"
            }
          }
        ]
      },
      "kind": "class",
      "methods": [
        {
          "docs": {
            "comment": "A decoration used to create a CloudFormation attribute property."
          },
          "name": "attribute",
          "parameters": [
            {
              "docs": {
                "comment": "Custom name for the attribute (default is the name of the property)\nNOTE: we return \"any\" here to satistfy jsii, which doesn't support lambdas."
              },
              "name": "customName",
              "type": {
                "optional": true,
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "primitive": "any"
          },
          "static": true
        },
        {
          "docs": {
            "comment": "Returns a token for an runtime attribute of this resource.\nIdeally, use generated attribute accessors (e.g. `resource.arn`), but this can be used for future compatibility\nin case there is no generated attribute."
          },
          "name": "getAtt",
          "parameters": [
            {
              "docs": {
                "comment": "The name of the attribute."
              },
              "name": "attributeName",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/cdk.Token"
          }
        },
        {
          "docs": {
            "comment": "Adds a dependency on another resource."
          },
          "name": "addDependency",
          "parameters": [
            {
              "docs": {
                "comment": "The other resource."
              },
              "name": "other",
              "type": {
                "fqn": "@aws-cdk/cdk.IDependable"
              },
              "variadic": true
            }
          ],
          "variadic": true
        },
        {
          "docs": {
            "comment": "Emits CloudFormation for this resource."
          },
          "name": "toCloudFormation",
          "returns": {
            "primitive": "json"
          }
        },
        {
          "name": "renderProperties",
          "protected": true,
          "returns": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        }
      ],
      "name": "Resource",
      "namespace": "@aws-cdk/cdk",
      "properties": [
        {
          "docs": {
            "comment": "Options for this resource, such as condition, update policy etc."
          },
          "immutable": true,
          "name": "options",
          "type": {
            "fqn": "@aws-cdk/cdk.ResourceOptions"
          }
        },
        {
          "docs": {
            "comment": "AWS resource type."
          },
          "immutable": true,
          "name": "resourceType",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "comment": "AWS resource properties"
          },
          "immutable": true,
          "name": "properties",
          "protected": true,
          "type": {
            "primitive": "any"
          }
        }
      ]
    },
    "@aws-cdk/cdk.StackElement": {
      "abstract": true,
      "assembly": "@aws-cdk/cdk",
      "base": {
        "fqn": "@aws-cdk/cdk.Construct"
      },
      "docs": {
        "comment": "An element of a CloudFormation stack."
      },
      "fqn": "@aws-cdk/cdk.StackElement",
      "initializer": {
        "docs": {
          "comment": "Creates an entity and binds it to a tree.\nNote that the root of the tree must be a Stack object (not just any Root)."
        },
        "initializer": true,
        "parameters": [
          {
            "docs": {
              "comment": "The parent construct"
            },
            "name": "parent",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "name": "name",
            "type": {
              "primitive": "string"
            }
          }
        ]
      },
      "interfaces": [
        {
          "fqn": "@aws-cdk/cdk.IDependable"
        }
      ],
      "kind": "class",
      "methods": [
        {
          "abstract": true,
          "docs": {
            "comment": "Returns the CloudFormation 'snippet' for this entity. The snippet will only be merged\nat the root level to ensure there are no identity conflicts.\n\nFor example, a Resource class will return something like:\n{\n     Resources: {\n         [this.logicalId]: {\n             Type: this.resourceType,\n             Properties: this.props,\n             Condition: this.condition\n         }\n     }\n}"
          },
          "name": "toCloudFormation",
          "returns": {
            "primitive": "json"
          }
        }
      ],
      "name": "StackElement",
      "namespace": "@aws-cdk/cdk",
      "properties": [
        {
          "docs": {
            "comment": "The logical ID for this CloudFormation stack element"
          },
          "immutable": true,
          "name": "logicalId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "comment": "The stack this Construct has been made a part of"
          },
          "name": "stack",
          "protected": true,
          "type": {
            "fqn": "@aws-cdk/cdk.Stack"
          }
        },
        {
          "docs": {
            "returns": "the stack trace of the point where this Resource was created from, sourced\nfrom the +metadata+ entry typed +aws:cdk:logicalId+, and with the bottom-most\nnode +internal+ entries filtered."
          },
          "immutable": true,
          "name": "creationStackTrace",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "comment": "Return the path with respect to the stack"
          },
          "immutable": true,
          "name": "stackPath",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "comment": "Returns the set of all stack elements (resources, parameters, conditions)\nthat should be added when a resource \"depends on\" this construct."
          },
          "immutable": true,
          "name": "dependencyElements",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/cdk.IDependable"
              },
              "kind": "array"
            }
          }
        }
      ]
    },
    "@aws-cdk/cdk.Token": {
      "assembly": "@aws-cdk/cdk",
      "docs": {
        "comment": "Represents a lazy-evaluated value. Can be used to delay evaluation of a certain value\nin case, for example, that it requires some context or late-bound data."
      },
      "fqn": "@aws-cdk/cdk.Token",
      "initializer": {
        "docs": {
          "comment": "Creates a token that resolves to `value`. If value is a function,\nthe function is evaluated upon resolution and the value it returns will be\nuesd as the token's value."
        },
        "initializer": true,
        "parameters": [
          {
            "name": "valueOrFunction",
            "type": {
              "optional": true,
              "primitive": "any"
            }
          }
        ]
      },
      "kind": "class",
      "methods": [
        {
          "docs": {
            "returns": "The resolved value for this token."
          },
          "name": "resolve",
          "returns": {
            "primitive": "any"
          }
        }
      ],
      "name": "Token",
      "namespace": "@aws-cdk/cdk"
    }
  },
  "name": "@aws-cdk/aws-sns",
  "readme": {
    "markdown": "## AWS SNS Construct Library\n\nAdd an SNS Topic to your stack:\n\n```ts\nimport sns = require('@aws-cdk/aws-sns');\n\nconst topic = new sns.Topic(stack, 'Topic', {\n    displayName: 'Customer subscription topic'\n});\n```\n\n### Subscriptions\n\nVarious subscriptions can be added to the topic by calling the `.subscribeXxx()` methods on the\ntopic.\n\nAdd an HTTPS Subscription to your topic:\n\n```ts\nconst myTopic = new sns.Topic(stack, 'MyTopic');\n\nmyTopic.subscribeUrl('MyHttpsSubscription', 'https://foobar.com/');\n```\n\nSubscribe a queue to the topic:\n\n```ts\n        const topic = new sns.Topic(this, 'MyTopic');\n        const queue = new sqs.Queue(this, 'MyQueue');\n\n        topic.subscribeQueue(queue);\n```\n\nNote that subscriptions of queues in different accounts need to be manually confirmed by\nreading the initial message from the queue and visiting the link found in it.\n\n### CloudWatch Event Rule Target\n\nSNS topics can be used as targets for CloudWatch event rules:\n\n```ts\n        const myTopic = new Topic(this, 'MyTopic');\n\n        // Use an EventRule and add the topic as a target\n        const rule = new events.EventRule(this, 'Rule', {\n            scheduleExpression: 'rate(1 minute)'\n        });\n        rule.addTarget(myTopic);\n\n        // Or use one of the onXxx methods on event sources\n        codeCommitRepo.onCommit('OnCommit', myTopic);\n\n```\n\nThis will result in adding a target to the event rule and will also modify\nthe topic resource policy to allow CloudWatch events to publish to the topic.\n"
  },
  "schema": "jsii/1.0",
  "targets": {
    "dotnet": {
      "namespace": "Amazon.CDK.AWS.SNS"
    },
    "java": {
      "maven": {
        "artifactId": "aws-sns",
        "groupId": "com.amazonaws.cdk"
      },
      "package": "com.amazonaws.cdk.aws.sns"
    },
    "js": {
      "npm": "@aws-cdk/aws-sns"
    }
  },
  "types": {
    "@aws-cdk/aws-sns.EmailSubscriptionOptions": {
      "assembly": "@aws-cdk/aws-sns",
      "datatype": true,
      "docs": {
        "comment": "Options for email subscriptions."
      },
      "fqn": "@aws-cdk/aws-sns.EmailSubscriptionOptions",
      "kind": "interface",
      "name": "EmailSubscriptionOptions",
      "namespace": "@aws-cdk/aws-sns",
      "properties": [
        {
          "docs": {
            "comment": "Indicates if the full notification JSON should be sent to the email\naddress or just the message text.",
            "default": "Message text (false)"
          },
          "name": "json",
          "type": {
            "optional": true,
            "primitive": "boolean"
          }
        }
      ]
    },
    "@aws-cdk/aws-sns.Subscription": {
      "assembly": "@aws-cdk/aws-sns",
      "base": {
        "fqn": "@aws-cdk/cdk.Construct"
      },
      "docs": {
        "comment": "A new subscription.\n\nPrefer to use the `TopicRef.subscribeXxx()` methods to creating instances of\nthis class."
      },
      "fqn": "@aws-cdk/aws-sns.Subscription",
      "initializer": {
        "initializer": true,
        "parameters": [
          {
            "name": "parent",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "name": "name",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-sns.SubscriptionProps"
            }
          }
        ]
      },
      "kind": "class",
      "name": "Subscription",
      "namespace": "@aws-cdk/aws-sns"
    },
    "@aws-cdk/aws-sns.SubscriptionProps": {
      "assembly": "@aws-cdk/aws-sns",
      "datatype": true,
      "docs": {
        "comment": "Properties for creating a new subscription"
      },
      "fqn": "@aws-cdk/aws-sns.SubscriptionProps",
      "kind": "interface",
      "name": "SubscriptionProps",
      "namespace": "@aws-cdk/aws-sns",
      "properties": [
        {
          "docs": {
            "comment": "What type of subscription to add."
          },
          "name": "protocol",
          "type": {
            "fqn": "@aws-cdk/aws-sns.SubscriptionProtocol"
          }
        },
        {
          "docs": {
            "comment": "The subscription endpoint.\n\nThe meaning of this value depends on the value for 'protocol'."
          },
          "name": "endpoint",
          "type": {
            "primitive": "any"
          }
        },
        {
          "docs": {
            "comment": "The topic to subscribe to."
          },
          "name": "topic",
          "type": {
            "fqn": "@aws-cdk/aws-sns.TopicRef"
          }
        }
      ]
    },
    "@aws-cdk/aws-sns.SubscriptionProtocol": {
      "assembly": "@aws-cdk/aws-sns",
      "docs": {
        "comment": "The type of subscription, controlling the type of the endpoint parameter."
      },
      "fqn": "@aws-cdk/aws-sns.SubscriptionProtocol",
      "kind": "enum",
      "members": [
        {
          "name": "Http"
        },
        {
          "name": "Https"
        },
        {
          "name": "Email"
        },
        {
          "name": "EmailJson"
        },
        {
          "name": "Sms"
        },
        {
          "name": "Sqs"
        },
        {
          "name": "Application"
        },
        {
          "name": "Lambda"
        }
      ],
      "name": "SubscriptionProtocol",
      "namespace": "@aws-cdk/aws-sns"
    },
    "@aws-cdk/aws-sns.Topic": {
      "assembly": "@aws-cdk/aws-sns",
      "base": {
        "fqn": "@aws-cdk/aws-sns.TopicRef"
      },
      "docs": {
        "comment": "A new SNS topic"
      },
      "fqn": "@aws-cdk/aws-sns.Topic",
      "initializer": {
        "initializer": true,
        "parameters": [
          {
            "name": "parent",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "name": "name",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-sns.TopicProps",
              "optional": true
            }
          }
        ]
      },
      "kind": "class",
      "name": "Topic",
      "namespace": "@aws-cdk/aws-sns",
      "properties": [
        {
          "immutable": true,
          "name": "topicArn",
          "type": {
            "fqn": "@aws-cdk/aws-sns.TopicArn"
          }
        },
        {
          "immutable": true,
          "name": "topicName",
          "type": {
            "fqn": "@aws-cdk/aws-sns.TopicName"
          }
        },
        {
          "docs": {
            "comment": "Controls automatic creation of policy objects.\n\nSet by subclasses."
          },
          "immutable": true,
          "name": "autoCreatePolicy",
          "protected": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ]
    },
    "@aws-cdk/aws-sns.TopicArn": {
      "assembly": "@aws-cdk/aws-sns",
      "base": {
        "fqn": "@aws-cdk/cdk.Arn"
      },
      "docs": {
        "comment": "ARN of a Topic"
      },
      "fqn": "@aws-cdk/aws-sns.TopicArn",
      "initializer": {
        "docs": {
          "comment": "Creates a token that resolves to `value`. If value is a function,\nthe function is evaluated upon resolution and the value it returns will be\nuesd as the token's value."
        },
        "initializer": true,
        "parameters": [
          {
            "name": "valueOrFunction",
            "type": {
              "optional": true,
              "primitive": "any"
            }
          }
        ]
      },
      "kind": "class",
      "name": "TopicArn",
      "namespace": "@aws-cdk/aws-sns"
    },
    "@aws-cdk/aws-sns.TopicName": {
      "assembly": "@aws-cdk/aws-sns",
      "base": {
        "fqn": "@aws-cdk/cdk.Token"
      },
      "fqn": "@aws-cdk/aws-sns.TopicName",
      "initializer": {
        "docs": {
          "comment": "Creates a token that resolves to `value`. If value is a function,\nthe function is evaluated upon resolution and the value it returns will be\nuesd as the token's value."
        },
        "initializer": true,
        "parameters": [
          {
            "name": "valueOrFunction",
            "type": {
              "optional": true,
              "primitive": "any"
            }
          }
        ]
      },
      "kind": "class",
      "name": "TopicName",
      "namespace": "@aws-cdk/aws-sns"
    },
    "@aws-cdk/aws-sns.TopicPolicy": {
      "assembly": "@aws-cdk/aws-sns",
      "base": {
        "fqn": "@aws-cdk/cdk.Construct"
      },
      "docs": {
        "comment": "Applies a policy to SNS topics."
      },
      "fqn": "@aws-cdk/aws-sns.TopicPolicy",
      "initializer": {
        "initializer": true,
        "parameters": [
          {
            "name": "parent",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "name": "name",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-sns.TopicPolicyProps"
            }
          }
        ]
      },
      "kind": "class",
      "name": "TopicPolicy",
      "namespace": "@aws-cdk/aws-sns",
      "properties": [
        {
          "docs": {
            "comment": "The IAM policy document for this policy."
          },
          "immutable": true,
          "name": "document",
          "type": {
            "fqn": "@aws-cdk/cdk.PolicyDocument"
          }
        }
      ]
    },
    "@aws-cdk/aws-sns.TopicPolicyProps": {
      "assembly": "@aws-cdk/aws-sns",
      "datatype": true,
      "fqn": "@aws-cdk/aws-sns.TopicPolicyProps",
      "kind": "interface",
      "name": "TopicPolicyProps",
      "namespace": "@aws-cdk/aws-sns",
      "properties": [
        {
          "docs": {
            "comment": "The set of topics this policy applies to."
          },
          "name": "topics",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-sns.TopicRef"
              },
              "kind": "array"
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-sns.TopicProps": {
      "assembly": "@aws-cdk/aws-sns",
      "datatype": true,
      "docs": {
        "comment": "Properties for a new SNS topic"
      },
      "fqn": "@aws-cdk/aws-sns.TopicProps",
      "kind": "interface",
      "name": "TopicProps",
      "namespace": "@aws-cdk/aws-sns",
      "properties": [
        {
          "docs": {
            "comment": "A developer-defined string that can be used to identify this SNS topic.",
            "default": "None"
          },
          "name": "displayName",
          "type": {
            "optional": true,
            "primitive": "string"
          }
        },
        {
          "docs": {
            "comment": "A name for the topic.\n\nIf you don't specify a name, AWS CloudFormation generates a unique\nphysical ID and uses that ID for the topic name. For more information,\nsee Name Type.",
            "default": "Generated name"
          },
          "name": "topicName",
          "type": {
            "optional": true,
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-sns.TopicRef": {
      "abstract": true,
      "assembly": "@aws-cdk/aws-sns",
      "base": {
        "fqn": "@aws-cdk/cdk.Construct"
      },
      "docs": {
        "comment": "Either a new or imported Topic"
      },
      "fqn": "@aws-cdk/aws-sns.TopicRef",
      "initializer": {
        "docs": {
          "comment": "Creates a new construct node."
        },
        "initializer": true,
        "parameters": [
          {
            "docs": {
              "comment": "The parent construct"
            },
            "name": "parent",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "name": "name",
            "type": {
              "primitive": "string"
            }
          }
        ]
      },
      "interfaces": [
        {
          "fqn": "@aws-cdk/aws-events.IEventRuleTargetProps"
        },
        {
          "fqn": "@aws-cdk/aws-cloudwatch.IAlarmAction"
        }
      ],
      "kind": "class",
      "methods": [
        {
          "docs": {
            "comment": "Import a Topic defined elsewhere"
          },
          "name": "import",
          "parameters": [
            {
              "name": "parent",
              "type": {
                "fqn": "@aws-cdk/cdk.Construct"
              }
            },
            {
              "name": "name",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "props",
              "type": {
                "fqn": "@aws-cdk/aws-sns.TopicRefProps"
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/aws-sns.TopicRef"
          },
          "static": true
        },
        {
          "docs": {
            "comment": "Export this Topic"
          },
          "name": "export",
          "returns": {
            "fqn": "@aws-cdk/aws-sns.TopicRefProps"
          }
        },
        {
          "docs": {
            "comment": "Subscribe some endpoint to this topic"
          },
          "name": "subscribe",
          "parameters": [
            {
              "name": "name",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "endpoint",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "protocol",
              "type": {
                "fqn": "@aws-cdk/aws-sns.SubscriptionProtocol"
              }
            }
          ]
        },
        {
          "docs": {
            "comment": "Defines a subscription from this SNS topic to an SQS queue.\n\nThe queue resource policy will be updated to allow this SNS topic to send\nmessages to the queue.\n\nTODO: change to QueueRef."
          },
          "name": "subscribeQueue",
          "parameters": [
            {
              "docs": {
                "comment": "The target queue"
              },
              "name": "queue",
              "type": {
                "fqn": "@aws-cdk/aws-sqs.QueueRef"
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/aws-sns.Subscription"
          }
        },
        {
          "docs": {
            "comment": "Defines a subscription from this SNS Topic to a Lambda function.\n\nThe Lambda's resource policy will be updated to allow this topic to\ninvoke the function."
          },
          "name": "subscribeLambda",
          "parameters": [
            {
              "docs": {
                "comment": "The Lambda function to invoke"
              },
              "name": "lambdaFunction",
              "type": {
                "fqn": "@aws-cdk/aws-lambda.LambdaRef"
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/aws-sns.Subscription"
          }
        },
        {
          "docs": {
            "comment": "Defines a subscription from this SNS topic to an email address."
          },
          "name": "subscribeEmail",
          "parameters": [
            {
              "docs": {
                "comment": "A name for the subscription"
              },
              "name": "name",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "comment": "The email address to use."
              },
              "name": "emailAddress",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "options",
              "type": {
                "fqn": "@aws-cdk/aws-sns.EmailSubscriptionOptions",
                "optional": true
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/aws-sns.Subscription"
          }
        },
        {
          "docs": {
            "comment": "Defines a subscription from this SNS topic to an http:// or https:// URL."
          },
          "name": "subscribeUrl",
          "parameters": [
            {
              "docs": {
                "comment": "A name for the subscription"
              },
              "name": "name",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "comment": "The URL to invoke"
              },
              "name": "url",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/aws-sns.Subscription"
          }
        },
        {
          "docs": {
            "comment": "Adds a statement to the IAM resource policy associated with this topic.\n\nIf this topic was created in this stack (`new Topic`), a topic policy\nwill be automatically created upon the first call to `addToPolicy`. If\nthe topic is improted (`Topic.import`), then this is a no-op."
          },
          "name": "addToResourcePolicy",
          "parameters": [
            {
              "name": "statement",
              "type": {
                "fqn": "@aws-cdk/cdk.PolicyStatement"
              }
            }
          ]
        },
        {
          "docs": {
            "comment": "Grant topic publishing permissions to the given identity"
          },
          "name": "grantPublish",
          "parameters": [
            {
              "name": "identity",
              "type": {
                "fqn": "@aws-cdk/aws-iam.IIdentityResource",
                "optional": true
              }
            }
          ]
        },
        {
          "docs": {
            "comment": "Construct a Metric object for the current topic for the given metric"
          },
          "name": "metric",
          "parameters": [
            {
              "name": "metricName",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "props",
              "type": {
                "fqn": "@aws-cdk/aws-cloudwatch.MetricCustomization",
                "optional": true
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/aws-cloudwatch.Metric"
          }
        },
        {
          "docs": {
            "comment": "Metric for the size of messages published through this topic",
            "default": "average over 5 minutes"
          },
          "name": "metricPublishSize",
          "parameters": [
            {
              "name": "props",
              "type": {
                "fqn": "@aws-cdk/aws-cloudwatch.MetricCustomization",
                "optional": true
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/aws-cloudwatch.Metric"
          }
        },
        {
          "docs": {
            "comment": "Metric for the number of messages published through this topic",
            "default": "sum over 5 minutes"
          },
          "name": "metricNumberOfMessagesPublished",
          "parameters": [
            {
              "name": "props",
              "type": {
                "fqn": "@aws-cdk/aws-cloudwatch.MetricCustomization",
                "optional": true
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/aws-cloudwatch.Metric"
          }
        },
        {
          "docs": {
            "comment": "Metric for the number of messages that failed to publish through this topic",
            "default": "sum over 5 minutes"
          },
          "name": "metricNumberOfMessagesFailed",
          "parameters": [
            {
              "name": "props",
              "type": {
                "fqn": "@aws-cdk/aws-cloudwatch.MetricCustomization",
                "optional": true
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/aws-cloudwatch.Metric"
          }
        },
        {
          "docs": {
            "comment": "Metric for the number of messages that were successfully delivered through this topic",
            "default": "sum over 5 minutes"
          },
          "name": "metricNumberOfMessagesDelivered",
          "parameters": [
            {
              "name": "props",
              "type": {
                "fqn": "@aws-cdk/aws-cloudwatch.MetricCustomization",
                "optional": true
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/aws-cloudwatch.Metric"
          }
        }
      ],
      "name": "TopicRef",
      "namespace": "@aws-cdk/aws-sns",
      "properties": [
        {
          "abstract": true,
          "immutable": true,
          "name": "topicArn",
          "type": {
            "fqn": "@aws-cdk/aws-sns.TopicArn"
          }
        },
        {
          "abstract": true,
          "immutable": true,
          "name": "topicName",
          "type": {
            "fqn": "@aws-cdk/aws-sns.TopicName"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "Controls automatic creation of policy objects.\n\nSet by subclasses."
          },
          "immutable": true,
          "name": "autoCreatePolicy",
          "protected": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "docs": {
            "comment": "Returns a RuleTarget that can be used to trigger this SNS topic as a\nresult from a CloudWatch event."
          },
          "immutable": true,
          "name": "eventRuleTarget",
          "type": {
            "fqn": "@aws-cdk/aws-events.EventRuleTarget"
          }
        },
        {
          "docs": {
            "comment": "Return the ARN that should be used for a CloudWatch Alarm action"
          },
          "immutable": true,
          "name": "alarmActionArn",
          "type": {
            "fqn": "@aws-cdk/cdk.Arn"
          }
        }
      ]
    },
    "@aws-cdk/aws-sns.TopicRefProps": {
      "assembly": "@aws-cdk/aws-sns",
      "datatype": true,
      "docs": {
        "comment": "Reference to an external topic."
      },
      "fqn": "@aws-cdk/aws-sns.TopicRefProps",
      "kind": "interface",
      "name": "TopicRefProps",
      "namespace": "@aws-cdk/aws-sns",
      "properties": [
        {
          "name": "topicArn",
          "type": {
            "fqn": "@aws-cdk/aws-sns.TopicArn"
          }
        },
        {
          "name": "topicName",
          "type": {
            "fqn": "@aws-cdk/aws-sns.TopicName"
          }
        }
      ]
    },
    "@aws-cdk/aws-sns.cloudformation.SubscriptionResource": {
      "assembly": "@aws-cdk/aws-sns",
      "base": {
        "fqn": "@aws-cdk/cdk.Resource"
      },
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sns-subscription.html"
      },
      "fqn": "@aws-cdk/aws-sns.cloudformation.SubscriptionResource",
      "initializer": {
        "docs": {
          "comment": "Creates a new ``AWS::SNS::Subscription``."
        },
        "initializer": true,
        "parameters": [
          {
            "docs": {
              "comment": "the ``cdk.Construct`` this ``SubscriptionResource`` is a part of"
            },
            "name": "parent",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "docs": {
              "comment": "the name of the resource in the ``cdk.Construct`` tree"
            },
            "name": "name",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "comment": "the properties of this ``SubscriptionResource``"
            },
            "name": "properties",
            "type": {
              "fqn": "@aws-cdk/aws-sns.cloudformation.SubscriptionResourceProps",
              "optional": true
            }
          }
        ]
      },
      "kind": "class",
      "methods": [
        {
          "name": "renderProperties",
          "protected": true,
          "returns": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        }
      ],
      "name": "SubscriptionResource",
      "namespace": "@aws-cdk/aws-sns.cloudformation",
      "properties": [
        {
          "const": true,
          "docs": {
            "comment": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "name": "resourceTypeName",
          "static": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-sns.cloudformation.SubscriptionResourceProps": {
      "assembly": "@aws-cdk/aws-sns",
      "datatype": true,
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sns-subscription.html"
      },
      "fqn": "@aws-cdk/aws-sns.cloudformation.SubscriptionResourceProps",
      "kind": "interface",
      "name": "SubscriptionResourceProps",
      "namespace": "@aws-cdk/aws-sns.cloudformation",
      "properties": [
        {
          "docs": {
            "comment": "``AWS::SNS::Subscription.Endpoint``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sns-subscription.html#cfn-sns-endpoint"
          },
          "name": "endpoint",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::SNS::Subscription.Protocol``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sns-subscription.html#cfn-sns-protocol"
          },
          "name": "protocol",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::SNS::Subscription.TopicArn``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sns-subscription.html#topicarn"
          },
          "name": "topicArn",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-sns.cloudformation.TopicPolicyResource": {
      "assembly": "@aws-cdk/aws-sns",
      "base": {
        "fqn": "@aws-cdk/cdk.Resource"
      },
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-sns-policy.html"
      },
      "fqn": "@aws-cdk/aws-sns.cloudformation.TopicPolicyResource",
      "initializer": {
        "docs": {
          "comment": "Creates a new ``AWS::SNS::TopicPolicy``."
        },
        "initializer": true,
        "parameters": [
          {
            "docs": {
              "comment": "the ``cdk.Construct`` this ``TopicPolicyResource`` is a part of"
            },
            "name": "parent",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "docs": {
              "comment": "the name of the resource in the ``cdk.Construct`` tree"
            },
            "name": "name",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "comment": "the properties of this ``TopicPolicyResource``"
            },
            "name": "properties",
            "type": {
              "fqn": "@aws-cdk/aws-sns.cloudformation.TopicPolicyResourceProps"
            }
          }
        ]
      },
      "kind": "class",
      "methods": [
        {
          "name": "renderProperties",
          "protected": true,
          "returns": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        }
      ],
      "name": "TopicPolicyResource",
      "namespace": "@aws-cdk/aws-sns.cloudformation",
      "properties": [
        {
          "const": true,
          "docs": {
            "comment": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "name": "resourceTypeName",
          "static": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-sns.cloudformation.TopicPolicyResourceProps": {
      "assembly": "@aws-cdk/aws-sns",
      "datatype": true,
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-sns-policy.html"
      },
      "fqn": "@aws-cdk/aws-sns.cloudformation.TopicPolicyResourceProps",
      "kind": "interface",
      "name": "TopicPolicyResourceProps",
      "namespace": "@aws-cdk/aws-sns.cloudformation",
      "properties": [
        {
          "docs": {
            "comment": "``AWS::SNS::TopicPolicy.PolicyDocument``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-sns-policy.html#cfn-sns-topicpolicy-policydocument"
          },
          "name": "policyDocument",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "json"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::SNS::TopicPolicy.Topics``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-sns-policy.html#cfn-sns-topicpolicy-topics"
          },
          "name": "topics",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "primitive": "string"
                          },
                          {
                            "fqn": "@aws-cdk/cdk.Token"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-sns.cloudformation.TopicResource": {
      "assembly": "@aws-cdk/aws-sns",
      "base": {
        "fqn": "@aws-cdk/cdk.Resource"
      },
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-sns-topic.html"
      },
      "fqn": "@aws-cdk/aws-sns.cloudformation.TopicResource",
      "initializer": {
        "docs": {
          "comment": "Creates a new ``AWS::SNS::Topic``."
        },
        "initializer": true,
        "parameters": [
          {
            "docs": {
              "comment": "the ``cdk.Construct`` this ``TopicResource`` is a part of"
            },
            "name": "parent",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "docs": {
              "comment": "the name of the resource in the ``cdk.Construct`` tree"
            },
            "name": "name",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "comment": "the properties of this ``TopicResource``"
            },
            "name": "properties",
            "type": {
              "fqn": "@aws-cdk/aws-sns.cloudformation.TopicResourceProps",
              "optional": true
            }
          }
        ]
      },
      "kind": "class",
      "methods": [
        {
          "name": "renderProperties",
          "protected": true,
          "returns": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        }
      ],
      "name": "TopicResource",
      "namespace": "@aws-cdk/aws-sns.cloudformation",
      "properties": [
        {
          "const": true,
          "docs": {
            "comment": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "name": "resourceTypeName",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "cloudformation_attribute": "TopicName"
          },
          "immutable": true,
          "name": "topicName",
          "type": {
            "fqn": "@aws-cdk/aws-sns.TopicName"
          }
        }
      ],
      "subtypes": [
        "@aws-cdk/aws-sns.cloudformation.TopicResource.SubscriptionProperty"
      ]
    },
    "@aws-cdk/aws-sns.cloudformation.TopicResource.SubscriptionProperty": {
      "assembly": "@aws-cdk/aws-sns",
      "datatype": true,
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-sns-subscription.html"
      },
      "fqn": "@aws-cdk/aws-sns.cloudformation.TopicResource.SubscriptionProperty",
      "kind": "interface",
      "name": "SubscriptionProperty",
      "namespace": "@aws-cdk/aws-sns.cloudformation.TopicResource",
      "parenttype": "@aws-cdk/aws-sns.cloudformation.TopicResource",
      "properties": [
        {
          "docs": {
            "comment": "``TopicResource.SubscriptionProperty.Endpoint``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-sns-subscription.html#cfn-sns-topic-subscription-endpoint"
          },
          "name": "endpoint",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``TopicResource.SubscriptionProperty.Protocol``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-sns-subscription.html#cfn-sns-topic-subscription-protocol"
          },
          "name": "protocol",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-sns.cloudformation.TopicResourceProps": {
      "assembly": "@aws-cdk/aws-sns",
      "datatype": true,
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-sns-topic.html"
      },
      "fqn": "@aws-cdk/aws-sns.cloudformation.TopicResourceProps",
      "kind": "interface",
      "name": "TopicResourceProps",
      "namespace": "@aws-cdk/aws-sns.cloudformation",
      "properties": [
        {
          "docs": {
            "comment": "``AWS::SNS::Topic.DisplayName``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-sns-topic.html#cfn-sns-topic-displayname"
          },
          "name": "displayName",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::SNS::Topic.Subscription``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-sns-topic.html#cfn-sns-topic-subscription"
          },
          "name": "subscription",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/cdk.Token"
                          },
                          {
                            "fqn": "@aws-cdk/aws-sns.cloudformation.TopicResource.SubscriptionProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::SNS::Topic.TopicName``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-sns-topic.html#cfn-sns-topic-topicname"
          },
          "name": "topicName",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        }
      ]
    }
  },
  "version": "0.7.3-beta"
}
