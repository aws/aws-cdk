using AWS.Jsii.Runtime.Deputy;

namespace Amazon.CDK.AWS.IAM
{
    [JsiiInterfaceProxy(typeof(IUserProps), "@aws-cdk/aws-iam.UserProps")]
    internal class UserPropsProxy : DeputyBase, IUserProps
    {
        private UserPropsProxy(ByRefValue reference): base(reference)
        {
        }

        /// <summary>
        /// Groups to add this user to. You can also use `addToGroup` to add this
        /// user to a group.
        /// </summary>
        [JsiiProperty("groups", "{\"collection\":{\"kind\":\"array\",\"elementtype\":{\"fqn\":\"@aws-cdk/aws-iam.Group\"}},\"optional\":true}")]
        public virtual Group[] Groups
        {
            get => GetInstanceProperty<Group[]>();
            set => SetInstanceProperty(value);
        }

        /// <summary>
        /// A list of ARNs for managed policies attacherd to this user.
        /// You can use `addManagedPolicy(arn)` to attach a managed policy to this user.
        /// </summary>
        /// <remarks>default: No managed policies.</remarks>
        [JsiiProperty("managedPolicyArns", "{\"collection\":{\"kind\":\"array\",\"elementtype\":{\"primitive\":\"any\"}},\"optional\":true}")]
        public virtual object[] ManagedPolicyArns
        {
            get => GetInstanceProperty<object[]>();
            set => SetInstanceProperty(value);
        }

        /// <summary>
        /// The path for the user name. For more information about paths, see IAM
        /// Identifiers in the IAM User Guide.
        /// </summary>
        [JsiiProperty("path", "{\"primitive\":\"string\",\"optional\":true}")]
        public virtual string Path
        {
            get => GetInstanceProperty<string>();
            set => SetInstanceProperty(value);
        }

        /// <summary>
        /// A name for the IAM user. For valid values, see the UserName parameter for
        /// the CreateUser action in the IAM API Reference. If you don't specify a
        /// name, AWS CloudFormation generates a unique physical ID and uses that ID
        /// for the user name.
        /// 
        /// If you specify a name, you cannot perform updates that require
        /// replacement of this resource. You can perform updates that require no or
        /// some interruption. If you must replace the resource, specify a new name.
        /// 
        /// If you specify a name, you must specify the CAPABILITY_NAMED_IAM value to
        /// acknowledge your template's capabilities. For more information, see
        /// Acknowledging IAM Resources in AWS CloudFormation Templates.
        /// </summary>
        /// <remarks>default: Generated by CloudFormation (recommended)</remarks>
        [JsiiProperty("userName", "{\"primitive\":\"string\",\"optional\":true}")]
        public virtual string UserName
        {
            get => GetInstanceProperty<string>();
            set => SetInstanceProperty(value);
        }

        /// <summary>
        /// The password for the user. This is required so the user can access the
        /// AWS Management Console.
        /// </summary>
        /// <remarks>default: User won't be able to access the management console without a password.</remarks>
        [JsiiProperty("password", "{\"primitive\":\"string\",\"optional\":true}")]
        public virtual string Password
        {
            get => GetInstanceProperty<string>();
            set => SetInstanceProperty(value);
        }

        /// <summary>
        /// Specifies whether the user is required to set a new password the next
        /// time the user logs in to the AWS Management Console.
        /// 
        /// If this is set to 'true', you must also specify "initialPassword".
        /// </summary>
        /// <remarks>default: false</remarks>
        [JsiiProperty("passwordResetRequired", "{\"primitive\":\"boolean\",\"optional\":true}")]
        public virtual bool? PasswordResetRequired
        {
            get => GetInstanceProperty<bool? >();
            set => SetInstanceProperty(value);
        }
    }
}