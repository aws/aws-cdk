using AWS.Jsii.Runtime.Deputy;

namespace Amazon.CDK.AWS.IAM
{
    [JsiiInterfaceProxy(typeof(IGroupProps), "@aws-cdk/aws-iam.GroupProps")]
    internal class GroupPropsProxy : DeputyBase, IGroupProps
    {
        private GroupPropsProxy(ByRefValue reference): base(reference)
        {
        }

        /// <summary>
        /// A name for the IAM group. For valid values, see the GroupName parameter
        /// for the CreateGroup action in the IAM API Reference. If you don't specify
        /// a name, AWS CloudFormation generates a unique physical ID and uses that
        /// ID for the group name.
        /// 
        /// If you specify a name, you must specify the CAPABILITY_NAMED_IAM value to
        /// acknowledge your template's capabilities. For more information, see
        /// Acknowledging IAM Resources in AWS CloudFormation Templates.
        /// </summary>
        /// <remarks>default: Generated by CloudFormation (recommended)</remarks>
        [JsiiProperty("groupName", "{\"primitive\":\"string\",\"optional\":true}")]
        public virtual string GroupName
        {
            get => GetInstanceProperty<string>();
            set => SetInstanceProperty(value);
        }

        /// <summary>A list of ARNs for managed policies associated with group.</summary>
        /// <remarks>default: No managed policies.</remarks>
        [JsiiProperty("managedPolicyArns", "{\"collection\":{\"kind\":\"array\",\"elementtype\":{\"primitive\":\"any\"}},\"optional\":true}")]
        public virtual object[] ManagedPolicyArns
        {
            get => GetInstanceProperty<object[]>();
            set => SetInstanceProperty(value);
        }

        /// <summary>
        /// The path to the group. For more information about paths, see [IAM
        /// Identifiers](http://docs.aws.amazon.com/IAM/latest/UserGuide/index.html?Using_Identifiers.html)
        /// in the IAM User Guide.
        /// </summary>
        [JsiiProperty("path", "{\"primitive\":\"string\",\"optional\":true}")]
        public virtual string Path
        {
            get => GetInstanceProperty<string>();
            set => SetInstanceProperty(value);
        }
    }
}