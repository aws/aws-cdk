{
  "fingerprint": "I6vJOrRyu4+U7s20uJqgeBUbzZlrjn4i6+LPpaaNbH0=",
  "dependencies": {
    "@aws-cdk/assets": {
      "dependencies": {
        "@aws-cdk/aws-iam": {
          "dependencies": {
            "@aws-cdk/cdk": {
              "dependencies": {
                "@aws-cdk/cx-api": {
                  "targets": {
                    "dotnet": {
                      "namespace": "Amazon.CDK.CXAPI"
                    },
                    "java": {
                      "maven": {
                        "artifactId": "cxapi",
                        "groupId": "com.amazonaws.cdk"
                      },
                      "package": "com.amazonaws.cdk.cxapi"
                    },
                    "js": {
                      "npm": "@aws-cdk/cx-api"
                    }
                  },
                  "version": "0.7.3-beta"
                }
              },
              "targets": {
                "dotnet": {
                  "namespace": "Amazon.CDK"
                },
                "java": {
                  "maven": {
                    "artifactId": "cdk",
                    "groupId": "com.amazonaws.cdk"
                  },
                  "package": "com.amazonaws.cdk"
                },
                "js": {
                  "npm": "@aws-cdk/cdk"
                }
              },
              "version": "0.7.3-beta"
            }
          },
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.IAM"
            },
            "java": {
              "maven": {
                "artifactId": "aws-iam",
                "groupId": "com.amazonaws.cdk"
              },
              "package": "com.amazonaws.cdk.aws.iam"
            },
            "js": {
              "npm": "@aws-cdk/aws-iam"
            }
          },
          "version": "0.7.3-beta"
        },
        "@aws-cdk/aws-s3": {
          "dependencies": {
            "@aws-cdk/aws-iam": {
              "dependencies": {
                "@aws-cdk/cdk": {
                  "dependencies": {
                    "@aws-cdk/cx-api": {
                      "targets": {
                        "dotnet": {
                          "namespace": "Amazon.CDK.CXAPI"
                        },
                        "java": {
                          "maven": {
                            "artifactId": "cxapi",
                            "groupId": "com.amazonaws.cdk"
                          },
                          "package": "com.amazonaws.cdk.cxapi"
                        },
                        "js": {
                          "npm": "@aws-cdk/cx-api"
                        }
                      },
                      "version": "0.7.3-beta"
                    }
                  },
                  "targets": {
                    "dotnet": {
                      "namespace": "Amazon.CDK"
                    },
                    "java": {
                      "maven": {
                        "artifactId": "cdk",
                        "groupId": "com.amazonaws.cdk"
                      },
                      "package": "com.amazonaws.cdk"
                    },
                    "js": {
                      "npm": "@aws-cdk/cdk"
                    }
                  },
                  "version": "0.7.3-beta"
                }
              },
              "targets": {
                "dotnet": {
                  "namespace": "Amazon.CDK.AWS.IAM"
                },
                "java": {
                  "maven": {
                    "artifactId": "aws-iam",
                    "groupId": "com.amazonaws.cdk"
                  },
                  "package": "com.amazonaws.cdk.aws.iam"
                },
                "js": {
                  "npm": "@aws-cdk/aws-iam"
                }
              },
              "version": "0.7.3-beta"
            },
            "@aws-cdk/aws-kms": {
              "dependencies": {
                "@aws-cdk/aws-iam": {
                  "dependencies": {
                    "@aws-cdk/cdk": {
                      "dependencies": {
                        "@aws-cdk/cx-api": {
                          "targets": {
                            "dotnet": {
                              "namespace": "Amazon.CDK.CXAPI"
                            },
                            "java": {
                              "maven": {
                                "artifactId": "cxapi",
                                "groupId": "com.amazonaws.cdk"
                              },
                              "package": "com.amazonaws.cdk.cxapi"
                            },
                            "js": {
                              "npm": "@aws-cdk/cx-api"
                            }
                          },
                          "version": "0.7.3-beta"
                        }
                      },
                      "targets": {
                        "dotnet": {
                          "namespace": "Amazon.CDK"
                        },
                        "java": {
                          "maven": {
                            "artifactId": "cdk",
                            "groupId": "com.amazonaws.cdk"
                          },
                          "package": "com.amazonaws.cdk"
                        },
                        "js": {
                          "npm": "@aws-cdk/cdk"
                        }
                      },
                      "version": "0.7.3-beta"
                    }
                  },
                  "targets": {
                    "dotnet": {
                      "namespace": "Amazon.CDK.AWS.IAM"
                    },
                    "java": {
                      "maven": {
                        "artifactId": "aws-iam",
                        "groupId": "com.amazonaws.cdk"
                      },
                      "package": "com.amazonaws.cdk.aws.iam"
                    },
                    "js": {
                      "npm": "@aws-cdk/aws-iam"
                    }
                  },
                  "version": "0.7.3-beta"
                },
                "@aws-cdk/cdk": {
                  "dependencies": {
                    "@aws-cdk/cx-api": {
                      "targets": {
                        "dotnet": {
                          "namespace": "Amazon.CDK.CXAPI"
                        },
                        "java": {
                          "maven": {
                            "artifactId": "cxapi",
                            "groupId": "com.amazonaws.cdk"
                          },
                          "package": "com.amazonaws.cdk.cxapi"
                        },
                        "js": {
                          "npm": "@aws-cdk/cx-api"
                        }
                      },
                      "version": "0.7.3-beta"
                    }
                  },
                  "targets": {
                    "dotnet": {
                      "namespace": "Amazon.CDK"
                    },
                    "java": {
                      "maven": {
                        "artifactId": "cdk",
                        "groupId": "com.amazonaws.cdk"
                      },
                      "package": "com.amazonaws.cdk"
                    },
                    "js": {
                      "npm": "@aws-cdk/cdk"
                    }
                  },
                  "version": "0.7.3-beta"
                }
              },
              "targets": {
                "dotnet": {
                  "namespace": "Amazon.CDK.AWS.KMS"
                },
                "java": {
                  "maven": {
                    "artifactId": "aws-kms",
                    "groupId": "com.amazonaws.cdk"
                  },
                  "package": "com.amazonaws.cdk.aws.kms"
                },
                "js": {
                  "npm": "@aws-cdk/aws-kms"
                }
              },
              "version": "0.7.3-beta"
            },
            "@aws-cdk/cdk": {
              "dependencies": {
                "@aws-cdk/cx-api": {
                  "targets": {
                    "dotnet": {
                      "namespace": "Amazon.CDK.CXAPI"
                    },
                    "java": {
                      "maven": {
                        "artifactId": "cxapi",
                        "groupId": "com.amazonaws.cdk"
                      },
                      "package": "com.amazonaws.cdk.cxapi"
                    },
                    "js": {
                      "npm": "@aws-cdk/cx-api"
                    }
                  },
                  "version": "0.7.3-beta"
                }
              },
              "targets": {
                "dotnet": {
                  "namespace": "Amazon.CDK"
                },
                "java": {
                  "maven": {
                    "artifactId": "cdk",
                    "groupId": "com.amazonaws.cdk"
                  },
                  "package": "com.amazonaws.cdk"
                },
                "js": {
                  "npm": "@aws-cdk/cdk"
                }
              },
              "version": "0.7.3-beta"
            }
          },
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.S3"
            },
            "java": {
              "maven": {
                "artifactId": "aws-s3",
                "groupId": "com.amazonaws.cdk"
              },
              "package": "com.amazonaws.cdk.aws.s3"
            },
            "js": {
              "npm": "@aws-cdk/aws-s3"
            }
          },
          "version": "0.7.3-beta"
        },
        "@aws-cdk/cdk": {
          "dependencies": {
            "@aws-cdk/cx-api": {
              "targets": {
                "dotnet": {
                  "namespace": "Amazon.CDK.CXAPI"
                },
                "java": {
                  "maven": {
                    "artifactId": "cxapi",
                    "groupId": "com.amazonaws.cdk"
                  },
                  "package": "com.amazonaws.cdk.cxapi"
                },
                "js": {
                  "npm": "@aws-cdk/cx-api"
                }
              },
              "version": "0.7.3-beta"
            }
          },
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK"
            },
            "java": {
              "maven": {
                "artifactId": "cdk",
                "groupId": "com.amazonaws.cdk"
              },
              "package": "com.amazonaws.cdk"
            },
            "js": {
              "npm": "@aws-cdk/cdk"
            }
          },
          "version": "0.7.3-beta"
        },
        "@aws-cdk/cx-api": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.CXAPI"
            },
            "java": {
              "maven": {
                "artifactId": "cxapi",
                "groupId": "com.amazonaws.cdk"
              },
              "package": "com.amazonaws.cdk.cxapi"
            },
            "js": {
              "npm": "@aws-cdk/cx-api"
            }
          },
          "version": "0.7.3-beta"
        }
      },
      "targets": {
        "dotnet": {
          "namespace": "Amazon.CDK.Assets"
        },
        "java": {
          "maven": {
            "artifactId": "assets",
            "groupId": "com.amazonaws.cdk"
          },
          "package": "com.amazonaws.cdk.assets"
        },
        "js": {
          "npm": "@aws-cdk/assets"
        }
      },
      "version": "0.7.3-beta"
    },
    "@aws-cdk/aws-cloudwatch": {
      "dependencies": {
        "@aws-cdk/aws-iam": {
          "dependencies": {
            "@aws-cdk/cdk": {
              "dependencies": {
                "@aws-cdk/cx-api": {
                  "targets": {
                    "dotnet": {
                      "namespace": "Amazon.CDK.CXAPI"
                    },
                    "java": {
                      "maven": {
                        "artifactId": "cxapi",
                        "groupId": "com.amazonaws.cdk"
                      },
                      "package": "com.amazonaws.cdk.cxapi"
                    },
                    "js": {
                      "npm": "@aws-cdk/cx-api"
                    }
                  },
                  "version": "0.7.3-beta"
                }
              },
              "targets": {
                "dotnet": {
                  "namespace": "Amazon.CDK"
                },
                "java": {
                  "maven": {
                    "artifactId": "cdk",
                    "groupId": "com.amazonaws.cdk"
                  },
                  "package": "com.amazonaws.cdk"
                },
                "js": {
                  "npm": "@aws-cdk/cdk"
                }
              },
              "version": "0.7.3-beta"
            }
          },
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.IAM"
            },
            "java": {
              "maven": {
                "artifactId": "aws-iam",
                "groupId": "com.amazonaws.cdk"
              },
              "package": "com.amazonaws.cdk.aws.iam"
            },
            "js": {
              "npm": "@aws-cdk/aws-iam"
            }
          },
          "version": "0.7.3-beta"
        },
        "@aws-cdk/cdk": {
          "dependencies": {
            "@aws-cdk/cx-api": {
              "targets": {
                "dotnet": {
                  "namespace": "Amazon.CDK.CXAPI"
                },
                "java": {
                  "maven": {
                    "artifactId": "cxapi",
                    "groupId": "com.amazonaws.cdk"
                  },
                  "package": "com.amazonaws.cdk.cxapi"
                },
                "js": {
                  "npm": "@aws-cdk/cx-api"
                }
              },
              "version": "0.7.3-beta"
            }
          },
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK"
            },
            "java": {
              "maven": {
                "artifactId": "cdk",
                "groupId": "com.amazonaws.cdk"
              },
              "package": "com.amazonaws.cdk"
            },
            "js": {
              "npm": "@aws-cdk/cdk"
            }
          },
          "version": "0.7.3-beta"
        }
      },
      "targets": {
        "dotnet": {
          "namespace": "Amazon.CDK.AWS.CloudWatch"
        },
        "java": {
          "maven": {
            "artifactId": "aws-cloudwatch",
            "groupId": "com.amazonaws.cdk"
          },
          "package": "com.amazonaws.cdk.aws.cloudwatch"
        },
        "js": {
          "npm": "@aws-cdk/aws-cloudwatch"
        }
      },
      "version": "0.7.3-beta"
    },
    "@aws-cdk/aws-events": {
      "dependencies": {
        "@aws-cdk/aws-iam": {
          "dependencies": {
            "@aws-cdk/cdk": {
              "dependencies": {
                "@aws-cdk/cx-api": {
                  "targets": {
                    "dotnet": {
                      "namespace": "Amazon.CDK.CXAPI"
                    },
                    "java": {
                      "maven": {
                        "artifactId": "cxapi",
                        "groupId": "com.amazonaws.cdk"
                      },
                      "package": "com.amazonaws.cdk.cxapi"
                    },
                    "js": {
                      "npm": "@aws-cdk/cx-api"
                    }
                  },
                  "version": "0.7.3-beta"
                }
              },
              "targets": {
                "dotnet": {
                  "namespace": "Amazon.CDK"
                },
                "java": {
                  "maven": {
                    "artifactId": "cdk",
                    "groupId": "com.amazonaws.cdk"
                  },
                  "package": "com.amazonaws.cdk"
                },
                "js": {
                  "npm": "@aws-cdk/cdk"
                }
              },
              "version": "0.7.3-beta"
            }
          },
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.IAM"
            },
            "java": {
              "maven": {
                "artifactId": "aws-iam",
                "groupId": "com.amazonaws.cdk"
              },
              "package": "com.amazonaws.cdk.aws.iam"
            },
            "js": {
              "npm": "@aws-cdk/aws-iam"
            }
          },
          "version": "0.7.3-beta"
        },
        "@aws-cdk/cdk": {
          "dependencies": {
            "@aws-cdk/cx-api": {
              "targets": {
                "dotnet": {
                  "namespace": "Amazon.CDK.CXAPI"
                },
                "java": {
                  "maven": {
                    "artifactId": "cxapi",
                    "groupId": "com.amazonaws.cdk"
                  },
                  "package": "com.amazonaws.cdk.cxapi"
                },
                "js": {
                  "npm": "@aws-cdk/cx-api"
                }
              },
              "version": "0.7.3-beta"
            }
          },
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK"
            },
            "java": {
              "maven": {
                "artifactId": "cdk",
                "groupId": "com.amazonaws.cdk"
              },
              "package": "com.amazonaws.cdk"
            },
            "js": {
              "npm": "@aws-cdk/cdk"
            }
          },
          "version": "0.7.3-beta"
        }
      },
      "targets": {
        "dotnet": {
          "namespace": "Amazon.CDK.AWS.Events"
        },
        "java": {
          "maven": {
            "artifactId": "aws-events",
            "groupId": "com.amazonaws.cdk"
          },
          "package": "com.amazonaws.cdk.aws.events"
        },
        "js": {
          "npm": "@aws-cdk/aws-events"
        }
      },
      "version": "0.7.3-beta"
    },
    "@aws-cdk/aws-iam": {
      "dependencies": {
        "@aws-cdk/cdk": {
          "dependencies": {
            "@aws-cdk/cx-api": {
              "targets": {
                "dotnet": {
                  "namespace": "Amazon.CDK.CXAPI"
                },
                "java": {
                  "maven": {
                    "artifactId": "cxapi",
                    "groupId": "com.amazonaws.cdk"
                  },
                  "package": "com.amazonaws.cdk.cxapi"
                },
                "js": {
                  "npm": "@aws-cdk/cx-api"
                }
              },
              "version": "0.7.3-beta"
            }
          },
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK"
            },
            "java": {
              "maven": {
                "artifactId": "cdk",
                "groupId": "com.amazonaws.cdk"
              },
              "package": "com.amazonaws.cdk"
            },
            "js": {
              "npm": "@aws-cdk/cdk"
            }
          },
          "version": "0.7.3-beta"
        }
      },
      "targets": {
        "dotnet": {
          "namespace": "Amazon.CDK.AWS.IAM"
        },
        "java": {
          "maven": {
            "artifactId": "aws-iam",
            "groupId": "com.amazonaws.cdk"
          },
          "package": "com.amazonaws.cdk.aws.iam"
        },
        "js": {
          "npm": "@aws-cdk/aws-iam"
        }
      },
      "version": "0.7.3-beta"
    },
    "@aws-cdk/aws-logs": {
      "dependencies": {
        "@aws-cdk/aws-iam": {
          "dependencies": {
            "@aws-cdk/cdk": {
              "dependencies": {
                "@aws-cdk/cx-api": {
                  "targets": {
                    "dotnet": {
                      "namespace": "Amazon.CDK.CXAPI"
                    },
                    "java": {
                      "maven": {
                        "artifactId": "cxapi",
                        "groupId": "com.amazonaws.cdk"
                      },
                      "package": "com.amazonaws.cdk.cxapi"
                    },
                    "js": {
                      "npm": "@aws-cdk/cx-api"
                    }
                  },
                  "version": "0.7.3-beta"
                }
              },
              "targets": {
                "dotnet": {
                  "namespace": "Amazon.CDK"
                },
                "java": {
                  "maven": {
                    "artifactId": "cdk",
                    "groupId": "com.amazonaws.cdk"
                  },
                  "package": "com.amazonaws.cdk"
                },
                "js": {
                  "npm": "@aws-cdk/cdk"
                }
              },
              "version": "0.7.3-beta"
            }
          },
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.IAM"
            },
            "java": {
              "maven": {
                "artifactId": "aws-iam",
                "groupId": "com.amazonaws.cdk"
              },
              "package": "com.amazonaws.cdk.aws.iam"
            },
            "js": {
              "npm": "@aws-cdk/aws-iam"
            }
          },
          "version": "0.7.3-beta"
        },
        "@aws-cdk/cdk": {
          "dependencies": {
            "@aws-cdk/cx-api": {
              "targets": {
                "dotnet": {
                  "namespace": "Amazon.CDK.CXAPI"
                },
                "java": {
                  "maven": {
                    "artifactId": "cxapi",
                    "groupId": "com.amazonaws.cdk"
                  },
                  "package": "com.amazonaws.cdk.cxapi"
                },
                "js": {
                  "npm": "@aws-cdk/cx-api"
                }
              },
              "version": "0.7.3-beta"
            }
          },
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK"
            },
            "java": {
              "maven": {
                "artifactId": "cdk",
                "groupId": "com.amazonaws.cdk"
              },
              "package": "com.amazonaws.cdk"
            },
            "js": {
              "npm": "@aws-cdk/cdk"
            }
          },
          "version": "0.7.3-beta"
        }
      },
      "targets": {
        "dotnet": {
          "namespace": "Amazon.CDK.AWS.Logs"
        },
        "java": {
          "maven": {
            "artifactId": "aws-logs",
            "groupId": "com.amazonaws.cdk"
          },
          "package": "com.amazonaws.cdk.aws.logs"
        },
        "js": {
          "npm": "@aws-cdk/aws-logs"
        }
      },
      "version": "0.7.3-beta"
    },
    "@aws-cdk/aws-s3": {
      "dependencies": {
        "@aws-cdk/aws-iam": {
          "dependencies": {
            "@aws-cdk/cdk": {
              "dependencies": {
                "@aws-cdk/cx-api": {
                  "targets": {
                    "dotnet": {
                      "namespace": "Amazon.CDK.CXAPI"
                    },
                    "java": {
                      "maven": {
                        "artifactId": "cxapi",
                        "groupId": "com.amazonaws.cdk"
                      },
                      "package": "com.amazonaws.cdk.cxapi"
                    },
                    "js": {
                      "npm": "@aws-cdk/cx-api"
                    }
                  },
                  "version": "0.7.3-beta"
                }
              },
              "targets": {
                "dotnet": {
                  "namespace": "Amazon.CDK"
                },
                "java": {
                  "maven": {
                    "artifactId": "cdk",
                    "groupId": "com.amazonaws.cdk"
                  },
                  "package": "com.amazonaws.cdk"
                },
                "js": {
                  "npm": "@aws-cdk/cdk"
                }
              },
              "version": "0.7.3-beta"
            }
          },
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.IAM"
            },
            "java": {
              "maven": {
                "artifactId": "aws-iam",
                "groupId": "com.amazonaws.cdk"
              },
              "package": "com.amazonaws.cdk.aws.iam"
            },
            "js": {
              "npm": "@aws-cdk/aws-iam"
            }
          },
          "version": "0.7.3-beta"
        },
        "@aws-cdk/aws-kms": {
          "dependencies": {
            "@aws-cdk/aws-iam": {
              "dependencies": {
                "@aws-cdk/cdk": {
                  "dependencies": {
                    "@aws-cdk/cx-api": {
                      "targets": {
                        "dotnet": {
                          "namespace": "Amazon.CDK.CXAPI"
                        },
                        "java": {
                          "maven": {
                            "artifactId": "cxapi",
                            "groupId": "com.amazonaws.cdk"
                          },
                          "package": "com.amazonaws.cdk.cxapi"
                        },
                        "js": {
                          "npm": "@aws-cdk/cx-api"
                        }
                      },
                      "version": "0.7.3-beta"
                    }
                  },
                  "targets": {
                    "dotnet": {
                      "namespace": "Amazon.CDK"
                    },
                    "java": {
                      "maven": {
                        "artifactId": "cdk",
                        "groupId": "com.amazonaws.cdk"
                      },
                      "package": "com.amazonaws.cdk"
                    },
                    "js": {
                      "npm": "@aws-cdk/cdk"
                    }
                  },
                  "version": "0.7.3-beta"
                }
              },
              "targets": {
                "dotnet": {
                  "namespace": "Amazon.CDK.AWS.IAM"
                },
                "java": {
                  "maven": {
                    "artifactId": "aws-iam",
                    "groupId": "com.amazonaws.cdk"
                  },
                  "package": "com.amazonaws.cdk.aws.iam"
                },
                "js": {
                  "npm": "@aws-cdk/aws-iam"
                }
              },
              "version": "0.7.3-beta"
            },
            "@aws-cdk/cdk": {
              "dependencies": {
                "@aws-cdk/cx-api": {
                  "targets": {
                    "dotnet": {
                      "namespace": "Amazon.CDK.CXAPI"
                    },
                    "java": {
                      "maven": {
                        "artifactId": "cxapi",
                        "groupId": "com.amazonaws.cdk"
                      },
                      "package": "com.amazonaws.cdk.cxapi"
                    },
                    "js": {
                      "npm": "@aws-cdk/cx-api"
                    }
                  },
                  "version": "0.7.3-beta"
                }
              },
              "targets": {
                "dotnet": {
                  "namespace": "Amazon.CDK"
                },
                "java": {
                  "maven": {
                    "artifactId": "cdk",
                    "groupId": "com.amazonaws.cdk"
                  },
                  "package": "com.amazonaws.cdk"
                },
                "js": {
                  "npm": "@aws-cdk/cdk"
                }
              },
              "version": "0.7.3-beta"
            }
          },
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.KMS"
            },
            "java": {
              "maven": {
                "artifactId": "aws-kms",
                "groupId": "com.amazonaws.cdk"
              },
              "package": "com.amazonaws.cdk.aws.kms"
            },
            "js": {
              "npm": "@aws-cdk/aws-kms"
            }
          },
          "version": "0.7.3-beta"
        },
        "@aws-cdk/cdk": {
          "dependencies": {
            "@aws-cdk/cx-api": {
              "targets": {
                "dotnet": {
                  "namespace": "Amazon.CDK.CXAPI"
                },
                "java": {
                  "maven": {
                    "artifactId": "cxapi",
                    "groupId": "com.amazonaws.cdk"
                  },
                  "package": "com.amazonaws.cdk.cxapi"
                },
                "js": {
                  "npm": "@aws-cdk/cx-api"
                }
              },
              "version": "0.7.3-beta"
            }
          },
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK"
            },
            "java": {
              "maven": {
                "artifactId": "cdk",
                "groupId": "com.amazonaws.cdk"
              },
              "package": "com.amazonaws.cdk"
            },
            "js": {
              "npm": "@aws-cdk/cdk"
            }
          },
          "version": "0.7.3-beta"
        }
      },
      "targets": {
        "dotnet": {
          "namespace": "Amazon.CDK.AWS.S3"
        },
        "java": {
          "maven": {
            "artifactId": "aws-s3",
            "groupId": "com.amazonaws.cdk"
          },
          "package": "com.amazonaws.cdk.aws.s3"
        },
        "js": {
          "npm": "@aws-cdk/aws-s3"
        }
      },
      "version": "0.7.3-beta"
    },
    "@aws-cdk/cdk": {
      "dependencies": {
        "@aws-cdk/cx-api": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.CXAPI"
            },
            "java": {
              "maven": {
                "artifactId": "cxapi",
                "groupId": "com.amazonaws.cdk"
              },
              "package": "com.amazonaws.cdk.cxapi"
            },
            "js": {
              "npm": "@aws-cdk/cx-api"
            }
          },
          "version": "0.7.3-beta"
        }
      },
      "targets": {
        "dotnet": {
          "namespace": "Amazon.CDK"
        },
        "java": {
          "maven": {
            "artifactId": "cdk",
            "groupId": "com.amazonaws.cdk"
          },
          "package": "com.amazonaws.cdk"
        },
        "js": {
          "npm": "@aws-cdk/cdk"
        }
      },
      "version": "0.7.3-beta"
    },
    "@aws-cdk/cx-api": {
      "targets": {
        "dotnet": {
          "namespace": "Amazon.CDK.CXAPI"
        },
        "java": {
          "maven": {
            "artifactId": "cxapi",
            "groupId": "com.amazonaws.cdk"
          },
          "package": "com.amazonaws.cdk.cxapi"
        },
        "js": {
          "npm": "@aws-cdk/cx-api"
        }
      },
      "version": "0.7.3-beta"
    }
  },
  "externals": {
    "@aws-cdk/assets.AssetPackaging": {
      "assembly": "@aws-cdk/assets",
      "docs": {
        "comment": "Defines the way an asset is packaged before it is uploaded to S3."
      },
      "fqn": "@aws-cdk/assets.AssetPackaging",
      "kind": "enum",
      "members": [
        {
          "name": "ZipDirectory"
        },
        {
          "name": "File"
        }
      ],
      "name": "AssetPackaging",
      "namespace": "@aws-cdk/assets"
    },
    "@aws-cdk/aws-cloudwatch.Metric": {
      "assembly": "@aws-cdk/aws-cloudwatch",
      "docs": {
        "comment": "A metric emitted by a service\n\nThe metric is a combination of a metric identifier (namespace, name and dimensions)\nand an aggregation function (statistic, period and unit).\n\nIt also contains metadata which is used only in graphs, such as color and label.\nIt makes sense to embed this in here, so that compound constructs can attach\nthat metadata to metrics they expose.\n\nThis class does not represent a resource, so hence is not a construct. Instead,\nMetric is an abstraction that makes it easy to specify metrics for use in both\nalarms and graphs."
      },
      "fqn": "@aws-cdk/aws-cloudwatch.Metric",
      "initializer": {
        "initializer": true,
        "parameters": [
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.MetricProps"
            }
          }
        ]
      },
      "kind": "class",
      "methods": [
        {
          "docs": {
            "comment": "Grant permissions to the given identity to write metrics."
          },
          "name": "grantPutMetricData",
          "parameters": [
            {
              "docs": {
                "comment": "The IAM identity to give permissions to."
              },
              "name": "identity",
              "type": {
                "fqn": "@aws-cdk/aws-iam.IIdentityResource",
                "optional": true
              }
            }
          ],
          "static": true
        },
        {
          "docs": {
            "comment": "Return a copy of Metric with properties changed.\n\nAll properties except namespace and metricName can be changed."
          },
          "name": "with",
          "parameters": [
            {
              "docs": {
                "comment": "The set of properties to change."
              },
              "name": "props",
              "type": {
                "fqn": "@aws-cdk/aws-cloudwatch.MetricCustomization"
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/aws-cloudwatch.Metric"
          }
        },
        {
          "docs": {
            "comment": "Make a new Alarm for this metric\n\nCombines both properties that may adjust the metric (aggregation) as well\nas alarm properties."
          },
          "name": "newAlarm",
          "parameters": [
            {
              "name": "parent",
              "type": {
                "fqn": "@aws-cdk/cdk.Construct"
              }
            },
            {
              "name": "name",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "props",
              "type": {
                "fqn": "@aws-cdk/aws-cloudwatch.NewAlarmProps"
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/aws-cloudwatch.Alarm"
          }
        },
        {
          "docs": {
            "comment": "Return the dimensions of this Metric as a list of Dimension."
          },
          "name": "dimensionsAsList",
          "returns": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-cloudwatch.Dimension"
              },
              "kind": "array"
            }
          }
        }
      ],
      "name": "Metric",
      "namespace": "@aws-cdk/aws-cloudwatch",
      "properties": [
        {
          "immutable": true,
          "name": "dimensions",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            },
            "optional": true
          }
        },
        {
          "immutable": true,
          "name": "namespace",
          "type": {
            "primitive": "string"
          }
        },
        {
          "immutable": true,
          "name": "metricName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "immutable": true,
          "name": "periodSec",
          "type": {
            "primitive": "number"
          }
        },
        {
          "immutable": true,
          "name": "statistic",
          "type": {
            "primitive": "string"
          }
        },
        {
          "immutable": true,
          "name": "unit",
          "type": {
            "fqn": "@aws-cdk/aws-cloudwatch.Unit",
            "optional": true
          }
        },
        {
          "immutable": true,
          "name": "label",
          "type": {
            "optional": true,
            "primitive": "string"
          }
        },
        {
          "immutable": true,
          "name": "color",
          "type": {
            "optional": true,
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-cloudwatch.MetricCustomization": {
      "assembly": "@aws-cdk/aws-cloudwatch",
      "datatype": true,
      "docs": {
        "comment": "Properties of a metric that can be changed"
      },
      "fqn": "@aws-cdk/aws-cloudwatch.MetricCustomization",
      "kind": "interface",
      "name": "MetricCustomization",
      "namespace": "@aws-cdk/aws-cloudwatch",
      "properties": [
        {
          "docs": {
            "comment": "Dimensions of the metric",
            "default": "No dimensions"
          },
          "name": "dimensions",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            },
            "optional": true
          }
        },
        {
          "docs": {
            "comment": "The period over which the specified statistic is applied.\n\nSpecify time in seconds, in multiples of 60.",
            "default": "300"
          },
          "name": "periodSec",
          "type": {
            "optional": true,
            "primitive": "number"
          }
        },
        {
          "docs": {
            "comment": "What function to use for aggregating.\n\nCan be one of the following:\n\n- \"Minimum\" | \"min\"\n- \"Maximum\" | \"max\"\n- \"Average\" | \"avg\"\n- \"Sum\" | \"sum\"\n- \"SampleCount | \"n\"\n- \"pNN.NN\"",
            "default": "Average"
          },
          "name": "statistic",
          "type": {
            "optional": true,
            "primitive": "string"
          }
        },
        {
          "docs": {
            "comment": "Unit for the metric that is associated with the alarm"
          },
          "name": "unit",
          "type": {
            "fqn": "@aws-cdk/aws-cloudwatch.Unit",
            "optional": true
          }
        },
        {
          "docs": {
            "comment": "Label for this metric when added to a Graph in a Dashboard"
          },
          "name": "label",
          "type": {
            "optional": true,
            "primitive": "string"
          }
        },
        {
          "docs": {
            "comment": "Color for this metric when added to a Graph in a Dashboard"
          },
          "name": "color",
          "type": {
            "optional": true,
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-events.EventRuleTarget": {
      "assembly": "@aws-cdk/aws-events",
      "datatype": true,
      "fqn": "@aws-cdk/aws-events.EventRuleTarget",
      "kind": "interface",
      "name": "EventRuleTarget",
      "namespace": "@aws-cdk/aws-events",
      "properties": [
        {
          "docs": {
            "comment": "A unique, user-defined identifier for the target. Acceptable values\ninclude alphanumeric characters, periods (.), hyphens (-), and\nunderscores (_)."
          },
          "name": "id",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "comment": "The Amazon Resource Name (ARN) of the target."
          },
          "name": "arn",
          "type": {
            "fqn": "@aws-cdk/cdk.Arn"
          }
        },
        {
          "docs": {
            "comment": "The Amazon Resource Name (ARN) of the AWS Identity and Access Management\n(IAM) role to use for this target when the rule is triggered. If one rule\ntriggers multiple targets, you can use a different IAM role for each\ntarget."
          },
          "name": "roleArn",
          "type": {
            "fqn": "@aws-cdk/aws-iam.RoleArn",
            "optional": true
          }
        },
        {
          "docs": {
            "comment": "The Amazon ECS task definition and task count to use, if the event target\nis an Amazon ECS task."
          },
          "name": "ecsParameters",
          "type": {
            "fqn": "@aws-cdk/aws-events.cloudformation.RuleResource.EcsParametersProperty",
            "optional": true
          }
        },
        {
          "docs": {
            "comment": "Settings that control shard assignment, when the target is a Kinesis\nstream. If you don't include this parameter, eventId is used as the\npartition key."
          },
          "name": "kinesisParameters",
          "type": {
            "fqn": "@aws-cdk/aws-events.cloudformation.RuleResource.KinesisParametersProperty",
            "optional": true
          }
        },
        {
          "docs": {
            "comment": "Parameters used when the rule invokes Amazon EC2 Systems Manager Run\nCommand."
          },
          "name": "runCommandParameters",
          "type": {
            "fqn": "@aws-cdk/aws-events.cloudformation.RuleResource.RunCommandParametersProperty",
            "optional": true
          }
        }
      ]
    },
    "@aws-cdk/aws-events.IEventRuleTargetProps": {
      "assembly": "@aws-cdk/aws-events",
      "datatype": true,
      "docs": {
        "comment": "An abstract target for EventRules."
      },
      "fqn": "@aws-cdk/aws-events.IEventRuleTargetProps",
      "kind": "interface",
      "name": "IEventRuleTargetProps",
      "namespace": "@aws-cdk/aws-events",
      "properties": [
        {
          "docs": {
            "comment": "Returns the rule target specification.\nNOTE: Do not use the various `inputXxx` options. They can be set in a call to `addTarget`."
          },
          "immutable": true,
          "name": "eventRuleTarget",
          "type": {
            "fqn": "@aws-cdk/aws-events.EventRuleTarget"
          }
        }
      ]
    },
    "@aws-cdk/aws-iam.IIdentityResource": {
      "assembly": "@aws-cdk/aws-iam",
      "docs": {
        "deprecated": "Use IPrincipal"
      },
      "fqn": "@aws-cdk/aws-iam.IIdentityResource",
      "interfaces": [
        {
          "fqn": "@aws-cdk/aws-iam.IPrincipal"
        }
      ],
      "kind": "interface",
      "name": "IIdentityResource",
      "namespace": "@aws-cdk/aws-iam"
    },
    "@aws-cdk/aws-iam.IPrincipal": {
      "assembly": "@aws-cdk/aws-iam",
      "docs": {
        "comment": "A construct that represents an IAM principal, such as a user, group or role."
      },
      "fqn": "@aws-cdk/aws-iam.IPrincipal",
      "kind": "interface",
      "methods": [
        {
          "docs": {
            "comment": "Adds an IAM statement to the default inline policy associated with this\nprincipal. If a policy doesn't exist, it is created."
          },
          "name": "addToPolicy",
          "parameters": [
            {
              "name": "statement",
              "type": {
                "fqn": "@aws-cdk/cdk.PolicyStatement"
              }
            }
          ]
        },
        {
          "docs": {
            "comment": "Attaches an inline policy to this principal.\nThis is the same as calling `policy.addToXxx(principal)`."
          },
          "name": "attachInlinePolicy",
          "parameters": [
            {
              "docs": {
                "comment": "The policy resource to attach to this principal."
              },
              "name": "policy",
              "type": {
                "fqn": "@aws-cdk/aws-iam.Policy"
              }
            }
          ]
        },
        {
          "docs": {
            "comment": "Attaches a managed policy to this principal."
          },
          "name": "attachManagedPolicy",
          "parameters": [
            {
              "docs": {
                "comment": "The ARN of the managed policy"
              },
              "name": "arn",
              "type": {
                "primitive": "any"
              }
            }
          ]
        }
      ],
      "name": "IPrincipal",
      "namespace": "@aws-cdk/aws-iam",
      "properties": [
        {
          "docs": {
            "comment": "The IAM principal of this identity (i.e. AWS principal, service principal, etc)."
          },
          "immutable": true,
          "name": "principal",
          "type": {
            "fqn": "@aws-cdk/cdk.PolicyPrincipal"
          }
        }
      ]
    },
    "@aws-cdk/aws-iam.Role": {
      "assembly": "@aws-cdk/aws-iam",
      "base": {
        "fqn": "@aws-cdk/cdk.Construct"
      },
      "docs": {
        "comment": "IAM Role\n\nDefines an IAM role. The role is created with an assume policy document associated with\nthe specified AWS service principal defined in `serviceAssumeRole`."
      },
      "fqn": "@aws-cdk/aws-iam.Role",
      "initializer": {
        "initializer": true,
        "parameters": [
          {
            "name": "parent",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "name": "name",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-iam.RoleProps"
            }
          }
        ]
      },
      "interfaces": [
        {
          "fqn": "@aws-cdk/aws-iam.IIdentityResource"
        },
        {
          "fqn": "@aws-cdk/aws-iam.IPrincipal"
        },
        {
          "fqn": "@aws-cdk/cdk.IDependable"
        }
      ],
      "kind": "class",
      "methods": [
        {
          "docs": {
            "comment": "Adds a permission to the role's default policy document.\nIf there is no default policy attached to this role, it will be created."
          },
          "name": "addToPolicy",
          "parameters": [
            {
              "name": "statement",
              "type": {
                "fqn": "@aws-cdk/cdk.PolicyStatement"
              }
            }
          ]
        },
        {
          "docs": {
            "comment": "Attaches a managed policy to this role."
          },
          "name": "attachManagedPolicy",
          "parameters": [
            {
              "docs": {
                "comment": "The ARN of the managed policy to attach."
              },
              "name": "arn",
              "type": {
                "primitive": "any"
              }
            }
          ]
        },
        {
          "docs": {
            "comment": "Attaches a policy to this role."
          },
          "name": "attachInlinePolicy",
          "parameters": [
            {
              "docs": {
                "comment": "The policy to attach"
              },
              "name": "policy",
              "type": {
                "fqn": "@aws-cdk/aws-iam.Policy"
              }
            }
          ]
        }
      ],
      "name": "Role",
      "namespace": "@aws-cdk/aws-iam",
      "properties": [
        {
          "docs": {
            "comment": "The assume role policy document associated with this role."
          },
          "immutable": true,
          "name": "assumeRolePolicy",
          "type": {
            "fqn": "@aws-cdk/cdk.PolicyDocument",
            "optional": true
          }
        },
        {
          "docs": {
            "comment": "Returns the ARN of this role."
          },
          "immutable": true,
          "name": "roleArn",
          "type": {
            "fqn": "@aws-cdk/aws-iam.RoleArn"
          }
        },
        {
          "docs": {
            "comment": "Returns the name of the role."
          },
          "immutable": true,
          "name": "roleName",
          "type": {
            "fqn": "@aws-cdk/aws-iam.RoleName"
          }
        },
        {
          "docs": {
            "comment": "Returns the ARN of this role."
          },
          "immutable": true,
          "name": "principal",
          "type": {
            "fqn": "@aws-cdk/cdk.PolicyPrincipal"
          }
        },
        {
          "docs": {
            "comment": "Returns the role."
          },
          "immutable": true,
          "name": "dependencyElements",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/cdk.IDependable"
              },
              "kind": "array"
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-logs.ILogSubscriptionDestination": {
      "assembly": "@aws-cdk/aws-logs",
      "docs": {
        "comment": "Interface for classes that can be the destination of a log Subscription"
      },
      "fqn": "@aws-cdk/aws-logs.ILogSubscriptionDestination",
      "kind": "interface",
      "methods": [
        {
          "docs": {
            "comment": "Return the properties required to send subscription events to this destination.\n\nIf necessary, the destination can use the properties of the SubscriptionFilter\nobject itself to configure its permissions to allow the subscription to write\nto it.\n\nThe destination may reconfigure its own permissions in response to this\nfunction call."
          },
          "name": "logSubscriptionDestination",
          "parameters": [
            {
              "name": "sourceLogGroup",
              "type": {
                "fqn": "@aws-cdk/aws-logs.LogGroup"
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/aws-logs.LogSubscriptionDestination"
          }
        }
      ],
      "name": "ILogSubscriptionDestination",
      "namespace": "@aws-cdk/aws-logs"
    },
    "@aws-cdk/aws-logs.LogGroup": {
      "assembly": "@aws-cdk/aws-logs",
      "base": {
        "fqn": "@aws-cdk/cdk.Construct"
      },
      "docs": {
        "comment": "A new CloudWatch Log Group"
      },
      "fqn": "@aws-cdk/aws-logs.LogGroup",
      "initializer": {
        "initializer": true,
        "parameters": [
          {
            "name": "parent",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-logs.LogGroupProps",
              "optional": true
            }
          }
        ]
      },
      "kind": "class",
      "methods": [
        {
          "docs": {
            "comment": "Create a new Log Stream for this Log Group"
          },
          "name": "newStream",
          "parameters": [
            {
              "docs": {
                "comment": "Parent construct"
              },
              "name": "parent",
              "type": {
                "fqn": "@aws-cdk/cdk.Construct"
              }
            },
            {
              "docs": {
                "comment": "Unique identifier for the construct in its parent"
              },
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "comment": "Properties for creating the LogStream"
              },
              "name": "props",
              "type": {
                "fqn": "@aws-cdk/aws-logs.NewLogStreamProps",
                "optional": true
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/aws-logs.LogStream"
          }
        },
        {
          "docs": {
            "comment": "Create a new Subscription Filter on this Log Group"
          },
          "name": "newSubscriptionFilter",
          "parameters": [
            {
              "docs": {
                "comment": "Parent construct"
              },
              "name": "parent",
              "type": {
                "fqn": "@aws-cdk/cdk.Construct"
              }
            },
            {
              "docs": {
                "comment": "Unique identifier for the construct in its parent"
              },
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "comment": "Properties for creating the SubscriptionFilter"
              },
              "name": "props",
              "type": {
                "fqn": "@aws-cdk/aws-logs.NewSubscriptionFilterProps"
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/aws-logs.SubscriptionFilter"
          }
        },
        {
          "docs": {
            "comment": "Create a new Metric Filter on this Log Group"
          },
          "name": "newMetricFilter",
          "parameters": [
            {
              "docs": {
                "comment": "Parent construct"
              },
              "name": "parent",
              "type": {
                "fqn": "@aws-cdk/cdk.Construct"
              }
            },
            {
              "docs": {
                "comment": "Unique identifier for the construct in its parent"
              },
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "comment": "Properties for creating the MetricFilter"
              },
              "name": "props",
              "type": {
                "fqn": "@aws-cdk/aws-logs.NewMetricFilterProps"
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/aws-logs.MetricFilter"
          }
        }
      ],
      "name": "LogGroup",
      "namespace": "@aws-cdk/aws-logs",
      "properties": [
        {
          "docs": {
            "comment": "The ARN of this log group"
          },
          "immutable": true,
          "name": "logGroupArn",
          "type": {
            "fqn": "@aws-cdk/aws-logs.LogGroupArn"
          }
        },
        {
          "docs": {
            "comment": "The name of this log group"
          },
          "immutable": true,
          "name": "logGroupName",
          "type": {
            "fqn": "@aws-cdk/aws-logs.LogGroupName"
          }
        }
      ]
    },
    "@aws-cdk/aws-logs.LogSubscriptionDestination": {
      "assembly": "@aws-cdk/aws-logs",
      "datatype": true,
      "docs": {
        "comment": "Properties returned by a Subscription destination"
      },
      "fqn": "@aws-cdk/aws-logs.LogSubscriptionDestination",
      "kind": "interface",
      "name": "LogSubscriptionDestination",
      "namespace": "@aws-cdk/aws-logs",
      "properties": [
        {
          "docs": {
            "comment": "The ARN of the subscription's destination"
          },
          "immutable": true,
          "name": "arn",
          "type": {
            "fqn": "@aws-cdk/cdk.Arn"
          }
        },
        {
          "docs": {
            "comment": "The role to assume to write log events to the destination",
            "default": "No role assumed"
          },
          "immutable": true,
          "name": "role",
          "type": {
            "fqn": "@aws-cdk/aws-iam.Role",
            "optional": true
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.BucketRef": {
      "abstract": true,
      "assembly": "@aws-cdk/aws-s3",
      "base": {
        "fqn": "@aws-cdk/cdk.Construct"
      },
      "docs": {
        "comment": "Represents an S3 Bucket.\n\nBuckets can be either defined within this stack:\n\n     new Bucket(this, 'MyBucket', { props });\n\nOr imported from an existing bucket:\n\n     BucketRef.import(this, 'MyImportedBucket', { bucketArn: ... });\n\nYou can also export a bucket and import it into another stack:\n\n     const ref = myBucket.export();\n     BucketRef.import(this, 'MyImportedBucket', ref);"
      },
      "fqn": "@aws-cdk/aws-s3.BucketRef",
      "initializer": {
        "docs": {
          "comment": "Creates a new construct node."
        },
        "initializer": true,
        "parameters": [
          {
            "docs": {
              "comment": "The parent construct"
            },
            "name": "parent",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "name": "name",
            "type": {
              "primitive": "string"
            }
          }
        ]
      },
      "kind": "class",
      "methods": [
        {
          "docs": {
            "comment": "Creates a Bucket construct that represents an external bucket."
          },
          "name": "import",
          "parameters": [
            {
              "docs": {
                "comment": "The parent creating construct (usually `this`)."
              },
              "name": "parent",
              "type": {
                "fqn": "@aws-cdk/cdk.Construct"
              }
            },
            {
              "docs": {
                "comment": "The construct's name."
              },
              "name": "name",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "props",
              "type": {
                "fqn": "@aws-cdk/aws-s3.BucketRefProps"
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/aws-s3.BucketRef"
          },
          "static": true
        },
        {
          "docs": {
            "comment": "Exports this bucket from the stack."
          },
          "name": "export",
          "returns": {
            "fqn": "@aws-cdk/aws-s3.BucketRefProps"
          }
        },
        {
          "docs": {
            "comment": "Adds a statement to the resource policy for a principal (i.e.\naccount/role/service) to perform actions on this bucket and/or it's\ncontents. Use `bucketArn` and `arnForObjects(keys)` to obtain ARNs for\nthis bucket or objects."
          },
          "name": "addToResourcePolicy",
          "parameters": [
            {
              "name": "permission",
              "type": {
                "fqn": "@aws-cdk/cdk.PolicyStatement"
              }
            }
          ]
        },
        {
          "docs": {
            "comment": "The https URL of an S3 object. For example:",
            "example": "https://s3.cn-north-1.amazonaws.com.cn/china-bucket/mykey",
            "returns": "an ObjectS3Url token"
          },
          "name": "urlForObject",
          "parameters": [
            {
              "docs": {
                "comment": "The S3 key of the object. If not specified, the URL of the\nbucket is returned."
              },
              "name": "key",
              "type": {
                "optional": true,
                "primitive": "any"
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/aws-s3.S3Url"
          }
        },
        {
          "docs": {
            "comment": "Returns an ARN that represents all objects within the bucket that match\nthe key pattern specified. To represent all keys, specify ``\"*\"``.\n\nIf you specify multiple components for keyPattern, they will be concatenated::\n\n     arnForObjects('home/', team, '/', user, '/*')"
          },
          "name": "arnForObjects",
          "parameters": [
            {
              "name": "keyPattern",
              "type": {
                "primitive": "any"
              },
              "variadic": true
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/cdk.Arn"
          },
          "variadic": true
        },
        {
          "docs": {
            "comment": "Temporary API for granting read permissions for this bucket and it's\ncontents to an IAM principal (Role/Group/User).\n\nIf an encryption key is used, permission to ues the key to decrypt the\ncontents of the bucket will also be granted."
          },
          "name": "grantRead",
          "parameters": [
            {
              "name": "identity",
              "type": {
                "fqn": "@aws-cdk/aws-iam.IPrincipal",
                "optional": true
              }
            },
            {
              "name": "objectsKeyPattern",
              "type": {
                "optional": true,
                "primitive": "any"
              }
            }
          ]
        },
        {
          "docs": {
            "comment": "Grants read/write permissions for this bucket and it's contents to an IAM\nprincipal (Role/Group/User).\n\nIf an encryption key is used, permission to use the key for\nencrypt/decrypt will also be granted."
          },
          "name": "grantReadWrite",
          "parameters": [
            {
              "name": "identity",
              "type": {
                "fqn": "@aws-cdk/aws-iam.IPrincipal",
                "optional": true
              }
            },
            {
              "name": "objectsKeyPattern",
              "type": {
                "optional": true,
                "primitive": "any"
              }
            }
          ]
        }
      ],
      "name": "BucketRef",
      "namespace": "@aws-cdk/aws-s3",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "comment": "The ARN of the bucket."
          },
          "immutable": true,
          "name": "bucketArn",
          "type": {
            "fqn": "@aws-cdk/aws-s3.BucketArn"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "The name of the bucket."
          },
          "immutable": true,
          "name": "bucketName",
          "type": {
            "fqn": "@aws-cdk/aws-s3.BucketName"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "Optional KMS encryption key associated with this bucket."
          },
          "immutable": true,
          "name": "encryptionKey",
          "type": {
            "fqn": "@aws-cdk/aws-kms.EncryptionKeyRef",
            "optional": true
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "The resource policy assoicated with this bucket.\n\nIf `autoCreatePolicy` is true, a `BucketPolicy` will be created upon the\nfirst call to addToResourcePolicy(s)."
          },
          "name": "policy",
          "protected": true,
          "type": {
            "fqn": "@aws-cdk/aws-s3.BucketPolicy",
            "optional": true
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "Indicates if a bucket resource policy should automatically created upon\nthe first call to `addToResourcePolicy`."
          },
          "name": "autoCreatePolicy",
          "protected": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "docs": {
            "comment": "The https:// URL of this bucket.",
            "example": "https://s3.us-west-1.amazonaws.com/onlybucket\nSimilar to calling `urlForObject` with no object key."
          },
          "immutable": true,
          "name": "bucketUrl",
          "type": {
            "fqn": "@aws-cdk/aws-s3.S3Url"
          }
        }
      ]
    },
    "@aws-cdk/cdk.Arn": {
      "assembly": "@aws-cdk/cdk",
      "base": {
        "fqn": "@aws-cdk/cdk.Token"
      },
      "docs": {
        "comment": "An Amazon Resource Name (ARN).\nhttp://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html"
      },
      "fqn": "@aws-cdk/cdk.Arn",
      "initializer": {
        "docs": {
          "comment": "Creates a token that resolves to `value`. If value is a function,\nthe function is evaluated upon resolution and the value it returns will be\nuesd as the token's value."
        },
        "initializer": true,
        "parameters": [
          {
            "name": "valueOrFunction",
            "type": {
              "optional": true,
              "primitive": "any"
            }
          }
        ]
      },
      "kind": "class",
      "methods": [
        {
          "docs": {
            "comment": "Creates an ARN from components.\nIf any component is the empty string,\nan empty string will be inserted into the generated ARN\nat the location that component corresponds to."
          },
          "name": "fromComponents",
          "parameters": [
            {
              "name": "components",
              "type": {
                "fqn": "@aws-cdk/cdk.ArnComponents"
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/cdk.Arn"
          },
          "static": true
        },
        {
          "docs": {
            "comment": "Given an ARN, parses it and returns components.\n\nThe ARN it will be parsed and validated. The separator (`sep`) will be\nset to '/' if the 6th component includes a '/', in which case, `resource`\nwill be set to the value before the '/' and `resourceName` will be the\nrest. In case there is no '/', `resource` will be set to the 6th\ncomponents and `resourceName` will be set to the rest of the string.",
            "returns": "an ArnComponents object which allows access to the various\ncomponents of the ARN."
          },
          "name": "parse",
          "parameters": [
            {
              "name": "arn",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/cdk.ArnComponents"
          },
          "static": true
        },
        {
          "docs": {
            "comment": "Given a Token evaluating to ARN, parses it and returns components.\n\nThe ARN cannot be validated, since we don't have the actual value yet\nat the time of this function call. You will have to know the separator\nand the type of ARN.\n\nThe resulting `ArnComponents` object will contain tokens for the\nsubexpressions of the ARN, not string literals.\n\nWARNING: this function cannot properly parse the complete final\nresourceName (path) out of ARNs that use '/' to both separate the\n'resource' from the 'resourceName' AND to subdivide the resourceName\nfurther. For example, in S3 ARNs:\n\n      arn:aws:s3:::my_corporate_bucket/path/to/exampleobject.png\n\nAfter parsing the resourceName will not contain 'path/to/exampleobject.png'\nbut simply 'path'. This is a limitation because there is no slicing\nfunctionality in CloudFormation templates.",
            "returns": "an ArnComponents object which allows access to the various\ncomponents of the ARN."
          },
          "name": "parseToken",
          "parameters": [
            {
              "docs": {
                "comment": "The input token that contains an ARN"
              },
              "name": "arn",
              "type": {
                "fqn": "@aws-cdk/cdk.Token"
              }
            },
            {
              "docs": {
                "comment": "The separator used to separate resource from resourceName"
              },
              "name": "sep",
              "type": {
                "optional": true,
                "primitive": "string"
              }
            },
            {
              "docs": {
                "comment": "Whether there is a name component in the ARN at all.\nFor example, SNS Topics ARNs have the 'resource' component contain the\ntopic name, and no 'resourceName' component."
              },
              "name": "hasName",
              "type": {
                "optional": true,
                "primitive": "boolean"
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/cdk.ArnComponents"
          },
          "static": true
        }
      ],
      "name": "Arn",
      "namespace": "@aws-cdk/cdk"
    },
    "@aws-cdk/cdk.Construct": {
      "assembly": "@aws-cdk/cdk",
      "docs": {
        "comment": "Represents the building block of the construct graph.\nWhen a construct is created, it is always added as a child"
      },
      "fqn": "@aws-cdk/cdk.Construct",
      "initializer": {
        "docs": {
          "comment": "Creates a new construct node."
        },
        "initializer": true,
        "parameters": [
          {
            "docs": {
              "comment": "The parent construct"
            },
            "name": "parent",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "name": "name",
            "type": {
              "primitive": "string"
            }
          }
        ]
      },
      "kind": "class",
      "methods": [
        {
          "docs": {
            "comment": "Returns a string representation of this construct."
          },
          "name": "toString",
          "returns": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "comment": "Returns a string with a tree representation of this construct and it's children."
          },
          "name": "toTreeString",
          "parameters": [
            {
              "name": "depth",
              "type": {
                "optional": true,
                "primitive": "number"
              }
            }
          ],
          "returns": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "comment": "Return a descendant by path, or undefined",
            "returns": "a child by path or undefined if not found."
          },
          "name": "tryFindChild",
          "parameters": [
            {
              "name": "path",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/cdk.Construct",
            "optional": true
          }
        },
        {
          "docs": {
            "comment": "Return a descendant by path\n\nThrows an exception if the descendant is not found.",
            "returns": "Child with the given path."
          },
          "name": "findChild",
          "parameters": [
            {
              "name": "path",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/cdk.Construct"
          }
        },
        {
          "docs": {
            "comment": "This can be used to set contextual values.\nContext must be set before any children are added, since children may consult context info during construction.\nIf the key already exists, it will be overridden."
          },
          "name": "setContext",
          "parameters": [
            {
              "docs": {
                "comment": "The context key"
              },
              "name": "key",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "comment": "The context value"
              },
              "name": "value",
              "type": {
                "primitive": "any"
              }
            }
          ]
        },
        {
          "docs": {
            "comment": "Retrieves a value from tree context.\n\nContext is usually initialized at the root, but can be overridden at any point in the tree.",
            "returns": "The context value or undefined"
          },
          "name": "getContext",
          "parameters": [
            {
              "docs": {
                "comment": "The context key"
              },
              "name": "key",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "primitive": "any"
          }
        },
        {
          "docs": {
            "comment": "Retrieve a value from tree-global context\n\nIt is an error if the context object is not available."
          },
          "name": "requireContext",
          "parameters": [
            {
              "name": "key",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "primitive": "any"
          }
        },
        {
          "docs": {
            "comment": "Adds a metadata entry to this construct.\nEntries are arbitrary values and will also include a stack trace to allow tracing back to\nthe code location for when the entry was added. It can be used, for example, to include source\nmapping in CloudFormation templates to improve diagnostics."
          },
          "name": "addMetadata",
          "parameters": [
            {
              "docs": {
                "comment": "a string denoting the type of metadata"
              },
              "name": "type",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "comment": "the value of the metadata (can be a Token). If null/undefined, metadata will not be added."
              },
              "name": "data",
              "type": {
                "primitive": "any"
              }
            },
            {
              "docs": {
                "comment": "a function under which to restrict the metadata entry's stack trace (defaults to this.addMetadata)"
              },
              "name": "from",
              "type": {
                "optional": true,
                "primitive": "any"
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/cdk.Construct"
          }
        },
        {
          "docs": {
            "comment": "Adds a { \"aws:cdk:info\": <message> } metadata entry to this construct.\nThe toolkit will display the info message when apps are synthesized."
          },
          "name": "addInfo",
          "parameters": [
            {
              "docs": {
                "comment": "The info message."
              },
              "name": "message",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/cdk.Construct"
          }
        },
        {
          "docs": {
            "comment": "Adds a { warning: <message> } metadata entry to this construct.\nThe toolkit will display the warning when an app is synthesized, or fail\nif run in --strict mode."
          },
          "name": "addWarning",
          "parameters": [
            {
              "docs": {
                "comment": "The warning message."
              },
              "name": "message",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/cdk.Construct"
          }
        },
        {
          "docs": {
            "comment": "Adds an { error: <message> } metadata entry to this construct.\nThe toolkit will fail synthesis when errors are reported."
          },
          "name": "addError",
          "parameters": [
            {
              "docs": {
                "comment": "The error message."
              },
              "name": "message",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/cdk.Construct"
          }
        },
        {
          "docs": {
            "comment": "This method can be implemented by derived constructs in order to perform\nvalidation logic. It is called on all constructs before synthesis.",
            "returns": "An array of validation error messages, or an empty array if there the construct is valid."
          },
          "name": "validate",
          "returns": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "comment": "Invokes 'validate' on all child constructs and then on this construct (depth-first).",
            "returns": "A list of validation errors. If the list is empty, all constructs are valid."
          },
          "name": "validateTree",
          "returns": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/cdk.ValidationError"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "comment": "Return the ancestors (including self) of this Construct up until and excluding the indicated component"
          },
          "name": "ancestors",
          "parameters": [
            {
              "name": "upTo",
              "type": {
                "fqn": "@aws-cdk/cdk.Construct",
                "optional": true
              }
            }
          ],
          "protected": true,
          "returns": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/cdk.Construct"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "aws": "-cdk/runtime`` instead.",
            "comment": "Throws if the `props` bag doesn't include the property `name`.\nIn the future we can add some type-checking here, maybe even auto-generate during compilation.",
            "deprecated": "use ``requireProperty`` from ``"
          },
          "name": "required",
          "parameters": [
            {
              "docs": {
                "comment": "The props bag."
              },
              "name": "props",
              "type": {
                "primitive": "any"
              }
            },
            {
              "docs": {
                "comment": "The name of the required property."
              },
              "name": "name",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "protected": true,
          "returns": {
            "primitive": "any"
          }
        },
        {
          "docs": {
            "comment": "Adds a child construct to this node.",
            "returns": "The resolved path part name of the child"
          },
          "name": "addChild",
          "parameters": [
            {
              "docs": {
                "comment": "The child construct"
              },
              "name": "child",
              "type": {
                "fqn": "@aws-cdk/cdk.Construct"
              }
            },
            {
              "name": "childName",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "protected": true
        },
        {
          "docs": {
            "comment": "Locks this construct from allowing more children to be added. After this\ncall, no more children can be added to this construct or to any children."
          },
          "name": "lock",
          "protected": true
        },
        {
          "docs": {
            "comment": "Unlocks this costruct and allows mutations (adding children)."
          },
          "name": "unlock",
          "protected": true
        }
      ],
      "name": "Construct",
      "namespace": "@aws-cdk/cdk",
      "properties": [
        {
          "docs": {
            "comment": "Returns the parent of this node or undefined if this is a root node."
          },
          "immutable": true,
          "name": "parent",
          "type": {
            "fqn": "@aws-cdk/cdk.Construct",
            "optional": true
          }
        },
        {
          "docs": {
            "comment": "The name of this construct"
          },
          "immutable": true,
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "comment": "All direct children of this construct."
          },
          "immutable": true,
          "name": "children",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/cdk.Construct"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "comment": "Returns the path of all constructs from root to this construct, in string form.",
            "returns": "/-separated path of this Construct."
          },
          "immutable": true,
          "name": "path",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "comment": "An array of metadata objects associated with this construct.\nThis can be used, for example, to implement support for deprecation notices, source mapping, etc."
          },
          "immutable": true,
          "name": "metadata",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/cdk.MetadataEntry"
              },
              "kind": "array"
            }
          }
        }
      ]
    },
    "@aws-cdk/cdk.IDependable": {
      "assembly": "@aws-cdk/cdk",
      "datatype": true,
      "docs": {
        "comment": "Represents a construct that can be \"depended on\" via `addDependency`."
      },
      "fqn": "@aws-cdk/cdk.IDependable",
      "kind": "interface",
      "name": "IDependable",
      "namespace": "@aws-cdk/cdk",
      "properties": [
        {
          "docs": {
            "comment": "Returns the set of all stack elements (resources, parameters, conditions)\nthat should be added when a resource \"depends on\" this construct."
          },
          "immutable": true,
          "name": "dependencyElements",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/cdk.IDependable"
              },
              "kind": "array"
            }
          }
        }
      ]
    },
    "@aws-cdk/cdk.PolicyPrincipal": {
      "abstract": true,
      "assembly": "@aws-cdk/cdk",
      "docs": {
        "comment": "Represents an IAM principal."
      },
      "fqn": "@aws-cdk/cdk.PolicyPrincipal",
      "initializer": {
        "initializer": true
      },
      "kind": "class",
      "methods": [
        {
          "abstract": true,
          "docs": {
            "comment": "Return the policy fragment that identifies this principal in a Policy."
          },
          "name": "policyFragment",
          "returns": {
            "fqn": "@aws-cdk/cdk.PrincipalPolicyFragment"
          }
        }
      ],
      "name": "PolicyPrincipal",
      "namespace": "@aws-cdk/cdk",
      "properties": [
        {
          "docs": {
            "comment": "When this Principal is used in an AssumeRole policy, the action to use."
          },
          "immutable": true,
          "name": "assumeRoleAction",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/cdk.PolicyStatement": {
      "assembly": "@aws-cdk/cdk",
      "base": {
        "fqn": "@aws-cdk/cdk.Token"
      },
      "docs": {
        "comment": "Represents a statement in an IAM policy document."
      },
      "fqn": "@aws-cdk/cdk.PolicyStatement",
      "initializer": {
        "initializer": true,
        "parameters": [
          {
            "name": "effect",
            "type": {
              "fqn": "@aws-cdk/cdk.PolicyStatementEffect",
              "optional": true
            }
          }
        ]
      },
      "kind": "class",
      "methods": [
        {
          "name": "addAction",
          "parameters": [
            {
              "name": "action",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/cdk.PolicyStatement"
          }
        },
        {
          "name": "addActions",
          "parameters": [
            {
              "name": "actions",
              "type": {
                "primitive": "string"
              },
              "variadic": true
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/cdk.PolicyStatement"
          },
          "variadic": true
        },
        {
          "name": "addPrincipal",
          "parameters": [
            {
              "name": "principal",
              "type": {
                "fqn": "@aws-cdk/cdk.PolicyPrincipal"
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/cdk.PolicyStatement"
          }
        },
        {
          "name": "addAwsPrincipal",
          "parameters": [
            {
              "name": "arn",
              "type": {
                "primitive": "any"
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/cdk.PolicyStatement"
          }
        },
        {
          "name": "addAwsAccountPrincipal",
          "parameters": [
            {
              "name": "accountId",
              "type": {
                "primitive": "any"
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/cdk.PolicyStatement"
          }
        },
        {
          "name": "addServicePrincipal",
          "parameters": [
            {
              "name": "service",
              "type": {
                "primitive": "any"
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/cdk.PolicyStatement"
          }
        },
        {
          "name": "addFederatedPrincipal",
          "parameters": [
            {
              "name": "federated",
              "type": {
                "primitive": "any"
              }
            },
            {
              "name": "conditions",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/cdk.PolicyStatement"
          }
        },
        {
          "name": "addAccountRootPrincipal",
          "returns": {
            "fqn": "@aws-cdk/cdk.PolicyStatement"
          }
        },
        {
          "name": "addResource",
          "parameters": [
            {
              "name": "resource",
              "type": {
                "primitive": "any"
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/cdk.PolicyStatement"
          }
        },
        {
          "docs": {
            "comment": "Adds a ``\"*\"`` resource to this statement."
          },
          "name": "addAllResources",
          "returns": {
            "fqn": "@aws-cdk/cdk.PolicyStatement"
          }
        },
        {
          "name": "addResources",
          "parameters": [
            {
              "name": "resources",
              "type": {
                "primitive": "any"
              },
              "variadic": true
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/cdk.PolicyStatement"
          },
          "variadic": true
        },
        {
          "name": "describe",
          "parameters": [
            {
              "name": "sid",
              "type": {
                "primitive": "any"
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/cdk.PolicyStatement"
          }
        },
        {
          "docs": {
            "comment": "Sets the permission effect to deny access to resources."
          },
          "name": "allow",
          "returns": {
            "fqn": "@aws-cdk/cdk.PolicyStatement"
          }
        },
        {
          "docs": {
            "comment": "Sets the permission effect to allow access to resources."
          },
          "name": "deny",
          "returns": {
            "fqn": "@aws-cdk/cdk.PolicyStatement"
          }
        },
        {
          "docs": {
            "comment": "Add a condition to the Policy"
          },
          "name": "addCondition",
          "parameters": [
            {
              "name": "key",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "value",
              "type": {
                "primitive": "any"
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/cdk.PolicyStatement"
          }
        },
        {
          "docs": {
            "comment": "Add multiple conditions to the Policy"
          },
          "name": "addConditions",
          "parameters": [
            {
              "name": "conditions",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/cdk.PolicyStatement"
          }
        },
        {
          "docs": {
            "comment": "Add a condition to the Policy.",
            "deprecated": "For backwards compatibility. Use addCondition() instead."
          },
          "name": "setCondition",
          "parameters": [
            {
              "name": "key",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "value",
              "type": {
                "primitive": "any"
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/cdk.PolicyStatement"
          }
        },
        {
          "name": "limitToAccount",
          "parameters": [
            {
              "name": "accountId",
              "type": {
                "primitive": "any"
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/cdk.PolicyStatement"
          }
        },
        {
          "name": "resolve",
          "returns": {
            "primitive": "any"
          }
        },
        {
          "name": "toJson",
          "returns": {
            "primitive": "any"
          }
        }
      ],
      "name": "PolicyStatement",
      "namespace": "@aws-cdk/cdk",
      "properties": [
        {
          "docs": {
            "comment": "Indicates if this permission has a \"Principal\" section."
          },
          "immutable": true,
          "name": "hasPrincipal",
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "docs": {
            "comment": "Indicates if this permission as at least one resource associated with it."
          },
          "immutable": true,
          "name": "hasResource",
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "docs": {
            "comment": "Indicates if this permission has only a ``\"*\"`` resource associated with it."
          },
          "immutable": true,
          "name": "isOnlyStarResource",
          "type": {
            "primitive": "boolean"
          }
        }
      ]
    },
    "@aws-cdk/cdk.Referenceable": {
      "abstract": true,
      "assembly": "@aws-cdk/cdk",
      "base": {
        "fqn": "@aws-cdk/cdk.StackElement"
      },
      "docs": {
        "comment": "A construct, which is part of a stack and can be referenced using it's logical ID\nusing the CloudFormation intrinsic function { Ref: ID }."
      },
      "fqn": "@aws-cdk/cdk.Referenceable",
      "initializer": {
        "docs": {
          "comment": "Creates an entity and binds it to a tree.\nNote that the root of the tree must be a Stack object (not just any Root)."
        },
        "initializer": true,
        "parameters": [
          {
            "docs": {
              "comment": "The parent construct"
            },
            "name": "parent",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "name": "name",
            "type": {
              "primitive": "string"
            }
          }
        ]
      },
      "kind": "class",
      "name": "Referenceable",
      "namespace": "@aws-cdk/cdk",
      "properties": [
        {
          "docs": {
            "comment": "Returns a token to a CloudFormation { Ref } that references this entity based on it's logical ID."
          },
          "immutable": true,
          "name": "ref",
          "type": {
            "fqn": "@aws-cdk/cdk.Token"
          }
        }
      ]
    },
    "@aws-cdk/cdk.Resource": {
      "assembly": "@aws-cdk/cdk",
      "base": {
        "fqn": "@aws-cdk/cdk.Referenceable"
      },
      "docs": {
        "comment": "Represents a CloudFormation resource."
      },
      "fqn": "@aws-cdk/cdk.Resource",
      "initializer": {
        "docs": {
          "comment": "Creates a resource construct."
        },
        "initializer": true,
        "parameters": [
          {
            "name": "parent",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "name": "name",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/cdk.ResourceProps"
            }
          }
        ]
      },
      "kind": "class",
      "methods": [
        {
          "docs": {
            "comment": "A decoration used to create a CloudFormation attribute property."
          },
          "name": "attribute",
          "parameters": [
            {
              "docs": {
                "comment": "Custom name for the attribute (default is the name of the property)\nNOTE: we return \"any\" here to satistfy jsii, which doesn't support lambdas."
              },
              "name": "customName",
              "type": {
                "optional": true,
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "primitive": "any"
          },
          "static": true
        },
        {
          "docs": {
            "comment": "Returns a token for an runtime attribute of this resource.\nIdeally, use generated attribute accessors (e.g. `resource.arn`), but this can be used for future compatibility\nin case there is no generated attribute."
          },
          "name": "getAtt",
          "parameters": [
            {
              "docs": {
                "comment": "The name of the attribute."
              },
              "name": "attributeName",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/cdk.Token"
          }
        },
        {
          "docs": {
            "comment": "Adds a dependency on another resource."
          },
          "name": "addDependency",
          "parameters": [
            {
              "docs": {
                "comment": "The other resource."
              },
              "name": "other",
              "type": {
                "fqn": "@aws-cdk/cdk.IDependable"
              },
              "variadic": true
            }
          ],
          "variadic": true
        },
        {
          "docs": {
            "comment": "Emits CloudFormation for this resource."
          },
          "name": "toCloudFormation",
          "returns": {
            "primitive": "json"
          }
        },
        {
          "name": "renderProperties",
          "protected": true,
          "returns": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        }
      ],
      "name": "Resource",
      "namespace": "@aws-cdk/cdk",
      "properties": [
        {
          "docs": {
            "comment": "Options for this resource, such as condition, update policy etc."
          },
          "immutable": true,
          "name": "options",
          "type": {
            "fqn": "@aws-cdk/cdk.ResourceOptions"
          }
        },
        {
          "docs": {
            "comment": "AWS resource type."
          },
          "immutable": true,
          "name": "resourceType",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "comment": "AWS resource properties"
          },
          "immutable": true,
          "name": "properties",
          "protected": true,
          "type": {
            "primitive": "any"
          }
        }
      ]
    },
    "@aws-cdk/cdk.StackElement": {
      "abstract": true,
      "assembly": "@aws-cdk/cdk",
      "base": {
        "fqn": "@aws-cdk/cdk.Construct"
      },
      "docs": {
        "comment": "An element of a CloudFormation stack."
      },
      "fqn": "@aws-cdk/cdk.StackElement",
      "initializer": {
        "docs": {
          "comment": "Creates an entity and binds it to a tree.\nNote that the root of the tree must be a Stack object (not just any Root)."
        },
        "initializer": true,
        "parameters": [
          {
            "docs": {
              "comment": "The parent construct"
            },
            "name": "parent",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "name": "name",
            "type": {
              "primitive": "string"
            }
          }
        ]
      },
      "interfaces": [
        {
          "fqn": "@aws-cdk/cdk.IDependable"
        }
      ],
      "kind": "class",
      "methods": [
        {
          "abstract": true,
          "docs": {
            "comment": "Returns the CloudFormation 'snippet' for this entity. The snippet will only be merged\nat the root level to ensure there are no identity conflicts.\n\nFor example, a Resource class will return something like:\n{\n     Resources: {\n         [this.logicalId]: {\n             Type: this.resourceType,\n             Properties: this.props,\n             Condition: this.condition\n         }\n     }\n}"
          },
          "name": "toCloudFormation",
          "returns": {
            "primitive": "json"
          }
        }
      ],
      "name": "StackElement",
      "namespace": "@aws-cdk/cdk",
      "properties": [
        {
          "docs": {
            "comment": "The logical ID for this CloudFormation stack element"
          },
          "immutable": true,
          "name": "logicalId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "comment": "The stack this Construct has been made a part of"
          },
          "name": "stack",
          "protected": true,
          "type": {
            "fqn": "@aws-cdk/cdk.Stack"
          }
        },
        {
          "docs": {
            "returns": "the stack trace of the point where this Resource was created from, sourced\nfrom the +metadata+ entry typed +aws:cdk:logicalId+, and with the bottom-most\nnode +internal+ entries filtered."
          },
          "immutable": true,
          "name": "creationStackTrace",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "comment": "Return the path with respect to the stack"
          },
          "immutable": true,
          "name": "stackPath",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "comment": "Returns the set of all stack elements (resources, parameters, conditions)\nthat should be added when a resource \"depends on\" this construct."
          },
          "immutable": true,
          "name": "dependencyElements",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/cdk.IDependable"
              },
              "kind": "array"
            }
          }
        }
      ]
    },
    "@aws-cdk/cdk.Tag": {
      "assembly": "@aws-cdk/cdk",
      "datatype": true,
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html"
      },
      "fqn": "@aws-cdk/cdk.Tag",
      "kind": "interface",
      "name": "Tag",
      "namespace": "@aws-cdk/cdk",
      "properties": [
        {
          "docs": {
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html#cfn-resource-tags-key"
          },
          "name": "key",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html#cfn-resource-tags-value"
          },
          "name": "value",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/cdk.Token": {
      "assembly": "@aws-cdk/cdk",
      "docs": {
        "comment": "Represents a lazy-evaluated value. Can be used to delay evaluation of a certain value\nin case, for example, that it requires some context or late-bound data."
      },
      "fqn": "@aws-cdk/cdk.Token",
      "initializer": {
        "docs": {
          "comment": "Creates a token that resolves to `value`. If value is a function,\nthe function is evaluated upon resolution and the value it returns will be\nuesd as the token's value."
        },
        "initializer": true,
        "parameters": [
          {
            "name": "valueOrFunction",
            "type": {
              "optional": true,
              "primitive": "any"
            }
          }
        ]
      },
      "kind": "class",
      "methods": [
        {
          "docs": {
            "returns": "The resolved value for this token."
          },
          "name": "resolve",
          "returns": {
            "primitive": "any"
          }
        }
      ],
      "name": "Token",
      "namespace": "@aws-cdk/cdk"
    }
  },
  "name": "@aws-cdk/aws-lambda",
  "readme": {
    "markdown": "## AWS Lambda Construct Library\n\nThis construct library allows you to define AWS Lambda functions.\n\n```ts\nconst fn = new Lambda(this, 'MyFunction', {\n    runtime: LambdaRuntime.NodeJS810,\n    handler: 'index.handler'\n    code: LambdaCode.inline('exports.handler = function(event, ctx, cb) { return cb(null, \"hi\"); }'),\n});\n```\n\n### Handler Code\n\nThe `LambdaCode` class includes static convenience methods for various types of\nruntime code.\n\n * `LambdaCode.bucket(bucket, key[, objectVersion])` - specify an S3 object that\n   contains the archive of your runtime code.\n * `LambdaCode.inline(code)` - inline the handle code as a string. This is\n   limited to 4KB. The class `InlineJavaScriptLambda` can be used to simplify\n   inlining JavaScript functions.\n * `LambdaCode.directory(directory)` - specify a directory in the local filesystem\n   which will be zipped and uploaded to S3 before deployment.\n * `LambdaCode.file(path)` - specify a file to be used for Lambda code. This can\n   be, for example a JAR or a ZIP file, based on the runtime used.\n\nThe following example shows how to define a Python function and deploy the code from the\nlocal directory `my-lambda-handler` to it:\n\n```ts\nnew Lambda(this, 'MyLambda', {\n    code: LambdaCode.directory(path.join(__dirname, 'my-lambda-handler')),\n    handler: 'index.main',\n    runtime: LambdaRuntime.Python36\n});\n```\n\nWhen deploying a stack that contains this code, the directory will be zip\narchived and then uploaded to an S3 bucket, then the exact location of the S3\nobjects will be passed when the stack is deployed.\n"
  },
  "schema": "jsii/1.0",
  "targets": {
    "dotnet": {
      "namespace": "Amazon.CDK.AWS.Lambda"
    },
    "java": {
      "maven": {
        "artifactId": "aws-lambda",
        "groupId": "com.amazonaws.cdk"
      },
      "package": "com.amazonaws.cdk.aws.lambda"
    },
    "js": {
      "npm": "@aws-cdk/aws-lambda"
    }
  },
  "types": {
    "@aws-cdk/aws-lambda.Alias": {
      "assembly": "@aws-cdk/aws-lambda",
      "base": {
        "fqn": "@aws-cdk/aws-lambda.LambdaRef"
      },
      "docs": {
        "comment": "A new alias to a particular version of a Lambda function."
      },
      "fqn": "@aws-cdk/aws-lambda.Alias",
      "initializer": {
        "initializer": true,
        "parameters": [
          {
            "name": "parent",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "name": "name",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-lambda.AliasProps"
            }
          }
        ]
      },
      "kind": "class",
      "methods": [
        {
          "docs": {
            "comment": "Adds a permission to the Lambda resource policy."
          },
          "name": "addPermission",
          "parameters": [
            {
              "name": "name",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "permission",
              "type": {
                "fqn": "@aws-cdk/aws-lambda.LambdaPermission"
              }
            }
          ]
        }
      ],
      "name": "Alias",
      "namespace": "@aws-cdk/aws-lambda",
      "properties": [
        {
          "docs": {
            "comment": "ARN of this alias\n\nUsed to be able to use Alias in place of a regular Lambda. Lambda accepts\nARNs everywhere it accepts function names."
          },
          "immutable": true,
          "name": "functionName",
          "type": {
            "fqn": "@aws-cdk/aws-lambda.FunctionName"
          }
        },
        {
          "docs": {
            "comment": "ARN of this alias\n\nUsed to be able to use Alias in place of a regular Lambda. Lambda accepts\nARNs everywhere it accepts function names."
          },
          "immutable": true,
          "name": "functionArn",
          "type": {
            "fqn": "@aws-cdk/aws-lambda.FunctionArn"
          }
        },
        {
          "docs": {
            "comment": "Role associated with this alias"
          },
          "immutable": true,
          "name": "role",
          "type": {
            "fqn": "@aws-cdk/aws-iam.Role",
            "optional": true
          }
        },
        {
          "docs": {
            "comment": "Whether the addPermission() call adds any permissions\n\nTrue for new Lambdas, false for imported Lambdas (they might live in different accounts)."
          },
          "immutable": true,
          "name": "canCreatePermissions",
          "protected": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ]
    },
    "@aws-cdk/aws-lambda.AliasProps": {
      "assembly": "@aws-cdk/aws-lambda",
      "datatype": true,
      "docs": {
        "comment": "Properties for a new Lambda alias"
      },
      "fqn": "@aws-cdk/aws-lambda.AliasProps",
      "kind": "interface",
      "name": "AliasProps",
      "namespace": "@aws-cdk/aws-lambda",
      "properties": [
        {
          "docs": {
            "comment": "Description for the alias",
            "default": "No description"
          },
          "name": "description",
          "type": {
            "optional": true,
            "primitive": "string"
          }
        },
        {
          "docs": {
            "comment": "Function version this alias refers to\n\nUse lambda.addVersion() to obtain a new lambda version to refer to."
          },
          "name": "version",
          "type": {
            "fqn": "@aws-cdk/aws-lambda.LambdaVersion"
          }
        },
        {
          "docs": {
            "comment": "Name of this alias"
          },
          "name": "aliasName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "comment": "Additional versions with individual weights this alias points to\n\nIndividual additional version weights specified here should add up to\n(less than) one. All remaining weight is routed to the default\nversion.\n\nFor example, the config is\n\n      version: \"1\"\n      additionalVersions: [{ version: \"2\", weight: 0.05 }]\n\nThen 5% of traffic will be routed to function version 2, while\nthe remaining 95% of traffic will be routed to function version 1.",
            "default": "No additional versions"
          },
          "name": "additionalVersions",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-lambda.VersionWeight"
              },
              "kind": "array"
            },
            "optional": true
          }
        }
      ]
    },
    "@aws-cdk/aws-lambda.FunctionArn": {
      "assembly": "@aws-cdk/aws-lambda",
      "base": {
        "fqn": "@aws-cdk/cdk.Arn"
      },
      "fqn": "@aws-cdk/aws-lambda.FunctionArn",
      "initializer": {
        "docs": {
          "comment": "Creates a token that resolves to `value`. If value is a function,\nthe function is evaluated upon resolution and the value it returns will be\nuesd as the token's value."
        },
        "initializer": true,
        "parameters": [
          {
            "name": "valueOrFunction",
            "type": {
              "optional": true,
              "primitive": "any"
            }
          }
        ]
      },
      "kind": "class",
      "name": "FunctionArn",
      "namespace": "@aws-cdk/aws-lambda"
    },
    "@aws-cdk/aws-lambda.FunctionName": {
      "assembly": "@aws-cdk/aws-lambda",
      "base": {
        "fqn": "@aws-cdk/cdk.Token"
      },
      "fqn": "@aws-cdk/aws-lambda.FunctionName",
      "initializer": {
        "docs": {
          "comment": "Creates a token that resolves to `value`. If value is a function,\nthe function is evaluated upon resolution and the value it returns will be\nuesd as the token's value."
        },
        "initializer": true,
        "parameters": [
          {
            "name": "valueOrFunction",
            "type": {
              "optional": true,
              "primitive": "any"
            }
          }
        ]
      },
      "kind": "class",
      "name": "FunctionName",
      "namespace": "@aws-cdk/aws-lambda"
    },
    "@aws-cdk/aws-lambda.IJavaScriptLambdaHandler": {
      "assembly": "@aws-cdk/aws-lambda",
      "docs": {
        "comment": "Defines the handler code for an inline JavaScript lambda function.\n\nAWS Lambda invokes your Lambda function via a handler object. A handler\nrepresents the name of your Lambda function (and serves as the entry point\nthat AWS Lambda uses to execute your function code. For example:"
      },
      "fqn": "@aws-cdk/aws-lambda.IJavaScriptLambdaHandler",
      "kind": "interface",
      "methods": [
        {
          "docs": {
            "comment": "The main Lambda entrypoint."
          },
          "name": "fn",
          "parameters": [
            {
              "docs": {
                "comment": "Event sources can range from a supported AWS service or\ncustom applications that invoke your Lambda function. For examples, see\n[Sample Events Published by Event\nSources](https://docs.aws.amazon.com/lambda/latest/dg/eventsources.html)."
              },
              "name": "event",
              "type": {
                "primitive": "any"
              }
            },
            {
              "docs": {
                "comment": "AWS Lambda uses this parameter to provide details of your\nLambda function's execution. For more information, see [The Context\nObject](https://docs.aws.amazon.com/lambda/latest/dg/nodejs-prog-model-context.html)."
              },
              "name": "context",
              "type": {
                "primitive": "any"
              }
            },
            {
              "docs": {
                "comment": "The Node.js runtimes v6.10 and v8.10 support the optional\ncallback parameter. You can use it to explicitly return information back\nto the caller. Signature is `callback(err, response)`."
              },
              "name": "callback",
              "type": {
                "primitive": "any"
              }
            }
          ]
        }
      ],
      "name": "IJavaScriptLambdaHandler",
      "namespace": "@aws-cdk/aws-lambda"
    },
    "@aws-cdk/aws-lambda.InlinableJavascriptLambdaRuntime": {
      "assembly": "@aws-cdk/aws-lambda",
      "docs": {
        "comment": "A ``LambdaRuntime`` that can be used for inlining JavaScript."
      },
      "fqn": "@aws-cdk/aws-lambda.InlinableJavascriptLambdaRuntime",
      "interfaces": [
        {
          "fqn": "@aws-cdk/aws-lambda.InlinableLambdaRuntime"
        }
      ],
      "kind": "interface",
      "name": "InlinableJavascriptLambdaRuntime",
      "namespace": "@aws-cdk/aws-lambda"
    },
    "@aws-cdk/aws-lambda.InlinableLambdaRuntime": {
      "assembly": "@aws-cdk/aws-lambda",
      "datatype": true,
      "docs": {
        "comment": "A ``LambdaRuntime`` that can be used in conjunction with the ``ZipFile``\nproperty of the ``AWS::Lambda::Function`` resource."
      },
      "fqn": "@aws-cdk/aws-lambda.InlinableLambdaRuntime",
      "kind": "interface",
      "name": "InlinableLambdaRuntime",
      "namespace": "@aws-cdk/aws-lambda",
      "properties": [
        {
          "immutable": true,
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "immutable": true,
          "name": "supportsInlineCode",
          "type": {
            "primitive": "boolean"
          }
        }
      ]
    },
    "@aws-cdk/aws-lambda.InlineJavaScriptLambda": {
      "assembly": "@aws-cdk/aws-lambda",
      "base": {
        "fqn": "@aws-cdk/aws-lambda.Lambda"
      },
      "docs": {
        "comment": "A lambda function with inline node.js code.\n\nUsage:\n\n    new InlineJavaScriptLambda(this, 'MyFunc', {\n      handler: {\n        fn: (event, context, callback) => {\n          console.log('hello, world');\n          callback();\n        }\n      }\n    });\n\nThis will define a node.js 6.10 function with the provided function has\nthe handler code."
      },
      "fqn": "@aws-cdk/aws-lambda.InlineJavaScriptLambda",
      "initializer": {
        "initializer": true,
        "parameters": [
          {
            "name": "parent",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "name": "name",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-lambda.InlineJavaScriptLambdaProps"
            }
          }
        ]
      },
      "kind": "class",
      "name": "InlineJavaScriptLambda",
      "namespace": "@aws-cdk/aws-lambda"
    },
    "@aws-cdk/aws-lambda.InlineJavaScriptLambdaProps": {
      "assembly": "@aws-cdk/aws-lambda",
      "datatype": true,
      "fqn": "@aws-cdk/aws-lambda.InlineJavaScriptLambdaProps",
      "kind": "interface",
      "name": "InlineJavaScriptLambdaProps",
      "namespace": "@aws-cdk/aws-lambda",
      "properties": [
        {
          "docs": {
            "comment": "The lambda handler as a javascript function.\n\nThis must be a javascript function object. The reason it is `any` is due\nto limitations of the jsii compiler."
          },
          "name": "handler",
          "type": {
            "fqn": "@aws-cdk/aws-lambda.IJavaScriptLambdaHandler"
          }
        },
        {
          "docs": {
            "comment": "A description of the function."
          },
          "name": "description",
          "type": {
            "optional": true,
            "primitive": "string"
          }
        },
        {
          "docs": {
            "comment": "The function execution time (in seconds) after which Lambda terminates\nthe function. Because the execution time affects cost, set this value\nbased on the function's expected execution time.",
            "default": "30 seconds."
          },
          "name": "timeout",
          "type": {
            "optional": true,
            "primitive": "number"
          }
        },
        {
          "docs": {
            "comment": "Key-value pairs that Lambda caches and makes available for your Lambda\nfunctions. Use environment variables to apply configuration changes, such\nas test and production environment configurations, without changing your\nLambda function source code."
          },
          "name": "environment",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            },
            "optional": true
          }
        },
        {
          "docs": {
            "comment": "The runtime environment for the Lambda function that you are uploading.\nFor valid values, see the Runtime property in the AWS Lambda Developer\nGuide.",
            "default": "NodeJS810"
          },
          "name": "runtime",
          "type": {
            "fqn": "@aws-cdk/aws-lambda.InlinableJavascriptLambdaRuntime",
            "optional": true
          }
        },
        {
          "docs": {
            "comment": "A name for the function. If you don't specify a name, AWS CloudFormation\ngenerates a unique physical ID and uses that ID for the function's name.\nFor more information, see Name Type."
          },
          "name": "functionName",
          "type": {
            "optional": true,
            "primitive": "string"
          }
        },
        {
          "docs": {
            "comment": "The amount of memory, in MB, that is allocated to your Lambda function.\nLambda uses this value to proportionally allocate the amount of CPU\npower. For more information, see Resource Model in the AWS Lambda\nDeveloper Guide.",
            "default": "The default value is 128 MB"
          },
          "name": "memorySize",
          "type": {
            "optional": true,
            "primitive": "number"
          }
        }
      ]
    },
    "@aws-cdk/aws-lambda.Lambda": {
      "assembly": "@aws-cdk/aws-lambda",
      "base": {
        "fqn": "@aws-cdk/aws-lambda.LambdaRef"
      },
      "docs": {
        "comment": "Deploys a file from from inside the construct library as a function.\n\nThe supplied file is subject to the 4096 bytes limit of being embedded in a\nCloudFormation template.\n\nThe construct includes an associated role with the lambda.\n\nThis construct does not yet reproduce all features from the underlying resource\nlibrary."
      },
      "fqn": "@aws-cdk/aws-lambda.Lambda",
      "initializer": {
        "initializer": true,
        "parameters": [
          {
            "name": "parent",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "name": "name",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-lambda.LambdaProps"
            }
          }
        ]
      },
      "kind": "class",
      "methods": [
        {
          "docs": {
            "comment": "Adds an environment variable to this Lambda function.\nIf this is a ref to a Lambda function, this operation results in a no-op."
          },
          "name": "addEnvironment",
          "parameters": [
            {
              "docs": {
                "comment": "The environment variable key."
              },
              "name": "key",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "comment": "The environment variable's value."
              },
              "name": "value",
              "type": {
                "primitive": "any"
              }
            }
          ]
        },
        {
          "docs": {
            "comment": "Add a new version for this Lambda\n\nIf you want to deploy through CloudFormation and use aliases, you need to\nadd a new version (with a new name) to your Lambda every time you want\nto deploy an update. An alias can then refer to the newly created Version.\n\nAll versions should have distinct names, and you should not delete versions\nas long as your Alias needs to refer to them.",
            "returns": "A new Version object."
          },
          "name": "addVersion",
          "parameters": [
            {
              "docs": {
                "comment": "A unique name for this version"
              },
              "name": "name",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "comment": "The SHA-256 hash of the most recently deployed Lambda source code, or\nomit to skip validation."
              },
              "name": "codeSha256",
              "type": {
                "optional": true,
                "primitive": "string"
              }
            },
            {
              "docs": {
                "comment": "A description for this version."
              },
              "name": "description",
              "type": {
                "optional": true,
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/aws-lambda.LambdaVersion"
          }
        }
      ],
      "name": "Lambda",
      "namespace": "@aws-cdk/aws-lambda",
      "properties": [
        {
          "docs": {
            "comment": "Name of this function"
          },
          "immutable": true,
          "name": "functionName",
          "type": {
            "fqn": "@aws-cdk/aws-lambda.FunctionName"
          }
        },
        {
          "docs": {
            "comment": "ARN of this function"
          },
          "immutable": true,
          "name": "functionArn",
          "type": {
            "fqn": "@aws-cdk/aws-lambda.FunctionArn"
          }
        },
        {
          "docs": {
            "comment": "Execution role associated with this function"
          },
          "immutable": true,
          "name": "role",
          "type": {
            "fqn": "@aws-cdk/aws-iam.Role",
            "optional": true
          }
        },
        {
          "docs": {
            "comment": "The runtime configured for this lambda."
          },
          "immutable": true,
          "name": "runtime",
          "type": {
            "fqn": "@aws-cdk/aws-lambda.LambdaRuntime"
          }
        },
        {
          "docs": {
            "comment": "The name of the handler configured for this lambda."
          },
          "immutable": true,
          "name": "handler",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "comment": "Whether the addPermission() call adds any permissions\n\nTrue for new Lambdas, false for imported Lambdas (they might live in different accounts)."
          },
          "immutable": true,
          "name": "canCreatePermissions",
          "protected": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ]
    },
    "@aws-cdk/aws-lambda.LambdaAssetCode": {
      "assembly": "@aws-cdk/aws-lambda",
      "base": {
        "fqn": "@aws-cdk/aws-lambda.LambdaCode"
      },
      "docs": {
        "comment": "Lambda code from a local directory."
      },
      "fqn": "@aws-cdk/aws-lambda.LambdaAssetCode",
      "initializer": {
        "initializer": true,
        "parameters": [
          {
            "docs": {
              "comment": "The path to the asset file or directory."
            },
            "name": "path",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "comment": "The asset packaging format"
            },
            "name": "packaging",
            "type": {
              "fqn": "@aws-cdk/assets.AssetPackaging"
            }
          }
        ]
      },
      "kind": "class",
      "methods": [
        {
          "docs": {
            "comment": "Called when the lambda is initialized to allow this object to\nbind to the stack, add resources and have fun."
          },
          "name": "bind",
          "parameters": [
            {
              "name": "lambda",
              "type": {
                "fqn": "@aws-cdk/aws-lambda.Lambda"
              }
            }
          ]
        },
        {
          "docs": {
            "comment": "Called during stack synthesis to render the CodePropery for the\nLambda function."
          },
          "name": "toJSON",
          "returns": {
            "fqn": "@aws-cdk/aws-lambda.cloudformation.FunctionResource.CodeProperty"
          }
        }
      ],
      "name": "LambdaAssetCode",
      "namespace": "@aws-cdk/aws-lambda"
    },
    "@aws-cdk/aws-lambda.LambdaCode": {
      "abstract": true,
      "assembly": "@aws-cdk/aws-lambda",
      "fqn": "@aws-cdk/aws-lambda.LambdaCode",
      "initializer": {
        "initializer": true
      },
      "kind": "class",
      "methods": [
        {
          "docs": {
            "returns": "`LambdaS3Code` associated with the specified S3 object."
          },
          "name": "bucket",
          "parameters": [
            {
              "docs": {
                "comment": "The S3 bucket"
              },
              "name": "bucket",
              "type": {
                "fqn": "@aws-cdk/aws-s3.BucketRef"
              }
            },
            {
              "docs": {
                "comment": "The object key"
              },
              "name": "key",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "comment": "Optional S3 object version"
              },
              "name": "objectVersion",
              "type": {
                "optional": true,
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/aws-lambda.LambdaS3Code"
          },
          "static": true
        },
        {
          "docs": {
            "returns": "`LambdaInlineCode` with inline code."
          },
          "name": "inline",
          "parameters": [
            {
              "docs": {
                "comment": "The actual handler code (limited to 4KiB)"
              },
              "name": "code",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/aws-lambda.LambdaInlineCode"
          },
          "static": true
        },
        {
          "docs": {
            "returns": "Zip archives the contents of a directory on disk and uses this\nas the lambda handler's code."
          },
          "name": "directory",
          "parameters": [
            {
              "docs": {
                "comment": "The directory to zip"
              },
              "name": "directoryToZip",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/aws-lambda.LambdaAssetCode"
          },
          "static": true
        },
        {
          "docs": {
            "returns": "Uses a file on disk as a lambda handler's code."
          },
          "name": "file",
          "parameters": [
            {
              "docs": {
                "comment": "The file path"
              },
              "name": "filePath",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/aws-lambda.LambdaAssetCode"
          },
          "static": true
        },
        {
          "abstract": true,
          "docs": {
            "comment": "Called during stack synthesis to render the CodePropery for the\nLambda function."
          },
          "name": "toJSON",
          "returns": {
            "fqn": "@aws-cdk/aws-lambda.cloudformation.FunctionResource.CodeProperty"
          }
        },
        {
          "docs": {
            "comment": "Called when the lambda is initialized to allow this object to\nbind to the stack, add resources and have fun."
          },
          "name": "bind",
          "parameters": [
            {
              "name": "_lambda",
              "type": {
                "fqn": "@aws-cdk/aws-lambda.Lambda"
              }
            }
          ]
        }
      ],
      "name": "LambdaCode",
      "namespace": "@aws-cdk/aws-lambda"
    },
    "@aws-cdk/aws-lambda.LambdaInlineCode": {
      "assembly": "@aws-cdk/aws-lambda",
      "base": {
        "fqn": "@aws-cdk/aws-lambda.LambdaCode"
      },
      "docs": {
        "comment": "Lambda code from an inline string (limited to 4KiB)."
      },
      "fqn": "@aws-cdk/aws-lambda.LambdaInlineCode",
      "initializer": {
        "initializer": true,
        "parameters": [
          {
            "name": "code",
            "type": {
              "primitive": "string"
            }
          }
        ]
      },
      "kind": "class",
      "methods": [
        {
          "docs": {
            "comment": "Called when the lambda is initialized to allow this object to\nbind to the stack, add resources and have fun."
          },
          "name": "bind",
          "parameters": [
            {
              "name": "lambda",
              "type": {
                "fqn": "@aws-cdk/aws-lambda.Lambda"
              }
            }
          ]
        },
        {
          "docs": {
            "comment": "Called during stack synthesis to render the CodePropery for the\nLambda function."
          },
          "name": "toJSON",
          "returns": {
            "fqn": "@aws-cdk/aws-lambda.cloudformation.FunctionResource.CodeProperty"
          }
        }
      ],
      "name": "LambdaInlineCode",
      "namespace": "@aws-cdk/aws-lambda"
    },
    "@aws-cdk/aws-lambda.LambdaPermission": {
      "assembly": "@aws-cdk/aws-lambda",
      "datatype": true,
      "docs": {
        "comment": "Represents a permission statement that can be added to a Lambda's resource policy\nvia the `addToResourcePolicy` method."
      },
      "fqn": "@aws-cdk/aws-lambda.LambdaPermission",
      "kind": "interface",
      "name": "LambdaPermission",
      "namespace": "@aws-cdk/aws-lambda",
      "properties": [
        {
          "docs": {
            "comment": "The Lambda actions that you want to allow in this statement. For example,\nyou can specify lambda:CreateFunction to specify a certain action, or use\na wildcard (``lambda:*``) to grant permission to all Lambda actions. For a\nlist of actions, see Actions and Condition Context Keys for AWS Lambda in\nthe IAM User Guide.",
            "default": "'lambda:InvokeFunction'"
          },
          "name": "action",
          "type": {
            "optional": true,
            "primitive": "string"
          }
        },
        {
          "docs": {
            "comment": "A unique token that must be supplied by the principal invoking the\nfunction.",
            "default": "The caller would not need to present a token."
          },
          "name": "eventSourceToken",
          "type": {
            "optional": true,
            "primitive": "string"
          }
        },
        {
          "docs": {
            "comment": "The entity for which you are granting permission to invoke the Lambda\nfunction. This entity can be any valid AWS service principal, such as\ns3.amazonaws.com or sns.amazonaws.com, or, if you are granting\ncross-account permission, an AWS account ID. For example, you might want\nto allow a custom application in another AWS account to push events to\nLambda by invoking your function.\n\nThe principal can be either an AccountPrincipal or a ServicePrincipal."
          },
          "name": "principal",
          "type": {
            "fqn": "@aws-cdk/cdk.PolicyPrincipal"
          }
        },
        {
          "docs": {
            "comment": "The AWS account ID (without hyphens) of the source owner. For example, if\nyou specify an S3 bucket in the SourceArn property, this value is the\nbucket owner's account ID. You can use this property to ensure that all\nsource principals are owned by a specific account."
          },
          "name": "sourceAccount",
          "type": {
            "optional": true,
            "primitive": "any"
          }
        },
        {
          "docs": {
            "comment": "The ARN of a resource that is invoking your function. When granting\nAmazon Simple Storage Service (Amazon S3) permission to invoke your\nfunction, specify this property with the bucket ARN as its value. This\nensures that events generated only from the specified bucket, not just\nany bucket from any AWS account that creates a mapping to your function,\ncan invoke the function."
          },
          "name": "sourceArn",
          "type": {
            "fqn": "@aws-cdk/cdk.Arn",
            "optional": true
          }
        }
      ]
    },
    "@aws-cdk/aws-lambda.LambdaProps": {
      "assembly": "@aws-cdk/aws-lambda",
      "datatype": true,
      "fqn": "@aws-cdk/aws-lambda.LambdaProps",
      "kind": "interface",
      "name": "LambdaProps",
      "namespace": "@aws-cdk/aws-lambda",
      "properties": [
        {
          "docs": {
            "comment": "The source code of your Lambda function. You can point to a file in an\nAmazon Simple Storage Service (Amazon S3) bucket or specify your source\ncode as inline text."
          },
          "name": "code",
          "type": {
            "fqn": "@aws-cdk/aws-lambda.LambdaCode"
          }
        },
        {
          "docs": {
            "comment": "A description of the function."
          },
          "name": "description",
          "type": {
            "optional": true,
            "primitive": "string"
          }
        },
        {
          "docs": {
            "comment": "The name of the function (within your source code) that Lambda calls to\nstart running your code. For more information, see the Handler property\nin the AWS Lambda Developer Guide.\n\nNOTE: If you specify your source code as inline text by specifying the\nZipFile property within the Code property, specify index.function_name as\nthe handler."
          },
          "name": "handler",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "comment": "The function execution time (in seconds) after which Lambda terminates\nthe function. Because the execution time affects cost, set this value\nbased on the function's expected execution time.",
            "default": "3 seconds."
          },
          "name": "timeout",
          "type": {
            "optional": true,
            "primitive": "number"
          }
        },
        {
          "docs": {
            "comment": "Key-value pairs that Lambda caches and makes available for your Lambda\nfunctions. Use environment variables to apply configuration changes, such\nas test and production environment configurations, without changing your\nLambda function source code."
          },
          "name": "environment",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            },
            "optional": true
          }
        },
        {
          "docs": {
            "comment": "The runtime environment for the Lambda function that you are uploading.\nFor valid values, see the Runtime property in the AWS Lambda Developer\nGuide."
          },
          "name": "runtime",
          "type": {
            "fqn": "@aws-cdk/aws-lambda.LambdaRuntime"
          }
        },
        {
          "docs": {
            "comment": "A name for the function. If you don't specify a name, AWS CloudFormation\ngenerates a unique physical ID and uses that ID for the function's name.\nFor more information, see Name Type."
          },
          "name": "functionName",
          "type": {
            "optional": true,
            "primitive": "string"
          }
        },
        {
          "docs": {
            "comment": "The amount of memory, in MB, that is allocated to your Lambda function.\nLambda uses this value to proportionally allocate the amount of CPU\npower. For more information, see Resource Model in the AWS Lambda\nDeveloper Guide.",
            "default": "The default value is 128 MB"
          },
          "name": "memorySize",
          "type": {
            "optional": true,
            "primitive": "number"
          }
        },
        {
          "docs": {
            "comment": "Initial policy statements to add to the created Lambda Role.\n\nYou can call `addToRolePolicy` to the created lambda to add statements post creation."
          },
          "name": "initialPolicy",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/cdk.PolicyStatement"
              },
              "kind": "array"
            },
            "optional": true
          }
        },
        {
          "docs": {
            "comment": "Lambda execution role.\n\nThis is the role that will be assumed by the function upon execution.\nIt controls the permissions that the function will have. The Role must\nbe assumable by the 'lambda.amazonaws.com' service principal.",
            "default": "a unique role will be generated for this lambda function.\nBoth supplied and generated roles can always be changed by calling `addToRolePolicy`."
          },
          "name": "role",
          "type": {
            "fqn": "@aws-cdk/aws-iam.Role",
            "optional": true
          }
        }
      ]
    },
    "@aws-cdk/aws-lambda.LambdaRef": {
      "abstract": true,
      "assembly": "@aws-cdk/aws-lambda",
      "base": {
        "fqn": "@aws-cdk/cdk.Construct"
      },
      "fqn": "@aws-cdk/aws-lambda.LambdaRef",
      "initializer": {
        "docs": {
          "comment": "Creates a new construct node."
        },
        "initializer": true,
        "parameters": [
          {
            "docs": {
              "comment": "The parent construct"
            },
            "name": "parent",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "name": "name",
            "type": {
              "primitive": "string"
            }
          }
        ]
      },
      "interfaces": [
        {
          "fqn": "@aws-cdk/aws-events.IEventRuleTargetProps"
        },
        {
          "fqn": "@aws-cdk/aws-logs.ILogSubscriptionDestination"
        }
      ],
      "kind": "class",
      "methods": [
        {
          "docs": {
            "comment": "Creates a Lambda function object which represents a function not defined\nwithin this stack.\n\n      Lambda.import(this, 'MyImportedFunction', { lambdaArn: new LambdaArn('arn:aws:...') });"
          },
          "name": "import",
          "parameters": [
            {
              "docs": {
                "comment": "The parent construct"
              },
              "name": "parent",
              "type": {
                "fqn": "@aws-cdk/cdk.Construct"
              }
            },
            {
              "docs": {
                "comment": "The name of the lambda construct"
              },
              "name": "name",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "comment": "A reference to a Lambda function. Can be created manually (see\nexample above) or obtained through a call to `lambda.export()`."
              },
              "name": "ref",
              "type": {
                "fqn": "@aws-cdk/aws-lambda.LambdaRefProps"
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/aws-lambda.LambdaRef"
          },
          "static": true
        },
        {
          "docs": {
            "comment": "Return the given named metric for this Lambda"
          },
          "name": "metricAll",
          "parameters": [
            {
              "name": "metricName",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "props",
              "type": {
                "fqn": "@aws-cdk/aws-cloudwatch.MetricCustomization",
                "optional": true
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/aws-cloudwatch.Metric"
          },
          "static": true
        },
        {
          "docs": {
            "comment": "Metric for the number of Errors executing all Lambdas",
            "default": "sum over 5 minutes"
          },
          "name": "metricAllErrors",
          "parameters": [
            {
              "name": "props",
              "type": {
                "fqn": "@aws-cdk/aws-cloudwatch.MetricCustomization",
                "optional": true
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/aws-cloudwatch.Metric"
          },
          "static": true
        },
        {
          "docs": {
            "comment": "Metric for the Duration executing all Lambdas",
            "default": "average over 5 minutes"
          },
          "name": "metricAllDuration",
          "parameters": [
            {
              "name": "props",
              "type": {
                "fqn": "@aws-cdk/aws-cloudwatch.MetricCustomization",
                "optional": true
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/aws-cloudwatch.Metric"
          },
          "static": true
        },
        {
          "docs": {
            "comment": "Metric for the number of invocations of all Lambdas",
            "default": "sum over 5 minutes"
          },
          "name": "metricAllInvocations",
          "parameters": [
            {
              "name": "props",
              "type": {
                "fqn": "@aws-cdk/aws-cloudwatch.MetricCustomization",
                "optional": true
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/aws-cloudwatch.Metric"
          },
          "static": true
        },
        {
          "docs": {
            "comment": "Metric for the number of throttled invocations of all Lambdas",
            "default": "sum over 5 minutes"
          },
          "name": "metricAllThrottles",
          "parameters": [
            {
              "name": "props",
              "type": {
                "fqn": "@aws-cdk/aws-cloudwatch.MetricCustomization",
                "optional": true
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/aws-cloudwatch.Metric"
          },
          "static": true
        },
        {
          "docs": {
            "comment": "Metric for the number of concurrent executions across all Lambdas",
            "default": "max over 5 minutes"
          },
          "name": "metricAllConcurrentExecutions",
          "parameters": [
            {
              "name": "props",
              "type": {
                "fqn": "@aws-cdk/aws-cloudwatch.MetricCustomization",
                "optional": true
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/aws-cloudwatch.Metric"
          },
          "static": true
        },
        {
          "docs": {
            "comment": "Metric for the number of unreserved concurrent executions across all Lambdas",
            "default": "max over 5 minutes"
          },
          "name": "metricAllUnreservedConcurrentExecutions",
          "parameters": [
            {
              "name": "props",
              "type": {
                "fqn": "@aws-cdk/aws-cloudwatch.MetricCustomization",
                "optional": true
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/aws-cloudwatch.Metric"
          },
          "static": true
        },
        {
          "docs": {
            "comment": "Adds a permission to the Lambda resource policy."
          },
          "name": "addPermission",
          "parameters": [
            {
              "docs": {
                "comment": "A name for the permission construct"
              },
              "name": "name",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "permission",
              "type": {
                "fqn": "@aws-cdk/aws-lambda.LambdaPermission"
              }
            }
          ]
        },
        {
          "name": "addToRolePolicy",
          "parameters": [
            {
              "name": "statement",
              "type": {
                "fqn": "@aws-cdk/cdk.PolicyStatement"
              }
            }
          ]
        },
        {
          "docs": {
            "comment": "Return the given named metric for this Lambda"
          },
          "name": "metric",
          "parameters": [
            {
              "name": "metricName",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "props",
              "type": {
                "fqn": "@aws-cdk/aws-cloudwatch.MetricCustomization",
                "optional": true
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/aws-cloudwatch.Metric"
          }
        },
        {
          "docs": {
            "comment": "Metric for the Errors executing this Lambda",
            "default": "sum over 5 minutes"
          },
          "name": "metricErrors",
          "parameters": [
            {
              "name": "props",
              "type": {
                "fqn": "@aws-cdk/aws-cloudwatch.MetricCustomization",
                "optional": true
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/aws-cloudwatch.Metric"
          }
        },
        {
          "docs": {
            "comment": "Metric for the Duration of this Lambda",
            "default": "average over 5 minutes"
          },
          "name": "metricDuration",
          "parameters": [
            {
              "name": "props",
              "type": {
                "fqn": "@aws-cdk/aws-cloudwatch.MetricCustomization",
                "optional": true
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/aws-cloudwatch.Metric"
          }
        },
        {
          "docs": {
            "comment": "Metric for the number of invocations of this Lambda",
            "default": "sum over 5 minutes"
          },
          "name": "metricInvocations",
          "parameters": [
            {
              "name": "props",
              "type": {
                "fqn": "@aws-cdk/aws-cloudwatch.MetricCustomization",
                "optional": true
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/aws-cloudwatch.Metric"
          }
        },
        {
          "docs": {
            "comment": "Metric for the number of throttled invocations of this Lambda",
            "default": "sum over 5 minutes"
          },
          "name": "metricThrottles",
          "parameters": [
            {
              "name": "props",
              "type": {
                "fqn": "@aws-cdk/aws-cloudwatch.MetricCustomization",
                "optional": true
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/aws-cloudwatch.Metric"
          }
        },
        {
          "docs": {
            "comment": "Return the properties required to send subscription events to this destination.\n\nIf necessary, the destination can use the properties of the SubscriptionFilter\nobject itself to configure its permissions to allow the subscription to write\nto it.\n\nThe destination may reconfigure its own permissions in response to this\nfunction call."
          },
          "name": "logSubscriptionDestination",
          "parameters": [
            {
              "name": "sourceLogGroup",
              "type": {
                "fqn": "@aws-cdk/aws-logs.LogGroup"
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/aws-logs.LogSubscriptionDestination"
          }
        },
        {
          "docs": {
            "comment": "Export this Function (without the role)"
          },
          "name": "export",
          "returns": {
            "fqn": "@aws-cdk/aws-lambda.LambdaRefProps"
          }
        }
      ],
      "name": "LambdaRef",
      "namespace": "@aws-cdk/aws-lambda",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "comment": "The name of the function."
          },
          "immutable": true,
          "name": "functionName",
          "type": {
            "fqn": "@aws-cdk/aws-lambda.FunctionName"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "The ARN fo the function."
          },
          "immutable": true,
          "name": "functionArn",
          "type": {
            "fqn": "@aws-cdk/aws-lambda.FunctionArn"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "The IAM role associated with this function."
          },
          "immutable": true,
          "name": "role",
          "type": {
            "fqn": "@aws-cdk/aws-iam.Role",
            "optional": true
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "Whether the addPermission() call adds any permissions\n\nTrue for new Lambdas, false for imported Lambdas (they might live in different accounts)."
          },
          "immutable": true,
          "name": "canCreatePermissions",
          "protected": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "docs": {
            "comment": "Returns a RuleTarget that can be used to trigger this Lambda as a\nresult from a CloudWatch event."
          },
          "immutable": true,
          "name": "eventRuleTarget",
          "type": {
            "fqn": "@aws-cdk/aws-events.EventRuleTarget"
          }
        }
      ]
    },
    "@aws-cdk/aws-lambda.LambdaRefProps": {
      "assembly": "@aws-cdk/aws-lambda",
      "datatype": true,
      "docs": {
        "comment": "Represents a Lambda function defined outside of this stack."
      },
      "fqn": "@aws-cdk/aws-lambda.LambdaRefProps",
      "kind": "interface",
      "name": "LambdaRefProps",
      "namespace": "@aws-cdk/aws-lambda",
      "properties": [
        {
          "docs": {
            "comment": "The ARN of the Lambda function.\nFormat: arn:<partition>:lambda:<region>:<account-id>:function:<function-name>"
          },
          "name": "functionArn",
          "type": {
            "fqn": "@aws-cdk/aws-lambda.FunctionArn"
          }
        },
        {
          "docs": {
            "comment": "The IAM execution role associated with this function.\nIf the role is not specified, any role-related operations will no-op."
          },
          "name": "role",
          "type": {
            "fqn": "@aws-cdk/aws-iam.Role",
            "optional": true
          }
        }
      ]
    },
    "@aws-cdk/aws-lambda.LambdaRuntime": {
      "assembly": "@aws-cdk/aws-lambda",
      "docs": {
        "comment": "Lambda function runtime environment."
      },
      "fqn": "@aws-cdk/aws-lambda.LambdaRuntime",
      "initializer": {
        "initializer": true,
        "parameters": [
          {
            "name": "name",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-lambda.LambdaRuntimeProps",
              "optional": true
            }
          }
        ]
      },
      "kind": "class",
      "methods": [
        {
          "name": "toString",
          "returns": {
            "primitive": "string"
          }
        }
      ],
      "name": "LambdaRuntime",
      "namespace": "@aws-cdk/aws-lambda",
      "properties": [
        {
          "const": true,
          "immutable": true,
          "name": "NodeJS",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-lambda.InlinableJavascriptLambdaRuntime"
          }
        },
        {
          "const": true,
          "immutable": true,
          "name": "NodeJS43",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-lambda.InlinableJavascriptLambdaRuntime"
          }
        },
        {
          "const": true,
          "immutable": true,
          "name": "NodeJS43Edge",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-lambda.LambdaRuntime"
          }
        },
        {
          "const": true,
          "immutable": true,
          "name": "NodeJS610",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-lambda.InlinableJavascriptLambdaRuntime"
          }
        },
        {
          "const": true,
          "immutable": true,
          "name": "NodeJS810",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-lambda.LambdaRuntime"
          }
        },
        {
          "const": true,
          "immutable": true,
          "name": "Java8",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-lambda.LambdaRuntime"
          }
        },
        {
          "const": true,
          "immutable": true,
          "name": "Python27",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-lambda.InlinableLambdaRuntime"
          }
        },
        {
          "const": true,
          "immutable": true,
          "name": "Python36",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-lambda.InlinableLambdaRuntime"
          }
        },
        {
          "const": true,
          "immutable": true,
          "name": "DotNetCore1",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-lambda.LambdaRuntime"
          }
        },
        {
          "const": true,
          "immutable": true,
          "name": "DotNetCore2",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-lambda.LambdaRuntime"
          }
        },
        {
          "const": true,
          "immutable": true,
          "name": "Go1x",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-lambda.LambdaRuntime"
          }
        },
        {
          "docs": {
            "comment": "The name of this runtime, as expected by the Lambda resource. "
          },
          "immutable": true,
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "comment": "Whether the ``ZipFile`` (aka inline code) property can be used with this runtime. "
          },
          "immutable": true,
          "name": "supportsInlineCode",
          "type": {
            "primitive": "boolean"
          }
        }
      ]
    },
    "@aws-cdk/aws-lambda.LambdaRuntimeProps": {
      "assembly": "@aws-cdk/aws-lambda",
      "datatype": true,
      "fqn": "@aws-cdk/aws-lambda.LambdaRuntimeProps",
      "kind": "interface",
      "name": "LambdaRuntimeProps",
      "namespace": "@aws-cdk/aws-lambda",
      "properties": [
        {
          "docs": {
            "comment": "Whether the ``ZipFile`` (aka inline code) property can be used with this runtime.",
            "default": "false"
          },
          "immutable": true,
          "name": "supportsInlineCode",
          "type": {
            "optional": true,
            "primitive": "boolean"
          }
        }
      ]
    },
    "@aws-cdk/aws-lambda.LambdaS3Code": {
      "assembly": "@aws-cdk/aws-lambda",
      "base": {
        "fqn": "@aws-cdk/aws-lambda.LambdaCode"
      },
      "docs": {
        "comment": "Lambda code from an S3 archive."
      },
      "fqn": "@aws-cdk/aws-lambda.LambdaS3Code",
      "initializer": {
        "initializer": true,
        "parameters": [
          {
            "name": "bucket",
            "type": {
              "fqn": "@aws-cdk/aws-s3.BucketRef"
            }
          },
          {
            "name": "key",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "objectVersion",
            "type": {
              "optional": true,
              "primitive": "string"
            }
          }
        ]
      },
      "kind": "class",
      "methods": [
        {
          "docs": {
            "comment": "Called during stack synthesis to render the CodePropery for the\nLambda function."
          },
          "name": "toJSON",
          "returns": {
            "fqn": "@aws-cdk/aws-lambda.cloudformation.FunctionResource.CodeProperty"
          }
        }
      ],
      "name": "LambdaS3Code",
      "namespace": "@aws-cdk/aws-lambda"
    },
    "@aws-cdk/aws-lambda.LambdaVersion": {
      "assembly": "@aws-cdk/aws-lambda",
      "base": {
        "fqn": "@aws-cdk/cdk.Construct"
      },
      "docs": {
        "comment": "A single newly-deployed version of a Lambda function.\n\nThis object exists to--at deploy time--query the \"then-current\" version of\nthe Lambda function that it refers to. This Version object can then be\nused in `Alias` to refer to a particular deployment of a Lambda.\n\nThis means that for every new update you deploy to your Lambda (using the\nCDK and Aliases), you must always create a new Version object. In\nparticular, it must have a different name, so that a new resource is\ncreated.\n\nIf you want to ensure that you're associating the right version with\nthe right deployment, specify the `codeSha256` property while\ncreating the `Version.\n *"
      },
      "fqn": "@aws-cdk/aws-lambda.LambdaVersion",
      "initializer": {
        "initializer": true,
        "parameters": [
          {
            "name": "parent",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "name": "name",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-lambda.LambdaVersionProps"
            }
          }
        ]
      },
      "kind": "class",
      "name": "LambdaVersion",
      "namespace": "@aws-cdk/aws-lambda",
      "properties": [
        {
          "docs": {
            "comment": "The most recently deployed version of this function."
          },
          "immutable": true,
          "name": "functionVersion",
          "type": {
            "fqn": "@aws-cdk/aws-lambda.Version"
          }
        },
        {
          "docs": {
            "comment": "Lambda object this version is associated with"
          },
          "immutable": true,
          "name": "lambda",
          "type": {
            "fqn": "@aws-cdk/aws-lambda.LambdaRef"
          }
        }
      ]
    },
    "@aws-cdk/aws-lambda.LambdaVersionProps": {
      "assembly": "@aws-cdk/aws-lambda",
      "datatype": true,
      "docs": {
        "comment": "Properties for a new Lambda version"
      },
      "fqn": "@aws-cdk/aws-lambda.LambdaVersionProps",
      "kind": "interface",
      "name": "LambdaVersionProps",
      "namespace": "@aws-cdk/aws-lambda",
      "properties": [
        {
          "docs": {
            "comment": "SHA256 of the version of the Lambda source code\n\nSpecify to validate that you're deploying the right version.",
            "default": "No validation is performed"
          },
          "name": "codeSha256",
          "type": {
            "optional": true,
            "primitive": "string"
          }
        },
        {
          "docs": {
            "comment": "Description of the version",
            "default": "Description of the Lambda"
          },
          "name": "description",
          "type": {
            "optional": true,
            "primitive": "string"
          }
        },
        {
          "docs": {
            "comment": "Function to get the value of"
          },
          "name": "lambda",
          "type": {
            "fqn": "@aws-cdk/aws-lambda.LambdaRef"
          }
        }
      ]
    },
    "@aws-cdk/aws-lambda.Version": {
      "assembly": "@aws-cdk/aws-lambda",
      "base": {
        "fqn": "@aws-cdk/cdk.Token"
      },
      "fqn": "@aws-cdk/aws-lambda.Version",
      "initializer": {
        "docs": {
          "comment": "Creates a token that resolves to `value`. If value is a function,\nthe function is evaluated upon resolution and the value it returns will be\nuesd as the token's value."
        },
        "initializer": true,
        "parameters": [
          {
            "name": "valueOrFunction",
            "type": {
              "optional": true,
              "primitive": "any"
            }
          }
        ]
      },
      "kind": "class",
      "name": "Version",
      "namespace": "@aws-cdk/aws-lambda"
    },
    "@aws-cdk/aws-lambda.VersionWeight": {
      "assembly": "@aws-cdk/aws-lambda",
      "datatype": true,
      "docs": {
        "comment": "A version/weight pair for routing traffic to Lambda functions"
      },
      "fqn": "@aws-cdk/aws-lambda.VersionWeight",
      "kind": "interface",
      "name": "VersionWeight",
      "namespace": "@aws-cdk/aws-lambda",
      "properties": [
        {
          "docs": {
            "comment": "The version to route traffic to"
          },
          "immutable": true,
          "name": "version",
          "type": {
            "fqn": "@aws-cdk/aws-lambda.LambdaVersion"
          }
        },
        {
          "docs": {
            "comment": "How much weight to assign to this version (0..1)"
          },
          "immutable": true,
          "name": "weight",
          "type": {
            "primitive": "number"
          }
        }
      ]
    },
    "@aws-cdk/aws-lambda.cloudformation.AliasResource": {
      "assembly": "@aws-cdk/aws-lambda",
      "base": {
        "fqn": "@aws-cdk/cdk.Resource"
      },
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-alias.html"
      },
      "fqn": "@aws-cdk/aws-lambda.cloudformation.AliasResource",
      "initializer": {
        "docs": {
          "comment": "Creates a new ``AWS::Lambda::Alias``."
        },
        "initializer": true,
        "parameters": [
          {
            "docs": {
              "comment": "the ``cdk.Construct`` this ``AliasResource`` is a part of"
            },
            "name": "parent",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "docs": {
              "comment": "the name of the resource in the ``cdk.Construct`` tree"
            },
            "name": "name",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "comment": "the properties of this ``AliasResource``"
            },
            "name": "properties",
            "type": {
              "fqn": "@aws-cdk/aws-lambda.cloudformation.AliasResourceProps"
            }
          }
        ]
      },
      "kind": "class",
      "methods": [
        {
          "name": "renderProperties",
          "protected": true,
          "returns": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        }
      ],
      "name": "AliasResource",
      "namespace": "@aws-cdk/aws-lambda.cloudformation",
      "properties": [
        {
          "const": true,
          "docs": {
            "comment": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "name": "resourceTypeName",
          "static": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "subtypes": [
        "@aws-cdk/aws-lambda.cloudformation.AliasResource.AliasRoutingConfigurationProperty",
        "@aws-cdk/aws-lambda.cloudformation.AliasResource.VersionWeightProperty"
      ]
    },
    "@aws-cdk/aws-lambda.cloudformation.AliasResource.AliasRoutingConfigurationProperty": {
      "assembly": "@aws-cdk/aws-lambda",
      "datatype": true,
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-alias-aliasroutingconfiguration.html"
      },
      "fqn": "@aws-cdk/aws-lambda.cloudformation.AliasResource.AliasRoutingConfigurationProperty",
      "kind": "interface",
      "name": "AliasRoutingConfigurationProperty",
      "namespace": "@aws-cdk/aws-lambda.cloudformation.AliasResource",
      "parenttype": "@aws-cdk/aws-lambda.cloudformation.AliasResource",
      "properties": [
        {
          "docs": {
            "comment": "``AliasResource.AliasRoutingConfigurationProperty.AdditionalVersionWeights``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-alias-aliasroutingconfiguration.html#cfn-lambda-alias-aliasroutingconfiguration-additionalversionweights"
          },
          "name": "additionalVersionWeights",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/cdk.Token"
                          },
                          {
                            "fqn": "@aws-cdk/aws-lambda.cloudformation.AliasResource.VersionWeightProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-lambda.cloudformation.AliasResource.VersionWeightProperty": {
      "assembly": "@aws-cdk/aws-lambda",
      "datatype": true,
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-alias-versionweight.html"
      },
      "fqn": "@aws-cdk/aws-lambda.cloudformation.AliasResource.VersionWeightProperty",
      "kind": "interface",
      "name": "VersionWeightProperty",
      "namespace": "@aws-cdk/aws-lambda.cloudformation.AliasResource",
      "parenttype": "@aws-cdk/aws-lambda.cloudformation.AliasResource",
      "properties": [
        {
          "docs": {
            "comment": "``AliasResource.VersionWeightProperty.FunctionVersion``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-alias-versionweight.html#cfn-lambda-alias-versionweight-functionversion"
          },
          "name": "functionVersion",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AliasResource.VersionWeightProperty.FunctionWeight``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-alias-versionweight.html#cfn-lambda-alias-versionweight-functionweight"
          },
          "name": "functionWeight",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "number"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-lambda.cloudformation.AliasResourceProps": {
      "assembly": "@aws-cdk/aws-lambda",
      "datatype": true,
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-alias.html"
      },
      "fqn": "@aws-cdk/aws-lambda.cloudformation.AliasResourceProps",
      "kind": "interface",
      "name": "AliasResourceProps",
      "namespace": "@aws-cdk/aws-lambda.cloudformation",
      "properties": [
        {
          "docs": {
            "comment": "``AWS::Lambda::Alias.FunctionName``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-alias.html#cfn-lambda-alias-functionname"
          },
          "name": "functionName",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::Lambda::Alias.FunctionVersion``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-alias.html#cfn-lambda-alias-functionversion"
          },
          "name": "functionVersion",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::Lambda::Alias.Name``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-alias.html#cfn-lambda-alias-name"
          },
          "name": "aliasName",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::Lambda::Alias.Description``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-alias.html#cfn-lambda-alias-description"
          },
          "name": "description",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::Lambda::Alias.RoutingConfig``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-alias.html#cfn-lambda-alias-routingconfig"
          },
          "name": "routingConfig",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "fqn": "@aws-cdk/aws-lambda.cloudformation.AliasResource.AliasRoutingConfigurationProperty"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-lambda.cloudformation.EventSourceMappingResource": {
      "assembly": "@aws-cdk/aws-lambda",
      "base": {
        "fqn": "@aws-cdk/cdk.Resource"
      },
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-eventsourcemapping.html"
      },
      "fqn": "@aws-cdk/aws-lambda.cloudformation.EventSourceMappingResource",
      "initializer": {
        "docs": {
          "comment": "Creates a new ``AWS::Lambda::EventSourceMapping``."
        },
        "initializer": true,
        "parameters": [
          {
            "docs": {
              "comment": "the ``cdk.Construct`` this ``EventSourceMappingResource`` is a part of"
            },
            "name": "parent",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "docs": {
              "comment": "the name of the resource in the ``cdk.Construct`` tree"
            },
            "name": "name",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "comment": "the properties of this ``EventSourceMappingResource``"
            },
            "name": "properties",
            "type": {
              "fqn": "@aws-cdk/aws-lambda.cloudformation.EventSourceMappingResourceProps"
            }
          }
        ]
      },
      "kind": "class",
      "methods": [
        {
          "name": "renderProperties",
          "protected": true,
          "returns": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        }
      ],
      "name": "EventSourceMappingResource",
      "namespace": "@aws-cdk/aws-lambda.cloudformation",
      "properties": [
        {
          "const": true,
          "docs": {
            "comment": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "name": "resourceTypeName",
          "static": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-lambda.cloudformation.EventSourceMappingResourceProps": {
      "assembly": "@aws-cdk/aws-lambda",
      "datatype": true,
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-eventsourcemapping.html"
      },
      "fqn": "@aws-cdk/aws-lambda.cloudformation.EventSourceMappingResourceProps",
      "kind": "interface",
      "name": "EventSourceMappingResourceProps",
      "namespace": "@aws-cdk/aws-lambda.cloudformation",
      "properties": [
        {
          "docs": {
            "comment": "``AWS::Lambda::EventSourceMapping.EventSourceArn``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-eventsourcemapping.html#cfn-lambda-eventsourcemapping-eventsourcearn"
          },
          "name": "eventSourceArn",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::Lambda::EventSourceMapping.FunctionName``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-eventsourcemapping.html#cfn-lambda-eventsourcemapping-functionname"
          },
          "name": "functionName",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::Lambda::EventSourceMapping.BatchSize``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-eventsourcemapping.html#cfn-lambda-eventsourcemapping-batchsize"
          },
          "name": "batchSize",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "number"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::Lambda::EventSourceMapping.Enabled``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-eventsourcemapping.html#cfn-lambda-eventsourcemapping-enabled"
          },
          "name": "enabled",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::Lambda::EventSourceMapping.StartingPosition``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-eventsourcemapping.html#cfn-lambda-eventsourcemapping-startingposition"
          },
          "name": "startingPosition",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-lambda.cloudformation.FunctionResource": {
      "assembly": "@aws-cdk/aws-lambda",
      "base": {
        "fqn": "@aws-cdk/cdk.Resource"
      },
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-function.html"
      },
      "fqn": "@aws-cdk/aws-lambda.cloudformation.FunctionResource",
      "initializer": {
        "docs": {
          "comment": "Creates a new ``AWS::Lambda::Function``."
        },
        "initializer": true,
        "parameters": [
          {
            "docs": {
              "comment": "the ``cdk.Construct`` this ``FunctionResource`` is a part of"
            },
            "name": "parent",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "docs": {
              "comment": "the name of the resource in the ``cdk.Construct`` tree"
            },
            "name": "name",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "comment": "the properties of this ``FunctionResource``"
            },
            "name": "properties",
            "type": {
              "fqn": "@aws-cdk/aws-lambda.cloudformation.FunctionResourceProps"
            }
          }
        ]
      },
      "kind": "class",
      "methods": [
        {
          "name": "renderProperties",
          "protected": true,
          "returns": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        }
      ],
      "name": "FunctionResource",
      "namespace": "@aws-cdk/aws-lambda.cloudformation",
      "properties": [
        {
          "const": true,
          "docs": {
            "comment": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "name": "resourceTypeName",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "cloudformation_attribute": "Arn"
          },
          "immutable": true,
          "name": "functionArn",
          "type": {
            "fqn": "@aws-cdk/aws-lambda.FunctionArn"
          }
        }
      ],
      "subtypes": [
        "@aws-cdk/aws-lambda.cloudformation.FunctionResource.CodeProperty",
        "@aws-cdk/aws-lambda.cloudformation.FunctionResource.DeadLetterConfigProperty",
        "@aws-cdk/aws-lambda.cloudformation.FunctionResource.EnvironmentProperty",
        "@aws-cdk/aws-lambda.cloudformation.FunctionResource.TracingConfigProperty",
        "@aws-cdk/aws-lambda.cloudformation.FunctionResource.VpcConfigProperty"
      ]
    },
    "@aws-cdk/aws-lambda.cloudformation.FunctionResource.CodeProperty": {
      "assembly": "@aws-cdk/aws-lambda",
      "datatype": true,
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-code.html"
      },
      "fqn": "@aws-cdk/aws-lambda.cloudformation.FunctionResource.CodeProperty",
      "kind": "interface",
      "name": "CodeProperty",
      "namespace": "@aws-cdk/aws-lambda.cloudformation.FunctionResource",
      "parenttype": "@aws-cdk/aws-lambda.cloudformation.FunctionResource",
      "properties": [
        {
          "docs": {
            "comment": "``FunctionResource.CodeProperty.S3Bucket``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-code.html#cfn-lambda-function-code-s3bucket"
          },
          "name": "s3Bucket",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``FunctionResource.CodeProperty.S3Key``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-code.html#cfn-lambda-function-code-s3key"
          },
          "name": "s3Key",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``FunctionResource.CodeProperty.S3ObjectVersion``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-code.html#cfn-lambda-function-code-s3objectversion"
          },
          "name": "s3ObjectVersion",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``FunctionResource.CodeProperty.ZipFile``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-code.html#cfn-lambda-function-code-zipfile"
          },
          "name": "zipFile",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-lambda.cloudformation.FunctionResource.DeadLetterConfigProperty": {
      "assembly": "@aws-cdk/aws-lambda",
      "datatype": true,
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-deadletterconfig.html"
      },
      "fqn": "@aws-cdk/aws-lambda.cloudformation.FunctionResource.DeadLetterConfigProperty",
      "kind": "interface",
      "name": "DeadLetterConfigProperty",
      "namespace": "@aws-cdk/aws-lambda.cloudformation.FunctionResource",
      "parenttype": "@aws-cdk/aws-lambda.cloudformation.FunctionResource",
      "properties": [
        {
          "docs": {
            "comment": "``FunctionResource.DeadLetterConfigProperty.TargetArn``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-deadletterconfig.html#cfn-lambda-function-deadletterconfig-targetarn"
          },
          "name": "targetArn",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-lambda.cloudformation.FunctionResource.EnvironmentProperty": {
      "assembly": "@aws-cdk/aws-lambda",
      "datatype": true,
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-environment.html"
      },
      "fqn": "@aws-cdk/aws-lambda.cloudformation.FunctionResource.EnvironmentProperty",
      "kind": "interface",
      "name": "EnvironmentProperty",
      "namespace": "@aws-cdk/aws-lambda.cloudformation.FunctionResource",
      "parenttype": "@aws-cdk/aws-lambda.cloudformation.FunctionResource",
      "properties": [
        {
          "docs": {
            "comment": "``FunctionResource.EnvironmentProperty.Variables``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-environment.html#cfn-lambda-function-environment-variables"
          },
          "name": "variables",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "primitive": "string"
                          },
                          {
                            "fqn": "@aws-cdk/cdk.Token"
                          }
                        ]
                      }
                    },
                    "kind": "map"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-lambda.cloudformation.FunctionResource.TracingConfigProperty": {
      "assembly": "@aws-cdk/aws-lambda",
      "datatype": true,
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-tracingconfig.html"
      },
      "fqn": "@aws-cdk/aws-lambda.cloudformation.FunctionResource.TracingConfigProperty",
      "kind": "interface",
      "name": "TracingConfigProperty",
      "namespace": "@aws-cdk/aws-lambda.cloudformation.FunctionResource",
      "parenttype": "@aws-cdk/aws-lambda.cloudformation.FunctionResource",
      "properties": [
        {
          "docs": {
            "comment": "``FunctionResource.TracingConfigProperty.Mode``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-tracingconfig.html#cfn-lambda-function-tracingconfig-mode"
          },
          "name": "mode",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-lambda.cloudformation.FunctionResource.VpcConfigProperty": {
      "assembly": "@aws-cdk/aws-lambda",
      "datatype": true,
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-vpcconfig.html"
      },
      "fqn": "@aws-cdk/aws-lambda.cloudformation.FunctionResource.VpcConfigProperty",
      "kind": "interface",
      "name": "VpcConfigProperty",
      "namespace": "@aws-cdk/aws-lambda.cloudformation.FunctionResource",
      "parenttype": "@aws-cdk/aws-lambda.cloudformation.FunctionResource",
      "properties": [
        {
          "docs": {
            "comment": "``FunctionResource.VpcConfigProperty.SecurityGroupIds``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-vpcconfig.html#cfn-lambda-function-vpcconfig-securitygroupids"
          },
          "name": "securityGroupIds",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "primitive": "string"
                          },
                          {
                            "fqn": "@aws-cdk/cdk.Token"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``FunctionResource.VpcConfigProperty.SubnetIds``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-vpcconfig.html#cfn-lambda-function-vpcconfig-subnetids"
          },
          "name": "subnetIds",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "primitive": "string"
                          },
                          {
                            "fqn": "@aws-cdk/cdk.Token"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-lambda.cloudformation.FunctionResourceProps": {
      "assembly": "@aws-cdk/aws-lambda",
      "datatype": true,
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-function.html"
      },
      "fqn": "@aws-cdk/aws-lambda.cloudformation.FunctionResourceProps",
      "kind": "interface",
      "name": "FunctionResourceProps",
      "namespace": "@aws-cdk/aws-lambda.cloudformation",
      "properties": [
        {
          "docs": {
            "comment": "``AWS::Lambda::Function.Code``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-function.html#cfn-lambda-function-code"
          },
          "name": "code",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "fqn": "@aws-cdk/aws-lambda.cloudformation.FunctionResource.CodeProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::Lambda::Function.Handler``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-function.html#cfn-lambda-function-handler"
          },
          "name": "handler",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::Lambda::Function.Role``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-function.html#cfn-lambda-function-role"
          },
          "name": "role",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::Lambda::Function.Runtime``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-function.html#cfn-lambda-function-runtime"
          },
          "name": "runtime",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::Lambda::Function.DeadLetterConfig``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-function.html#cfn-lambda-function-deadletterconfig"
          },
          "name": "deadLetterConfig",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "fqn": "@aws-cdk/aws-lambda.cloudformation.FunctionResource.DeadLetterConfigProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::Lambda::Function.Description``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-function.html#cfn-lambda-function-description"
          },
          "name": "description",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::Lambda::Function.Environment``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-function.html#cfn-lambda-function-environment"
          },
          "name": "environment",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "fqn": "@aws-cdk/aws-lambda.cloudformation.FunctionResource.EnvironmentProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::Lambda::Function.FunctionName``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-function.html#cfn-lambda-function-functionname"
          },
          "name": "functionName",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::Lambda::Function.KmsKeyArn``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-function.html#cfn-lambda-function-kmskeyarn"
          },
          "name": "kmsKeyArn",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::Lambda::Function.MemorySize``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-function.html#cfn-lambda-function-memorysize"
          },
          "name": "memorySize",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "number"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::Lambda::Function.ReservedConcurrentExecutions``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-function.html#cfn-lambda-function-reservedconcurrentexecutions"
          },
          "name": "reservedConcurrentExecutions",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "number"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::Lambda::Function.Tags``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-function.html#cfn-lambda-function-tags"
          },
          "name": "tags",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/cdk.Token"
                          },
                          {
                            "fqn": "@aws-cdk/cdk.Tag"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::Lambda::Function.Timeout``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-function.html#cfn-lambda-function-timeout"
          },
          "name": "timeout",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "number"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::Lambda::Function.TracingConfig``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-function.html#cfn-lambda-function-tracingconfig"
          },
          "name": "tracingConfig",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "fqn": "@aws-cdk/aws-lambda.cloudformation.FunctionResource.TracingConfigProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::Lambda::Function.VpcConfig``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-function.html#cfn-lambda-function-vpcconfig"
          },
          "name": "vpcConfig",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "fqn": "@aws-cdk/aws-lambda.cloudformation.FunctionResource.VpcConfigProperty"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-lambda.cloudformation.PermissionResource": {
      "assembly": "@aws-cdk/aws-lambda",
      "base": {
        "fqn": "@aws-cdk/cdk.Resource"
      },
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-permission.html"
      },
      "fqn": "@aws-cdk/aws-lambda.cloudformation.PermissionResource",
      "initializer": {
        "docs": {
          "comment": "Creates a new ``AWS::Lambda::Permission``."
        },
        "initializer": true,
        "parameters": [
          {
            "docs": {
              "comment": "the ``cdk.Construct`` this ``PermissionResource`` is a part of"
            },
            "name": "parent",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "docs": {
              "comment": "the name of the resource in the ``cdk.Construct`` tree"
            },
            "name": "name",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "comment": "the properties of this ``PermissionResource``"
            },
            "name": "properties",
            "type": {
              "fqn": "@aws-cdk/aws-lambda.cloudformation.PermissionResourceProps"
            }
          }
        ]
      },
      "kind": "class",
      "methods": [
        {
          "name": "renderProperties",
          "protected": true,
          "returns": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        }
      ],
      "name": "PermissionResource",
      "namespace": "@aws-cdk/aws-lambda.cloudformation",
      "properties": [
        {
          "const": true,
          "docs": {
            "comment": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "name": "resourceTypeName",
          "static": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-lambda.cloudformation.PermissionResourceProps": {
      "assembly": "@aws-cdk/aws-lambda",
      "datatype": true,
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-permission.html"
      },
      "fqn": "@aws-cdk/aws-lambda.cloudformation.PermissionResourceProps",
      "kind": "interface",
      "name": "PermissionResourceProps",
      "namespace": "@aws-cdk/aws-lambda.cloudformation",
      "properties": [
        {
          "docs": {
            "comment": "``AWS::Lambda::Permission.Action``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-permission.html#cfn-lambda-permission-action"
          },
          "name": "action",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::Lambda::Permission.FunctionName``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-permission.html#cfn-lambda-permission-functionname"
          },
          "name": "functionName",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::Lambda::Permission.Principal``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-permission.html#cfn-lambda-permission-principal"
          },
          "name": "principal",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::Lambda::Permission.EventSourceToken``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-permission.html#cfn-lambda-permission-eventsourcetoken"
          },
          "name": "eventSourceToken",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::Lambda::Permission.SourceAccount``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-permission.html#cfn-lambda-permission-sourceaccount"
          },
          "name": "sourceAccount",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::Lambda::Permission.SourceArn``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-permission.html#cfn-lambda-permission-sourcearn"
          },
          "name": "sourceArn",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-lambda.cloudformation.VersionResource": {
      "assembly": "@aws-cdk/aws-lambda",
      "base": {
        "fqn": "@aws-cdk/cdk.Resource"
      },
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-version.html"
      },
      "fqn": "@aws-cdk/aws-lambda.cloudformation.VersionResource",
      "initializer": {
        "docs": {
          "comment": "Creates a new ``AWS::Lambda::Version``."
        },
        "initializer": true,
        "parameters": [
          {
            "docs": {
              "comment": "the ``cdk.Construct`` this ``VersionResource`` is a part of"
            },
            "name": "parent",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "docs": {
              "comment": "the name of the resource in the ``cdk.Construct`` tree"
            },
            "name": "name",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "comment": "the properties of this ``VersionResource``"
            },
            "name": "properties",
            "type": {
              "fqn": "@aws-cdk/aws-lambda.cloudformation.VersionResourceProps"
            }
          }
        ]
      },
      "kind": "class",
      "methods": [
        {
          "name": "renderProperties",
          "protected": true,
          "returns": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        }
      ],
      "name": "VersionResource",
      "namespace": "@aws-cdk/aws-lambda.cloudformation",
      "properties": [
        {
          "const": true,
          "docs": {
            "comment": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "name": "resourceTypeName",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "cloudformation_attribute": "Version"
          },
          "immutable": true,
          "name": "version",
          "type": {
            "fqn": "@aws-cdk/aws-lambda.Version"
          }
        }
      ]
    },
    "@aws-cdk/aws-lambda.cloudformation.VersionResourceProps": {
      "assembly": "@aws-cdk/aws-lambda",
      "datatype": true,
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-version.html"
      },
      "fqn": "@aws-cdk/aws-lambda.cloudformation.VersionResourceProps",
      "kind": "interface",
      "name": "VersionResourceProps",
      "namespace": "@aws-cdk/aws-lambda.cloudformation",
      "properties": [
        {
          "docs": {
            "comment": "``AWS::Lambda::Version.FunctionName``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-version.html#cfn-lambda-version-functionname"
          },
          "name": "functionName",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::Lambda::Version.CodeSha256``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-version.html#cfn-lambda-version-codesha256"
          },
          "name": "codeSha256",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::Lambda::Version.Description``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-version.html#cfn-lambda-version-description"
          },
          "name": "description",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        }
      ]
    }
  },
  "version": "0.7.3-beta"
}
