{
  "fingerprint": "FTIQ/zdBshDmqODKNJNVVOcQBDfJ35xwFElmyzs8QDc=",
  "bundled": {
    "@aws-cdk/util": "^0.7.3-beta"
  },
  "dependencies": {
    "@aws-cdk/aws-autoscaling": {
      "dependencies": {
        "@aws-cdk/cdk": {
          "dependencies": {
            "@aws-cdk/cx-api": {
              "targets": {
                "dotnet": {
                  "namespace": "Amazon.CDK.CXAPI"
                },
                "java": {
                  "maven": {
                    "artifactId": "cxapi",
                    "groupId": "com.amazonaws.cdk"
                  },
                  "package": "com.amazonaws.cdk.cxapi"
                },
                "js": {
                  "npm": "@aws-cdk/cx-api"
                }
              },
              "version": "0.7.3-beta"
            }
          },
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK"
            },
            "java": {
              "maven": {
                "artifactId": "cdk",
                "groupId": "com.amazonaws.cdk"
              },
              "package": "com.amazonaws.cdk"
            },
            "js": {
              "npm": "@aws-cdk/cdk"
            }
          },
          "version": "0.7.3-beta"
        }
      },
      "targets": {
        "dotnet": {
          "namespace": "Amazon.CDK.AWS.AutoScaling"
        },
        "java": {
          "maven": {
            "artifactId": "aws-autoscaling",
            "groupId": "com.amazonaws.cdk"
          },
          "package": "com.amazonaws.cdk.aws.autoscaling"
        },
        "js": {
          "npm": "@aws-cdk/aws-autoscaling"
        }
      },
      "version": "0.7.3-beta"
    },
    "@aws-cdk/aws-elasticloadbalancing": {
      "dependencies": {
        "@aws-cdk/cdk": {
          "dependencies": {
            "@aws-cdk/cx-api": {
              "targets": {
                "dotnet": {
                  "namespace": "Amazon.CDK.CXAPI"
                },
                "java": {
                  "maven": {
                    "artifactId": "cxapi",
                    "groupId": "com.amazonaws.cdk"
                  },
                  "package": "com.amazonaws.cdk.cxapi"
                },
                "js": {
                  "npm": "@aws-cdk/cx-api"
                }
              },
              "version": "0.7.3-beta"
            }
          },
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK"
            },
            "java": {
              "maven": {
                "artifactId": "cdk",
                "groupId": "com.amazonaws.cdk"
              },
              "package": "com.amazonaws.cdk"
            },
            "js": {
              "npm": "@aws-cdk/cdk"
            }
          },
          "version": "0.7.3-beta"
        }
      },
      "targets": {
        "dotnet": {
          "namespace": "Amazon.CDK.AWS.ElasticLoadBalancing"
        },
        "java": {
          "maven": {
            "artifactId": "aws-elasticloadbalancing",
            "groupId": "com.amazonaws.cdk"
          },
          "package": "com.amazonaws.cdk.aws.elasticloadbalancing"
        },
        "js": {
          "npm": "@aws-cdk/aws-elasticloadbalancing"
        }
      },
      "version": "0.7.3-beta"
    },
    "@aws-cdk/aws-iam": {
      "dependencies": {
        "@aws-cdk/cdk": {
          "dependencies": {
            "@aws-cdk/cx-api": {
              "targets": {
                "dotnet": {
                  "namespace": "Amazon.CDK.CXAPI"
                },
                "java": {
                  "maven": {
                    "artifactId": "cxapi",
                    "groupId": "com.amazonaws.cdk"
                  },
                  "package": "com.amazonaws.cdk.cxapi"
                },
                "js": {
                  "npm": "@aws-cdk/cx-api"
                }
              },
              "version": "0.7.3-beta"
            }
          },
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK"
            },
            "java": {
              "maven": {
                "artifactId": "cdk",
                "groupId": "com.amazonaws.cdk"
              },
              "package": "com.amazonaws.cdk"
            },
            "js": {
              "npm": "@aws-cdk/cdk"
            }
          },
          "version": "0.7.3-beta"
        }
      },
      "targets": {
        "dotnet": {
          "namespace": "Amazon.CDK.AWS.IAM"
        },
        "java": {
          "maven": {
            "artifactId": "aws-iam",
            "groupId": "com.amazonaws.cdk"
          },
          "package": "com.amazonaws.cdk.aws.iam"
        },
        "js": {
          "npm": "@aws-cdk/aws-iam"
        }
      },
      "version": "0.7.3-beta"
    },
    "@aws-cdk/aws-sns": {
      "dependencies": {
        "@aws-cdk/aws-cloudwatch": {
          "dependencies": {
            "@aws-cdk/aws-iam": {
              "dependencies": {
                "@aws-cdk/cdk": {
                  "dependencies": {
                    "@aws-cdk/cx-api": {
                      "targets": {
                        "dotnet": {
                          "namespace": "Amazon.CDK.CXAPI"
                        },
                        "java": {
                          "maven": {
                            "artifactId": "cxapi",
                            "groupId": "com.amazonaws.cdk"
                          },
                          "package": "com.amazonaws.cdk.cxapi"
                        },
                        "js": {
                          "npm": "@aws-cdk/cx-api"
                        }
                      },
                      "version": "0.7.3-beta"
                    }
                  },
                  "targets": {
                    "dotnet": {
                      "namespace": "Amazon.CDK"
                    },
                    "java": {
                      "maven": {
                        "artifactId": "cdk",
                        "groupId": "com.amazonaws.cdk"
                      },
                      "package": "com.amazonaws.cdk"
                    },
                    "js": {
                      "npm": "@aws-cdk/cdk"
                    }
                  },
                  "version": "0.7.3-beta"
                }
              },
              "targets": {
                "dotnet": {
                  "namespace": "Amazon.CDK.AWS.IAM"
                },
                "java": {
                  "maven": {
                    "artifactId": "aws-iam",
                    "groupId": "com.amazonaws.cdk"
                  },
                  "package": "com.amazonaws.cdk.aws.iam"
                },
                "js": {
                  "npm": "@aws-cdk/aws-iam"
                }
              },
              "version": "0.7.3-beta"
            },
            "@aws-cdk/cdk": {
              "dependencies": {
                "@aws-cdk/cx-api": {
                  "targets": {
                    "dotnet": {
                      "namespace": "Amazon.CDK.CXAPI"
                    },
                    "java": {
                      "maven": {
                        "artifactId": "cxapi",
                        "groupId": "com.amazonaws.cdk"
                      },
                      "package": "com.amazonaws.cdk.cxapi"
                    },
                    "js": {
                      "npm": "@aws-cdk/cx-api"
                    }
                  },
                  "version": "0.7.3-beta"
                }
              },
              "targets": {
                "dotnet": {
                  "namespace": "Amazon.CDK"
                },
                "java": {
                  "maven": {
                    "artifactId": "cdk",
                    "groupId": "com.amazonaws.cdk"
                  },
                  "package": "com.amazonaws.cdk"
                },
                "js": {
                  "npm": "@aws-cdk/cdk"
                }
              },
              "version": "0.7.3-beta"
            }
          },
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.CloudWatch"
            },
            "java": {
              "maven": {
                "artifactId": "aws-cloudwatch",
                "groupId": "com.amazonaws.cdk"
              },
              "package": "com.amazonaws.cdk.aws.cloudwatch"
            },
            "js": {
              "npm": "@aws-cdk/aws-cloudwatch"
            }
          },
          "version": "0.7.3-beta"
        },
        "@aws-cdk/aws-events": {
          "dependencies": {
            "@aws-cdk/aws-iam": {
              "dependencies": {
                "@aws-cdk/cdk": {
                  "dependencies": {
                    "@aws-cdk/cx-api": {
                      "targets": {
                        "dotnet": {
                          "namespace": "Amazon.CDK.CXAPI"
                        },
                        "java": {
                          "maven": {
                            "artifactId": "cxapi",
                            "groupId": "com.amazonaws.cdk"
                          },
                          "package": "com.amazonaws.cdk.cxapi"
                        },
                        "js": {
                          "npm": "@aws-cdk/cx-api"
                        }
                      },
                      "version": "0.7.3-beta"
                    }
                  },
                  "targets": {
                    "dotnet": {
                      "namespace": "Amazon.CDK"
                    },
                    "java": {
                      "maven": {
                        "artifactId": "cdk",
                        "groupId": "com.amazonaws.cdk"
                      },
                      "package": "com.amazonaws.cdk"
                    },
                    "js": {
                      "npm": "@aws-cdk/cdk"
                    }
                  },
                  "version": "0.7.3-beta"
                }
              },
              "targets": {
                "dotnet": {
                  "namespace": "Amazon.CDK.AWS.IAM"
                },
                "java": {
                  "maven": {
                    "artifactId": "aws-iam",
                    "groupId": "com.amazonaws.cdk"
                  },
                  "package": "com.amazonaws.cdk.aws.iam"
                },
                "js": {
                  "npm": "@aws-cdk/aws-iam"
                }
              },
              "version": "0.7.3-beta"
            },
            "@aws-cdk/cdk": {
              "dependencies": {
                "@aws-cdk/cx-api": {
                  "targets": {
                    "dotnet": {
                      "namespace": "Amazon.CDK.CXAPI"
                    },
                    "java": {
                      "maven": {
                        "artifactId": "cxapi",
                        "groupId": "com.amazonaws.cdk"
                      },
                      "package": "com.amazonaws.cdk.cxapi"
                    },
                    "js": {
                      "npm": "@aws-cdk/cx-api"
                    }
                  },
                  "version": "0.7.3-beta"
                }
              },
              "targets": {
                "dotnet": {
                  "namespace": "Amazon.CDK"
                },
                "java": {
                  "maven": {
                    "artifactId": "cdk",
                    "groupId": "com.amazonaws.cdk"
                  },
                  "package": "com.amazonaws.cdk"
                },
                "js": {
                  "npm": "@aws-cdk/cdk"
                }
              },
              "version": "0.7.3-beta"
            }
          },
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Events"
            },
            "java": {
              "maven": {
                "artifactId": "aws-events",
                "groupId": "com.amazonaws.cdk"
              },
              "package": "com.amazonaws.cdk.aws.events"
            },
            "js": {
              "npm": "@aws-cdk/aws-events"
            }
          },
          "version": "0.7.3-beta"
        },
        "@aws-cdk/aws-iam": {
          "dependencies": {
            "@aws-cdk/cdk": {
              "dependencies": {
                "@aws-cdk/cx-api": {
                  "targets": {
                    "dotnet": {
                      "namespace": "Amazon.CDK.CXAPI"
                    },
                    "java": {
                      "maven": {
                        "artifactId": "cxapi",
                        "groupId": "com.amazonaws.cdk"
                      },
                      "package": "com.amazonaws.cdk.cxapi"
                    },
                    "js": {
                      "npm": "@aws-cdk/cx-api"
                    }
                  },
                  "version": "0.7.3-beta"
                }
              },
              "targets": {
                "dotnet": {
                  "namespace": "Amazon.CDK"
                },
                "java": {
                  "maven": {
                    "artifactId": "cdk",
                    "groupId": "com.amazonaws.cdk"
                  },
                  "package": "com.amazonaws.cdk"
                },
                "js": {
                  "npm": "@aws-cdk/cdk"
                }
              },
              "version": "0.7.3-beta"
            }
          },
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.IAM"
            },
            "java": {
              "maven": {
                "artifactId": "aws-iam",
                "groupId": "com.amazonaws.cdk"
              },
              "package": "com.amazonaws.cdk.aws.iam"
            },
            "js": {
              "npm": "@aws-cdk/aws-iam"
            }
          },
          "version": "0.7.3-beta"
        },
        "@aws-cdk/aws-lambda": {
          "dependencies": {
            "@aws-cdk/assets": {
              "dependencies": {
                "@aws-cdk/aws-iam": {
                  "dependencies": {
                    "@aws-cdk/cdk": {
                      "dependencies": {
                        "@aws-cdk/cx-api": {
                          "targets": {
                            "dotnet": {
                              "namespace": "Amazon.CDK.CXAPI"
                            },
                            "java": {
                              "maven": {
                                "artifactId": "cxapi",
                                "groupId": "com.amazonaws.cdk"
                              },
                              "package": "com.amazonaws.cdk.cxapi"
                            },
                            "js": {
                              "npm": "@aws-cdk/cx-api"
                            }
                          },
                          "version": "0.7.3-beta"
                        }
                      },
                      "targets": {
                        "dotnet": {
                          "namespace": "Amazon.CDK"
                        },
                        "java": {
                          "maven": {
                            "artifactId": "cdk",
                            "groupId": "com.amazonaws.cdk"
                          },
                          "package": "com.amazonaws.cdk"
                        },
                        "js": {
                          "npm": "@aws-cdk/cdk"
                        }
                      },
                      "version": "0.7.3-beta"
                    }
                  },
                  "targets": {
                    "dotnet": {
                      "namespace": "Amazon.CDK.AWS.IAM"
                    },
                    "java": {
                      "maven": {
                        "artifactId": "aws-iam",
                        "groupId": "com.amazonaws.cdk"
                      },
                      "package": "com.amazonaws.cdk.aws.iam"
                    },
                    "js": {
                      "npm": "@aws-cdk/aws-iam"
                    }
                  },
                  "version": "0.7.3-beta"
                },
                "@aws-cdk/aws-s3": {
                  "dependencies": {
                    "@aws-cdk/aws-iam": {
                      "dependencies": {
                        "@aws-cdk/cdk": {
                          "dependencies": {
                            "@aws-cdk/cx-api": {
                              "targets": {
                                "dotnet": {
                                  "namespace": "Amazon.CDK.CXAPI"
                                },
                                "java": {
                                  "maven": {
                                    "artifactId": "cxapi",
                                    "groupId": "com.amazonaws.cdk"
                                  },
                                  "package": "com.amazonaws.cdk.cxapi"
                                },
                                "js": {
                                  "npm": "@aws-cdk/cx-api"
                                }
                              },
                              "version": "0.7.3-beta"
                            }
                          },
                          "targets": {
                            "dotnet": {
                              "namespace": "Amazon.CDK"
                            },
                            "java": {
                              "maven": {
                                "artifactId": "cdk",
                                "groupId": "com.amazonaws.cdk"
                              },
                              "package": "com.amazonaws.cdk"
                            },
                            "js": {
                              "npm": "@aws-cdk/cdk"
                            }
                          },
                          "version": "0.7.3-beta"
                        }
                      },
                      "targets": {
                        "dotnet": {
                          "namespace": "Amazon.CDK.AWS.IAM"
                        },
                        "java": {
                          "maven": {
                            "artifactId": "aws-iam",
                            "groupId": "com.amazonaws.cdk"
                          },
                          "package": "com.amazonaws.cdk.aws.iam"
                        },
                        "js": {
                          "npm": "@aws-cdk/aws-iam"
                        }
                      },
                      "version": "0.7.3-beta"
                    },
                    "@aws-cdk/aws-kms": {
                      "dependencies": {
                        "@aws-cdk/aws-iam": {
                          "dependencies": {
                            "@aws-cdk/cdk": {
                              "dependencies": {
                                "@aws-cdk/cx-api": {
                                  "targets": {
                                    "dotnet": {
                                      "namespace": "Amazon.CDK.CXAPI"
                                    },
                                    "java": {
                                      "maven": {
                                        "artifactId": "cxapi",
                                        "groupId": "com.amazonaws.cdk"
                                      },
                                      "package": "com.amazonaws.cdk.cxapi"
                                    },
                                    "js": {
                                      "npm": "@aws-cdk/cx-api"
                                    }
                                  },
                                  "version": "0.7.3-beta"
                                }
                              },
                              "targets": {
                                "dotnet": {
                                  "namespace": "Amazon.CDK"
                                },
                                "java": {
                                  "maven": {
                                    "artifactId": "cdk",
                                    "groupId": "com.amazonaws.cdk"
                                  },
                                  "package": "com.amazonaws.cdk"
                                },
                                "js": {
                                  "npm": "@aws-cdk/cdk"
                                }
                              },
                              "version": "0.7.3-beta"
                            }
                          },
                          "targets": {
                            "dotnet": {
                              "namespace": "Amazon.CDK.AWS.IAM"
                            },
                            "java": {
                              "maven": {
                                "artifactId": "aws-iam",
                                "groupId": "com.amazonaws.cdk"
                              },
                              "package": "com.amazonaws.cdk.aws.iam"
                            },
                            "js": {
                              "npm": "@aws-cdk/aws-iam"
                            }
                          },
                          "version": "0.7.3-beta"
                        },
                        "@aws-cdk/cdk": {
                          "dependencies": {
                            "@aws-cdk/cx-api": {
                              "targets": {
                                "dotnet": {
                                  "namespace": "Amazon.CDK.CXAPI"
                                },
                                "java": {
                                  "maven": {
                                    "artifactId": "cxapi",
                                    "groupId": "com.amazonaws.cdk"
                                  },
                                  "package": "com.amazonaws.cdk.cxapi"
                                },
                                "js": {
                                  "npm": "@aws-cdk/cx-api"
                                }
                              },
                              "version": "0.7.3-beta"
                            }
                          },
                          "targets": {
                            "dotnet": {
                              "namespace": "Amazon.CDK"
                            },
                            "java": {
                              "maven": {
                                "artifactId": "cdk",
                                "groupId": "com.amazonaws.cdk"
                              },
                              "package": "com.amazonaws.cdk"
                            },
                            "js": {
                              "npm": "@aws-cdk/cdk"
                            }
                          },
                          "version": "0.7.3-beta"
                        }
                      },
                      "targets": {
                        "dotnet": {
                          "namespace": "Amazon.CDK.AWS.KMS"
                        },
                        "java": {
                          "maven": {
                            "artifactId": "aws-kms",
                            "groupId": "com.amazonaws.cdk"
                          },
                          "package": "com.amazonaws.cdk.aws.kms"
                        },
                        "js": {
                          "npm": "@aws-cdk/aws-kms"
                        }
                      },
                      "version": "0.7.3-beta"
                    },
                    "@aws-cdk/cdk": {
                      "dependencies": {
                        "@aws-cdk/cx-api": {
                          "targets": {
                            "dotnet": {
                              "namespace": "Amazon.CDK.CXAPI"
                            },
                            "java": {
                              "maven": {
                                "artifactId": "cxapi",
                                "groupId": "com.amazonaws.cdk"
                              },
                              "package": "com.amazonaws.cdk.cxapi"
                            },
                            "js": {
                              "npm": "@aws-cdk/cx-api"
                            }
                          },
                          "version": "0.7.3-beta"
                        }
                      },
                      "targets": {
                        "dotnet": {
                          "namespace": "Amazon.CDK"
                        },
                        "java": {
                          "maven": {
                            "artifactId": "cdk",
                            "groupId": "com.amazonaws.cdk"
                          },
                          "package": "com.amazonaws.cdk"
                        },
                        "js": {
                          "npm": "@aws-cdk/cdk"
                        }
                      },
                      "version": "0.7.3-beta"
                    }
                  },
                  "targets": {
                    "dotnet": {
                      "namespace": "Amazon.CDK.AWS.S3"
                    },
                    "java": {
                      "maven": {
                        "artifactId": "aws-s3",
                        "groupId": "com.amazonaws.cdk"
                      },
                      "package": "com.amazonaws.cdk.aws.s3"
                    },
                    "js": {
                      "npm": "@aws-cdk/aws-s3"
                    }
                  },
                  "version": "0.7.3-beta"
                },
                "@aws-cdk/cdk": {
                  "dependencies": {
                    "@aws-cdk/cx-api": {
                      "targets": {
                        "dotnet": {
                          "namespace": "Amazon.CDK.CXAPI"
                        },
                        "java": {
                          "maven": {
                            "artifactId": "cxapi",
                            "groupId": "com.amazonaws.cdk"
                          },
                          "package": "com.amazonaws.cdk.cxapi"
                        },
                        "js": {
                          "npm": "@aws-cdk/cx-api"
                        }
                      },
                      "version": "0.7.3-beta"
                    }
                  },
                  "targets": {
                    "dotnet": {
                      "namespace": "Amazon.CDK"
                    },
                    "java": {
                      "maven": {
                        "artifactId": "cdk",
                        "groupId": "com.amazonaws.cdk"
                      },
                      "package": "com.amazonaws.cdk"
                    },
                    "js": {
                      "npm": "@aws-cdk/cdk"
                    }
                  },
                  "version": "0.7.3-beta"
                },
                "@aws-cdk/cx-api": {
                  "targets": {
                    "dotnet": {
                      "namespace": "Amazon.CDK.CXAPI"
                    },
                    "java": {
                      "maven": {
                        "artifactId": "cxapi",
                        "groupId": "com.amazonaws.cdk"
                      },
                      "package": "com.amazonaws.cdk.cxapi"
                    },
                    "js": {
                      "npm": "@aws-cdk/cx-api"
                    }
                  },
                  "version": "0.7.3-beta"
                }
              },
              "targets": {
                "dotnet": {
                  "namespace": "Amazon.CDK.Assets"
                },
                "java": {
                  "maven": {
                    "artifactId": "assets",
                    "groupId": "com.amazonaws.cdk"
                  },
                  "package": "com.amazonaws.cdk.assets"
                },
                "js": {
                  "npm": "@aws-cdk/assets"
                }
              },
              "version": "0.7.3-beta"
            },
            "@aws-cdk/aws-cloudwatch": {
              "dependencies": {
                "@aws-cdk/aws-iam": {
                  "dependencies": {
                    "@aws-cdk/cdk": {
                      "dependencies": {
                        "@aws-cdk/cx-api": {
                          "targets": {
                            "dotnet": {
                              "namespace": "Amazon.CDK.CXAPI"
                            },
                            "java": {
                              "maven": {
                                "artifactId": "cxapi",
                                "groupId": "com.amazonaws.cdk"
                              },
                              "package": "com.amazonaws.cdk.cxapi"
                            },
                            "js": {
                              "npm": "@aws-cdk/cx-api"
                            }
                          },
                          "version": "0.7.3-beta"
                        }
                      },
                      "targets": {
                        "dotnet": {
                          "namespace": "Amazon.CDK"
                        },
                        "java": {
                          "maven": {
                            "artifactId": "cdk",
                            "groupId": "com.amazonaws.cdk"
                          },
                          "package": "com.amazonaws.cdk"
                        },
                        "js": {
                          "npm": "@aws-cdk/cdk"
                        }
                      },
                      "version": "0.7.3-beta"
                    }
                  },
                  "targets": {
                    "dotnet": {
                      "namespace": "Amazon.CDK.AWS.IAM"
                    },
                    "java": {
                      "maven": {
                        "artifactId": "aws-iam",
                        "groupId": "com.amazonaws.cdk"
                      },
                      "package": "com.amazonaws.cdk.aws.iam"
                    },
                    "js": {
                      "npm": "@aws-cdk/aws-iam"
                    }
                  },
                  "version": "0.7.3-beta"
                },
                "@aws-cdk/cdk": {
                  "dependencies": {
                    "@aws-cdk/cx-api": {
                      "targets": {
                        "dotnet": {
                          "namespace": "Amazon.CDK.CXAPI"
                        },
                        "java": {
                          "maven": {
                            "artifactId": "cxapi",
                            "groupId": "com.amazonaws.cdk"
                          },
                          "package": "com.amazonaws.cdk.cxapi"
                        },
                        "js": {
                          "npm": "@aws-cdk/cx-api"
                        }
                      },
                      "version": "0.7.3-beta"
                    }
                  },
                  "targets": {
                    "dotnet": {
                      "namespace": "Amazon.CDK"
                    },
                    "java": {
                      "maven": {
                        "artifactId": "cdk",
                        "groupId": "com.amazonaws.cdk"
                      },
                      "package": "com.amazonaws.cdk"
                    },
                    "js": {
                      "npm": "@aws-cdk/cdk"
                    }
                  },
                  "version": "0.7.3-beta"
                }
              },
              "targets": {
                "dotnet": {
                  "namespace": "Amazon.CDK.AWS.CloudWatch"
                },
                "java": {
                  "maven": {
                    "artifactId": "aws-cloudwatch",
                    "groupId": "com.amazonaws.cdk"
                  },
                  "package": "com.amazonaws.cdk.aws.cloudwatch"
                },
                "js": {
                  "npm": "@aws-cdk/aws-cloudwatch"
                }
              },
              "version": "0.7.3-beta"
            },
            "@aws-cdk/aws-events": {
              "dependencies": {
                "@aws-cdk/aws-iam": {
                  "dependencies": {
                    "@aws-cdk/cdk": {
                      "dependencies": {
                        "@aws-cdk/cx-api": {
                          "targets": {
                            "dotnet": {
                              "namespace": "Amazon.CDK.CXAPI"
                            },
                            "java": {
                              "maven": {
                                "artifactId": "cxapi",
                                "groupId": "com.amazonaws.cdk"
                              },
                              "package": "com.amazonaws.cdk.cxapi"
                            },
                            "js": {
                              "npm": "@aws-cdk/cx-api"
                            }
                          },
                          "version": "0.7.3-beta"
                        }
                      },
                      "targets": {
                        "dotnet": {
                          "namespace": "Amazon.CDK"
                        },
                        "java": {
                          "maven": {
                            "artifactId": "cdk",
                            "groupId": "com.amazonaws.cdk"
                          },
                          "package": "com.amazonaws.cdk"
                        },
                        "js": {
                          "npm": "@aws-cdk/cdk"
                        }
                      },
                      "version": "0.7.3-beta"
                    }
                  },
                  "targets": {
                    "dotnet": {
                      "namespace": "Amazon.CDK.AWS.IAM"
                    },
                    "java": {
                      "maven": {
                        "artifactId": "aws-iam",
                        "groupId": "com.amazonaws.cdk"
                      },
                      "package": "com.amazonaws.cdk.aws.iam"
                    },
                    "js": {
                      "npm": "@aws-cdk/aws-iam"
                    }
                  },
                  "version": "0.7.3-beta"
                },
                "@aws-cdk/cdk": {
                  "dependencies": {
                    "@aws-cdk/cx-api": {
                      "targets": {
                        "dotnet": {
                          "namespace": "Amazon.CDK.CXAPI"
                        },
                        "java": {
                          "maven": {
                            "artifactId": "cxapi",
                            "groupId": "com.amazonaws.cdk"
                          },
                          "package": "com.amazonaws.cdk.cxapi"
                        },
                        "js": {
                          "npm": "@aws-cdk/cx-api"
                        }
                      },
                      "version": "0.7.3-beta"
                    }
                  },
                  "targets": {
                    "dotnet": {
                      "namespace": "Amazon.CDK"
                    },
                    "java": {
                      "maven": {
                        "artifactId": "cdk",
                        "groupId": "com.amazonaws.cdk"
                      },
                      "package": "com.amazonaws.cdk"
                    },
                    "js": {
                      "npm": "@aws-cdk/cdk"
                    }
                  },
                  "version": "0.7.3-beta"
                }
              },
              "targets": {
                "dotnet": {
                  "namespace": "Amazon.CDK.AWS.Events"
                },
                "java": {
                  "maven": {
                    "artifactId": "aws-events",
                    "groupId": "com.amazonaws.cdk"
                  },
                  "package": "com.amazonaws.cdk.aws.events"
                },
                "js": {
                  "npm": "@aws-cdk/aws-events"
                }
              },
              "version": "0.7.3-beta"
            },
            "@aws-cdk/aws-iam": {
              "dependencies": {
                "@aws-cdk/cdk": {
                  "dependencies": {
                    "@aws-cdk/cx-api": {
                      "targets": {
                        "dotnet": {
                          "namespace": "Amazon.CDK.CXAPI"
                        },
                        "java": {
                          "maven": {
                            "artifactId": "cxapi",
                            "groupId": "com.amazonaws.cdk"
                          },
                          "package": "com.amazonaws.cdk.cxapi"
                        },
                        "js": {
                          "npm": "@aws-cdk/cx-api"
                        }
                      },
                      "version": "0.7.3-beta"
                    }
                  },
                  "targets": {
                    "dotnet": {
                      "namespace": "Amazon.CDK"
                    },
                    "java": {
                      "maven": {
                        "artifactId": "cdk",
                        "groupId": "com.amazonaws.cdk"
                      },
                      "package": "com.amazonaws.cdk"
                    },
                    "js": {
                      "npm": "@aws-cdk/cdk"
                    }
                  },
                  "version": "0.7.3-beta"
                }
              },
              "targets": {
                "dotnet": {
                  "namespace": "Amazon.CDK.AWS.IAM"
                },
                "java": {
                  "maven": {
                    "artifactId": "aws-iam",
                    "groupId": "com.amazonaws.cdk"
                  },
                  "package": "com.amazonaws.cdk.aws.iam"
                },
                "js": {
                  "npm": "@aws-cdk/aws-iam"
                }
              },
              "version": "0.7.3-beta"
            },
            "@aws-cdk/aws-logs": {
              "dependencies": {
                "@aws-cdk/aws-iam": {
                  "dependencies": {
                    "@aws-cdk/cdk": {
                      "dependencies": {
                        "@aws-cdk/cx-api": {
                          "targets": {
                            "dotnet": {
                              "namespace": "Amazon.CDK.CXAPI"
                            },
                            "java": {
                              "maven": {
                                "artifactId": "cxapi",
                                "groupId": "com.amazonaws.cdk"
                              },
                              "package": "com.amazonaws.cdk.cxapi"
                            },
                            "js": {
                              "npm": "@aws-cdk/cx-api"
                            }
                          },
                          "version": "0.7.3-beta"
                        }
                      },
                      "targets": {
                        "dotnet": {
                          "namespace": "Amazon.CDK"
                        },
                        "java": {
                          "maven": {
                            "artifactId": "cdk",
                            "groupId": "com.amazonaws.cdk"
                          },
                          "package": "com.amazonaws.cdk"
                        },
                        "js": {
                          "npm": "@aws-cdk/cdk"
                        }
                      },
                      "version": "0.7.3-beta"
                    }
                  },
                  "targets": {
                    "dotnet": {
                      "namespace": "Amazon.CDK.AWS.IAM"
                    },
                    "java": {
                      "maven": {
                        "artifactId": "aws-iam",
                        "groupId": "com.amazonaws.cdk"
                      },
                      "package": "com.amazonaws.cdk.aws.iam"
                    },
                    "js": {
                      "npm": "@aws-cdk/aws-iam"
                    }
                  },
                  "version": "0.7.3-beta"
                },
                "@aws-cdk/cdk": {
                  "dependencies": {
                    "@aws-cdk/cx-api": {
                      "targets": {
                        "dotnet": {
                          "namespace": "Amazon.CDK.CXAPI"
                        },
                        "java": {
                          "maven": {
                            "artifactId": "cxapi",
                            "groupId": "com.amazonaws.cdk"
                          },
                          "package": "com.amazonaws.cdk.cxapi"
                        },
                        "js": {
                          "npm": "@aws-cdk/cx-api"
                        }
                      },
                      "version": "0.7.3-beta"
                    }
                  },
                  "targets": {
                    "dotnet": {
                      "namespace": "Amazon.CDK"
                    },
                    "java": {
                      "maven": {
                        "artifactId": "cdk",
                        "groupId": "com.amazonaws.cdk"
                      },
                      "package": "com.amazonaws.cdk"
                    },
                    "js": {
                      "npm": "@aws-cdk/cdk"
                    }
                  },
                  "version": "0.7.3-beta"
                }
              },
              "targets": {
                "dotnet": {
                  "namespace": "Amazon.CDK.AWS.Logs"
                },
                "java": {
                  "maven": {
                    "artifactId": "aws-logs",
                    "groupId": "com.amazonaws.cdk"
                  },
                  "package": "com.amazonaws.cdk.aws.logs"
                },
                "js": {
                  "npm": "@aws-cdk/aws-logs"
                }
              },
              "version": "0.7.3-beta"
            },
            "@aws-cdk/aws-s3": {
              "dependencies": {
                "@aws-cdk/aws-iam": {
                  "dependencies": {
                    "@aws-cdk/cdk": {
                      "dependencies": {
                        "@aws-cdk/cx-api": {
                          "targets": {
                            "dotnet": {
                              "namespace": "Amazon.CDK.CXAPI"
                            },
                            "java": {
                              "maven": {
                                "artifactId": "cxapi",
                                "groupId": "com.amazonaws.cdk"
                              },
                              "package": "com.amazonaws.cdk.cxapi"
                            },
                            "js": {
                              "npm": "@aws-cdk/cx-api"
                            }
                          },
                          "version": "0.7.3-beta"
                        }
                      },
                      "targets": {
                        "dotnet": {
                          "namespace": "Amazon.CDK"
                        },
                        "java": {
                          "maven": {
                            "artifactId": "cdk",
                            "groupId": "com.amazonaws.cdk"
                          },
                          "package": "com.amazonaws.cdk"
                        },
                        "js": {
                          "npm": "@aws-cdk/cdk"
                        }
                      },
                      "version": "0.7.3-beta"
                    }
                  },
                  "targets": {
                    "dotnet": {
                      "namespace": "Amazon.CDK.AWS.IAM"
                    },
                    "java": {
                      "maven": {
                        "artifactId": "aws-iam",
                        "groupId": "com.amazonaws.cdk"
                      },
                      "package": "com.amazonaws.cdk.aws.iam"
                    },
                    "js": {
                      "npm": "@aws-cdk/aws-iam"
                    }
                  },
                  "version": "0.7.3-beta"
                },
                "@aws-cdk/aws-kms": {
                  "dependencies": {
                    "@aws-cdk/aws-iam": {
                      "dependencies": {
                        "@aws-cdk/cdk": {
                          "dependencies": {
                            "@aws-cdk/cx-api": {
                              "targets": {
                                "dotnet": {
                                  "namespace": "Amazon.CDK.CXAPI"
                                },
                                "java": {
                                  "maven": {
                                    "artifactId": "cxapi",
                                    "groupId": "com.amazonaws.cdk"
                                  },
                                  "package": "com.amazonaws.cdk.cxapi"
                                },
                                "js": {
                                  "npm": "@aws-cdk/cx-api"
                                }
                              },
                              "version": "0.7.3-beta"
                            }
                          },
                          "targets": {
                            "dotnet": {
                              "namespace": "Amazon.CDK"
                            },
                            "java": {
                              "maven": {
                                "artifactId": "cdk",
                                "groupId": "com.amazonaws.cdk"
                              },
                              "package": "com.amazonaws.cdk"
                            },
                            "js": {
                              "npm": "@aws-cdk/cdk"
                            }
                          },
                          "version": "0.7.3-beta"
                        }
                      },
                      "targets": {
                        "dotnet": {
                          "namespace": "Amazon.CDK.AWS.IAM"
                        },
                        "java": {
                          "maven": {
                            "artifactId": "aws-iam",
                            "groupId": "com.amazonaws.cdk"
                          },
                          "package": "com.amazonaws.cdk.aws.iam"
                        },
                        "js": {
                          "npm": "@aws-cdk/aws-iam"
                        }
                      },
                      "version": "0.7.3-beta"
                    },
                    "@aws-cdk/cdk": {
                      "dependencies": {
                        "@aws-cdk/cx-api": {
                          "targets": {
                            "dotnet": {
                              "namespace": "Amazon.CDK.CXAPI"
                            },
                            "java": {
                              "maven": {
                                "artifactId": "cxapi",
                                "groupId": "com.amazonaws.cdk"
                              },
                              "package": "com.amazonaws.cdk.cxapi"
                            },
                            "js": {
                              "npm": "@aws-cdk/cx-api"
                            }
                          },
                          "version": "0.7.3-beta"
                        }
                      },
                      "targets": {
                        "dotnet": {
                          "namespace": "Amazon.CDK"
                        },
                        "java": {
                          "maven": {
                            "artifactId": "cdk",
                            "groupId": "com.amazonaws.cdk"
                          },
                          "package": "com.amazonaws.cdk"
                        },
                        "js": {
                          "npm": "@aws-cdk/cdk"
                        }
                      },
                      "version": "0.7.3-beta"
                    }
                  },
                  "targets": {
                    "dotnet": {
                      "namespace": "Amazon.CDK.AWS.KMS"
                    },
                    "java": {
                      "maven": {
                        "artifactId": "aws-kms",
                        "groupId": "com.amazonaws.cdk"
                      },
                      "package": "com.amazonaws.cdk.aws.kms"
                    },
                    "js": {
                      "npm": "@aws-cdk/aws-kms"
                    }
                  },
                  "version": "0.7.3-beta"
                },
                "@aws-cdk/cdk": {
                  "dependencies": {
                    "@aws-cdk/cx-api": {
                      "targets": {
                        "dotnet": {
                          "namespace": "Amazon.CDK.CXAPI"
                        },
                        "java": {
                          "maven": {
                            "artifactId": "cxapi",
                            "groupId": "com.amazonaws.cdk"
                          },
                          "package": "com.amazonaws.cdk.cxapi"
                        },
                        "js": {
                          "npm": "@aws-cdk/cx-api"
                        }
                      },
                      "version": "0.7.3-beta"
                    }
                  },
                  "targets": {
                    "dotnet": {
                      "namespace": "Amazon.CDK"
                    },
                    "java": {
                      "maven": {
                        "artifactId": "cdk",
                        "groupId": "com.amazonaws.cdk"
                      },
                      "package": "com.amazonaws.cdk"
                    },
                    "js": {
                      "npm": "@aws-cdk/cdk"
                    }
                  },
                  "version": "0.7.3-beta"
                }
              },
              "targets": {
                "dotnet": {
                  "namespace": "Amazon.CDK.AWS.S3"
                },
                "java": {
                  "maven": {
                    "artifactId": "aws-s3",
                    "groupId": "com.amazonaws.cdk"
                  },
                  "package": "com.amazonaws.cdk.aws.s3"
                },
                "js": {
                  "npm": "@aws-cdk/aws-s3"
                }
              },
              "version": "0.7.3-beta"
            },
            "@aws-cdk/cdk": {
              "dependencies": {
                "@aws-cdk/cx-api": {
                  "targets": {
                    "dotnet": {
                      "namespace": "Amazon.CDK.CXAPI"
                    },
                    "java": {
                      "maven": {
                        "artifactId": "cxapi",
                        "groupId": "com.amazonaws.cdk"
                      },
                      "package": "com.amazonaws.cdk.cxapi"
                    },
                    "js": {
                      "npm": "@aws-cdk/cx-api"
                    }
                  },
                  "version": "0.7.3-beta"
                }
              },
              "targets": {
                "dotnet": {
                  "namespace": "Amazon.CDK"
                },
                "java": {
                  "maven": {
                    "artifactId": "cdk",
                    "groupId": "com.amazonaws.cdk"
                  },
                  "package": "com.amazonaws.cdk"
                },
                "js": {
                  "npm": "@aws-cdk/cdk"
                }
              },
              "version": "0.7.3-beta"
            },
            "@aws-cdk/cx-api": {
              "targets": {
                "dotnet": {
                  "namespace": "Amazon.CDK.CXAPI"
                },
                "java": {
                  "maven": {
                    "artifactId": "cxapi",
                    "groupId": "com.amazonaws.cdk"
                  },
                  "package": "com.amazonaws.cdk.cxapi"
                },
                "js": {
                  "npm": "@aws-cdk/cx-api"
                }
              },
              "version": "0.7.3-beta"
            }
          },
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.Lambda"
            },
            "java": {
              "maven": {
                "artifactId": "aws-lambda",
                "groupId": "com.amazonaws.cdk"
              },
              "package": "com.amazonaws.cdk.aws.lambda"
            },
            "js": {
              "npm": "@aws-cdk/aws-lambda"
            }
          },
          "version": "0.7.3-beta"
        },
        "@aws-cdk/aws-sqs": {
          "dependencies": {
            "@aws-cdk/aws-kms": {
              "dependencies": {
                "@aws-cdk/aws-iam": {
                  "dependencies": {
                    "@aws-cdk/cdk": {
                      "dependencies": {
                        "@aws-cdk/cx-api": {
                          "targets": {
                            "dotnet": {
                              "namespace": "Amazon.CDK.CXAPI"
                            },
                            "java": {
                              "maven": {
                                "artifactId": "cxapi",
                                "groupId": "com.amazonaws.cdk"
                              },
                              "package": "com.amazonaws.cdk.cxapi"
                            },
                            "js": {
                              "npm": "@aws-cdk/cx-api"
                            }
                          },
                          "version": "0.7.3-beta"
                        }
                      },
                      "targets": {
                        "dotnet": {
                          "namespace": "Amazon.CDK"
                        },
                        "java": {
                          "maven": {
                            "artifactId": "cdk",
                            "groupId": "com.amazonaws.cdk"
                          },
                          "package": "com.amazonaws.cdk"
                        },
                        "js": {
                          "npm": "@aws-cdk/cdk"
                        }
                      },
                      "version": "0.7.3-beta"
                    }
                  },
                  "targets": {
                    "dotnet": {
                      "namespace": "Amazon.CDK.AWS.IAM"
                    },
                    "java": {
                      "maven": {
                        "artifactId": "aws-iam",
                        "groupId": "com.amazonaws.cdk"
                      },
                      "package": "com.amazonaws.cdk.aws.iam"
                    },
                    "js": {
                      "npm": "@aws-cdk/aws-iam"
                    }
                  },
                  "version": "0.7.3-beta"
                },
                "@aws-cdk/cdk": {
                  "dependencies": {
                    "@aws-cdk/cx-api": {
                      "targets": {
                        "dotnet": {
                          "namespace": "Amazon.CDK.CXAPI"
                        },
                        "java": {
                          "maven": {
                            "artifactId": "cxapi",
                            "groupId": "com.amazonaws.cdk"
                          },
                          "package": "com.amazonaws.cdk.cxapi"
                        },
                        "js": {
                          "npm": "@aws-cdk/cx-api"
                        }
                      },
                      "version": "0.7.3-beta"
                    }
                  },
                  "targets": {
                    "dotnet": {
                      "namespace": "Amazon.CDK"
                    },
                    "java": {
                      "maven": {
                        "artifactId": "cdk",
                        "groupId": "com.amazonaws.cdk"
                      },
                      "package": "com.amazonaws.cdk"
                    },
                    "js": {
                      "npm": "@aws-cdk/cdk"
                    }
                  },
                  "version": "0.7.3-beta"
                }
              },
              "targets": {
                "dotnet": {
                  "namespace": "Amazon.CDK.AWS.KMS"
                },
                "java": {
                  "maven": {
                    "artifactId": "aws-kms",
                    "groupId": "com.amazonaws.cdk"
                  },
                  "package": "com.amazonaws.cdk.aws.kms"
                },
                "js": {
                  "npm": "@aws-cdk/aws-kms"
                }
              },
              "version": "0.7.3-beta"
            },
            "@aws-cdk/cdk": {
              "dependencies": {
                "@aws-cdk/cx-api": {
                  "targets": {
                    "dotnet": {
                      "namespace": "Amazon.CDK.CXAPI"
                    },
                    "java": {
                      "maven": {
                        "artifactId": "cxapi",
                        "groupId": "com.amazonaws.cdk"
                      },
                      "package": "com.amazonaws.cdk.cxapi"
                    },
                    "js": {
                      "npm": "@aws-cdk/cx-api"
                    }
                  },
                  "version": "0.7.3-beta"
                }
              },
              "targets": {
                "dotnet": {
                  "namespace": "Amazon.CDK"
                },
                "java": {
                  "maven": {
                    "artifactId": "cdk",
                    "groupId": "com.amazonaws.cdk"
                  },
                  "package": "com.amazonaws.cdk"
                },
                "js": {
                  "npm": "@aws-cdk/cdk"
                }
              },
              "version": "0.7.3-beta"
            }
          },
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.SQS"
            },
            "java": {
              "maven": {
                "artifactId": "aws-sqs",
                "groupId": "com.amazonaws.cdk"
              },
              "package": "com.amazonaws.cdk.aws.sqs"
            },
            "js": {
              "npm": "@aws-cdk/aws-sqs"
            }
          },
          "version": "0.7.3-beta"
        },
        "@aws-cdk/cdk": {
          "dependencies": {
            "@aws-cdk/cx-api": {
              "targets": {
                "dotnet": {
                  "namespace": "Amazon.CDK.CXAPI"
                },
                "java": {
                  "maven": {
                    "artifactId": "cxapi",
                    "groupId": "com.amazonaws.cdk"
                  },
                  "package": "com.amazonaws.cdk.cxapi"
                },
                "js": {
                  "npm": "@aws-cdk/cx-api"
                }
              },
              "version": "0.7.3-beta"
            }
          },
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK"
            },
            "java": {
              "maven": {
                "artifactId": "cdk",
                "groupId": "com.amazonaws.cdk"
              },
              "package": "com.amazonaws.cdk"
            },
            "js": {
              "npm": "@aws-cdk/cdk"
            }
          },
          "version": "0.7.3-beta"
        }
      },
      "targets": {
        "dotnet": {
          "namespace": "Amazon.CDK.AWS.SNS"
        },
        "java": {
          "maven": {
            "artifactId": "aws-sns",
            "groupId": "com.amazonaws.cdk"
          },
          "package": "com.amazonaws.cdk.aws.sns"
        },
        "js": {
          "npm": "@aws-cdk/aws-sns"
        }
      },
      "version": "0.7.3-beta"
    },
    "@aws-cdk/cdk": {
      "dependencies": {
        "@aws-cdk/cx-api": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.CXAPI"
            },
            "java": {
              "maven": {
                "artifactId": "cxapi",
                "groupId": "com.amazonaws.cdk"
              },
              "package": "com.amazonaws.cdk.cxapi"
            },
            "js": {
              "npm": "@aws-cdk/cx-api"
            }
          },
          "version": "0.7.3-beta"
        }
      },
      "targets": {
        "dotnet": {
          "namespace": "Amazon.CDK"
        },
        "java": {
          "maven": {
            "artifactId": "cdk",
            "groupId": "com.amazonaws.cdk"
          },
          "package": "com.amazonaws.cdk"
        },
        "js": {
          "npm": "@aws-cdk/cdk"
        }
      },
      "version": "0.7.3-beta"
    }
  },
  "externals": {
    "@aws-cdk/aws-elasticloadbalancing.LoadBalancerCanonicalHostedZoneName": {
      "assembly": "@aws-cdk/aws-elasticloadbalancing",
      "base": {
        "fqn": "@aws-cdk/cdk.Token"
      },
      "fqn": "@aws-cdk/aws-elasticloadbalancing.LoadBalancerCanonicalHostedZoneName",
      "initializer": {
        "docs": {
          "comment": "Creates a token that resolves to `value`. If value is a function,\nthe function is evaluated upon resolution and the value it returns will be\nuesd as the token's value."
        },
        "initializer": true,
        "parameters": [
          {
            "name": "valueOrFunction",
            "type": {
              "optional": true,
              "primitive": "any"
            }
          }
        ]
      },
      "kind": "class",
      "name": "LoadBalancerCanonicalHostedZoneName",
      "namespace": "@aws-cdk/aws-elasticloadbalancing"
    },
    "@aws-cdk/aws-elasticloadbalancing.LoadBalancerDnsName": {
      "assembly": "@aws-cdk/aws-elasticloadbalancing",
      "base": {
        "fqn": "@aws-cdk/cdk.Token"
      },
      "fqn": "@aws-cdk/aws-elasticloadbalancing.LoadBalancerDnsName",
      "initializer": {
        "docs": {
          "comment": "Creates a token that resolves to `value`. If value is a function,\nthe function is evaluated upon resolution and the value it returns will be\nuesd as the token's value."
        },
        "initializer": true,
        "parameters": [
          {
            "name": "valueOrFunction",
            "type": {
              "optional": true,
              "primitive": "any"
            }
          }
        ]
      },
      "kind": "class",
      "name": "LoadBalancerDnsName",
      "namespace": "@aws-cdk/aws-elasticloadbalancing"
    },
    "@aws-cdk/aws-elasticloadbalancing.LoadBalancerSourceSecurityGroupGroupName": {
      "assembly": "@aws-cdk/aws-elasticloadbalancing",
      "base": {
        "fqn": "@aws-cdk/cdk.Token"
      },
      "fqn": "@aws-cdk/aws-elasticloadbalancing.LoadBalancerSourceSecurityGroupGroupName",
      "initializer": {
        "docs": {
          "comment": "Creates a token that resolves to `value`. If value is a function,\nthe function is evaluated upon resolution and the value it returns will be\nuesd as the token's value."
        },
        "initializer": true,
        "parameters": [
          {
            "name": "valueOrFunction",
            "type": {
              "optional": true,
              "primitive": "any"
            }
          }
        ]
      },
      "kind": "class",
      "name": "LoadBalancerSourceSecurityGroupGroupName",
      "namespace": "@aws-cdk/aws-elasticloadbalancing"
    },
    "@aws-cdk/aws-elasticloadbalancing.LoadBalancerSourceSecurityGroupOwnerAlias": {
      "assembly": "@aws-cdk/aws-elasticloadbalancing",
      "base": {
        "fqn": "@aws-cdk/cdk.Token"
      },
      "fqn": "@aws-cdk/aws-elasticloadbalancing.LoadBalancerSourceSecurityGroupOwnerAlias",
      "initializer": {
        "docs": {
          "comment": "Creates a token that resolves to `value`. If value is a function,\nthe function is evaluated upon resolution and the value it returns will be\nuesd as the token's value."
        },
        "initializer": true,
        "parameters": [
          {
            "name": "valueOrFunction",
            "type": {
              "optional": true,
              "primitive": "any"
            }
          }
        ]
      },
      "kind": "class",
      "name": "LoadBalancerSourceSecurityGroupOwnerAlias",
      "namespace": "@aws-cdk/aws-elasticloadbalancing"
    },
    "@aws-cdk/aws-iam.IIdentityResource": {
      "assembly": "@aws-cdk/aws-iam",
      "docs": {
        "deprecated": "Use IPrincipal"
      },
      "fqn": "@aws-cdk/aws-iam.IIdentityResource",
      "interfaces": [
        {
          "fqn": "@aws-cdk/aws-iam.IPrincipal"
        }
      ],
      "kind": "interface",
      "name": "IIdentityResource",
      "namespace": "@aws-cdk/aws-iam"
    },
    "@aws-cdk/aws-iam.IPrincipal": {
      "assembly": "@aws-cdk/aws-iam",
      "docs": {
        "comment": "A construct that represents an IAM principal, such as a user, group or role."
      },
      "fqn": "@aws-cdk/aws-iam.IPrincipal",
      "kind": "interface",
      "methods": [
        {
          "docs": {
            "comment": "Adds an IAM statement to the default inline policy associated with this\nprincipal. If a policy doesn't exist, it is created."
          },
          "name": "addToPolicy",
          "parameters": [
            {
              "name": "statement",
              "type": {
                "fqn": "@aws-cdk/cdk.PolicyStatement"
              }
            }
          ]
        },
        {
          "docs": {
            "comment": "Attaches an inline policy to this principal.\nThis is the same as calling `policy.addToXxx(principal)`."
          },
          "name": "attachInlinePolicy",
          "parameters": [
            {
              "docs": {
                "comment": "The policy resource to attach to this principal."
              },
              "name": "policy",
              "type": {
                "fqn": "@aws-cdk/aws-iam.Policy"
              }
            }
          ]
        },
        {
          "docs": {
            "comment": "Attaches a managed policy to this principal."
          },
          "name": "attachManagedPolicy",
          "parameters": [
            {
              "docs": {
                "comment": "The ARN of the managed policy"
              },
              "name": "arn",
              "type": {
                "primitive": "any"
              }
            }
          ]
        }
      ],
      "name": "IPrincipal",
      "namespace": "@aws-cdk/aws-iam",
      "properties": [
        {
          "docs": {
            "comment": "The IAM principal of this identity (i.e. AWS principal, service principal, etc)."
          },
          "immutable": true,
          "name": "principal",
          "type": {
            "fqn": "@aws-cdk/cdk.PolicyPrincipal"
          }
        }
      ]
    },
    "@aws-cdk/aws-iam.Role": {
      "assembly": "@aws-cdk/aws-iam",
      "base": {
        "fqn": "@aws-cdk/cdk.Construct"
      },
      "docs": {
        "comment": "IAM Role\n\nDefines an IAM role. The role is created with an assume policy document associated with\nthe specified AWS service principal defined in `serviceAssumeRole`."
      },
      "fqn": "@aws-cdk/aws-iam.Role",
      "initializer": {
        "initializer": true,
        "parameters": [
          {
            "name": "parent",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "name": "name",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-iam.RoleProps"
            }
          }
        ]
      },
      "interfaces": [
        {
          "fqn": "@aws-cdk/aws-iam.IIdentityResource"
        },
        {
          "fqn": "@aws-cdk/aws-iam.IPrincipal"
        },
        {
          "fqn": "@aws-cdk/cdk.IDependable"
        }
      ],
      "kind": "class",
      "methods": [
        {
          "docs": {
            "comment": "Adds a permission to the role's default policy document.\nIf there is no default policy attached to this role, it will be created."
          },
          "name": "addToPolicy",
          "parameters": [
            {
              "name": "statement",
              "type": {
                "fqn": "@aws-cdk/cdk.PolicyStatement"
              }
            }
          ]
        },
        {
          "docs": {
            "comment": "Attaches a managed policy to this role."
          },
          "name": "attachManagedPolicy",
          "parameters": [
            {
              "docs": {
                "comment": "The ARN of the managed policy to attach."
              },
              "name": "arn",
              "type": {
                "primitive": "any"
              }
            }
          ]
        },
        {
          "docs": {
            "comment": "Attaches a policy to this role."
          },
          "name": "attachInlinePolicy",
          "parameters": [
            {
              "docs": {
                "comment": "The policy to attach"
              },
              "name": "policy",
              "type": {
                "fqn": "@aws-cdk/aws-iam.Policy"
              }
            }
          ]
        }
      ],
      "name": "Role",
      "namespace": "@aws-cdk/aws-iam",
      "properties": [
        {
          "docs": {
            "comment": "The assume role policy document associated with this role."
          },
          "immutable": true,
          "name": "assumeRolePolicy",
          "type": {
            "fqn": "@aws-cdk/cdk.PolicyDocument",
            "optional": true
          }
        },
        {
          "docs": {
            "comment": "Returns the ARN of this role."
          },
          "immutable": true,
          "name": "roleArn",
          "type": {
            "fqn": "@aws-cdk/aws-iam.RoleArn"
          }
        },
        {
          "docs": {
            "comment": "Returns the name of the role."
          },
          "immutable": true,
          "name": "roleName",
          "type": {
            "fqn": "@aws-cdk/aws-iam.RoleName"
          }
        },
        {
          "docs": {
            "comment": "Returns the ARN of this role."
          },
          "immutable": true,
          "name": "principal",
          "type": {
            "fqn": "@aws-cdk/cdk.PolicyPrincipal"
          }
        },
        {
          "docs": {
            "comment": "Returns the role."
          },
          "immutable": true,
          "name": "dependencyElements",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/cdk.IDependable"
              },
              "kind": "array"
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-sns.cloudformation.TopicResource": {
      "assembly": "@aws-cdk/aws-sns",
      "base": {
        "fqn": "@aws-cdk/cdk.Resource"
      },
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-sns-topic.html"
      },
      "fqn": "@aws-cdk/aws-sns.cloudformation.TopicResource",
      "initializer": {
        "docs": {
          "comment": "Creates a new ``AWS::SNS::Topic``."
        },
        "initializer": true,
        "parameters": [
          {
            "docs": {
              "comment": "the ``cdk.Construct`` this ``TopicResource`` is a part of"
            },
            "name": "parent",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "docs": {
              "comment": "the name of the resource in the ``cdk.Construct`` tree"
            },
            "name": "name",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "comment": "the properties of this ``TopicResource``"
            },
            "name": "properties",
            "type": {
              "fqn": "@aws-cdk/aws-sns.cloudformation.TopicResourceProps",
              "optional": true
            }
          }
        ]
      },
      "kind": "class",
      "methods": [
        {
          "name": "renderProperties",
          "protected": true,
          "returns": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        }
      ],
      "name": "TopicResource",
      "namespace": "@aws-cdk/aws-sns.cloudformation",
      "properties": [
        {
          "const": true,
          "docs": {
            "comment": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "name": "resourceTypeName",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "cloudformation_attribute": "TopicName"
          },
          "immutable": true,
          "name": "topicName",
          "type": {
            "fqn": "@aws-cdk/aws-sns.TopicName"
          }
        }
      ],
      "subtypes": [
        "@aws-cdk/aws-sns.cloudformation.TopicResource.SubscriptionProperty"
      ]
    },
    "@aws-cdk/cdk.Arn": {
      "assembly": "@aws-cdk/cdk",
      "base": {
        "fqn": "@aws-cdk/cdk.Token"
      },
      "docs": {
        "comment": "An Amazon Resource Name (ARN).\nhttp://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html"
      },
      "fqn": "@aws-cdk/cdk.Arn",
      "initializer": {
        "docs": {
          "comment": "Creates a token that resolves to `value`. If value is a function,\nthe function is evaluated upon resolution and the value it returns will be\nuesd as the token's value."
        },
        "initializer": true,
        "parameters": [
          {
            "name": "valueOrFunction",
            "type": {
              "optional": true,
              "primitive": "any"
            }
          }
        ]
      },
      "kind": "class",
      "methods": [
        {
          "docs": {
            "comment": "Creates an ARN from components.\nIf any component is the empty string,\nan empty string will be inserted into the generated ARN\nat the location that component corresponds to."
          },
          "name": "fromComponents",
          "parameters": [
            {
              "name": "components",
              "type": {
                "fqn": "@aws-cdk/cdk.ArnComponents"
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/cdk.Arn"
          },
          "static": true
        },
        {
          "docs": {
            "comment": "Given an ARN, parses it and returns components.\n\nThe ARN it will be parsed and validated. The separator (`sep`) will be\nset to '/' if the 6th component includes a '/', in which case, `resource`\nwill be set to the value before the '/' and `resourceName` will be the\nrest. In case there is no '/', `resource` will be set to the 6th\ncomponents and `resourceName` will be set to the rest of the string.",
            "returns": "an ArnComponents object which allows access to the various\ncomponents of the ARN."
          },
          "name": "parse",
          "parameters": [
            {
              "name": "arn",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/cdk.ArnComponents"
          },
          "static": true
        },
        {
          "docs": {
            "comment": "Given a Token evaluating to ARN, parses it and returns components.\n\nThe ARN cannot be validated, since we don't have the actual value yet\nat the time of this function call. You will have to know the separator\nand the type of ARN.\n\nThe resulting `ArnComponents` object will contain tokens for the\nsubexpressions of the ARN, not string literals.\n\nWARNING: this function cannot properly parse the complete final\nresourceName (path) out of ARNs that use '/' to both separate the\n'resource' from the 'resourceName' AND to subdivide the resourceName\nfurther. For example, in S3 ARNs:\n\n      arn:aws:s3:::my_corporate_bucket/path/to/exampleobject.png\n\nAfter parsing the resourceName will not contain 'path/to/exampleobject.png'\nbut simply 'path'. This is a limitation because there is no slicing\nfunctionality in CloudFormation templates.",
            "returns": "an ArnComponents object which allows access to the various\ncomponents of the ARN."
          },
          "name": "parseToken",
          "parameters": [
            {
              "docs": {
                "comment": "The input token that contains an ARN"
              },
              "name": "arn",
              "type": {
                "fqn": "@aws-cdk/cdk.Token"
              }
            },
            {
              "docs": {
                "comment": "The separator used to separate resource from resourceName"
              },
              "name": "sep",
              "type": {
                "optional": true,
                "primitive": "string"
              }
            },
            {
              "docs": {
                "comment": "Whether there is a name component in the ARN at all.\nFor example, SNS Topics ARNs have the 'resource' component contain the\ntopic name, and no 'resourceName' component."
              },
              "name": "hasName",
              "type": {
                "optional": true,
                "primitive": "boolean"
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/cdk.ArnComponents"
          },
          "static": true
        }
      ],
      "name": "Arn",
      "namespace": "@aws-cdk/cdk"
    },
    "@aws-cdk/cdk.Construct": {
      "assembly": "@aws-cdk/cdk",
      "docs": {
        "comment": "Represents the building block of the construct graph.\nWhen a construct is created, it is always added as a child"
      },
      "fqn": "@aws-cdk/cdk.Construct",
      "initializer": {
        "docs": {
          "comment": "Creates a new construct node."
        },
        "initializer": true,
        "parameters": [
          {
            "docs": {
              "comment": "The parent construct"
            },
            "name": "parent",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "name": "name",
            "type": {
              "primitive": "string"
            }
          }
        ]
      },
      "kind": "class",
      "methods": [
        {
          "docs": {
            "comment": "Returns a string representation of this construct."
          },
          "name": "toString",
          "returns": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "comment": "Returns a string with a tree representation of this construct and it's children."
          },
          "name": "toTreeString",
          "parameters": [
            {
              "name": "depth",
              "type": {
                "optional": true,
                "primitive": "number"
              }
            }
          ],
          "returns": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "comment": "Return a descendant by path, or undefined",
            "returns": "a child by path or undefined if not found."
          },
          "name": "tryFindChild",
          "parameters": [
            {
              "name": "path",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/cdk.Construct",
            "optional": true
          }
        },
        {
          "docs": {
            "comment": "Return a descendant by path\n\nThrows an exception if the descendant is not found.",
            "returns": "Child with the given path."
          },
          "name": "findChild",
          "parameters": [
            {
              "name": "path",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/cdk.Construct"
          }
        },
        {
          "docs": {
            "comment": "This can be used to set contextual values.\nContext must be set before any children are added, since children may consult context info during construction.\nIf the key already exists, it will be overridden."
          },
          "name": "setContext",
          "parameters": [
            {
              "docs": {
                "comment": "The context key"
              },
              "name": "key",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "comment": "The context value"
              },
              "name": "value",
              "type": {
                "primitive": "any"
              }
            }
          ]
        },
        {
          "docs": {
            "comment": "Retrieves a value from tree context.\n\nContext is usually initialized at the root, but can be overridden at any point in the tree.",
            "returns": "The context value or undefined"
          },
          "name": "getContext",
          "parameters": [
            {
              "docs": {
                "comment": "The context key"
              },
              "name": "key",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "primitive": "any"
          }
        },
        {
          "docs": {
            "comment": "Retrieve a value from tree-global context\n\nIt is an error if the context object is not available."
          },
          "name": "requireContext",
          "parameters": [
            {
              "name": "key",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "primitive": "any"
          }
        },
        {
          "docs": {
            "comment": "Adds a metadata entry to this construct.\nEntries are arbitrary values and will also include a stack trace to allow tracing back to\nthe code location for when the entry was added. It can be used, for example, to include source\nmapping in CloudFormation templates to improve diagnostics."
          },
          "name": "addMetadata",
          "parameters": [
            {
              "docs": {
                "comment": "a string denoting the type of metadata"
              },
              "name": "type",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "comment": "the value of the metadata (can be a Token). If null/undefined, metadata will not be added."
              },
              "name": "data",
              "type": {
                "primitive": "any"
              }
            },
            {
              "docs": {
                "comment": "a function under which to restrict the metadata entry's stack trace (defaults to this.addMetadata)"
              },
              "name": "from",
              "type": {
                "optional": true,
                "primitive": "any"
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/cdk.Construct"
          }
        },
        {
          "docs": {
            "comment": "Adds a { \"aws:cdk:info\": <message> } metadata entry to this construct.\nThe toolkit will display the info message when apps are synthesized."
          },
          "name": "addInfo",
          "parameters": [
            {
              "docs": {
                "comment": "The info message."
              },
              "name": "message",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/cdk.Construct"
          }
        },
        {
          "docs": {
            "comment": "Adds a { warning: <message> } metadata entry to this construct.\nThe toolkit will display the warning when an app is synthesized, or fail\nif run in --strict mode."
          },
          "name": "addWarning",
          "parameters": [
            {
              "docs": {
                "comment": "The warning message."
              },
              "name": "message",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/cdk.Construct"
          }
        },
        {
          "docs": {
            "comment": "Adds an { error: <message> } metadata entry to this construct.\nThe toolkit will fail synthesis when errors are reported."
          },
          "name": "addError",
          "parameters": [
            {
              "docs": {
                "comment": "The error message."
              },
              "name": "message",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/cdk.Construct"
          }
        },
        {
          "docs": {
            "comment": "This method can be implemented by derived constructs in order to perform\nvalidation logic. It is called on all constructs before synthesis.",
            "returns": "An array of validation error messages, or an empty array if there the construct is valid."
          },
          "name": "validate",
          "returns": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "comment": "Invokes 'validate' on all child constructs and then on this construct (depth-first).",
            "returns": "A list of validation errors. If the list is empty, all constructs are valid."
          },
          "name": "validateTree",
          "returns": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/cdk.ValidationError"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "comment": "Return the ancestors (including self) of this Construct up until and excluding the indicated component"
          },
          "name": "ancestors",
          "parameters": [
            {
              "name": "upTo",
              "type": {
                "fqn": "@aws-cdk/cdk.Construct",
                "optional": true
              }
            }
          ],
          "protected": true,
          "returns": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/cdk.Construct"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "aws": "-cdk/runtime`` instead.",
            "comment": "Throws if the `props` bag doesn't include the property `name`.\nIn the future we can add some type-checking here, maybe even auto-generate during compilation.",
            "deprecated": "use ``requireProperty`` from ``"
          },
          "name": "required",
          "parameters": [
            {
              "docs": {
                "comment": "The props bag."
              },
              "name": "props",
              "type": {
                "primitive": "any"
              }
            },
            {
              "docs": {
                "comment": "The name of the required property."
              },
              "name": "name",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "protected": true,
          "returns": {
            "primitive": "any"
          }
        },
        {
          "docs": {
            "comment": "Adds a child construct to this node.",
            "returns": "The resolved path part name of the child"
          },
          "name": "addChild",
          "parameters": [
            {
              "docs": {
                "comment": "The child construct"
              },
              "name": "child",
              "type": {
                "fqn": "@aws-cdk/cdk.Construct"
              }
            },
            {
              "name": "childName",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "protected": true
        },
        {
          "docs": {
            "comment": "Locks this construct from allowing more children to be added. After this\ncall, no more children can be added to this construct or to any children."
          },
          "name": "lock",
          "protected": true
        },
        {
          "docs": {
            "comment": "Unlocks this costruct and allows mutations (adding children)."
          },
          "name": "unlock",
          "protected": true
        }
      ],
      "name": "Construct",
      "namespace": "@aws-cdk/cdk",
      "properties": [
        {
          "docs": {
            "comment": "Returns the parent of this node or undefined if this is a root node."
          },
          "immutable": true,
          "name": "parent",
          "type": {
            "fqn": "@aws-cdk/cdk.Construct",
            "optional": true
          }
        },
        {
          "docs": {
            "comment": "The name of this construct"
          },
          "immutable": true,
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "comment": "All direct children of this construct."
          },
          "immutable": true,
          "name": "children",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/cdk.Construct"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "comment": "Returns the path of all constructs from root to this construct, in string form.",
            "returns": "/-separated path of this Construct."
          },
          "immutable": true,
          "name": "path",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "comment": "An array of metadata objects associated with this construct.\nThis can be used, for example, to implement support for deprecation notices, source mapping, etc."
          },
          "immutable": true,
          "name": "metadata",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/cdk.MetadataEntry"
              },
              "kind": "array"
            }
          }
        }
      ]
    },
    "@aws-cdk/cdk.IDependable": {
      "assembly": "@aws-cdk/cdk",
      "datatype": true,
      "docs": {
        "comment": "Represents a construct that can be \"depended on\" via `addDependency`."
      },
      "fqn": "@aws-cdk/cdk.IDependable",
      "kind": "interface",
      "name": "IDependable",
      "namespace": "@aws-cdk/cdk",
      "properties": [
        {
          "docs": {
            "comment": "Returns the set of all stack elements (resources, parameters, conditions)\nthat should be added when a resource \"depends on\" this construct."
          },
          "immutable": true,
          "name": "dependencyElements",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/cdk.IDependable"
              },
              "kind": "array"
            }
          }
        }
      ]
    },
    "@aws-cdk/cdk.PolicyStatement": {
      "assembly": "@aws-cdk/cdk",
      "base": {
        "fqn": "@aws-cdk/cdk.Token"
      },
      "docs": {
        "comment": "Represents a statement in an IAM policy document."
      },
      "fqn": "@aws-cdk/cdk.PolicyStatement",
      "initializer": {
        "initializer": true,
        "parameters": [
          {
            "name": "effect",
            "type": {
              "fqn": "@aws-cdk/cdk.PolicyStatementEffect",
              "optional": true
            }
          }
        ]
      },
      "kind": "class",
      "methods": [
        {
          "name": "addAction",
          "parameters": [
            {
              "name": "action",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/cdk.PolicyStatement"
          }
        },
        {
          "name": "addActions",
          "parameters": [
            {
              "name": "actions",
              "type": {
                "primitive": "string"
              },
              "variadic": true
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/cdk.PolicyStatement"
          },
          "variadic": true
        },
        {
          "name": "addPrincipal",
          "parameters": [
            {
              "name": "principal",
              "type": {
                "fqn": "@aws-cdk/cdk.PolicyPrincipal"
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/cdk.PolicyStatement"
          }
        },
        {
          "name": "addAwsPrincipal",
          "parameters": [
            {
              "name": "arn",
              "type": {
                "primitive": "any"
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/cdk.PolicyStatement"
          }
        },
        {
          "name": "addAwsAccountPrincipal",
          "parameters": [
            {
              "name": "accountId",
              "type": {
                "primitive": "any"
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/cdk.PolicyStatement"
          }
        },
        {
          "name": "addServicePrincipal",
          "parameters": [
            {
              "name": "service",
              "type": {
                "primitive": "any"
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/cdk.PolicyStatement"
          }
        },
        {
          "name": "addFederatedPrincipal",
          "parameters": [
            {
              "name": "federated",
              "type": {
                "primitive": "any"
              }
            },
            {
              "name": "conditions",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/cdk.PolicyStatement"
          }
        },
        {
          "name": "addAccountRootPrincipal",
          "returns": {
            "fqn": "@aws-cdk/cdk.PolicyStatement"
          }
        },
        {
          "name": "addResource",
          "parameters": [
            {
              "name": "resource",
              "type": {
                "primitive": "any"
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/cdk.PolicyStatement"
          }
        },
        {
          "docs": {
            "comment": "Adds a ``\"*\"`` resource to this statement."
          },
          "name": "addAllResources",
          "returns": {
            "fqn": "@aws-cdk/cdk.PolicyStatement"
          }
        },
        {
          "name": "addResources",
          "parameters": [
            {
              "name": "resources",
              "type": {
                "primitive": "any"
              },
              "variadic": true
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/cdk.PolicyStatement"
          },
          "variadic": true
        },
        {
          "name": "describe",
          "parameters": [
            {
              "name": "sid",
              "type": {
                "primitive": "any"
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/cdk.PolicyStatement"
          }
        },
        {
          "docs": {
            "comment": "Sets the permission effect to deny access to resources."
          },
          "name": "allow",
          "returns": {
            "fqn": "@aws-cdk/cdk.PolicyStatement"
          }
        },
        {
          "docs": {
            "comment": "Sets the permission effect to allow access to resources."
          },
          "name": "deny",
          "returns": {
            "fqn": "@aws-cdk/cdk.PolicyStatement"
          }
        },
        {
          "docs": {
            "comment": "Add a condition to the Policy"
          },
          "name": "addCondition",
          "parameters": [
            {
              "name": "key",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "value",
              "type": {
                "primitive": "any"
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/cdk.PolicyStatement"
          }
        },
        {
          "docs": {
            "comment": "Add multiple conditions to the Policy"
          },
          "name": "addConditions",
          "parameters": [
            {
              "name": "conditions",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/cdk.PolicyStatement"
          }
        },
        {
          "docs": {
            "comment": "Add a condition to the Policy.",
            "deprecated": "For backwards compatibility. Use addCondition() instead."
          },
          "name": "setCondition",
          "parameters": [
            {
              "name": "key",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "value",
              "type": {
                "primitive": "any"
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/cdk.PolicyStatement"
          }
        },
        {
          "name": "limitToAccount",
          "parameters": [
            {
              "name": "accountId",
              "type": {
                "primitive": "any"
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/cdk.PolicyStatement"
          }
        },
        {
          "name": "resolve",
          "returns": {
            "primitive": "any"
          }
        },
        {
          "name": "toJson",
          "returns": {
            "primitive": "any"
          }
        }
      ],
      "name": "PolicyStatement",
      "namespace": "@aws-cdk/cdk",
      "properties": [
        {
          "docs": {
            "comment": "Indicates if this permission has a \"Principal\" section."
          },
          "immutable": true,
          "name": "hasPrincipal",
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "docs": {
            "comment": "Indicates if this permission as at least one resource associated with it."
          },
          "immutable": true,
          "name": "hasResource",
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "docs": {
            "comment": "Indicates if this permission has only a ``\"*\"`` resource associated with it."
          },
          "immutable": true,
          "name": "isOnlyStarResource",
          "type": {
            "primitive": "boolean"
          }
        }
      ]
    },
    "@aws-cdk/cdk.Referenceable": {
      "abstract": true,
      "assembly": "@aws-cdk/cdk",
      "base": {
        "fqn": "@aws-cdk/cdk.StackElement"
      },
      "docs": {
        "comment": "A construct, which is part of a stack and can be referenced using it's logical ID\nusing the CloudFormation intrinsic function { Ref: ID }."
      },
      "fqn": "@aws-cdk/cdk.Referenceable",
      "initializer": {
        "docs": {
          "comment": "Creates an entity and binds it to a tree.\nNote that the root of the tree must be a Stack object (not just any Root)."
        },
        "initializer": true,
        "parameters": [
          {
            "docs": {
              "comment": "The parent construct"
            },
            "name": "parent",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "name": "name",
            "type": {
              "primitive": "string"
            }
          }
        ]
      },
      "kind": "class",
      "name": "Referenceable",
      "namespace": "@aws-cdk/cdk",
      "properties": [
        {
          "docs": {
            "comment": "Returns a token to a CloudFormation { Ref } that references this entity based on it's logical ID."
          },
          "immutable": true,
          "name": "ref",
          "type": {
            "fqn": "@aws-cdk/cdk.Token"
          }
        }
      ]
    },
    "@aws-cdk/cdk.Resource": {
      "assembly": "@aws-cdk/cdk",
      "base": {
        "fqn": "@aws-cdk/cdk.Referenceable"
      },
      "docs": {
        "comment": "Represents a CloudFormation resource."
      },
      "fqn": "@aws-cdk/cdk.Resource",
      "initializer": {
        "docs": {
          "comment": "Creates a resource construct."
        },
        "initializer": true,
        "parameters": [
          {
            "name": "parent",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "name": "name",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/cdk.ResourceProps"
            }
          }
        ]
      },
      "kind": "class",
      "methods": [
        {
          "docs": {
            "comment": "A decoration used to create a CloudFormation attribute property."
          },
          "name": "attribute",
          "parameters": [
            {
              "docs": {
                "comment": "Custom name for the attribute (default is the name of the property)\nNOTE: we return \"any\" here to satistfy jsii, which doesn't support lambdas."
              },
              "name": "customName",
              "type": {
                "optional": true,
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "primitive": "any"
          },
          "static": true
        },
        {
          "docs": {
            "comment": "Returns a token for an runtime attribute of this resource.\nIdeally, use generated attribute accessors (e.g. `resource.arn`), but this can be used for future compatibility\nin case there is no generated attribute."
          },
          "name": "getAtt",
          "parameters": [
            {
              "docs": {
                "comment": "The name of the attribute."
              },
              "name": "attributeName",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/cdk.Token"
          }
        },
        {
          "docs": {
            "comment": "Adds a dependency on another resource."
          },
          "name": "addDependency",
          "parameters": [
            {
              "docs": {
                "comment": "The other resource."
              },
              "name": "other",
              "type": {
                "fqn": "@aws-cdk/cdk.IDependable"
              },
              "variadic": true
            }
          ],
          "variadic": true
        },
        {
          "docs": {
            "comment": "Emits CloudFormation for this resource."
          },
          "name": "toCloudFormation",
          "returns": {
            "primitive": "json"
          }
        },
        {
          "name": "renderProperties",
          "protected": true,
          "returns": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        }
      ],
      "name": "Resource",
      "namespace": "@aws-cdk/cdk",
      "properties": [
        {
          "docs": {
            "comment": "Options for this resource, such as condition, update policy etc."
          },
          "immutable": true,
          "name": "options",
          "type": {
            "fqn": "@aws-cdk/cdk.ResourceOptions"
          }
        },
        {
          "docs": {
            "comment": "AWS resource type."
          },
          "immutable": true,
          "name": "resourceType",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "comment": "AWS resource properties"
          },
          "immutable": true,
          "name": "properties",
          "protected": true,
          "type": {
            "primitive": "any"
          }
        }
      ]
    },
    "@aws-cdk/cdk.StackElement": {
      "abstract": true,
      "assembly": "@aws-cdk/cdk",
      "base": {
        "fqn": "@aws-cdk/cdk.Construct"
      },
      "docs": {
        "comment": "An element of a CloudFormation stack."
      },
      "fqn": "@aws-cdk/cdk.StackElement",
      "initializer": {
        "docs": {
          "comment": "Creates an entity and binds it to a tree.\nNote that the root of the tree must be a Stack object (not just any Root)."
        },
        "initializer": true,
        "parameters": [
          {
            "docs": {
              "comment": "The parent construct"
            },
            "name": "parent",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "name": "name",
            "type": {
              "primitive": "string"
            }
          }
        ]
      },
      "interfaces": [
        {
          "fqn": "@aws-cdk/cdk.IDependable"
        }
      ],
      "kind": "class",
      "methods": [
        {
          "abstract": true,
          "docs": {
            "comment": "Returns the CloudFormation 'snippet' for this entity. The snippet will only be merged\nat the root level to ensure there are no identity conflicts.\n\nFor example, a Resource class will return something like:\n{\n     Resources: {\n         [this.logicalId]: {\n             Type: this.resourceType,\n             Properties: this.props,\n             Condition: this.condition\n         }\n     }\n}"
          },
          "name": "toCloudFormation",
          "returns": {
            "primitive": "json"
          }
        }
      ],
      "name": "StackElement",
      "namespace": "@aws-cdk/cdk",
      "properties": [
        {
          "docs": {
            "comment": "The logical ID for this CloudFormation stack element"
          },
          "immutable": true,
          "name": "logicalId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "comment": "The stack this Construct has been made a part of"
          },
          "name": "stack",
          "protected": true,
          "type": {
            "fqn": "@aws-cdk/cdk.Stack"
          }
        },
        {
          "docs": {
            "returns": "the stack trace of the point where this Resource was created from, sourced\nfrom the +metadata+ entry typed +aws:cdk:logicalId+, and with the bottom-most\nnode +internal+ entries filtered."
          },
          "immutable": true,
          "name": "creationStackTrace",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "comment": "Return the path with respect to the stack"
          },
          "immutable": true,
          "name": "stackPath",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "comment": "Returns the set of all stack elements (resources, parameters, conditions)\nthat should be added when a resource \"depends on\" this construct."
          },
          "immutable": true,
          "name": "dependencyElements",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/cdk.IDependable"
              },
              "kind": "array"
            }
          }
        }
      ]
    },
    "@aws-cdk/cdk.Tag": {
      "assembly": "@aws-cdk/cdk",
      "datatype": true,
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html"
      },
      "fqn": "@aws-cdk/cdk.Tag",
      "kind": "interface",
      "name": "Tag",
      "namespace": "@aws-cdk/cdk",
      "properties": [
        {
          "docs": {
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html#cfn-resource-tags-key"
          },
          "name": "key",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html#cfn-resource-tags-value"
          },
          "name": "value",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/cdk.Token": {
      "assembly": "@aws-cdk/cdk",
      "docs": {
        "comment": "Represents a lazy-evaluated value. Can be used to delay evaluation of a certain value\nin case, for example, that it requires some context or late-bound data."
      },
      "fqn": "@aws-cdk/cdk.Token",
      "initializer": {
        "docs": {
          "comment": "Creates a token that resolves to `value`. If value is a function,\nthe function is evaluated upon resolution and the value it returns will be\nuesd as the token's value."
        },
        "initializer": true,
        "parameters": [
          {
            "name": "valueOrFunction",
            "type": {
              "optional": true,
              "primitive": "any"
            }
          }
        ]
      },
      "kind": "class",
      "methods": [
        {
          "docs": {
            "returns": "The resolved value for this token."
          },
          "name": "resolve",
          "returns": {
            "primitive": "any"
          }
        }
      ],
      "name": "Token",
      "namespace": "@aws-cdk/cdk"
    }
  },
  "name": "@aws-cdk/aws-ec2",
  "readme": {
    "markdown": "## AWS Compute and Networking Construct Library\n\nThe `@aws-cdk/aws-ec2` package contains primitives for setting up networking,\ninstances, and load balancers.\n\n### VPC\n\nMost projects need a Virtual Private Cloud to provide security by means of\nnetwork partitioning. This is easily achieved by creating an instance of\n`VpcNetwork`:\n\n```ts\nimport ec2 = require('@aws-cdk/aws-ec2');\n\nconst vpc = new ec2.VpcNetwork(this, 'VPC');\n```\n\nAll default Constructs requires EC2 instances to be launched inside a VPC, so\nyou should generally start by defining a VPC whenever you need to launch\ninstances for your project.\n\nOur default `VpcNetwork` class creates a private and public subnet for every\navailability zone. Classes that use the VPC will generally launch instances\ninto all private subnets, and provide a parameter called `vpcPlacement` to\nallow you to override the placement. [Read more about\nsubnets](https://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_Subnets.html).\n\n\n#### Advanced Subnet Configuration\nIf you require the ability to configure subnets the `VpcNetwork` can be\ncustomized with `SubnetConfiguration` array. This is best explained by an\nexample:\n\n```ts\nimport ec2 = require('@aws-cdk/aws-ec2');\n\nconst vpc = new ec2.VpcNetwork(stack, 'TheVPC', {\n  cidr: '10.0.0.0/21',\n  subnetConfiguration: [\n    {\n      cidrMask: 24,\n      name: 'Ingress',\n      subnetType: SubnetType.Public,\n      natGateway: true,\n    },\n    {\n      cidrMask: 24,\n      name: 'Application',\n      subnetType: SubnetType.Private,\n    },\n    {\n      cidrMask: 28,\n      name: 'Database',\n      subnetType: SubnetType.Isolated,\n    }\n  ],\n});\n```\n\nThe example above is one possible configuration, but the user can use the\nconstructs above to implement many other network configurations.\n\nThe `VpcNetwork` from the above configuration in a Region with three\navailability zones will be the following:\n * IngressSubnet1: 10.0.0.0/24\n * IngressSubnet2: 10.0.1.0/24\n * IngressSubnet3: 10.0.2.0/24\n * ApplicationSubnet1: 10.0.3.0/24\n * ApplicationSubnet2: 10.0.4.0/24\n * ApplicationSubnet3: 10.0.5.0/24\n * DatabaseSubnet1: 10.0.6.0/28\n * DatabaseSubnet2: 10.0.6.16/28\n * DatabaseSubnet3: 10.0.6.32/28\n\nEach `Public` Subnet will have a NAT Gateway. Each `Private` Subnet will have a\nroute to the NAT Gateway in the same availability zone. Each `Isolated` subnet\nwill not have a route to the internet, but is routeable inside the VPC. The\nnumbers [1-3] will consistently map to availability zones (e.g. IngressSubnet1\nand ApplicationSubnet1 will be in the same avialbility zone).\n\n`Isolated` Subnets provide simplified secure networking principles, but come at\nan operational complexity. The lack of an internet route means that if you deploy\ninstances in this subnet you will not be able to patch from the internet, this is\ncommonly reffered to as\n[fully baked images](https://aws.amazon.com/answers/configuration-management/aws-ami-design/).\nFeatures such as\n[cfn-signal](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-signal.html)\nare also unavailable. Using these subnets for managed services (RDS,\nElasticache, Redshift) is a very practical use because the managed services do\nnot incur additional operational overhead.\n\nMany times when you plan to build an application you don't know how many\ninstances of the application you will need and therefore you don't know how much\nIP space to allocate. For example, you know the application will only have\nElastic Loadbalancers in the public subnets and you know you will have 1-3 RDS\ndatabases for your data tier, and the rest of the IP space should just be evenly\ndistributed for the application.\n\n```ts\nimport ec2 = require('@aws-cdk/aws-ec2');\n\nconst vpc = new ec2.VpcNetwork(stack, 'TheVPC', {\n  cidr: '10.0.0.0/16',\n  subnetConfiguration: [\n    {\n      cidrMask: 26,\n      name: 'Public',\n      subnetType: SubnetType.Public,\n      natGateway: true,\n    },\n    {\n      name: 'Application',\n      subnetType: SubnetType.Private,\n    },\n    {\n      cidrMask: 27,\n      name: 'Database',\n      subnetType: SubnetType.Isolated,\n    }\n  ],\n});\n```\n\nThe `VpcNetwork` from the above configuration in a Region with three\navailability zones will be the following:\n * PublicSubnet1: 10.0.0.0/26\n * PublicSubnet2: 10.0.0.64/26\n * PublicSubnet3: 10.0.2.128/26\n * DatabaseSubnet1: 10.0.0.192/27\n * DatabaseSubnet2: 10.0.0.224/27\n * DatabaseSubnet3: 10.0.1.0/27\n * ApplicationSubnet1: 10.0.64.0/18\n * ApplicationSubnet2: 10.0.128.0/18\n * ApplicationSubnet3: 10.0.192.0/18\n\nAny subnet configuration without a `cidrMask` will be counted up and allocated\nevenly across the remaining IP space.\n\nTeams may also become cost conscious and be willing to trade availability for\ncost. For example, in your test environments perhaps you would like the same VPC\nas production, but instead of 3 NAT Gateways you would like only 1. This will\nsave on the cost, but trade the 3 availability zone to a 1 for all egress\ntraffic. This can be accomplished with a single parameter configuration:\n\n```ts\nimport ec2 = require('@aws-cdk/aws-ec2');\n\nconst vpc = new ec2.VpcNetwork(stack, 'TheVPC', {\n  cidr: '10.0.0.0/16',\n  natGateways: 1,\n  subnetConfiguration: [\n    {\n      cidrMask: 26,\n      name: 'Public',\n      subnetType: SubnetType.Public,\n      natGateway: true,\n    },\n    {\n      name: 'Application',\n      subnetType: SubnetType.Private,\n    },\n    {\n      cidrMask: 27,\n      name: 'Database',\n      subnetType: SubnetType.Isolated,\n    }\n  ],\n});\n```\n\nThe `VpcNetwork` above will have the exact same subnet definitions as listed\nabove. However, this time the VPC will have only 1 NAT Gateway and all\nApplication subnets will route to the NAT Gateway.\n\n### Fleet\n\n### Auto Scaling Group\n\nAn `AutoScalingGroup` represents a number of instances on which you run your code. You\npick the size of the fleet, the instance type and the OS image:\n\n```ts\nimport ec2 = require('@aws-cdk/aws-ec2');\n\nnew ec2.AutoScalingGroup(stack, 'ASG', {\n    vpc,\n    instanceType: new ec2.InstanceTypePair(InstanceClass.Burstable2, InstanceSize.Micro),\n    machineImage: new ec2.LinuxImage({\n        'us-east-1': 'ami-97785bed'\n    })\n});\n```\n\n> NOTE: AutoScalingGroup has an property called `allowAllOutbound` (allowing the instances to contact the\n> internet) which is set to `true` by default. Be sure to set this to `false`  if you don't want\n> your instances to be able to start arbitrary connections.\n\n### AMIs\n\nAMIs control the OS that gets launched when you start your instance.\n\nDepending on the type of AMI, you select it a different way.\n\nThe latest version of Windows images are regionally published under labels,\nso you can select Windows images like this:\n\n    new ec2.WindowsImage(WindowsVersion.WindowsServer2016EnglishNanoBase)\n\nYou can select the latest Amazon Linux image like this:\n\n    new ec2.AmazonLinuxImage()\n\nOther Linux images are unfortunately not currently published this way, so you have\nto supply a region-to-AMI map when creating a Linux image:\n\n    machineImage: new ec2.GenericLinuxImage({\n        'us-east-1': 'ami-97785bed',\n        'eu-west-1': 'ami-12345678',\n        // ...\n    })\n\n> NOTE: Selecting Linux images will change when the information is published in an automatically\n> consumable way.\n\n### Load Balancer\n\nLoad balancers send traffic to one or more fleets. Create a load balancer,\nset up listeners and a health check, and supply the fleet(s) you want to load\nbalance to in the `targets` property.\n\nThe load balancer allows all connections by default. If you want to change that,\npass the `allowConnectionsFrom` property while setting up the listener.\n\n```ts\nnew ec2.ClassicLoadBalancer(stack, 'LB', {\n    vpc,\n    internetFacing: true,\n    listeners: [{\n        externalPort: 80,\n    }],\n    healthCheck: {\n        port: 80\n    },\n    targets: [fleet]\n});\n```\n\n### Allowing Connections\n\nIn AWS, all connections to and from EC2 instances are governed by *Security\nGroups*. You can think of these as a firewall with rules. All Constructs that\ncreate instances on your behalf implicitly have such a security group.\nUnless otherwise indicated using properites, the security groups start out\nempty; that is, no connections are allowed by default.\n\nIn general, whenever you link two Constructs together (such as the load balancer and the\nfleet in the previous example), the security groups will be automatically updated to allow\nnetwork connections between the indicated instances. In other cases, you will need to\nconfigure these allows connections yourself, for example if the connections you want to\nallow do not originate from instances in a CDK construct, or if you want to allow\nconnections among instances inside a single security group.\n\nAll Constructs with security groups have a member called `connections`, which\ncan be used to configure permissible connections. In the most general case, a\ncall to allow connections needs both a connection peer and the type of\nconnection to allow:\n\n```ts\nlb.connections.allowFrom(new ec2.AnyIPv4(), new ec2.TcpPort(443), 'Allow inbound');\n\n// Or using a convenience function\nlb.connections.allowFromAnyIpv4(new ec2.TcpPort(443), 'Allow inbound');\n```\n\n### Connection Peers\n\nThere are various classes that implement the connection peer part:\n\n```ts\n// Simple connection peers\nlet peer = new ec2.CidrIp(\"10.0.0.0/16\");\nlet peer = new ec2.AnyIPv4();\nlet peer = new ec2.CidrIpv6(\"::0/0\");\nlet peer = new ec2.AnyIPv6();\nlet peer = new ec2.PrefixList(\"pl-12345\");\nfleet.connections.allowTo(peer, new ec2.TcpPort(443), 'Allow outbound HTTPS');\n```\n\nAny object that has a security group can itself be used as a connection peer:\n\n```ts\n// These automatically create appropriate ingress and egress rules in both security groups\nfleet1.connections.allowTo(fleet2, new ec2.TcpPort(80), 'Allow between fleets');\n\nfleet.connections.allowTcpPort(80), 'Allow from load balancer');\n```\n\n### Port Ranges\n\nThe connections that are allowed are specified by port ranges. A number of classes provide\nthe connection specifier:\n\n```ts\nnew ec2.TcpPort(80);\nnew ec2.TcpPortRange(60000, 65535);\nnew ec2.TcpAllPorts();\nnew ec2.AllConnections();\n```\n\n> NOTE: This set is not complete yet; for example, there is no library support for ICMP at the moment.\n> However, you can write your own classes to implement those.\n\n### Default Ports\n\nSome Constructs have default ports associated with them. For example, the\nlistener of a load balancer does (it's the public port), or instances of an\nRDS database (it's the port the database is accepting connections on).\n\nIf the object you're calling the peering method on has a default port associated with it, you can call\n`allowDefaultPortFrom()` and omit the port specifier. If the argument has an associated default port, call\n`allowToDefaultPort()`.\n\nFor example:\n\n```ts\n// Port implicit in listener\n(listener.connections as ec2.DefaultConnections).allowDefaultPortFromAnyIpv4('Allow public');\n\n// Port implicit in peer\n(fleet.connections as ec2.DefaultConnections).allowToDefaultPort(rdsDatabase, 'Fleet can access database');\n```\n"
  },
  "schema": "jsii/1.0",
  "targets": {
    "dotnet": {
      "namespace": "Amazon.CDK.AWS.EC2"
    },
    "java": {
      "maven": {
        "artifactId": "aws-ec2",
        "groupId": "com.amazonaws.cdk"
      },
      "package": "com.amazonaws.cdk.aws.ec2"
    },
    "js": {
      "npm": "@aws-cdk/aws-ec2"
    }
  },
  "types": {
    "@aws-cdk/aws-ec2.AllConnections": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "comment": "All TCP Ports"
      },
      "fqn": "@aws-cdk/aws-ec2.AllConnections",
      "initializer": {
        "initializer": true
      },
      "interfaces": [
        {
          "fqn": "@aws-cdk/aws-ec2.IPortRange"
        }
      ],
      "kind": "class",
      "methods": [
        {
          "docs": {
            "comment": "Produce the ingress/egress rule JSON for the given connection"
          },
          "name": "toRuleJSON",
          "returns": {
            "primitive": "any"
          }
        }
      ],
      "name": "AllConnections",
      "namespace": "@aws-cdk/aws-ec2",
      "properties": [
        {
          "immutable": true,
          "name": "canInlineRule",
          "type": {
            "primitive": "boolean"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.AmazonLinuxEdition": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "comment": "Amazon Linux edition"
      },
      "fqn": "@aws-cdk/aws-ec2.AmazonLinuxEdition",
      "kind": "enum",
      "members": [
        {
          "name": "Standard"
        },
        {
          "name": "Minimal"
        }
      ],
      "name": "AmazonLinuxEdition",
      "namespace": "@aws-cdk/aws-ec2"
    },
    "@aws-cdk/aws-ec2.AmazonLinuxImage": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "comment": "Selects the latest version of Amazon Linux\n\nThe AMI ID is selected using the values published to the SSM parameter store."
      },
      "fqn": "@aws-cdk/aws-ec2.AmazonLinuxImage",
      "initializer": {
        "initializer": true,
        "parameters": [
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.AmazonLinuxImageProps",
              "optional": true
            }
          }
        ]
      },
      "interfaces": [
        {
          "fqn": "@aws-cdk/aws-ec2.IMachineImageSource"
        }
      ],
      "kind": "class",
      "methods": [
        {
          "docs": {
            "comment": "Return the image to use in the given context"
          },
          "name": "getImage",
          "parameters": [
            {
              "name": "parent",
              "type": {
                "fqn": "@aws-cdk/cdk.Construct"
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/aws-ec2.MachineImage"
          }
        }
      ],
      "name": "AmazonLinuxImage",
      "namespace": "@aws-cdk/aws-ec2"
    },
    "@aws-cdk/aws-ec2.AmazonLinuxImageProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "comment": "Amazon Linux image properties"
      },
      "fqn": "@aws-cdk/aws-ec2.AmazonLinuxImageProps",
      "kind": "interface",
      "name": "AmazonLinuxImageProps",
      "namespace": "@aws-cdk/aws-ec2",
      "properties": [
        {
          "docs": {
            "comment": "What edition of Amazon Linux to use",
            "default": "Standard"
          },
          "name": "edition",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.AmazonLinuxEdition",
            "optional": true
          }
        },
        {
          "docs": {
            "comment": "Virtualization type",
            "default": "HVM"
          },
          "name": "virtualization",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.AmazonLinuxVirt",
            "optional": true
          }
        },
        {
          "docs": {
            "comment": "What storage backed image to use",
            "default": "GeneralPurpose"
          },
          "name": "storage",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.AmazonLinuxStorage",
            "optional": true
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.AmazonLinuxStorage": {
      "assembly": "@aws-cdk/aws-ec2",
      "fqn": "@aws-cdk/aws-ec2.AmazonLinuxStorage",
      "kind": "enum",
      "members": [
        {
          "name": "EBS"
        },
        {
          "name": "S3"
        },
        {
          "name": "GeneralPurpose"
        }
      ],
      "name": "AmazonLinuxStorage",
      "namespace": "@aws-cdk/aws-ec2"
    },
    "@aws-cdk/aws-ec2.AmazonLinuxVirt": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "comment": "Virtualization type for Amazon Linux"
      },
      "fqn": "@aws-cdk/aws-ec2.AmazonLinuxVirt",
      "kind": "enum",
      "members": [
        {
          "name": "HVM"
        },
        {
          "name": "PV"
        }
      ],
      "name": "AmazonLinuxVirt",
      "namespace": "@aws-cdk/aws-ec2"
    },
    "@aws-cdk/aws-ec2.AnyIPv4": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": {
        "fqn": "@aws-cdk/aws-ec2.CidrIp"
      },
      "docs": {
        "comment": "Any IPv4 address"
      },
      "fqn": "@aws-cdk/aws-ec2.AnyIPv4",
      "initializer": {
        "initializer": true
      },
      "kind": "class",
      "name": "AnyIPv4",
      "namespace": "@aws-cdk/aws-ec2"
    },
    "@aws-cdk/aws-ec2.AnyIPv6": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": {
        "fqn": "@aws-cdk/aws-ec2.CidrIpv6"
      },
      "docs": {
        "comment": "Any IPv6 address"
      },
      "fqn": "@aws-cdk/aws-ec2.AnyIPv6",
      "initializer": {
        "initializer": true
      },
      "kind": "class",
      "name": "AnyIPv6",
      "namespace": "@aws-cdk/aws-ec2"
    },
    "@aws-cdk/aws-ec2.AutoScalingGroup": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": {
        "fqn": "@aws-cdk/cdk.Construct"
      },
      "docs": {
        "comment": "A Fleet represents a managed set of EC2 instances\n\nThe Fleet models a number of AutoScalingGroups, a launch configuration, a\nsecurity group and an instance role.\n\nIt allows adding arbitrary commands to the startup scripts of the instances\nin the fleet.\n\nThe ASG spans all availability zones."
      },
      "fqn": "@aws-cdk/aws-ec2.AutoScalingGroup",
      "initializer": {
        "initializer": true,
        "parameters": [
          {
            "name": "parent",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "name": "name",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.AutoScalingGroupProps"
            }
          }
        ]
      },
      "interfaces": [
        {
          "fqn": "@aws-cdk/aws-ec2.IClassicLoadBalancerTarget"
        }
      ],
      "kind": "class",
      "methods": [
        {
          "docs": {
            "comment": "Attach load-balanced target to a classic ELB"
          },
          "name": "attachToClassicLB",
          "parameters": [
            {
              "name": "loadBalancer",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.ClassicLoadBalancer"
              }
            }
          ]
        },
        {
          "docs": {
            "comment": "Add command to the startup script of fleet instances.\nThe command must be in the scripting language supported by the fleet's OS (i.e. Linux/Windows)."
          },
          "name": "addUserData",
          "parameters": [
            {
              "name": "script",
              "type": {
                "primitive": "string"
              }
            }
          ]
        },
        {
          "name": "autoScalingGroupName",
          "returns": {
            "fqn": "@aws-cdk/cdk.Token"
          }
        },
        {
          "docs": {
            "comment": "Adds a statement to the IAM role assumed by instances of this fleet."
          },
          "name": "addToRolePolicy",
          "parameters": [
            {
              "name": "statement",
              "type": {
                "fqn": "@aws-cdk/cdk.PolicyStatement"
              }
            }
          ]
        }
      ],
      "name": "AutoScalingGroup",
      "namespace": "@aws-cdk/aws-ec2",
      "properties": [
        {
          "immutable": true,
          "name": "connectionPeer",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.IConnectionPeer"
          }
        },
        {
          "docs": {
            "comment": "The type of OS instances of this fleet are running."
          },
          "immutable": true,
          "name": "osType",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.OperatingSystemType"
          }
        },
        {
          "docs": {
            "comment": "Allows specify security group connections for instances of this fleet."
          },
          "immutable": true,
          "name": "connections",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.IConnections"
          }
        },
        {
          "docs": {
            "comment": "The IAM role assumed by instances of this fleet."
          },
          "immutable": true,
          "name": "role",
          "type": {
            "fqn": "@aws-cdk/aws-iam.Role"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.AutoScalingGroupProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "comment": "Properties of a Fleet"
      },
      "fqn": "@aws-cdk/aws-ec2.AutoScalingGroupProps",
      "kind": "interface",
      "name": "AutoScalingGroupProps",
      "namespace": "@aws-cdk/aws-ec2",
      "properties": [
        {
          "docs": {
            "comment": "Type of instance to launch"
          },
          "name": "instanceType",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.InstanceType"
          }
        },
        {
          "docs": {
            "comment": "Minimum number of instances in the fleet",
            "default": "1"
          },
          "name": "minSize",
          "type": {
            "optional": true,
            "primitive": "number"
          }
        },
        {
          "docs": {
            "comment": "Maximum number of instances in the fleet",
            "default": "1"
          },
          "name": "maxSize",
          "type": {
            "optional": true,
            "primitive": "number"
          }
        },
        {
          "docs": {
            "comment": "Initial amount of instances in the fleet",
            "default": "1"
          },
          "name": "desiredCapacity",
          "type": {
            "optional": true,
            "primitive": "number"
          }
        },
        {
          "docs": {
            "comment": "Name of SSH keypair to grant access to instances",
            "default": "No SSH access will be possible"
          },
          "name": "keyName",
          "type": {
            "optional": true,
            "primitive": "string"
          }
        },
        {
          "docs": {
            "comment": "AMI to launch"
          },
          "name": "machineImage",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.IMachineImageSource"
          }
        },
        {
          "docs": {
            "comment": "VPC to launch these instances in."
          },
          "name": "vpc",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.VpcNetworkRef"
          }
        },
        {
          "docs": {
            "comment": "Where to place instances within the VPC"
          },
          "name": "vpcPlacement",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.VpcPlacementStrategy",
            "optional": true
          }
        },
        {
          "docs": {
            "comment": "SNS topic to send notifications about fleet changes",
            "default": "No fleet change notifications will be sent."
          },
          "name": "notificationsTopic",
          "type": {
            "fqn": "@aws-cdk/aws-sns.cloudformation.TopicResource",
            "optional": true
          }
        },
        {
          "docs": {
            "comment": "Whether the instances can initiate connections to anywhere by default",
            "default": "true"
          },
          "name": "allowAllOutbound",
          "type": {
            "optional": true,
            "primitive": "boolean"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.CidrIp": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "comment": "A connection to and from a given IP range"
      },
      "fqn": "@aws-cdk/aws-ec2.CidrIp",
      "initializer": {
        "initializer": true,
        "parameters": [
          {
            "name": "cidrIp",
            "type": {
              "primitive": "string"
            }
          }
        ]
      },
      "interfaces": [
        {
          "fqn": "@aws-cdk/aws-ec2.IConnectionPeer"
        },
        {
          "fqn": "@aws-cdk/aws-ec2.IConnectable"
        }
      ],
      "kind": "class",
      "methods": [
        {
          "docs": {
            "comment": "Produce the ingress rule JSON for the given connection"
          },
          "name": "toIngressRuleJSON",
          "returns": {
            "primitive": "any"
          }
        },
        {
          "docs": {
            "comment": "Produce the egress rule JSON for the given connection"
          },
          "name": "toEgressRuleJSON",
          "returns": {
            "primitive": "any"
          }
        }
      ],
      "name": "CidrIp",
      "namespace": "@aws-cdk/aws-ec2",
      "properties": [
        {
          "docs": {
            "comment": "Whether the rule can be inlined into a SecurityGroup or not"
          },
          "immutable": true,
          "name": "canInlineRule",
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "immutable": true,
          "name": "connections",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.IConnections"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.CidrIpv6": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "comment": "A connection to a from a given IPv6 range"
      },
      "fqn": "@aws-cdk/aws-ec2.CidrIpv6",
      "initializer": {
        "initializer": true,
        "parameters": [
          {
            "name": "cidrIpv6",
            "type": {
              "primitive": "string"
            }
          }
        ]
      },
      "interfaces": [
        {
          "fqn": "@aws-cdk/aws-ec2.IConnectionPeer"
        },
        {
          "fqn": "@aws-cdk/aws-ec2.IConnectable"
        }
      ],
      "kind": "class",
      "methods": [
        {
          "docs": {
            "comment": "Produce the ingress rule JSON for the given connection"
          },
          "name": "toIngressRuleJSON",
          "returns": {
            "primitive": "any"
          }
        },
        {
          "docs": {
            "comment": "Produce the egress rule JSON for the given connection"
          },
          "name": "toEgressRuleJSON",
          "returns": {
            "primitive": "any"
          }
        }
      ],
      "name": "CidrIpv6",
      "namespace": "@aws-cdk/aws-ec2",
      "properties": [
        {
          "docs": {
            "comment": "Whether the rule can be inlined into a SecurityGroup or not"
          },
          "immutable": true,
          "name": "canInlineRule",
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "immutable": true,
          "name": "connections",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.IConnections"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.ClassicListenerPort": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "comment": "Reference to a listener's port just created\n\nThis class exists to make it convenient to add port ranges to the load\nbalancer's security group just for the port ranges that are involved in the\nlistener."
      },
      "fqn": "@aws-cdk/aws-ec2.ClassicListenerPort",
      "initializer": {
        "initializer": true,
        "parameters": [
          {
            "name": "securityGroup",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.ISecurityGroup"
            }
          },
          {
            "name": "defaultPortRange",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.IPortRange"
            }
          }
        ]
      },
      "interfaces": [
        {
          "fqn": "@aws-cdk/aws-ec2.IDefaultConnectable"
        }
      ],
      "kind": "class",
      "name": "ClassicListenerPort",
      "namespace": "@aws-cdk/aws-ec2",
      "properties": [
        {
          "immutable": true,
          "name": "connections",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.IConnections"
          }
        },
        {
          "immutable": true,
          "name": "defaultPortRange",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.IPortRange"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.ClassicLoadBalancer": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": {
        "fqn": "@aws-cdk/cdk.Construct"
      },
      "docs": {
        "comment": "A load balancer with a single listener\n\nRoutes to a fleet of of instances in a VPC."
      },
      "fqn": "@aws-cdk/aws-ec2.ClassicLoadBalancer",
      "initializer": {
        "initializer": true,
        "parameters": [
          {
            "name": "parent",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "name": "name",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.ClassicLoadBalancerProps"
            }
          }
        ]
      },
      "interfaces": [
        {
          "fqn": "@aws-cdk/aws-ec2.IConnectable"
        }
      ],
      "kind": "class",
      "methods": [
        {
          "docs": {
            "comment": "Add a backend to the load balancer",
            "returns": "A ClassicListenerPort object that controls connections to the listener port"
          },
          "name": "addListener",
          "parameters": [
            {
              "name": "listener",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.ClassicLoadBalancerListener"
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/aws-ec2.ClassicListenerPort"
          }
        },
        {
          "name": "addTarget",
          "parameters": [
            {
              "name": "target",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.IClassicLoadBalancerTarget"
              }
            }
          ]
        }
      ],
      "name": "ClassicLoadBalancer",
      "namespace": "@aws-cdk/aws-ec2",
      "properties": [
        {
          "docs": {
            "comment": "Control all connections from and to this load balancer"
          },
          "immutable": true,
          "name": "connections",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.IConnections"
          }
        },
        {
          "immutable": true,
          "name": "connectionPeer",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.IConnectionPeer"
          }
        },
        {
          "docs": {
            "comment": "An object controlling specifically the connections for each listener added to this load balancer"
          },
          "immutable": true,
          "name": "listenerPorts",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-ec2.ClassicListenerPort"
              },
              "kind": "array"
            }
          }
        },
        {
          "immutable": true,
          "name": "loadBalancerName",
          "type": {
            "fqn": "@aws-cdk/cdk.Token"
          }
        },
        {
          "immutable": true,
          "name": "loadBalancerCanonicalHostedZoneName",
          "type": {
            "fqn": "@aws-cdk/aws-elasticloadbalancing.LoadBalancerCanonicalHostedZoneName"
          }
        },
        {
          "immutable": true,
          "name": "loadBalancerDnsName",
          "type": {
            "fqn": "@aws-cdk/aws-elasticloadbalancing.LoadBalancerDnsName"
          }
        },
        {
          "immutable": true,
          "name": "loadBalancerSourceSecurityGroupGroupName",
          "type": {
            "fqn": "@aws-cdk/aws-elasticloadbalancing.LoadBalancerSourceSecurityGroupGroupName"
          }
        },
        {
          "immutable": true,
          "name": "loadBalancerSourceSecurityGroupOwnerAlias",
          "type": {
            "fqn": "@aws-cdk/aws-elasticloadbalancing.LoadBalancerSourceSecurityGroupOwnerAlias"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.ClassicLoadBalancerListener": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "comment": "Add a backend to the load balancer"
      },
      "fqn": "@aws-cdk/aws-ec2.ClassicLoadBalancerListener",
      "kind": "interface",
      "name": "ClassicLoadBalancerListener",
      "namespace": "@aws-cdk/aws-ec2",
      "properties": [
        {
          "docs": {
            "comment": "External listening port"
          },
          "name": "externalPort",
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "comment": "What public protocol to use for load balancing\n\nEither 'tcp', 'ssl', 'http' or 'https'.\n\nMay be omitted if the external port is either 80 or 443."
          },
          "name": "externalProtocol",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.LoadBalancingProtocol",
            "optional": true
          }
        },
        {
          "docs": {
            "comment": "Instance listening port\n\nSame as the externalPort if not specified.",
            "default": "externalPort"
          },
          "name": "internalPort",
          "type": {
            "optional": true,
            "primitive": "number"
          }
        },
        {
          "docs": {
            "comment": "What public protocol to use for load balancing\n\nEither 'tcp', 'ssl', 'http' or 'https'.\n\nMay be omitted if the internal port is either 80 or 443.\n\nThe instance protocol is 'tcp' if the front-end protocol\nis 'tcp' or 'ssl', the instance protocol is 'http' if the\nfront-end protocol is 'https'."
          },
          "name": "internalProtocol",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.LoadBalancingProtocol",
            "optional": true
          }
        },
        {
          "docs": {
            "comment": "SSL policy names"
          },
          "name": "policyNames",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            },
            "optional": true
          }
        },
        {
          "docs": {
            "comment": "ID of SSL certificate"
          },
          "name": "sslCertificateId",
          "type": {
            "fqn": "@aws-cdk/cdk.Arn",
            "optional": true
          }
        },
        {
          "docs": {
            "comment": "Allow connections to the load balancer from the given set of connection peers\n\nBy default, connections will be allowed from anywhere. Set this to an empty list\nto deny connections, or supply a custom list of peers to allow connections from\n(IP ranges or security groups).",
            "default": "Anywhere"
          },
          "name": "allowConnectionsFrom",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-ec2.IConnectable"
              },
              "kind": "array"
            },
            "optional": true
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.ClassicLoadBalancerProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "comment": "Construction properties for a ClassicLoadBalancer"
      },
      "fqn": "@aws-cdk/aws-ec2.ClassicLoadBalancerProps",
      "kind": "interface",
      "name": "ClassicLoadBalancerProps",
      "namespace": "@aws-cdk/aws-ec2",
      "properties": [
        {
          "docs": {
            "comment": "VPC network of the fleet instances"
          },
          "name": "vpc",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.VpcNetworkRef"
          }
        },
        {
          "docs": {
            "comment": "Whether this is an internet-facing Load Balancer\n\nThis controls whether the LB has a public IP address assigned. It does\nnot open up the Load Balancer's security groups to public internet access.",
            "default": "false"
          },
          "name": "internetFacing",
          "type": {
            "optional": true,
            "primitive": "boolean"
          }
        },
        {
          "docs": {
            "comment": "What listeners to set up for the load balancer.\n\nCan also be added by .addListener()"
          },
          "name": "listeners",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-ec2.ClassicLoadBalancerListener"
              },
              "kind": "array"
            },
            "optional": true
          }
        },
        {
          "docs": {
            "comment": "What targets to load balance to.\n\nCan also be added by .addTarget()"
          },
          "name": "targets",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-ec2.IClassicLoadBalancerTarget"
              },
              "kind": "array"
            },
            "optional": true
          }
        },
        {
          "docs": {
            "comment": "Health check settings for the load balancing targets.\n\nNot required but recommended."
          },
          "name": "healthCheck",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.HealthCheck",
            "optional": true
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.ConnectionRule": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "fqn": "@aws-cdk/aws-ec2.ConnectionRule",
      "kind": "interface",
      "name": "ConnectionRule",
      "namespace": "@aws-cdk/aws-ec2",
      "properties": [
        {
          "docs": {
            "comment": "The IP protocol name (tcp, udp, icmp) or number (see Protocol Numbers).\nUse -1 to specify all protocols. If you specify -1, or a protocol number\nother than tcp, udp, icmp, or 58 (ICMPv6), traffic on all ports is\nallowed, regardless of any ports you specify. For tcp, udp, and icmp, you\nmust specify a port range. For protocol 58 (ICMPv6), you can optionally\nspecify a port range; if you don't, traffic for all types and codes is\nallowed.",
            "default": "tcp"
          },
          "name": "protocol",
          "type": {
            "optional": true,
            "primitive": "string"
          }
        },
        {
          "docs": {
            "comment": "Start of port range for the TCP and UDP protocols, or an ICMP type number.\n\nIf you specify icmp for the IpProtocol property, you can specify\n-1 as a wildcard (i.e., any ICMP type number)."
          },
          "name": "fromPort",
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "comment": "End of port range for the TCP and UDP protocols, or an ICMP code.\n\nIf you specify icmp for the IpProtocol property, you can specify -1 as a\nwildcard (i.e., any ICMP code).",
            "default": "If toPort is not specified, it will be the same as fromPort."
          },
          "name": "toPort",
          "type": {
            "optional": true,
            "primitive": "number"
          }
        },
        {
          "docs": {
            "comment": "Description of this connection. It is applied to both the ingress rule\nand the egress rule.",
            "default": "No description"
          },
          "name": "description",
          "type": {
            "optional": true,
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.Connections": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "comment": "Connections for an object that does not have default ports"
      },
      "fqn": "@aws-cdk/aws-ec2.Connections",
      "initializer": {
        "initializer": true,
        "parameters": [
          {
            "name": "securityGroup",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.ISecurityGroup"
            }
          }
        ]
      },
      "interfaces": [
        {
          "fqn": "@aws-cdk/aws-ec2.IConnections"
        }
      ],
      "kind": "class",
      "methods": [
        {
          "docs": {
            "comment": "Allow connections to the peer on their default port"
          },
          "name": "allowToDefaultPort",
          "parameters": [
            {
              "name": "other",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.IDefaultConnectable"
              }
            },
            {
              "name": "description",
              "type": {
                "primitive": "string"
              }
            }
          ]
        },
        {
          "docs": {
            "comment": "Allow connections to the peer on the given port"
          },
          "name": "allowTo",
          "parameters": [
            {
              "name": "other",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.IConnectable"
              }
            },
            {
              "name": "portRange",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.IPortRange"
              }
            },
            {
              "name": "description",
              "type": {
                "primitive": "string"
              }
            }
          ]
        },
        {
          "docs": {
            "comment": "Allow connections from the peer on the given port"
          },
          "name": "allowFrom",
          "parameters": [
            {
              "name": "other",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.IConnectable"
              }
            },
            {
              "name": "portRange",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.IPortRange"
              }
            },
            {
              "name": "description",
              "type": {
                "primitive": "string"
              }
            }
          ]
        },
        {
          "docs": {
            "comment": "Allow hosts inside the security group to connect to each other on the given port"
          },
          "name": "allowInternally",
          "parameters": [
            {
              "name": "portRange",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.IPortRange"
              }
            },
            {
              "name": "description",
              "type": {
                "primitive": "string"
              }
            }
          ]
        },
        {
          "docs": {
            "comment": "Allow to all IPv4 ranges"
          },
          "name": "allowToAnyIpv4",
          "parameters": [
            {
              "name": "portRange",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.IPortRange"
              }
            },
            {
              "name": "description",
              "type": {
                "primitive": "string"
              }
            }
          ]
        },
        {
          "docs": {
            "comment": "Allow from any IPv4 ranges"
          },
          "name": "allowFromAnyIpv4",
          "parameters": [
            {
              "name": "portRange",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.IPortRange"
              }
            },
            {
              "name": "description",
              "type": {
                "primitive": "string"
              }
            }
          ]
        }
      ],
      "name": "Connections",
      "namespace": "@aws-cdk/aws-ec2",
      "properties": [
        {
          "docs": {
            "comment": "Access to the peer that we're connecting to\n\nIt's convenient to put this on the Connections object since\nall participants in this protocol have one anyway, and the Connections\nobjects have access to it, so they don't need to implement two interfaces."
          },
          "immutable": true,
          "name": "connectionPeer",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.IConnectionPeer"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.DefaultConnections": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": {
        "fqn": "@aws-cdk/aws-ec2.Connections"
      },
      "docs": {
        "comment": "A class to orchestrate connections that already has default ports"
      },
      "fqn": "@aws-cdk/aws-ec2.DefaultConnections",
      "initializer": {
        "initializer": true,
        "parameters": [
          {
            "name": "securityGroup",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.ISecurityGroup"
            }
          },
          {
            "name": "defaultPortRangeProvider",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.IDefaultConnectable"
            }
          }
        ]
      },
      "kind": "class",
      "methods": [
        {
          "docs": {
            "comment": "Allow connections from the peer on our default port\n\nEven if the peer has a default port, we will always use our default port."
          },
          "name": "allowDefaultPortFrom",
          "parameters": [
            {
              "name": "other",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.IConnectable"
              }
            },
            {
              "name": "description",
              "type": {
                "primitive": "string"
              }
            }
          ]
        },
        {
          "docs": {
            "comment": "Allow hosts inside the security group to connect to each other"
          },
          "name": "allowDefaultPortInternally",
          "parameters": [
            {
              "name": "description",
              "type": {
                "primitive": "string"
              }
            }
          ]
        },
        {
          "docs": {
            "comment": "Allow default connections from all IPv4 ranges"
          },
          "name": "allowDefaultPortFromAnyIpv4",
          "parameters": [
            {
              "name": "description",
              "type": {
                "primitive": "string"
              }
            }
          ]
        }
      ],
      "name": "DefaultConnections",
      "namespace": "@aws-cdk/aws-ec2",
      "properties": [
        {
          "immutable": true,
          "name": "defaultPortRange",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.IPortRange"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.DefaultInstanceTenancy": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "comment": "The default tenancy of instances launched into the VPC."
      },
      "fqn": "@aws-cdk/aws-ec2.DefaultInstanceTenancy",
      "kind": "enum",
      "members": [
        {
          "name": "Default"
        },
        {
          "name": "Dedicated"
        }
      ],
      "name": "DefaultInstanceTenancy",
      "namespace": "@aws-cdk/aws-ec2"
    },
    "@aws-cdk/aws-ec2.EIPAllocationId": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": {
        "fqn": "@aws-cdk/cdk.Token"
      },
      "fqn": "@aws-cdk/aws-ec2.EIPAllocationId",
      "initializer": {
        "docs": {
          "comment": "Creates a token that resolves to `value`. If value is a function,\nthe function is evaluated upon resolution and the value it returns will be\nuesd as the token's value."
        },
        "initializer": true,
        "parameters": [
          {
            "name": "valueOrFunction",
            "type": {
              "optional": true,
              "primitive": "any"
            }
          }
        ]
      },
      "kind": "class",
      "name": "EIPAllocationId",
      "namespace": "@aws-cdk/aws-ec2"
    },
    "@aws-cdk/aws-ec2.GenericLinuxImage": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "comment": "Construct a Linux machine image from an AMI map\n\nLinux images IDs are not published to SSM parameter store yet, so you'll have to\nmanually specify an AMI map."
      },
      "fqn": "@aws-cdk/aws-ec2.GenericLinuxImage",
      "initializer": {
        "initializer": true,
        "parameters": [
          {
            "name": "amiMap",
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "string"
                },
                "kind": "map"
              }
            }
          }
        ]
      },
      "interfaces": [
        {
          "fqn": "@aws-cdk/aws-ec2.IMachineImageSource"
        }
      ],
      "kind": "class",
      "methods": [
        {
          "docs": {
            "comment": "Return the image to use in the given context"
          },
          "name": "getImage",
          "parameters": [
            {
              "name": "parent",
              "type": {
                "fqn": "@aws-cdk/cdk.Construct"
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/aws-ec2.MachineImage"
          }
        }
      ],
      "name": "GenericLinuxImage",
      "namespace": "@aws-cdk/aws-ec2"
    },
    "@aws-cdk/aws-ec2.HealthCheck": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "comment": "Describe the health check to a load balancer"
      },
      "fqn": "@aws-cdk/aws-ec2.HealthCheck",
      "kind": "interface",
      "name": "HealthCheck",
      "namespace": "@aws-cdk/aws-ec2",
      "properties": [
        {
          "docs": {
            "comment": "What port number to health check on"
          },
          "name": "port",
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "comment": "What protocol to use for health checking\n\nThe protocol is automatically determined from the port if it's not supplied.",
            "default": "Automatic"
          },
          "name": "protocol",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.LoadBalancingProtocol",
            "optional": true
          }
        },
        {
          "docs": {
            "comment": "What path to use for HTTP or HTTPS health check (must return 200)\n\nFor SSL and TCP health checks, accepting connections is enough to be considered\nhealthy.",
            "default": "\"/\""
          },
          "name": "path",
          "type": {
            "optional": true,
            "primitive": "string"
          }
        },
        {
          "docs": {
            "comment": "After how many successful checks is an instance considered healthy",
            "default": "2"
          },
          "name": "healthyThreshold",
          "type": {
            "optional": true,
            "primitive": "number"
          }
        },
        {
          "docs": {
            "comment": "After how many unsuccessful checks is an instance considered unhealthy",
            "default": "5"
          },
          "name": "unhealthyThreshold",
          "type": {
            "optional": true,
            "primitive": "number"
          }
        },
        {
          "docs": {
            "comment": "Number of seconds between health checks",
            "default": "30"
          },
          "name": "interval",
          "type": {
            "optional": true,
            "primitive": "number"
          }
        },
        {
          "docs": {
            "comment": "Health check timeout",
            "default": "5"
          },
          "name": "timeout",
          "type": {
            "optional": true,
            "primitive": "number"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.IClassicLoadBalancerTarget": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "comment": "Interface that is going to be implemented by constructs that you can load balance to"
      },
      "fqn": "@aws-cdk/aws-ec2.IClassicLoadBalancerTarget",
      "interfaces": [
        {
          "fqn": "@aws-cdk/aws-ec2.IConnectable"
        }
      ],
      "kind": "interface",
      "methods": [
        {
          "docs": {
            "comment": "Attach load-balanced target to a classic ELB"
          },
          "name": "attachToClassicLB",
          "parameters": [
            {
              "name": "loadBalancer",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.ClassicLoadBalancer"
              }
            }
          ]
        }
      ],
      "name": "IClassicLoadBalancerTarget",
      "namespace": "@aws-cdk/aws-ec2"
    },
    "@aws-cdk/aws-ec2.IConnectable": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "comment": "The goal of this module is to make possible to write statements like this:\n\n    ```ts\n *    database.connections.allowFrom(fleet);\n *    fleet.connections.allowTo(database);\n *    rdgw.connections.allowFromCidrIp('0.3.1.5/86');\n *    rgdw.connections.allowTrafficTo(fleet, new AllPorts());\n *    ```\n\nThe insight here is that some connecting peers have information on what ports should\nbe involved in the connection, and some don't.\n\nConstructs will make their `connections` property to be equal to an instance of\neither `Connections` or `ConnectionsWithDefault`.\nAn object that has a Connections object"
      },
      "fqn": "@aws-cdk/aws-ec2.IConnectable",
      "kind": "interface",
      "name": "IConnectable",
      "namespace": "@aws-cdk/aws-ec2",
      "properties": [
        {
          "immutable": true,
          "name": "connections",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.IConnections"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.IConnectionPeer": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "comment": "Interface for classes that provide the peer-specification parts of a security group rule"
      },
      "fqn": "@aws-cdk/aws-ec2.IConnectionPeer",
      "kind": "interface",
      "methods": [
        {
          "docs": {
            "comment": "Produce the ingress rule JSON for the given connection"
          },
          "name": "toIngressRuleJSON",
          "returns": {
            "primitive": "any"
          }
        },
        {
          "docs": {
            "comment": "Produce the egress rule JSON for the given connection"
          },
          "name": "toEgressRuleJSON",
          "returns": {
            "primitive": "any"
          }
        }
      ],
      "name": "IConnectionPeer",
      "namespace": "@aws-cdk/aws-ec2",
      "properties": [
        {
          "docs": {
            "comment": "Whether the rule can be inlined into a SecurityGroup or not"
          },
          "immutable": true,
          "name": "canInlineRule",
          "type": {
            "primitive": "boolean"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.IConnections": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "comment": "An object that encapsulates connection logic\n\nThe IConnections object both has knowledge on what peer to use,\nas well as how to add connection rules."
      },
      "fqn": "@aws-cdk/aws-ec2.IConnections",
      "kind": "interface",
      "methods": [
        {
          "docs": {
            "comment": "Allow connections to the peer on the given port"
          },
          "name": "allowTo",
          "parameters": [
            {
              "name": "other",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.IConnectable"
              }
            },
            {
              "name": "portRange",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.IPortRange"
              }
            },
            {
              "name": "description",
              "type": {
                "primitive": "string"
              }
            }
          ]
        },
        {
          "docs": {
            "comment": "Allow connections from the peer on the given port"
          },
          "name": "allowFrom",
          "parameters": [
            {
              "name": "other",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.IConnectable"
              }
            },
            {
              "name": "portRange",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.IPortRange"
              }
            },
            {
              "name": "description",
              "type": {
                "primitive": "string"
              }
            }
          ]
        }
      ],
      "name": "IConnections",
      "namespace": "@aws-cdk/aws-ec2",
      "properties": [
        {
          "docs": {
            "comment": "Access to the peer that we're connecting to\n\nIt's convenient to put this on the Connections object since\nall participants in this protocol have one anyway, and the Connections\nobjects have access to it, so they don't need to implement two interfaces."
          },
          "immutable": true,
          "name": "connectionPeer",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.IConnectionPeer"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.IDefaultConnectable": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "comment": "An object that has a Connections object as well as a default port range."
      },
      "fqn": "@aws-cdk/aws-ec2.IDefaultConnectable",
      "interfaces": [
        {
          "fqn": "@aws-cdk/aws-ec2.IConnectable"
        }
      ],
      "kind": "interface",
      "name": "IDefaultConnectable",
      "namespace": "@aws-cdk/aws-ec2",
      "properties": [
        {
          "immutable": true,
          "name": "defaultPortRange",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.IPortRange"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.IMachineImageSource": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "comment": "Interface for classes that can select an appropriate machine image to use"
      },
      "fqn": "@aws-cdk/aws-ec2.IMachineImageSource",
      "kind": "interface",
      "methods": [
        {
          "docs": {
            "comment": "Return the image to use in the given context"
          },
          "name": "getImage",
          "parameters": [
            {
              "name": "parent",
              "type": {
                "fqn": "@aws-cdk/cdk.Construct"
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/aws-ec2.MachineImage"
          }
        }
      ],
      "name": "IMachineImageSource",
      "namespace": "@aws-cdk/aws-ec2"
    },
    "@aws-cdk/aws-ec2.IPortRange": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "comment": "Interface for classes that provide the connection-specification parts of a security group rule"
      },
      "fqn": "@aws-cdk/aws-ec2.IPortRange",
      "kind": "interface",
      "methods": [
        {
          "docs": {
            "comment": "Produce the ingress/egress rule JSON for the given connection"
          },
          "name": "toRuleJSON",
          "returns": {
            "primitive": "any"
          }
        }
      ],
      "name": "IPortRange",
      "namespace": "@aws-cdk/aws-ec2",
      "properties": [
        {
          "immutable": true,
          "name": "canInlineRule",
          "type": {
            "primitive": "boolean"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.ISecurityGroup": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "comment": "Basic interface for security groups"
      },
      "fqn": "@aws-cdk/aws-ec2.ISecurityGroup",
      "interfaces": [
        {
          "fqn": "@aws-cdk/aws-ec2.IConnectionPeer"
        }
      ],
      "kind": "interface",
      "methods": [
        {
          "name": "addIngressRule",
          "parameters": [
            {
              "name": "peer",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.IConnectionPeer"
              }
            },
            {
              "name": "connection",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.IPortRange"
              }
            },
            {
              "name": "description",
              "type": {
                "primitive": "string"
              }
            }
          ]
        },
        {
          "name": "addEgressRule",
          "parameters": [
            {
              "name": "peer",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.IConnectionPeer"
              }
            },
            {
              "name": "connection",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.IPortRange"
              }
            },
            {
              "name": "description",
              "type": {
                "primitive": "string"
              }
            }
          ]
        }
      ],
      "name": "ISecurityGroup",
      "namespace": "@aws-cdk/aws-ec2",
      "properties": [
        {
          "immutable": true,
          "name": "securityGroupId",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.SecurityGroupId"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.InstanceAvailabilityZone": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": {
        "fqn": "@aws-cdk/cdk.Token"
      },
      "fqn": "@aws-cdk/aws-ec2.InstanceAvailabilityZone",
      "initializer": {
        "docs": {
          "comment": "Creates a token that resolves to `value`. If value is a function,\nthe function is evaluated upon resolution and the value it returns will be\nuesd as the token's value."
        },
        "initializer": true,
        "parameters": [
          {
            "name": "valueOrFunction",
            "type": {
              "optional": true,
              "primitive": "any"
            }
          }
        ]
      },
      "kind": "class",
      "name": "InstanceAvailabilityZone",
      "namespace": "@aws-cdk/aws-ec2"
    },
    "@aws-cdk/aws-ec2.InstanceClass": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "comment": "What class and generation of instance to use\n\nWe have both symbolic and concrete enums for every type.\n\nThe first are for people that want to specify by purpose,\nthe second one are for people who already know exactly what\n'R4' means."
      },
      "fqn": "@aws-cdk/aws-ec2.InstanceClass",
      "kind": "enum",
      "members": [
        {
          "name": "Standard3"
        },
        {
          "name": "M3"
        },
        {
          "name": "Standard4"
        },
        {
          "name": "M4"
        },
        {
          "name": "Standard5"
        },
        {
          "name": "M5"
        },
        {
          "name": "Memory3"
        },
        {
          "name": "R3"
        },
        {
          "name": "Memory4"
        },
        {
          "name": "R4"
        },
        {
          "name": "Compute3"
        },
        {
          "name": "C3"
        },
        {
          "name": "Compute4"
        },
        {
          "name": "C4"
        },
        {
          "name": "Compute5"
        },
        {
          "name": "C5"
        },
        {
          "name": "Storage2"
        },
        {
          "name": "D2"
        },
        {
          "name": "StorageCompute1"
        },
        {
          "name": "H1"
        },
        {
          "name": "Io3"
        },
        {
          "name": "I3"
        },
        {
          "name": "Burstable2"
        },
        {
          "name": "T2"
        },
        {
          "name": "MemoryIntensive1"
        },
        {
          "name": "X1"
        },
        {
          "name": "MemoryIntensive1Extended"
        },
        {
          "name": "X1e"
        },
        {
          "name": "Fpga1"
        },
        {
          "name": "F1"
        },
        {
          "name": "Graphics3"
        },
        {
          "name": "G3"
        },
        {
          "name": "Parallel2"
        },
        {
          "name": "P2"
        },
        {
          "name": "Parallel3"
        },
        {
          "name": "P3"
        }
      ],
      "name": "InstanceClass",
      "namespace": "@aws-cdk/aws-ec2"
    },
    "@aws-cdk/aws-ec2.InstancePrivateDnsName": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": {
        "fqn": "@aws-cdk/cdk.Token"
      },
      "fqn": "@aws-cdk/aws-ec2.InstancePrivateDnsName",
      "initializer": {
        "docs": {
          "comment": "Creates a token that resolves to `value`. If value is a function,\nthe function is evaluated upon resolution and the value it returns will be\nuesd as the token's value."
        },
        "initializer": true,
        "parameters": [
          {
            "name": "valueOrFunction",
            "type": {
              "optional": true,
              "primitive": "any"
            }
          }
        ]
      },
      "kind": "class",
      "name": "InstancePrivateDnsName",
      "namespace": "@aws-cdk/aws-ec2"
    },
    "@aws-cdk/aws-ec2.InstancePrivateIp": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": {
        "fqn": "@aws-cdk/cdk.Token"
      },
      "fqn": "@aws-cdk/aws-ec2.InstancePrivateIp",
      "initializer": {
        "docs": {
          "comment": "Creates a token that resolves to `value`. If value is a function,\nthe function is evaluated upon resolution and the value it returns will be\nuesd as the token's value."
        },
        "initializer": true,
        "parameters": [
          {
            "name": "valueOrFunction",
            "type": {
              "optional": true,
              "primitive": "any"
            }
          }
        ]
      },
      "kind": "class",
      "name": "InstancePrivateIp",
      "namespace": "@aws-cdk/aws-ec2"
    },
    "@aws-cdk/aws-ec2.InstancePublicDnsName": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": {
        "fqn": "@aws-cdk/cdk.Token"
      },
      "fqn": "@aws-cdk/aws-ec2.InstancePublicDnsName",
      "initializer": {
        "docs": {
          "comment": "Creates a token that resolves to `value`. If value is a function,\nthe function is evaluated upon resolution and the value it returns will be\nuesd as the token's value."
        },
        "initializer": true,
        "parameters": [
          {
            "name": "valueOrFunction",
            "type": {
              "optional": true,
              "primitive": "any"
            }
          }
        ]
      },
      "kind": "class",
      "name": "InstancePublicDnsName",
      "namespace": "@aws-cdk/aws-ec2"
    },
    "@aws-cdk/aws-ec2.InstancePublicIp": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": {
        "fqn": "@aws-cdk/cdk.Token"
      },
      "fqn": "@aws-cdk/aws-ec2.InstancePublicIp",
      "initializer": {
        "docs": {
          "comment": "Creates a token that resolves to `value`. If value is a function,\nthe function is evaluated upon resolution and the value it returns will be\nuesd as the token's value."
        },
        "initializer": true,
        "parameters": [
          {
            "name": "valueOrFunction",
            "type": {
              "optional": true,
              "primitive": "any"
            }
          }
        ]
      },
      "kind": "class",
      "name": "InstancePublicIp",
      "namespace": "@aws-cdk/aws-ec2"
    },
    "@aws-cdk/aws-ec2.InstanceSize": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "comment": "What size of instance to use"
      },
      "fqn": "@aws-cdk/aws-ec2.InstanceSize",
      "kind": "enum",
      "members": [
        {
          "name": "Micro"
        },
        {
          "name": "Small"
        },
        {
          "name": "Medium"
        },
        {
          "name": "Large"
        },
        {
          "name": "XLarge"
        },
        {
          "name": "XLarge2"
        },
        {
          "name": "XLarge4"
        },
        {
          "name": "XLarge8"
        },
        {
          "name": "XLarge9"
        },
        {
          "name": "XLarge10"
        },
        {
          "name": "XLarge12"
        },
        {
          "name": "XLarge16"
        },
        {
          "name": "XLarge18"
        },
        {
          "name": "XLarge24"
        },
        {
          "name": "XLarge32"
        }
      ],
      "name": "InstanceSize",
      "namespace": "@aws-cdk/aws-ec2"
    },
    "@aws-cdk/aws-ec2.InstanceType": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "comment": "Instance type for EC2 instances\n\nThis class takes a literal string, good if you already\nknow the identifier of the type you want."
      },
      "fqn": "@aws-cdk/aws-ec2.InstanceType",
      "initializer": {
        "initializer": true,
        "parameters": [
          {
            "name": "instanceTypeIdentifier",
            "type": {
              "primitive": "string"
            }
          }
        ]
      },
      "kind": "class",
      "methods": [
        {
          "docs": {
            "comment": "Return the instance type as a dotted string"
          },
          "name": "toString",
          "returns": {
            "primitive": "string"
          }
        }
      ],
      "name": "InstanceType",
      "namespace": "@aws-cdk/aws-ec2"
    },
    "@aws-cdk/aws-ec2.InstanceTypePair": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": {
        "fqn": "@aws-cdk/aws-ec2.InstanceType"
      },
      "docs": {
        "comment": "Instance type for EC2 instances\n\nThis class takes a combination of a class and size.\n\nBe aware that not all combinations of class and size are available, and not all\nclasses are available in all regions."
      },
      "fqn": "@aws-cdk/aws-ec2.InstanceTypePair",
      "initializer": {
        "initializer": true,
        "parameters": [
          {
            "name": "instanceClass",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.InstanceClass"
            }
          },
          {
            "name": "instanceSize",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.InstanceSize"
            }
          }
        ]
      },
      "kind": "class",
      "name": "InstanceTypePair",
      "namespace": "@aws-cdk/aws-ec2",
      "properties": [
        {
          "immutable": true,
          "name": "instanceClass",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.InstanceClass"
          }
        },
        {
          "immutable": true,
          "name": "instanceSize",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.InstanceSize"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.LaunchTemplateDefaultVersionNumber": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": {
        "fqn": "@aws-cdk/cdk.Token"
      },
      "fqn": "@aws-cdk/aws-ec2.LaunchTemplateDefaultVersionNumber",
      "initializer": {
        "docs": {
          "comment": "Creates a token that resolves to `value`. If value is a function,\nthe function is evaluated upon resolution and the value it returns will be\nuesd as the token's value."
        },
        "initializer": true,
        "parameters": [
          {
            "name": "valueOrFunction",
            "type": {
              "optional": true,
              "primitive": "any"
            }
          }
        ]
      },
      "kind": "class",
      "name": "LaunchTemplateDefaultVersionNumber",
      "namespace": "@aws-cdk/aws-ec2"
    },
    "@aws-cdk/aws-ec2.LaunchTemplateLatestVersionNumber": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": {
        "fqn": "@aws-cdk/cdk.Token"
      },
      "fqn": "@aws-cdk/aws-ec2.LaunchTemplateLatestVersionNumber",
      "initializer": {
        "docs": {
          "comment": "Creates a token that resolves to `value`. If value is a function,\nthe function is evaluated upon resolution and the value it returns will be\nuesd as the token's value."
        },
        "initializer": true,
        "parameters": [
          {
            "name": "valueOrFunction",
            "type": {
              "optional": true,
              "primitive": "any"
            }
          }
        ]
      },
      "kind": "class",
      "name": "LaunchTemplateLatestVersionNumber",
      "namespace": "@aws-cdk/aws-ec2"
    },
    "@aws-cdk/aws-ec2.LinuxOS": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": {
        "fqn": "@aws-cdk/aws-ec2.OperatingSystem"
      },
      "docs": {
        "comment": "OS features specialized for Linux"
      },
      "fqn": "@aws-cdk/aws-ec2.LinuxOS",
      "initializer": {
        "initializer": true
      },
      "kind": "class",
      "methods": [
        {
          "name": "createUserData",
          "parameters": [
            {
              "name": "scripts",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "string"
                  },
                  "kind": "array"
                }
              }
            }
          ],
          "returns": {
            "primitive": "string"
          }
        }
      ],
      "name": "LinuxOS",
      "namespace": "@aws-cdk/aws-ec2",
      "properties": [
        {
          "immutable": true,
          "name": "type",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.OperatingSystemType"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.LoadBalancingProtocol": {
      "assembly": "@aws-cdk/aws-ec2",
      "fqn": "@aws-cdk/aws-ec2.LoadBalancingProtocol",
      "kind": "enum",
      "members": [
        {
          "name": "Tcp"
        },
        {
          "name": "Ssl"
        },
        {
          "name": "Http"
        },
        {
          "name": "Https"
        }
      ],
      "name": "LoadBalancingProtocol",
      "namespace": "@aws-cdk/aws-ec2"
    },
    "@aws-cdk/aws-ec2.MachineImage": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "comment": "Representation of a machine to be launched\n\nCombines an AMI ID with an OS."
      },
      "fqn": "@aws-cdk/aws-ec2.MachineImage",
      "initializer": {
        "initializer": true,
        "parameters": [
          {
            "name": "imageId",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "os",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.OperatingSystem"
            }
          }
        ]
      },
      "kind": "class",
      "name": "MachineImage",
      "namespace": "@aws-cdk/aws-ec2",
      "properties": [
        {
          "immutable": true,
          "name": "imageId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "immutable": true,
          "name": "os",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.OperatingSystem"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.NetworkInterfacePrimaryPrivateIpAddress": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": {
        "fqn": "@aws-cdk/cdk.Token"
      },
      "fqn": "@aws-cdk/aws-ec2.NetworkInterfacePrimaryPrivateIpAddress",
      "initializer": {
        "docs": {
          "comment": "Creates a token that resolves to `value`. If value is a function,\nthe function is evaluated upon resolution and the value it returns will be\nuesd as the token's value."
        },
        "initializer": true,
        "parameters": [
          {
            "name": "valueOrFunction",
            "type": {
              "optional": true,
              "primitive": "any"
            }
          }
        ]
      },
      "kind": "class",
      "name": "NetworkInterfacePrimaryPrivateIpAddress",
      "namespace": "@aws-cdk/aws-ec2"
    },
    "@aws-cdk/aws-ec2.NetworkInterfaceSecondaryPrivateIpAddresses": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": {
        "fqn": "@aws-cdk/cdk.Token"
      },
      "fqn": "@aws-cdk/aws-ec2.NetworkInterfaceSecondaryPrivateIpAddresses",
      "initializer": {
        "docs": {
          "comment": "Creates a token that resolves to `value`. If value is a function,\nthe function is evaluated upon resolution and the value it returns will be\nuesd as the token's value."
        },
        "initializer": true,
        "parameters": [
          {
            "name": "valueOrFunction",
            "type": {
              "optional": true,
              "primitive": "any"
            }
          }
        ]
      },
      "kind": "class",
      "name": "NetworkInterfaceSecondaryPrivateIpAddresses",
      "namespace": "@aws-cdk/aws-ec2"
    },
    "@aws-cdk/aws-ec2.OperatingSystem": {
      "abstract": true,
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "comment": "Abstraction of OS features we need to be aware of"
      },
      "fqn": "@aws-cdk/aws-ec2.OperatingSystem",
      "initializer": {
        "initializer": true
      },
      "kind": "class",
      "methods": [
        {
          "abstract": true,
          "name": "createUserData",
          "parameters": [
            {
              "name": "scripts",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "string"
                  },
                  "kind": "array"
                }
              }
            }
          ],
          "returns": {
            "primitive": "string"
          }
        }
      ],
      "name": "OperatingSystem",
      "namespace": "@aws-cdk/aws-ec2",
      "properties": [
        {
          "immutable": true,
          "name": "type",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.OperatingSystemType"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.OperatingSystemType": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "comment": "The OS type of a particular image"
      },
      "fqn": "@aws-cdk/aws-ec2.OperatingSystemType",
      "kind": "enum",
      "members": [
        {
          "name": "Linux"
        },
        {
          "name": "Windows"
        }
      ],
      "name": "OperatingSystemType",
      "namespace": "@aws-cdk/aws-ec2"
    },
    "@aws-cdk/aws-ec2.PrefixList": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "comment": "A prefix list\n\nPrefix lists are used to allow traffic to VPC-local service endpoints.\n\nFor more information, see this page:\n\nhttps://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/vpc-endpoints.html"
      },
      "fqn": "@aws-cdk/aws-ec2.PrefixList",
      "initializer": {
        "initializer": true,
        "parameters": [
          {
            "name": "prefixListId",
            "type": {
              "primitive": "string"
            }
          }
        ]
      },
      "interfaces": [
        {
          "fqn": "@aws-cdk/aws-ec2.IConnectionPeer"
        },
        {
          "fqn": "@aws-cdk/aws-ec2.IConnectable"
        }
      ],
      "kind": "class",
      "methods": [
        {
          "docs": {
            "comment": "Produce the ingress rule JSON for the given connection"
          },
          "name": "toIngressRuleJSON",
          "returns": {
            "primitive": "any"
          }
        },
        {
          "docs": {
            "comment": "Produce the egress rule JSON for the given connection"
          },
          "name": "toEgressRuleJSON",
          "returns": {
            "primitive": "any"
          }
        }
      ],
      "name": "PrefixList",
      "namespace": "@aws-cdk/aws-ec2",
      "properties": [
        {
          "docs": {
            "comment": "Whether the rule can be inlined into a SecurityGroup or not"
          },
          "immutable": true,
          "name": "canInlineRule",
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "immutable": true,
          "name": "connections",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.IConnections"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.Protocol": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "comment": "Protocol for use in Connection Rules"
      },
      "fqn": "@aws-cdk/aws-ec2.Protocol",
      "kind": "enum",
      "members": [
        {
          "name": "All"
        },
        {
          "name": "Tcp"
        },
        {
          "name": "Udp"
        },
        {
          "name": "Icmp"
        },
        {
          "name": "Icmpv6"
        }
      ],
      "name": "Protocol",
      "namespace": "@aws-cdk/aws-ec2"
    },
    "@aws-cdk/aws-ec2.SecurityGroup": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": {
        "fqn": "@aws-cdk/aws-ec2.SecurityGroupRef"
      },
      "docs": {
        "comment": "Creates an Amazon EC2 security group within a VPC.\n\nThis class has an additional optimization over SecurityGroupRef that it can also create\ninline ingress and egress rule (which saves on the total number of resources inside\nthe template)."
      },
      "fqn": "@aws-cdk/aws-ec2.SecurityGroup",
      "initializer": {
        "initializer": true,
        "parameters": [
          {
            "name": "parent",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "name": "name",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.SecurityGroupProps"
            }
          }
        ]
      },
      "kind": "class",
      "methods": [
        {
          "name": "addIngressRule",
          "parameters": [
            {
              "name": "peer",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.IConnectionPeer"
              }
            },
            {
              "name": "connection",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.IPortRange"
              }
            },
            {
              "name": "description",
              "type": {
                "primitive": "string"
              }
            }
          ]
        },
        {
          "name": "addEgressRule",
          "parameters": [
            {
              "name": "peer",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.IConnectionPeer"
              }
            },
            {
              "name": "connection",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.IPortRange"
              }
            },
            {
              "name": "description",
              "type": {
                "primitive": "string"
              }
            }
          ]
        }
      ],
      "name": "SecurityGroup",
      "namespace": "@aws-cdk/aws-ec2",
      "properties": [
        {
          "docs": {
            "comment": "An attribute that represents the security group name."
          },
          "immutable": true,
          "name": "groupName",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.SecurityGroupName"
          }
        },
        {
          "docs": {
            "comment": "An attribute that represents the physical VPC ID this security group is part of."
          },
          "immutable": true,
          "name": "vpcId",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.SecurityGroupVpcId"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.SecurityGroupId": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": {
        "fqn": "@aws-cdk/cdk.Token"
      },
      "fqn": "@aws-cdk/aws-ec2.SecurityGroupId",
      "initializer": {
        "docs": {
          "comment": "Creates a token that resolves to `value`. If value is a function,\nthe function is evaluated upon resolution and the value it returns will be\nuesd as the token's value."
        },
        "initializer": true,
        "parameters": [
          {
            "name": "valueOrFunction",
            "type": {
              "optional": true,
              "primitive": "any"
            }
          }
        ]
      },
      "kind": "class",
      "name": "SecurityGroupId",
      "namespace": "@aws-cdk/aws-ec2"
    },
    "@aws-cdk/aws-ec2.SecurityGroupName": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": {
        "fqn": "@aws-cdk/cdk.Token"
      },
      "fqn": "@aws-cdk/aws-ec2.SecurityGroupName",
      "initializer": {
        "docs": {
          "comment": "Creates a token that resolves to `value`. If value is a function,\nthe function is evaluated upon resolution and the value it returns will be\nuesd as the token's value."
        },
        "initializer": true,
        "parameters": [
          {
            "name": "valueOrFunction",
            "type": {
              "optional": true,
              "primitive": "any"
            }
          }
        ]
      },
      "kind": "class",
      "name": "SecurityGroupName",
      "namespace": "@aws-cdk/aws-ec2"
    },
    "@aws-cdk/aws-ec2.SecurityGroupProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "fqn": "@aws-cdk/aws-ec2.SecurityGroupProps",
      "kind": "interface",
      "name": "SecurityGroupProps",
      "namespace": "@aws-cdk/aws-ec2",
      "properties": [
        {
          "docs": {
            "comment": "The name of the security group. For valid values, see the GroupName\nparameter of the CreateSecurityGroup action in the Amazon EC2 API\nReference.\n\nIt is not recommended to use an explicit group name.",
            "default": "If you don't specify a GroupName, AWS CloudFormation generates a\nunique physical ID and uses that ID for the group name."
          },
          "name": "groupName",
          "type": {
            "optional": true,
            "primitive": "string"
          }
        },
        {
          "docs": {
            "comment": "A description of the security group.",
            "default": "The default name will be the construct's CDK path."
          },
          "name": "description",
          "type": {
            "optional": true,
            "primitive": "string"
          }
        },
        {
          "docs": {
            "comment": "The VPC in which to create the security group."
          },
          "name": "vpc",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.VpcNetworkRef"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.SecurityGroupRef": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": {
        "fqn": "@aws-cdk/cdk.Construct"
      },
      "docs": {
        "comment": "A SecurityGroup that is not created in this template"
      },
      "fqn": "@aws-cdk/aws-ec2.SecurityGroupRef",
      "initializer": {
        "initializer": true,
        "parameters": [
          {
            "name": "parent",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "name": "name",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.SecurityGroupRefProps"
            }
          }
        ]
      },
      "interfaces": [
        {
          "fqn": "@aws-cdk/aws-ec2.ISecurityGroup"
        }
      ],
      "kind": "class",
      "methods": [
        {
          "name": "addIngressRule",
          "parameters": [
            {
              "name": "peer",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.IConnectionPeer"
              }
            },
            {
              "name": "connection",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.IPortRange"
              }
            },
            {
              "name": "description",
              "type": {
                "primitive": "string"
              }
            }
          ]
        },
        {
          "name": "addEgressRule",
          "parameters": [
            {
              "name": "peer",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.IConnectionPeer"
              }
            },
            {
              "name": "connection",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.IPortRange"
              }
            },
            {
              "name": "description",
              "type": {
                "primitive": "string"
              }
            }
          ]
        },
        {
          "docs": {
            "comment": "Produce the ingress rule JSON for the given connection"
          },
          "name": "toIngressRuleJSON",
          "returns": {
            "primitive": "any"
          }
        },
        {
          "docs": {
            "comment": "Produce the egress rule JSON for the given connection"
          },
          "name": "toEgressRuleJSON",
          "returns": {
            "primitive": "any"
          }
        }
      ],
      "name": "SecurityGroupRef",
      "namespace": "@aws-cdk/aws-ec2",
      "properties": [
        {
          "immutable": true,
          "name": "securityGroupId",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.SecurityGroupId"
          }
        },
        {
          "docs": {
            "comment": "Whether the rule can be inlined into a SecurityGroup or not"
          },
          "immutable": true,
          "name": "canInlineRule",
          "type": {
            "primitive": "boolean"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.SecurityGroupRefProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "fqn": "@aws-cdk/aws-ec2.SecurityGroupRefProps",
      "kind": "interface",
      "name": "SecurityGroupRefProps",
      "namespace": "@aws-cdk/aws-ec2",
      "properties": [
        {
          "docs": {
            "comment": "ID of security group"
          },
          "name": "securityGroupId",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.SecurityGroupId"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.SecurityGroupVpcId": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": {
        "fqn": "@aws-cdk/cdk.Token"
      },
      "fqn": "@aws-cdk/aws-ec2.SecurityGroupVpcId",
      "initializer": {
        "docs": {
          "comment": "Creates a token that resolves to `value`. If value is a function,\nthe function is evaluated upon resolution and the value it returns will be\nuesd as the token's value."
        },
        "initializer": true,
        "parameters": [
          {
            "name": "valueOrFunction",
            "type": {
              "optional": true,
              "primitive": "any"
            }
          }
        ]
      },
      "kind": "class",
      "name": "SecurityGroupVpcId",
      "namespace": "@aws-cdk/aws-ec2"
    },
    "@aws-cdk/aws-ec2.SecurityGrouplessConnections": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "comment": "This object is used by peers who don't allow reverse connections\n\nIt still has an associated connection peer, but that peer does not\nhave any security groups to add connections to."
      },
      "fqn": "@aws-cdk/aws-ec2.SecurityGrouplessConnections",
      "initializer": {
        "initializer": true,
        "parameters": [
          {
            "name": "connectionPeer",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.IConnectionPeer"
            }
          }
        ]
      },
      "interfaces": [
        {
          "fqn": "@aws-cdk/aws-ec2.IConnections"
        }
      ],
      "kind": "class",
      "methods": [
        {
          "docs": {
            "comment": "Allow connections to the peer on the given port"
          },
          "name": "allowTo",
          "parameters": [
            {
              "name": "_other",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.IConnectable"
              }
            },
            {
              "name": "_connection",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.IPortRange"
              }
            },
            {
              "name": "_description",
              "type": {
                "primitive": "string"
              }
            }
          ]
        },
        {
          "docs": {
            "comment": "Allow connections from the peer on the given port"
          },
          "name": "allowFrom",
          "parameters": [
            {
              "name": "_other",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.IConnectable"
              }
            },
            {
              "name": "_connection",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.IPortRange"
              }
            },
            {
              "name": "_description",
              "type": {
                "primitive": "string"
              }
            }
          ]
        }
      ],
      "name": "SecurityGrouplessConnections",
      "namespace": "@aws-cdk/aws-ec2",
      "properties": [
        {
          "immutable": true,
          "name": "connectionPeer",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.IConnectionPeer"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.SubnetAvailabilityZone": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": {
        "fqn": "@aws-cdk/cdk.Token"
      },
      "fqn": "@aws-cdk/aws-ec2.SubnetAvailabilityZone",
      "initializer": {
        "docs": {
          "comment": "Creates a token that resolves to `value`. If value is a function,\nthe function is evaluated upon resolution and the value it returns will be\nuesd as the token's value."
        },
        "initializer": true,
        "parameters": [
          {
            "name": "valueOrFunction",
            "type": {
              "optional": true,
              "primitive": "any"
            }
          }
        ]
      },
      "kind": "class",
      "name": "SubnetAvailabilityZone",
      "namespace": "@aws-cdk/aws-ec2"
    },
    "@aws-cdk/aws-ec2.SubnetConfiguration": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "comment": "Specify configuration parameters for a VPC to be built"
      },
      "fqn": "@aws-cdk/aws-ec2.SubnetConfiguration",
      "kind": "interface",
      "name": "SubnetConfiguration",
      "namespace": "@aws-cdk/aws-ec2",
      "properties": [
        {
          "docs": {
            "comment": "The CIDR Mask or the number of leading 1 bits in the routing mask\n\nValid values are 16 - 28"
          },
          "name": "cidrMask",
          "type": {
            "optional": true,
            "primitive": "number"
          }
        },
        {
          "docs": {
            "comment": "The type of Subnet to configure.\n\nThe Subnet type will control the ability to route and connect to the\nInternet."
          },
          "name": "subnetType",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.SubnetType"
          }
        },
        {
          "docs": {
            "comment": "The common Logical Name for the `VpcSubnet`\n\nThi name will be suffixed with an integer correlating to a specific\navailability zone."
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.SubnetIpv6CidrBlocks": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": {
        "fqn": "@aws-cdk/cdk.Token"
      },
      "fqn": "@aws-cdk/aws-ec2.SubnetIpv6CidrBlocks",
      "initializer": {
        "docs": {
          "comment": "Creates a token that resolves to `value`. If value is a function,\nthe function is evaluated upon resolution and the value it returns will be\nuesd as the token's value."
        },
        "initializer": true,
        "parameters": [
          {
            "name": "valueOrFunction",
            "type": {
              "optional": true,
              "primitive": "any"
            }
          }
        ]
      },
      "kind": "class",
      "name": "SubnetIpv6CidrBlocks",
      "namespace": "@aws-cdk/aws-ec2"
    },
    "@aws-cdk/aws-ec2.SubnetNetworkAclAssociationAssociationId": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": {
        "fqn": "@aws-cdk/cdk.Token"
      },
      "fqn": "@aws-cdk/aws-ec2.SubnetNetworkAclAssociationAssociationId",
      "initializer": {
        "docs": {
          "comment": "Creates a token that resolves to `value`. If value is a function,\nthe function is evaluated upon resolution and the value it returns will be\nuesd as the token's value."
        },
        "initializer": true,
        "parameters": [
          {
            "name": "valueOrFunction",
            "type": {
              "optional": true,
              "primitive": "any"
            }
          }
        ]
      },
      "kind": "class",
      "name": "SubnetNetworkAclAssociationAssociationId",
      "namespace": "@aws-cdk/aws-ec2"
    },
    "@aws-cdk/aws-ec2.SubnetNetworkAclAssociationId": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": {
        "fqn": "@aws-cdk/cdk.Token"
      },
      "fqn": "@aws-cdk/aws-ec2.SubnetNetworkAclAssociationId",
      "initializer": {
        "docs": {
          "comment": "Creates a token that resolves to `value`. If value is a function,\nthe function is evaluated upon resolution and the value it returns will be\nuesd as the token's value."
        },
        "initializer": true,
        "parameters": [
          {
            "name": "valueOrFunction",
            "type": {
              "optional": true,
              "primitive": "any"
            }
          }
        ]
      },
      "kind": "class",
      "name": "SubnetNetworkAclAssociationId",
      "namespace": "@aws-cdk/aws-ec2"
    },
    "@aws-cdk/aws-ec2.SubnetType": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "comment": "The type of Subnet"
      },
      "fqn": "@aws-cdk/aws-ec2.SubnetType",
      "kind": "enum",
      "members": [
        {
          "name": "Isolated"
        },
        {
          "name": "Private"
        },
        {
          "name": "Public"
        }
      ],
      "name": "SubnetType",
      "namespace": "@aws-cdk/aws-ec2"
    },
    "@aws-cdk/aws-ec2.SubnetVpcId": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": {
        "fqn": "@aws-cdk/cdk.Token"
      },
      "fqn": "@aws-cdk/aws-ec2.SubnetVpcId",
      "initializer": {
        "docs": {
          "comment": "Creates a token that resolves to `value`. If value is a function,\nthe function is evaluated upon resolution and the value it returns will be\nuesd as the token's value."
        },
        "initializer": true,
        "parameters": [
          {
            "name": "valueOrFunction",
            "type": {
              "optional": true,
              "primitive": "any"
            }
          }
        ]
      },
      "kind": "class",
      "name": "SubnetVpcId",
      "namespace": "@aws-cdk/aws-ec2"
    },
    "@aws-cdk/aws-ec2.TcpAllPorts": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "comment": "All TCP Ports"
      },
      "fqn": "@aws-cdk/aws-ec2.TcpAllPorts",
      "initializer": {
        "initializer": true
      },
      "interfaces": [
        {
          "fqn": "@aws-cdk/aws-ec2.IPortRange"
        }
      ],
      "kind": "class",
      "methods": [
        {
          "docs": {
            "comment": "Produce the ingress/egress rule JSON for the given connection"
          },
          "name": "toRuleJSON",
          "returns": {
            "primitive": "any"
          }
        }
      ],
      "name": "TcpAllPorts",
      "namespace": "@aws-cdk/aws-ec2",
      "properties": [
        {
          "immutable": true,
          "name": "canInlineRule",
          "type": {
            "primitive": "boolean"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.TcpPort": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "comment": "A single TCP port"
      },
      "fqn": "@aws-cdk/aws-ec2.TcpPort",
      "initializer": {
        "initializer": true,
        "parameters": [
          {
            "name": "port",
            "type": {
              "primitive": "number"
            }
          }
        ]
      },
      "interfaces": [
        {
          "fqn": "@aws-cdk/aws-ec2.IPortRange"
        }
      ],
      "kind": "class",
      "methods": [
        {
          "docs": {
            "comment": "Produce the ingress/egress rule JSON for the given connection"
          },
          "name": "toRuleJSON",
          "returns": {
            "primitive": "any"
          }
        }
      ],
      "name": "TcpPort",
      "namespace": "@aws-cdk/aws-ec2",
      "properties": [
        {
          "immutable": true,
          "name": "canInlineRule",
          "type": {
            "primitive": "boolean"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.TcpPortFromAttribute": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "comment": "A single TCP port that is provided by a resource attribute"
      },
      "fqn": "@aws-cdk/aws-ec2.TcpPortFromAttribute",
      "initializer": {
        "initializer": true,
        "parameters": [
          {
            "name": "port",
            "type": {
              "fqn": "@aws-cdk/cdk.Token"
            }
          }
        ]
      },
      "interfaces": [
        {
          "fqn": "@aws-cdk/aws-ec2.IPortRange"
        }
      ],
      "kind": "class",
      "methods": [
        {
          "docs": {
            "comment": "Produce the ingress/egress rule JSON for the given connection"
          },
          "name": "toRuleJSON",
          "returns": {
            "primitive": "any"
          }
        }
      ],
      "name": "TcpPortFromAttribute",
      "namespace": "@aws-cdk/aws-ec2",
      "properties": [
        {
          "immutable": true,
          "name": "canInlineRule",
          "type": {
            "primitive": "boolean"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.TcpPortRange": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "comment": "A TCP port range"
      },
      "fqn": "@aws-cdk/aws-ec2.TcpPortRange",
      "initializer": {
        "initializer": true,
        "parameters": [
          {
            "name": "startPort",
            "type": {
              "primitive": "number"
            }
          },
          {
            "name": "endPort",
            "type": {
              "primitive": "number"
            }
          }
        ]
      },
      "interfaces": [
        {
          "fqn": "@aws-cdk/aws-ec2.IPortRange"
        }
      ],
      "kind": "class",
      "methods": [
        {
          "docs": {
            "comment": "Produce the ingress/egress rule JSON for the given connection"
          },
          "name": "toRuleJSON",
          "returns": {
            "primitive": "any"
          }
        }
      ],
      "name": "TcpPortRange",
      "namespace": "@aws-cdk/aws-ec2",
      "properties": [
        {
          "immutable": true,
          "name": "canInlineRule",
          "type": {
            "primitive": "boolean"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.VPCCidrBlock": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": {
        "fqn": "@aws-cdk/cdk.Token"
      },
      "fqn": "@aws-cdk/aws-ec2.VPCCidrBlock",
      "initializer": {
        "docs": {
          "comment": "Creates a token that resolves to `value`. If value is a function,\nthe function is evaluated upon resolution and the value it returns will be\nuesd as the token's value."
        },
        "initializer": true,
        "parameters": [
          {
            "name": "valueOrFunction",
            "type": {
              "optional": true,
              "primitive": "any"
            }
          }
        ]
      },
      "kind": "class",
      "name": "VPCCidrBlock",
      "namespace": "@aws-cdk/aws-ec2"
    },
    "@aws-cdk/aws-ec2.VPCCidrBlockAssociations": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": {
        "fqn": "@aws-cdk/cdk.Token"
      },
      "fqn": "@aws-cdk/aws-ec2.VPCCidrBlockAssociations",
      "initializer": {
        "docs": {
          "comment": "Creates a token that resolves to `value`. If value is a function,\nthe function is evaluated upon resolution and the value it returns will be\nuesd as the token's value."
        },
        "initializer": true,
        "parameters": [
          {
            "name": "valueOrFunction",
            "type": {
              "optional": true,
              "primitive": "any"
            }
          }
        ]
      },
      "kind": "class",
      "name": "VPCCidrBlockAssociations",
      "namespace": "@aws-cdk/aws-ec2"
    },
    "@aws-cdk/aws-ec2.VPCDefaultNetworkAcl": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": {
        "fqn": "@aws-cdk/cdk.Token"
      },
      "fqn": "@aws-cdk/aws-ec2.VPCDefaultNetworkAcl",
      "initializer": {
        "docs": {
          "comment": "Creates a token that resolves to `value`. If value is a function,\nthe function is evaluated upon resolution and the value it returns will be\nuesd as the token's value."
        },
        "initializer": true,
        "parameters": [
          {
            "name": "valueOrFunction",
            "type": {
              "optional": true,
              "primitive": "any"
            }
          }
        ]
      },
      "kind": "class",
      "name": "VPCDefaultNetworkAcl",
      "namespace": "@aws-cdk/aws-ec2"
    },
    "@aws-cdk/aws-ec2.VPCDefaultSecurityGroup": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": {
        "fqn": "@aws-cdk/cdk.Token"
      },
      "fqn": "@aws-cdk/aws-ec2.VPCDefaultSecurityGroup",
      "initializer": {
        "docs": {
          "comment": "Creates a token that resolves to `value`. If value is a function,\nthe function is evaluated upon resolution and the value it returns will be\nuesd as the token's value."
        },
        "initializer": true,
        "parameters": [
          {
            "name": "valueOrFunction",
            "type": {
              "optional": true,
              "primitive": "any"
            }
          }
        ]
      },
      "kind": "class",
      "name": "VPCDefaultSecurityGroup",
      "namespace": "@aws-cdk/aws-ec2"
    },
    "@aws-cdk/aws-ec2.VPCIpv6CidrBlocks": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": {
        "fqn": "@aws-cdk/cdk.Token"
      },
      "fqn": "@aws-cdk/aws-ec2.VPCIpv6CidrBlocks",
      "initializer": {
        "docs": {
          "comment": "Creates a token that resolves to `value`. If value is a function,\nthe function is evaluated upon resolution and the value it returns will be\nuesd as the token's value."
        },
        "initializer": true,
        "parameters": [
          {
            "name": "valueOrFunction",
            "type": {
              "optional": true,
              "primitive": "any"
            }
          }
        ]
      },
      "kind": "class",
      "name": "VPCIpv6CidrBlocks",
      "namespace": "@aws-cdk/aws-ec2"
    },
    "@aws-cdk/aws-ec2.VpcNetwork": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": {
        "fqn": "@aws-cdk/aws-ec2.VpcNetworkRef"
      },
      "docs": {
        "comment": "VpcNetwork deploys an AWS VPC, with public and private subnets per Availability Zone.\nFor example:\n\nimport { VpcNetwork } from '@aws-cdk/aws-ec2'\n\nconst vpc = new VpcNetwork(this, {\n     cidr: \"10.0.0.0/16\"\n})\n\n// Iterate the public subnets\nfor (let subnet of vpc.publicSubnets) {\n\n}\n\n// Iterate the private subnets\nfor (let subnet of vpc.privateSubnets) {\n\n}"
      },
      "fqn": "@aws-cdk/aws-ec2.VpcNetwork",
      "initializer": {
        "docs": {
          "comment": "VpcNetwork creates a VPC that spans a whole region.\nIt will automatically divide the provided VPC CIDR range, and create public and private subnets per Availability Zone.\nNetwork routing for the public subnets will be configured to allow outbound access directly via an Internet Gateway.\nNetwork routing for the private subnets will be configured to allow outbound access via a set of resilient NAT Gateways (one per AZ)."
        },
        "initializer": true,
        "parameters": [
          {
            "name": "parent",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "name": "name",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.VpcNetworkProps",
              "optional": true
            }
          }
        ]
      },
      "kind": "class",
      "name": "VpcNetwork",
      "namespace": "@aws-cdk/aws-ec2",
      "properties": [
        {
          "const": true,
          "docs": {
            "comment": "The default CIDR range used when creating VPCs.\nThis can be overridden using VpcNetworkProps when creating a VPCNetwork resource.\ne.g. new VpcResource(this, { cidr: '192.168.0.0./16' })"
          },
          "immutable": true,
          "name": "DEFAULT_CIDR_RANGE",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "const": true,
          "docs": {
            "comment": "The default subnet configuration\n\n1 Public and 1 Private subnet per AZ evenly split"
          },
          "immutable": true,
          "name": "DEFAULT_SUBNETS",
          "static": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-ec2.SubnetConfiguration"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "comment": "Identifier for this VPC"
          },
          "immutable": true,
          "name": "vpcId",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.VpcNetworkId"
          }
        },
        {
          "docs": {
            "comment": "List of public subnets in this VPC"
          },
          "immutable": true,
          "name": "publicSubnets",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-ec2.VpcSubnetRef"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "comment": "List of private subnets in this VPC"
          },
          "immutable": true,
          "name": "privateSubnets",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-ec2.VpcSubnetRef"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "comment": "List of isolated subnets in this VPC"
          },
          "immutable": true,
          "name": "isolatedSubnets",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-ec2.VpcSubnetRef"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "returns": "The IPv4 CidrBlock as returned by the VPC"
          },
          "immutable": true,
          "name": "cidr",
          "type": {
            "fqn": "@aws-cdk/cdk.Token"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.VpcNetworkId": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": {
        "fqn": "@aws-cdk/cdk.Token"
      },
      "docs": {
        "comment": "Identifier for a VPC"
      },
      "fqn": "@aws-cdk/aws-ec2.VpcNetworkId",
      "initializer": {
        "docs": {
          "comment": "Creates a token that resolves to `value`. If value is a function,\nthe function is evaluated upon resolution and the value it returns will be\nuesd as the token's value."
        },
        "initializer": true,
        "parameters": [
          {
            "name": "valueOrFunction",
            "type": {
              "optional": true,
              "primitive": "any"
            }
          }
        ]
      },
      "kind": "class",
      "name": "VpcNetworkId",
      "namespace": "@aws-cdk/aws-ec2"
    },
    "@aws-cdk/aws-ec2.VpcNetworkProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "comment": "VpcNetworkProps allows you to specify configuration options for a VPC"
      },
      "fqn": "@aws-cdk/aws-ec2.VpcNetworkProps",
      "kind": "interface",
      "name": "VpcNetworkProps",
      "namespace": "@aws-cdk/aws-ec2",
      "properties": [
        {
          "docs": {
            "comment": "The CIDR range to use for the VPC (e.g. '10.0.0.0/16'). Should be a minimum of /28 and maximum size of /16.\nThe range will be split evenly into two subnets per Availability Zone (one public, one private)."
          },
          "name": "cidr",
          "type": {
            "optional": true,
            "primitive": "string"
          }
        },
        {
          "docs": {
            "comment": "Indicates whether the instances launched in the VPC get public DNS hostnames.\nIf this attribute is true, instances in the VPC get public DNS hostnames,\nbut only if the enableDnsSupport attribute is also set to true."
          },
          "name": "enableDnsHostnames",
          "type": {
            "optional": true,
            "primitive": "boolean"
          }
        },
        {
          "docs": {
            "comment": "Indicates whether the DNS resolution is supported for the VPC. If this attribute\nis false, the Amazon-provided DNS server in the VPC that resolves public DNS hostnames\nto IP addresses is not enabled. If this attribute is true, queries to the Amazon\nprovided DNS server at the 169.254.169.253 IP address, or the reserved IP address\nat the base of the VPC IPv4 network range plus two will succeed."
          },
          "name": "enableDnsSupport",
          "type": {
            "optional": true,
            "primitive": "boolean"
          }
        },
        {
          "docs": {
            "comment": "The default tenancy of instances launched into the VPC.\nBy default, instances will be launched with default (shared) tenancy.\nBy setting this to dedicated tenancy, instances will be launched on hardware dedicated\nto a single AWS customer, unless specifically specified at instance launch time.\nPlease note, not all instance types are usable with Dedicated tenancy."
          },
          "name": "defaultInstanceTenancy",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.DefaultInstanceTenancy",
            "optional": true
          }
        },
        {
          "docs": {
            "comment": "The AWS resource tags to associate with the VPC."
          },
          "name": "tags",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/cdk.Tag"
              },
              "kind": "array"
            },
            "optional": true
          }
        },
        {
          "docs": {
            "comment": "Define the maximum number of AZs to use in this region\n\nIf the region has more AZs than you want to use (for example, because of EIP limits),\npick a lower number here. The AZs will be sorted and picked from the start of the list.",
            "default": "All AZs in the region"
          },
          "name": "maxAZs",
          "type": {
            "optional": true,
            "primitive": "number"
          }
        },
        {
          "docs": {
            "comment": "Define the maximum number of NAT Gateways for this VPC\n\nSetting this number enables a VPC to trade availability for the cost of\nrunning a NAT Gateway. For example, if set this to 1 and your subnet\nconfiguration is for 3 Public subnets with natGateway = `true` then only\none of the Public subnets will have a gateway and all Private subnets\nwill route to this NAT Gateway.",
            "default": "maxAZs"
          },
          "name": "natGateways",
          "type": {
            "optional": true,
            "primitive": "number"
          }
        },
        {
          "docs": {
            "comment": "Configure the subnets to build for each AZ\n\nThe subnets are constructed in the context of the VPC so you only need\nspecify the configuration. The VPC details (VPC ID, specific CIDR,\nspecific AZ will be calculated during creation)\n\nFor example if you want 1 public subnet, 1 private subnet, and 1 isolated\nsubnet in each AZ provide the following:\nsubnetConfiguration: [\n      {\n          cidrMask: 24,\n          name: 'ingress',\n          subnetType: SubnetType.Public,\n      },\n      {\n          cidrMask: 24,\n          name: 'application',\n          subnetType: SubnetType.Private,\n      },\n      {\n          cidrMask: 28,\n          name: 'rds',\n          subnetType: SubnetType.Isolated,\n      }\n]\n\n`cidrMask` is optional and if not provided the IP space in the VPC will be\nevenly divided between the requested subnets.",
            "default": "the VPC CIDR will be evenly divided between 1 public and 1\nprivate subnet per AZ"
          },
          "name": "subnetConfiguration",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-ec2.SubnetConfiguration"
              },
              "kind": "array"
            },
            "optional": true
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.VpcNetworkRef": {
      "abstract": true,
      "assembly": "@aws-cdk/aws-ec2",
      "base": {
        "fqn": "@aws-cdk/cdk.Construct"
      },
      "docs": {
        "comment": "A new or imported VPC"
      },
      "fqn": "@aws-cdk/aws-ec2.VpcNetworkRef",
      "initializer": {
        "docs": {
          "comment": "Creates a new construct node."
        },
        "initializer": true,
        "parameters": [
          {
            "docs": {
              "comment": "The parent construct"
            },
            "name": "parent",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "name": "name",
            "type": {
              "primitive": "string"
            }
          }
        ]
      },
      "interfaces": [
        {
          "fqn": "@aws-cdk/cdk.IDependable"
        }
      ],
      "kind": "class",
      "methods": [
        {
          "docs": {
            "comment": "Import an exported VPC"
          },
          "name": "import",
          "parameters": [
            {
              "name": "parent",
              "type": {
                "fqn": "@aws-cdk/cdk.Construct"
              }
            },
            {
              "name": "name",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "props",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.VpcNetworkRefProps"
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/aws-ec2.VpcNetworkRef"
          },
          "static": true
        },
        {
          "docs": {
            "comment": "Return the subnets appropriate for the placement strategy"
          },
          "name": "subnets",
          "parameters": [
            {
              "name": "placement",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.VpcPlacementStrategy",
                "optional": true
              }
            }
          ],
          "returns": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-ec2.VpcSubnetRef"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "comment": "Export this VPC from the stack"
          },
          "name": "export",
          "returns": {
            "fqn": "@aws-cdk/aws-ec2.VpcNetworkRefProps"
          }
        }
      ],
      "name": "VpcNetworkRef",
      "namespace": "@aws-cdk/aws-ec2",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "comment": "Identifier for this VPC"
          },
          "immutable": true,
          "name": "vpcId",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.VpcNetworkId"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "List of public subnets in this VPC"
          },
          "immutable": true,
          "name": "publicSubnets",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-ec2.VpcSubnetRef"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "List of private subnets in this VPC"
          },
          "immutable": true,
          "name": "privateSubnets",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-ec2.VpcSubnetRef"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "comment": "Parts of the VPC that constitute full construction"
          },
          "immutable": true,
          "name": "dependencyElements",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/cdk.IDependable"
              },
              "kind": "array"
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.VpcNetworkRefProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "comment": "Properties that reference an external VpcNetwork"
      },
      "fqn": "@aws-cdk/aws-ec2.VpcNetworkRefProps",
      "kind": "interface",
      "name": "VpcNetworkRefProps",
      "namespace": "@aws-cdk/aws-ec2",
      "properties": [
        {
          "docs": {
            "comment": "VPC's identifier"
          },
          "name": "vpcId",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.VpcNetworkId"
          }
        },
        {
          "docs": {
            "comment": "List of a availability zones, one for every subnet.\n\nThe first half are for the public subnets, the second half are for\nthe private subnets."
          },
          "name": "availabilityZones",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "comment": "List of public subnet IDs, one for every subnet\n\nMust match the availability zones and private subnet ids in length and order."
          },
          "name": "publicSubnetIds",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-ec2.VpcSubnetId"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "comment": "List of private subnet IDs, one for every subnet\n\nMust match the availability zones and public subnet ids in length and order."
          },
          "name": "privateSubnetIds",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-ec2.VpcSubnetId"
              },
              "kind": "array"
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.VpcPlacementStrategy": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "comment": "Customize how instances are placed inside a VPC\n\nConstructs that allow customization of VPC placement use parameters of this\ntype to provide placement settings."
      },
      "fqn": "@aws-cdk/aws-ec2.VpcPlacementStrategy",
      "kind": "interface",
      "name": "VpcPlacementStrategy",
      "namespace": "@aws-cdk/aws-ec2",
      "properties": [
        {
          "docs": {
            "comment": "Whether to use the VPC's public subnets to start instances\n\nIf false, the instances are started in the private subnets.",
            "default": "false"
          },
          "name": "usePublicSubnets",
          "type": {
            "optional": true,
            "primitive": "boolean"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.VpcPrivateSubnet": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": {
        "fqn": "@aws-cdk/aws-ec2.VpcSubnet"
      },
      "docs": {
        "comment": "Represents a private VPC subnet resource"
      },
      "fqn": "@aws-cdk/aws-ec2.VpcPrivateSubnet",
      "initializer": {
        "initializer": true,
        "parameters": [
          {
            "name": "parent",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "name": "name",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.VpcSubnetProps"
            }
          }
        ]
      },
      "kind": "class",
      "methods": [
        {
          "docs": {
            "comment": "Adds an entry to this subnets route table that points to the passed NATGatwayId"
          },
          "name": "addDefaultNatRouteEntry",
          "parameters": [
            {
              "name": "natGatewayId",
              "type": {
                "fqn": "@aws-cdk/cdk.Token"
              }
            }
          ]
        }
      ],
      "name": "VpcPrivateSubnet",
      "namespace": "@aws-cdk/aws-ec2"
    },
    "@aws-cdk/aws-ec2.VpcPublicSubnet": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": {
        "fqn": "@aws-cdk/aws-ec2.VpcSubnet"
      },
      "docs": {
        "comment": "Represents a public VPC subnet resource"
      },
      "fqn": "@aws-cdk/aws-ec2.VpcPublicSubnet",
      "initializer": {
        "initializer": true,
        "parameters": [
          {
            "name": "parent",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "name": "name",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.VpcSubnetProps"
            }
          }
        ]
      },
      "kind": "class",
      "methods": [
        {
          "docs": {
            "comment": "Create a default route that points to a passed IGW"
          },
          "name": "addDefaultIGWRouteEntry",
          "parameters": [
            {
              "name": "gatewayId",
              "type": {
                "fqn": "@aws-cdk/cdk.Token"
              }
            }
          ]
        },
        {
          "docs": {
            "comment": "Creates a new managed NAT gateway attached to this public subnet.\nAlso adds the EIP for the managed NAT.\nReturns the NAT Gateway ref"
          },
          "name": "addNatGateway",
          "returns": {
            "fqn": "@aws-cdk/cdk.Token"
          }
        }
      ],
      "name": "VpcPublicSubnet",
      "namespace": "@aws-cdk/aws-ec2"
    },
    "@aws-cdk/aws-ec2.VpcSubnet": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": {
        "fqn": "@aws-cdk/aws-ec2.VpcSubnetRef"
      },
      "docs": {
        "comment": "Represents a new VPC subnet resource"
      },
      "fqn": "@aws-cdk/aws-ec2.VpcSubnet",
      "initializer": {
        "initializer": true,
        "parameters": [
          {
            "name": "parent",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "name": "name",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.VpcSubnetProps"
            }
          }
        ]
      },
      "kind": "class",
      "methods": [
        {
          "name": "addDefaultRouteToNAT",
          "parameters": [
            {
              "name": "natGatewayId",
              "type": {
                "fqn": "@aws-cdk/cdk.Token"
              }
            }
          ],
          "protected": true
        },
        {
          "name": "addDefaultRouteToIGW",
          "parameters": [
            {
              "name": "gatewayId",
              "type": {
                "fqn": "@aws-cdk/cdk.Token"
              }
            }
          ],
          "protected": true
        }
      ],
      "name": "VpcSubnet",
      "namespace": "@aws-cdk/aws-ec2",
      "properties": [
        {
          "docs": {
            "comment": "The Availability Zone the subnet is located in"
          },
          "immutable": true,
          "name": "availabilityZone",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "comment": "The subnetId for this particular subnet"
          },
          "immutable": true,
          "name": "subnetId",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.VpcSubnetId"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.VpcSubnetId": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": {
        "fqn": "@aws-cdk/cdk.Token"
      },
      "docs": {
        "comment": "Id of a VPC Subnet"
      },
      "fqn": "@aws-cdk/aws-ec2.VpcSubnetId",
      "initializer": {
        "docs": {
          "comment": "Creates a token that resolves to `value`. If value is a function,\nthe function is evaluated upon resolution and the value it returns will be\nuesd as the token's value."
        },
        "initializer": true,
        "parameters": [
          {
            "name": "valueOrFunction",
            "type": {
              "optional": true,
              "primitive": "any"
            }
          }
        ]
      },
      "kind": "class",
      "name": "VpcSubnetId",
      "namespace": "@aws-cdk/aws-ec2"
    },
    "@aws-cdk/aws-ec2.VpcSubnetProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "comment": "Specify configuration parameters for a VPC subnet"
      },
      "fqn": "@aws-cdk/aws-ec2.VpcSubnetProps",
      "kind": "interface",
      "name": "VpcSubnetProps",
      "namespace": "@aws-cdk/aws-ec2",
      "properties": [
        {
          "docs": {
            "comment": "The availability zone for the subnet"
          },
          "name": "availabilityZone",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "comment": "The VPC which this subnet is part of"
          },
          "name": "vpcId",
          "type": {
            "fqn": "@aws-cdk/cdk.Token"
          }
        },
        {
          "docs": {
            "comment": "The CIDR notation for this subnet"
          },
          "name": "cidrBlock",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "comment": "Controls if a public IP is associated to an instance at launch\n\nDefaults to true in Subnet.Public, false in Subnet.Private or Subnet.Isolated."
          },
          "name": "mapPublicIpOnLaunch",
          "type": {
            "optional": true,
            "primitive": "boolean"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.VpcSubnetRef": {
      "abstract": true,
      "assembly": "@aws-cdk/aws-ec2",
      "base": {
        "fqn": "@aws-cdk/cdk.Construct"
      },
      "docs": {
        "comment": "A new or imported VPC Subnet"
      },
      "fqn": "@aws-cdk/aws-ec2.VpcSubnetRef",
      "initializer": {
        "docs": {
          "comment": "Creates a new construct node."
        },
        "initializer": true,
        "parameters": [
          {
            "docs": {
              "comment": "The parent construct"
            },
            "name": "parent",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "name": "name",
            "type": {
              "primitive": "string"
            }
          }
        ]
      },
      "interfaces": [
        {
          "fqn": "@aws-cdk/cdk.IDependable"
        }
      ],
      "kind": "class",
      "methods": [
        {
          "name": "import",
          "parameters": [
            {
              "name": "parent",
              "type": {
                "fqn": "@aws-cdk/cdk.Construct"
              }
            },
            {
              "name": "name",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "props",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.VpcSubnetRefProps"
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/aws-ec2.VpcSubnetRef"
          },
          "static": true
        }
      ],
      "name": "VpcSubnetRef",
      "namespace": "@aws-cdk/aws-ec2",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "comment": "The Availability Zone the subnet is located in"
          },
          "immutable": true,
          "name": "availabilityZone",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "The subnetId for this particular subnet"
          },
          "immutable": true,
          "name": "subnetId",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.VpcSubnetId"
          }
        },
        {
          "docs": {
            "comment": "Parts of this VPC subnet"
          },
          "immutable": true,
          "name": "dependencyElements",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/cdk.IDependable"
              },
              "kind": "array"
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.VpcSubnetRefProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "fqn": "@aws-cdk/aws-ec2.VpcSubnetRefProps",
      "kind": "interface",
      "name": "VpcSubnetRefProps",
      "namespace": "@aws-cdk/aws-ec2",
      "properties": [
        {
          "docs": {
            "comment": "The Availability Zone the subnet is located in"
          },
          "name": "availabilityZone",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "comment": "The subnetId for this particular subnet"
          },
          "name": "subnetId",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.VpcSubnetId"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.WindowsImage": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "comment": "Select the latest version of the indicated Windows version\n\nThe AMI ID is selected using the values published to the SSM parameter store.\n\nhttps://aws.amazon.com/blogs/mt/query-for-the-latest-windows-ami-using-systems-manager-parameter-store/"
      },
      "fqn": "@aws-cdk/aws-ec2.WindowsImage",
      "initializer": {
        "initializer": true,
        "parameters": [
          {
            "name": "version",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.WindowsVersion"
            }
          }
        ]
      },
      "interfaces": [
        {
          "fqn": "@aws-cdk/aws-ec2.IMachineImageSource"
        }
      ],
      "kind": "class",
      "methods": [
        {
          "docs": {
            "comment": "Return the image to use in the given context"
          },
          "name": "getImage",
          "parameters": [
            {
              "name": "parent",
              "type": {
                "fqn": "@aws-cdk/cdk.Construct"
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/aws-ec2.MachineImage"
          }
        }
      ],
      "name": "WindowsImage",
      "namespace": "@aws-cdk/aws-ec2"
    },
    "@aws-cdk/aws-ec2.WindowsOS": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": {
        "fqn": "@aws-cdk/aws-ec2.OperatingSystem"
      },
      "docs": {
        "comment": "OS features specialized for Windows"
      },
      "fqn": "@aws-cdk/aws-ec2.WindowsOS",
      "initializer": {
        "initializer": true
      },
      "kind": "class",
      "methods": [
        {
          "name": "createUserData",
          "parameters": [
            {
              "name": "scripts",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "string"
                  },
                  "kind": "array"
                }
              }
            }
          ],
          "returns": {
            "primitive": "string"
          }
        }
      ],
      "name": "WindowsOS",
      "namespace": "@aws-cdk/aws-ec2",
      "properties": [
        {
          "immutable": true,
          "name": "type",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.OperatingSystemType"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.WindowsVersion": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "comment": "The Windows version to use for the WindowsImage"
      },
      "fqn": "@aws-cdk/aws-ec2.WindowsVersion",
      "kind": "enum",
      "members": [
        {
          "name": "WindowsServer2016TurksihFullBase"
        },
        {
          "name": "WindowsServer2016SwedishFullBase"
        },
        {
          "name": "WindowsServer2016SpanishFullBase"
        },
        {
          "name": "WindowsServer2016RussianFullBase"
        },
        {
          "name": "WindowsServer2016PortuguesePortugalFullBase"
        },
        {
          "name": "WindowsServer2016PortugueseBrazilFullBase"
        },
        {
          "name": "WindowsServer2016PolishFullBase"
        },
        {
          "name": "WindowsServer2016KoreanFullSQL2016Base"
        },
        {
          "name": "WindowsServer2016KoreanFullBase"
        },
        {
          "name": "WindowsServer2016JapaneseFullSQL2016Web"
        },
        {
          "name": "WindowsServer2016JapaneseFullSQL2016Standard"
        },
        {
          "name": "WindowsServer2016JapaneseFullSQL2016Express"
        },
        {
          "name": "WindowsServer2016JapaneseFullSQL2016Enterprise"
        },
        {
          "name": "WindowsServer2016JapaneseFullBase"
        },
        {
          "name": "WindowsServer2016ItalianFullBase"
        },
        {
          "name": "WindowsServer2016HungarianFullBase"
        },
        {
          "name": "WindowsServer2016GermanFullBase"
        },
        {
          "name": "WindowsServer2016FrenchFullBase"
        },
        {
          "name": "WindowsServer2016EnglishNanoBase"
        },
        {
          "name": "WindowsServer2016EnglishFullSQL2017Web"
        },
        {
          "name": "WindowsServer2016EnglishFullSQL2017Standard"
        },
        {
          "name": "WindowsServer2016EnglishFullSQL2017Express"
        },
        {
          "name": "WindowsServer2016EnglishFullSQL2017Enterprise"
        }
      ],
      "name": "WindowsVersion",
      "namespace": "@aws-cdk/aws-ec2"
    },
    "@aws-cdk/aws-ec2.cloudformation.CustomerGatewayResource": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": {
        "fqn": "@aws-cdk/cdk.Resource"
      },
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-customer-gateway.html"
      },
      "fqn": "@aws-cdk/aws-ec2.cloudformation.CustomerGatewayResource",
      "initializer": {
        "docs": {
          "comment": "Creates a new ``AWS::EC2::CustomerGateway``."
        },
        "initializer": true,
        "parameters": [
          {
            "docs": {
              "comment": "the ``cdk.Construct`` this ``CustomerGatewayResource`` is a part of"
            },
            "name": "parent",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "docs": {
              "comment": "the name of the resource in the ``cdk.Construct`` tree"
            },
            "name": "name",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "comment": "the properties of this ``CustomerGatewayResource``"
            },
            "name": "properties",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.cloudformation.CustomerGatewayResourceProps"
            }
          }
        ]
      },
      "kind": "class",
      "methods": [
        {
          "name": "renderProperties",
          "protected": true,
          "returns": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        }
      ],
      "name": "CustomerGatewayResource",
      "namespace": "@aws-cdk/aws-ec2.cloudformation",
      "properties": [
        {
          "const": true,
          "docs": {
            "comment": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "name": "resourceTypeName",
          "static": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.cloudformation.CustomerGatewayResourceProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-customer-gateway.html"
      },
      "fqn": "@aws-cdk/aws-ec2.cloudformation.CustomerGatewayResourceProps",
      "kind": "interface",
      "name": "CustomerGatewayResourceProps",
      "namespace": "@aws-cdk/aws-ec2.cloudformation",
      "properties": [
        {
          "docs": {
            "comment": "``AWS::EC2::CustomerGateway.BgpAsn``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-customer-gateway.html#cfn-ec2-customergateway-bgpasn"
          },
          "name": "bgpAsn",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "number"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::EC2::CustomerGateway.IpAddress``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-customer-gateway.html#cfn-ec2-customergateway-ipaddress"
          },
          "name": "ipAddress",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::EC2::CustomerGateway.Type``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-customer-gateway.html#cfn-ec2-customergateway-type"
          },
          "name": "type",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::EC2::CustomerGateway.Tags``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-customer-gateway.html#cfn-ec2-customergateway-tags"
          },
          "name": "tags",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/cdk.Token"
                          },
                          {
                            "fqn": "@aws-cdk/cdk.Tag"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.cloudformation.DHCPOptionsResource": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": {
        "fqn": "@aws-cdk/cdk.Resource"
      },
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-dhcp-options.html"
      },
      "fqn": "@aws-cdk/aws-ec2.cloudformation.DHCPOptionsResource",
      "initializer": {
        "docs": {
          "comment": "Creates a new ``AWS::EC2::DHCPOptions``."
        },
        "initializer": true,
        "parameters": [
          {
            "docs": {
              "comment": "the ``cdk.Construct`` this ``DHCPOptionsResource`` is a part of"
            },
            "name": "parent",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "docs": {
              "comment": "the name of the resource in the ``cdk.Construct`` tree"
            },
            "name": "name",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "comment": "the properties of this ``DHCPOptionsResource``"
            },
            "name": "properties",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.cloudformation.DHCPOptionsResourceProps",
              "optional": true
            }
          }
        ]
      },
      "kind": "class",
      "methods": [
        {
          "name": "renderProperties",
          "protected": true,
          "returns": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        }
      ],
      "name": "DHCPOptionsResource",
      "namespace": "@aws-cdk/aws-ec2.cloudformation",
      "properties": [
        {
          "const": true,
          "docs": {
            "comment": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "name": "resourceTypeName",
          "static": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.cloudformation.DHCPOptionsResourceProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-dhcp-options.html"
      },
      "fqn": "@aws-cdk/aws-ec2.cloudformation.DHCPOptionsResourceProps",
      "kind": "interface",
      "name": "DHCPOptionsResourceProps",
      "namespace": "@aws-cdk/aws-ec2.cloudformation",
      "properties": [
        {
          "docs": {
            "comment": "``AWS::EC2::DHCPOptions.DomainName``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-dhcp-options.html#cfn-ec2-dhcpoptions-domainname"
          },
          "name": "domainName",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::EC2::DHCPOptions.DomainNameServers``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-dhcp-options.html#cfn-ec2-dhcpoptions-domainnameservers"
          },
          "name": "domainNameServers",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "primitive": "string"
                          },
                          {
                            "fqn": "@aws-cdk/cdk.Token"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::EC2::DHCPOptions.NetbiosNameServers``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-dhcp-options.html#cfn-ec2-dhcpoptions-netbiosnameservers"
          },
          "name": "netbiosNameServers",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "primitive": "string"
                          },
                          {
                            "fqn": "@aws-cdk/cdk.Token"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::EC2::DHCPOptions.NetbiosNodeType``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-dhcp-options.html#cfn-ec2-dhcpoptions-netbiosnodetype"
          },
          "name": "netbiosNodeType",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "number"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::EC2::DHCPOptions.NtpServers``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-dhcp-options.html#cfn-ec2-dhcpoptions-ntpservers"
          },
          "name": "ntpServers",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "primitive": "string"
                          },
                          {
                            "fqn": "@aws-cdk/cdk.Token"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::EC2::DHCPOptions.Tags``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-dhcp-options.html#cfn-ec2-dhcpoptions-tags"
          },
          "name": "tags",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/cdk.Token"
                          },
                          {
                            "fqn": "@aws-cdk/cdk.Tag"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.cloudformation.EIPAssociationResource": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": {
        "fqn": "@aws-cdk/cdk.Resource"
      },
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-eip-association.html"
      },
      "fqn": "@aws-cdk/aws-ec2.cloudformation.EIPAssociationResource",
      "initializer": {
        "docs": {
          "comment": "Creates a new ``AWS::EC2::EIPAssociation``."
        },
        "initializer": true,
        "parameters": [
          {
            "docs": {
              "comment": "the ``cdk.Construct`` this ``EIPAssociationResource`` is a part of"
            },
            "name": "parent",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "docs": {
              "comment": "the name of the resource in the ``cdk.Construct`` tree"
            },
            "name": "name",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "comment": "the properties of this ``EIPAssociationResource``"
            },
            "name": "properties",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.cloudformation.EIPAssociationResourceProps",
              "optional": true
            }
          }
        ]
      },
      "kind": "class",
      "methods": [
        {
          "name": "renderProperties",
          "protected": true,
          "returns": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        }
      ],
      "name": "EIPAssociationResource",
      "namespace": "@aws-cdk/aws-ec2.cloudformation",
      "properties": [
        {
          "const": true,
          "docs": {
            "comment": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "name": "resourceTypeName",
          "static": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.cloudformation.EIPAssociationResourceProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-eip-association.html"
      },
      "fqn": "@aws-cdk/aws-ec2.cloudformation.EIPAssociationResourceProps",
      "kind": "interface",
      "name": "EIPAssociationResourceProps",
      "namespace": "@aws-cdk/aws-ec2.cloudformation",
      "properties": [
        {
          "docs": {
            "comment": "``AWS::EC2::EIPAssociation.AllocationId``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-eip-association.html#cfn-ec2-eipassociation-allocationid"
          },
          "name": "allocationId",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::EC2::EIPAssociation.EIP``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-eip-association.html#cfn-ec2-eipassociation-eip"
          },
          "name": "eip",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::EC2::EIPAssociation.InstanceId``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-eip-association.html#cfn-ec2-eipassociation-instanceid"
          },
          "name": "instanceId",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::EC2::EIPAssociation.NetworkInterfaceId``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-eip-association.html#cfn-ec2-eipassociation-networkinterfaceid"
          },
          "name": "networkInterfaceId",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::EC2::EIPAssociation.PrivateIpAddress``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-eip-association.html#cfn-ec2-eipassociation-PrivateIpAddress"
          },
          "name": "privateIpAddress",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.cloudformation.EIPResource": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": {
        "fqn": "@aws-cdk/cdk.Resource"
      },
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-eip.html"
      },
      "fqn": "@aws-cdk/aws-ec2.cloudformation.EIPResource",
      "initializer": {
        "docs": {
          "comment": "Creates a new ``AWS::EC2::EIP``."
        },
        "initializer": true,
        "parameters": [
          {
            "docs": {
              "comment": "the ``cdk.Construct`` this ``EIPResource`` is a part of"
            },
            "name": "parent",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "docs": {
              "comment": "the name of the resource in the ``cdk.Construct`` tree"
            },
            "name": "name",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "comment": "the properties of this ``EIPResource``"
            },
            "name": "properties",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.cloudformation.EIPResourceProps",
              "optional": true
            }
          }
        ]
      },
      "kind": "class",
      "methods": [
        {
          "name": "renderProperties",
          "protected": true,
          "returns": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        }
      ],
      "name": "EIPResource",
      "namespace": "@aws-cdk/aws-ec2.cloudformation",
      "properties": [
        {
          "const": true,
          "docs": {
            "comment": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "name": "resourceTypeName",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "cloudformation_attribute": "AllocationId"
          },
          "immutable": true,
          "name": "eipAllocationId",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.EIPAllocationId"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.cloudformation.EIPResourceProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-eip.html"
      },
      "fqn": "@aws-cdk/aws-ec2.cloudformation.EIPResourceProps",
      "kind": "interface",
      "name": "EIPResourceProps",
      "namespace": "@aws-cdk/aws-ec2.cloudformation",
      "properties": [
        {
          "docs": {
            "comment": "``AWS::EC2::EIP.Domain``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-eip.html#cfn-ec2-eip-domain"
          },
          "name": "domain",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::EC2::EIP.InstanceId``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-eip.html#cfn-ec2-eip-instanceid"
          },
          "name": "instanceId",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.cloudformation.EgressOnlyInternetGatewayResource": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": {
        "fqn": "@aws-cdk/cdk.Resource"
      },
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-egressonlyinternetgateway.html"
      },
      "fqn": "@aws-cdk/aws-ec2.cloudformation.EgressOnlyInternetGatewayResource",
      "initializer": {
        "docs": {
          "comment": "Creates a new ``AWS::EC2::EgressOnlyInternetGateway``."
        },
        "initializer": true,
        "parameters": [
          {
            "docs": {
              "comment": "the ``cdk.Construct`` this ``EgressOnlyInternetGatewayResource`` is a part of"
            },
            "name": "parent",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "docs": {
              "comment": "the name of the resource in the ``cdk.Construct`` tree"
            },
            "name": "name",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "comment": "the properties of this ``EgressOnlyInternetGatewayResource``"
            },
            "name": "properties",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.cloudformation.EgressOnlyInternetGatewayResourceProps"
            }
          }
        ]
      },
      "kind": "class",
      "methods": [
        {
          "name": "renderProperties",
          "protected": true,
          "returns": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        }
      ],
      "name": "EgressOnlyInternetGatewayResource",
      "namespace": "@aws-cdk/aws-ec2.cloudformation",
      "properties": [
        {
          "const": true,
          "docs": {
            "comment": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "name": "resourceTypeName",
          "static": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.cloudformation.EgressOnlyInternetGatewayResourceProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-egressonlyinternetgateway.html"
      },
      "fqn": "@aws-cdk/aws-ec2.cloudformation.EgressOnlyInternetGatewayResourceProps",
      "kind": "interface",
      "name": "EgressOnlyInternetGatewayResourceProps",
      "namespace": "@aws-cdk/aws-ec2.cloudformation",
      "properties": [
        {
          "docs": {
            "comment": "``AWS::EC2::EgressOnlyInternetGateway.VpcId``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-egressonlyinternetgateway.html#cfn-ec2-egressonlyinternetgateway-vpcid"
          },
          "name": "vpcId",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.cloudformation.FlowLogResource": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": {
        "fqn": "@aws-cdk/cdk.Resource"
      },
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-flowlog.html"
      },
      "fqn": "@aws-cdk/aws-ec2.cloudformation.FlowLogResource",
      "initializer": {
        "docs": {
          "comment": "Creates a new ``AWS::EC2::FlowLog``."
        },
        "initializer": true,
        "parameters": [
          {
            "docs": {
              "comment": "the ``cdk.Construct`` this ``FlowLogResource`` is a part of"
            },
            "name": "parent",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "docs": {
              "comment": "the name of the resource in the ``cdk.Construct`` tree"
            },
            "name": "name",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "comment": "the properties of this ``FlowLogResource``"
            },
            "name": "properties",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.cloudformation.FlowLogResourceProps"
            }
          }
        ]
      },
      "kind": "class",
      "methods": [
        {
          "name": "renderProperties",
          "protected": true,
          "returns": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        }
      ],
      "name": "FlowLogResource",
      "namespace": "@aws-cdk/aws-ec2.cloudformation",
      "properties": [
        {
          "const": true,
          "docs": {
            "comment": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "name": "resourceTypeName",
          "static": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.cloudformation.FlowLogResourceProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-flowlog.html"
      },
      "fqn": "@aws-cdk/aws-ec2.cloudformation.FlowLogResourceProps",
      "kind": "interface",
      "name": "FlowLogResourceProps",
      "namespace": "@aws-cdk/aws-ec2.cloudformation",
      "properties": [
        {
          "docs": {
            "comment": "``AWS::EC2::FlowLog.DeliverLogsPermissionArn``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-flowlog.html#cfn-ec2-flowlog-deliverlogspermissionarn"
          },
          "name": "deliverLogsPermissionArn",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::EC2::FlowLog.LogGroupName``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-flowlog.html#cfn-ec2-flowlog-loggroupname"
          },
          "name": "logGroupName",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::EC2::FlowLog.ResourceId``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-flowlog.html#cfn-ec2-flowlog-resourceid"
          },
          "name": "resourceId",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::EC2::FlowLog.ResourceType``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-flowlog.html#cfn-ec2-flowlog-resourcetype"
          },
          "name": "resourceType",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::EC2::FlowLog.TrafficType``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-flowlog.html#cfn-ec2-flowlog-traffictype"
          },
          "name": "trafficType",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.cloudformation.HostResource": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": {
        "fqn": "@aws-cdk/cdk.Resource"
      },
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-host.html"
      },
      "fqn": "@aws-cdk/aws-ec2.cloudformation.HostResource",
      "initializer": {
        "docs": {
          "comment": "Creates a new ``AWS::EC2::Host``."
        },
        "initializer": true,
        "parameters": [
          {
            "docs": {
              "comment": "the ``cdk.Construct`` this ``HostResource`` is a part of"
            },
            "name": "parent",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "docs": {
              "comment": "the name of the resource in the ``cdk.Construct`` tree"
            },
            "name": "name",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "comment": "the properties of this ``HostResource``"
            },
            "name": "properties",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.cloudformation.HostResourceProps"
            }
          }
        ]
      },
      "kind": "class",
      "methods": [
        {
          "name": "renderProperties",
          "protected": true,
          "returns": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        }
      ],
      "name": "HostResource",
      "namespace": "@aws-cdk/aws-ec2.cloudformation",
      "properties": [
        {
          "const": true,
          "docs": {
            "comment": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "name": "resourceTypeName",
          "static": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.cloudformation.HostResourceProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-host.html"
      },
      "fqn": "@aws-cdk/aws-ec2.cloudformation.HostResourceProps",
      "kind": "interface",
      "name": "HostResourceProps",
      "namespace": "@aws-cdk/aws-ec2.cloudformation",
      "properties": [
        {
          "docs": {
            "comment": "``AWS::EC2::Host.AvailabilityZone``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-host.html#cfn-ec2-host-availabilityzone"
          },
          "name": "availabilityZone",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::EC2::Host.InstanceType``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-host.html#cfn-ec2-host-instancetype"
          },
          "name": "instanceType",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::EC2::Host.AutoPlacement``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-host.html#cfn-ec2-host-autoplacement"
          },
          "name": "autoPlacement",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.cloudformation.InstanceResource": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": {
        "fqn": "@aws-cdk/cdk.Resource"
      },
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html"
      },
      "fqn": "@aws-cdk/aws-ec2.cloudformation.InstanceResource",
      "initializer": {
        "docs": {
          "comment": "Creates a new ``AWS::EC2::Instance``."
        },
        "initializer": true,
        "parameters": [
          {
            "docs": {
              "comment": "the ``cdk.Construct`` this ``InstanceResource`` is a part of"
            },
            "name": "parent",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "docs": {
              "comment": "the name of the resource in the ``cdk.Construct`` tree"
            },
            "name": "name",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "comment": "the properties of this ``InstanceResource``"
            },
            "name": "properties",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.cloudformation.InstanceResourceProps",
              "optional": true
            }
          }
        ]
      },
      "kind": "class",
      "methods": [
        {
          "name": "renderProperties",
          "protected": true,
          "returns": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        }
      ],
      "name": "InstanceResource",
      "namespace": "@aws-cdk/aws-ec2.cloudformation",
      "properties": [
        {
          "const": true,
          "docs": {
            "comment": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "name": "resourceTypeName",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "cloudformation_attribute": "AvailabilityZone"
          },
          "immutable": true,
          "name": "instanceAvailabilityZone",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.InstanceAvailabilityZone"
          }
        },
        {
          "docs": {
            "cloudformation_attribute": "PrivateDnsName"
          },
          "immutable": true,
          "name": "instancePrivateDnsName",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.InstancePrivateDnsName"
          }
        },
        {
          "docs": {
            "cloudformation_attribute": "PrivateIp"
          },
          "immutable": true,
          "name": "instancePrivateIp",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.InstancePrivateIp"
          }
        },
        {
          "docs": {
            "cloudformation_attribute": "PublicDnsName"
          },
          "immutable": true,
          "name": "instancePublicDnsName",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.InstancePublicDnsName"
          }
        },
        {
          "docs": {
            "cloudformation_attribute": "PublicIp"
          },
          "immutable": true,
          "name": "instancePublicIp",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.InstancePublicIp"
          }
        }
      ],
      "subtypes": [
        "@aws-cdk/aws-ec2.cloudformation.InstanceResource.AssociationParameterProperty",
        "@aws-cdk/aws-ec2.cloudformation.InstanceResource.BlockDeviceMappingProperty",
        "@aws-cdk/aws-ec2.cloudformation.InstanceResource.CreditSpecificationProperty",
        "@aws-cdk/aws-ec2.cloudformation.InstanceResource.EbsProperty",
        "@aws-cdk/aws-ec2.cloudformation.InstanceResource.ElasticGpuSpecificationProperty",
        "@aws-cdk/aws-ec2.cloudformation.InstanceResource.InstanceIpv6AddressProperty",
        "@aws-cdk/aws-ec2.cloudformation.InstanceResource.LaunchTemplateSpecificationProperty",
        "@aws-cdk/aws-ec2.cloudformation.InstanceResource.NetworkInterfaceProperty",
        "@aws-cdk/aws-ec2.cloudformation.InstanceResource.NoDeviceProperty",
        "@aws-cdk/aws-ec2.cloudformation.InstanceResource.PrivateIpAddressSpecificationProperty",
        "@aws-cdk/aws-ec2.cloudformation.InstanceResource.SsmAssociationProperty",
        "@aws-cdk/aws-ec2.cloudformation.InstanceResource.VolumeProperty"
      ]
    },
    "@aws-cdk/aws-ec2.cloudformation.InstanceResource.AssociationParameterProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance-ssmassociations-associationparameters.html"
      },
      "fqn": "@aws-cdk/aws-ec2.cloudformation.InstanceResource.AssociationParameterProperty",
      "kind": "interface",
      "name": "AssociationParameterProperty",
      "namespace": "@aws-cdk/aws-ec2.cloudformation.InstanceResource",
      "parenttype": "@aws-cdk/aws-ec2.cloudformation.InstanceResource",
      "properties": [
        {
          "docs": {
            "comment": "``InstanceResource.AssociationParameterProperty.Key``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance-ssmassociations-associationparameters.html#cfn-ec2-instance-ssmassociations-associationparameters-key"
          },
          "name": "key",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``InstanceResource.AssociationParameterProperty.Value``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance-ssmassociations-associationparameters.html#cfn-ec2-instance-ssmassociations-associationparameters-value"
          },
          "name": "value",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "primitive": "string"
                          },
                          {
                            "fqn": "@aws-cdk/cdk.Token"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.cloudformation.InstanceResource.BlockDeviceMappingProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-blockdev-mapping.html"
      },
      "fqn": "@aws-cdk/aws-ec2.cloudformation.InstanceResource.BlockDeviceMappingProperty",
      "kind": "interface",
      "name": "BlockDeviceMappingProperty",
      "namespace": "@aws-cdk/aws-ec2.cloudformation.InstanceResource",
      "parenttype": "@aws-cdk/aws-ec2.cloudformation.InstanceResource",
      "properties": [
        {
          "docs": {
            "comment": "``InstanceResource.BlockDeviceMappingProperty.DeviceName``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-blockdev-mapping.html#cfn-ec2-blockdev-mapping-devicename"
          },
          "name": "deviceName",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``InstanceResource.BlockDeviceMappingProperty.Ebs``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-blockdev-mapping.html#cfn-ec2-blockdev-mapping-ebs"
          },
          "name": "ebs",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.cloudformation.InstanceResource.EbsProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``InstanceResource.BlockDeviceMappingProperty.NoDevice``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-blockdev-mapping.html#cfn-ec2-blockdev-mapping-nodevice"
          },
          "name": "noDevice",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.cloudformation.InstanceResource.NoDeviceProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``InstanceResource.BlockDeviceMappingProperty.VirtualName``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-blockdev-mapping.html#cfn-ec2-blockdev-mapping-virtualname"
          },
          "name": "virtualName",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.cloudformation.InstanceResource.CreditSpecificationProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance-creditspecification.html"
      },
      "fqn": "@aws-cdk/aws-ec2.cloudformation.InstanceResource.CreditSpecificationProperty",
      "kind": "interface",
      "name": "CreditSpecificationProperty",
      "namespace": "@aws-cdk/aws-ec2.cloudformation.InstanceResource",
      "parenttype": "@aws-cdk/aws-ec2.cloudformation.InstanceResource",
      "properties": [
        {
          "docs": {
            "comment": "``InstanceResource.CreditSpecificationProperty.CPUCredits``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance-creditspecification.html#cfn-ec2-instance-creditspecification-cpucredits"
          },
          "name": "cpuCredits",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.cloudformation.InstanceResource.EbsProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-blockdev-template.html"
      },
      "fqn": "@aws-cdk/aws-ec2.cloudformation.InstanceResource.EbsProperty",
      "kind": "interface",
      "name": "EbsProperty",
      "namespace": "@aws-cdk/aws-ec2.cloudformation.InstanceResource",
      "parenttype": "@aws-cdk/aws-ec2.cloudformation.InstanceResource",
      "properties": [
        {
          "docs": {
            "comment": "``InstanceResource.EbsProperty.DeleteOnTermination``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-blockdev-template.html#cfn-ec2-blockdev-template-deleteontermination"
          },
          "name": "deleteOnTermination",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``InstanceResource.EbsProperty.Encrypted``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-blockdev-template.html#cfn-ec2-blockdev-template-encrypted"
          },
          "name": "encrypted",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``InstanceResource.EbsProperty.Iops``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-blockdev-template.html#cfn-ec2-blockdev-template-iops"
          },
          "name": "iops",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "number"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``InstanceResource.EbsProperty.SnapshotId``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-blockdev-template.html#cfn-ec2-blockdev-template-snapshotid"
          },
          "name": "snapshotId",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``InstanceResource.EbsProperty.VolumeSize``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-blockdev-template.html#cfn-ec2-blockdev-template-volumesize"
          },
          "name": "volumeSize",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "number"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``InstanceResource.EbsProperty.VolumeType``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-blockdev-template.html#cfn-ec2-blockdev-template-volumetype"
          },
          "name": "volumeType",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.cloudformation.InstanceResource.ElasticGpuSpecificationProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance-elasticgpuspecification.html"
      },
      "fqn": "@aws-cdk/aws-ec2.cloudformation.InstanceResource.ElasticGpuSpecificationProperty",
      "kind": "interface",
      "name": "ElasticGpuSpecificationProperty",
      "namespace": "@aws-cdk/aws-ec2.cloudformation.InstanceResource",
      "parenttype": "@aws-cdk/aws-ec2.cloudformation.InstanceResource",
      "properties": [
        {
          "docs": {
            "comment": "``InstanceResource.ElasticGpuSpecificationProperty.Type``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance-elasticgpuspecification.html#cfn-ec2-instance-elasticgpuspecification-type"
          },
          "name": "type",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.cloudformation.InstanceResource.InstanceIpv6AddressProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance-instanceipv6address.html"
      },
      "fqn": "@aws-cdk/aws-ec2.cloudformation.InstanceResource.InstanceIpv6AddressProperty",
      "kind": "interface",
      "name": "InstanceIpv6AddressProperty",
      "namespace": "@aws-cdk/aws-ec2.cloudformation.InstanceResource",
      "parenttype": "@aws-cdk/aws-ec2.cloudformation.InstanceResource",
      "properties": [
        {
          "docs": {
            "comment": "``InstanceResource.InstanceIpv6AddressProperty.Ipv6Address``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance-instanceipv6address.html#cfn-ec2-instance-instanceipv6address-ipv6address"
          },
          "name": "ipv6Address",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.cloudformation.InstanceResource.LaunchTemplateSpecificationProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance-launchtemplatespecification.html"
      },
      "fqn": "@aws-cdk/aws-ec2.cloudformation.InstanceResource.LaunchTemplateSpecificationProperty",
      "kind": "interface",
      "name": "LaunchTemplateSpecificationProperty",
      "namespace": "@aws-cdk/aws-ec2.cloudformation.InstanceResource",
      "parenttype": "@aws-cdk/aws-ec2.cloudformation.InstanceResource",
      "properties": [
        {
          "docs": {
            "comment": "``InstanceResource.LaunchTemplateSpecificationProperty.LaunchTemplateId``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance-launchtemplatespecification.html#cfn-ec2-instance-launchtemplatespecification-launchtemplateid"
          },
          "name": "launchTemplateId",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``InstanceResource.LaunchTemplateSpecificationProperty.LaunchTemplateName``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance-launchtemplatespecification.html#cfn-ec2-instance-launchtemplatespecification-launchtemplatename"
          },
          "name": "launchTemplateName",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``InstanceResource.LaunchTemplateSpecificationProperty.Version``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance-launchtemplatespecification.html#cfn-ec2-instance-launchtemplatespecification-version"
          },
          "name": "version",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.cloudformation.InstanceResource.NetworkInterfaceProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-network-iface-embedded.html"
      },
      "fqn": "@aws-cdk/aws-ec2.cloudformation.InstanceResource.NetworkInterfaceProperty",
      "kind": "interface",
      "name": "NetworkInterfaceProperty",
      "namespace": "@aws-cdk/aws-ec2.cloudformation.InstanceResource",
      "parenttype": "@aws-cdk/aws-ec2.cloudformation.InstanceResource",
      "properties": [
        {
          "docs": {
            "comment": "``InstanceResource.NetworkInterfaceProperty.AssociatePublicIpAddress``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-network-iface-embedded.html#aws-properties-ec2-network-iface-embedded-associatepubip"
          },
          "name": "associatePublicIpAddress",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``InstanceResource.NetworkInterfaceProperty.DeleteOnTermination``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-network-iface-embedded.html#aws-properties-ec2-network-iface-embedded-delete"
          },
          "name": "deleteOnTermination",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``InstanceResource.NetworkInterfaceProperty.Description``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-network-iface-embedded.html#aws-properties-ec2-network-iface-embedded-description"
          },
          "name": "description",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``InstanceResource.NetworkInterfaceProperty.DeviceIndex``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-network-iface-embedded.html#aws-properties-ec2-network-iface-embedded-deviceindex"
          },
          "name": "deviceIndex",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``InstanceResource.NetworkInterfaceProperty.GroupSet``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-network-iface-embedded.html#aws-properties-ec2-network-iface-embedded-groupset"
          },
          "name": "groupSet",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "primitive": "string"
                          },
                          {
                            "fqn": "@aws-cdk/cdk.Token"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``InstanceResource.NetworkInterfaceProperty.Ipv6AddressCount``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-network-iface-embedded.html#cfn-ec2-instance-networkinterface-ipv6addresscount"
          },
          "name": "ipv6AddressCount",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "number"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``InstanceResource.NetworkInterfaceProperty.Ipv6Addresses``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-network-iface-embedded.html#cfn-ec2-instance-networkinterface-ipv6addresses"
          },
          "name": "ipv6Addresses",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/cdk.Token"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.cloudformation.InstanceResource.InstanceIpv6AddressProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``InstanceResource.NetworkInterfaceProperty.NetworkInterfaceId``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-network-iface-embedded.html#aws-properties-ec2-network-iface-embedded-network-iface"
          },
          "name": "networkInterfaceId",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``InstanceResource.NetworkInterfaceProperty.PrivateIpAddress``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-network-iface-embedded.html#aws-properties-ec2-network-iface-embedded-privateipaddress"
          },
          "name": "privateIpAddress",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``InstanceResource.NetworkInterfaceProperty.PrivateIpAddresses``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-network-iface-embedded.html#aws-properties-ec2-network-iface-embedded-privateipaddresses"
          },
          "name": "privateIpAddresses",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/cdk.Token"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.cloudformation.InstanceResource.PrivateIpAddressSpecificationProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``InstanceResource.NetworkInterfaceProperty.SecondaryPrivateIpAddressCount``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-network-iface-embedded.html#aws-properties-ec2-network-iface-embedded-secondprivateip"
          },
          "name": "secondaryPrivateIpAddressCount",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "number"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``InstanceResource.NetworkInterfaceProperty.SubnetId``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-network-iface-embedded.html#aws-properties-ec2-network-iface-embedded-subnetid"
          },
          "name": "subnetId",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.cloudformation.InstanceResource.NoDeviceProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance-nodevice.html"
      },
      "fqn": "@aws-cdk/aws-ec2.cloudformation.InstanceResource.NoDeviceProperty",
      "kind": "interface",
      "name": "NoDeviceProperty",
      "namespace": "@aws-cdk/aws-ec2.cloudformation.InstanceResource",
      "parenttype": "@aws-cdk/aws-ec2.cloudformation.InstanceResource"
    },
    "@aws-cdk/aws-ec2.cloudformation.InstanceResource.PrivateIpAddressSpecificationProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-network-interface-privateipspec.html"
      },
      "fqn": "@aws-cdk/aws-ec2.cloudformation.InstanceResource.PrivateIpAddressSpecificationProperty",
      "kind": "interface",
      "name": "PrivateIpAddressSpecificationProperty",
      "namespace": "@aws-cdk/aws-ec2.cloudformation.InstanceResource",
      "parenttype": "@aws-cdk/aws-ec2.cloudformation.InstanceResource",
      "properties": [
        {
          "docs": {
            "comment": "``InstanceResource.PrivateIpAddressSpecificationProperty.Primary``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-network-interface-privateipspec.html#cfn-ec2-networkinterface-privateipspecification-primary"
          },
          "name": "primary",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``InstanceResource.PrivateIpAddressSpecificationProperty.PrivateIpAddress``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-network-interface-privateipspec.html#cfn-ec2-networkinterface-privateipspecification-privateipaddress"
          },
          "name": "privateIpAddress",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.cloudformation.InstanceResource.SsmAssociationProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance-ssmassociations.html"
      },
      "fqn": "@aws-cdk/aws-ec2.cloudformation.InstanceResource.SsmAssociationProperty",
      "kind": "interface",
      "name": "SsmAssociationProperty",
      "namespace": "@aws-cdk/aws-ec2.cloudformation.InstanceResource",
      "parenttype": "@aws-cdk/aws-ec2.cloudformation.InstanceResource",
      "properties": [
        {
          "docs": {
            "comment": "``InstanceResource.SsmAssociationProperty.AssociationParameters``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance-ssmassociations.html#cfn-ec2-instance-ssmassociations-associationparameters"
          },
          "name": "associationParameters",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/cdk.Token"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.cloudformation.InstanceResource.AssociationParameterProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``InstanceResource.SsmAssociationProperty.DocumentName``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance-ssmassociations.html#cfn-ec2-instance-ssmassociations-documentname"
          },
          "name": "documentName",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.cloudformation.InstanceResource.VolumeProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-mount-point.html"
      },
      "fqn": "@aws-cdk/aws-ec2.cloudformation.InstanceResource.VolumeProperty",
      "kind": "interface",
      "name": "VolumeProperty",
      "namespace": "@aws-cdk/aws-ec2.cloudformation.InstanceResource",
      "parenttype": "@aws-cdk/aws-ec2.cloudformation.InstanceResource",
      "properties": [
        {
          "docs": {
            "comment": "``InstanceResource.VolumeProperty.Device``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-mount-point.html#cfn-ec2-mountpoint-device"
          },
          "name": "device",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``InstanceResource.VolumeProperty.VolumeId``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-mount-point.html#cfn-ec2-mountpoint-volumeid"
          },
          "name": "volumeId",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.cloudformation.InstanceResourceProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html"
      },
      "fqn": "@aws-cdk/aws-ec2.cloudformation.InstanceResourceProps",
      "kind": "interface",
      "name": "InstanceResourceProps",
      "namespace": "@aws-cdk/aws-ec2.cloudformation",
      "properties": [
        {
          "docs": {
            "comment": "``AWS::EC2::Instance.AdditionalInfo``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-additionalinfo"
          },
          "name": "additionalInfo",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::EC2::Instance.Affinity``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-affinity"
          },
          "name": "affinity",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::EC2::Instance.AvailabilityZone``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-availabilityzone"
          },
          "name": "availabilityZone",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::EC2::Instance.BlockDeviceMappings``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-blockdevicemappings"
          },
          "name": "blockDeviceMappings",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/cdk.Token"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.cloudformation.InstanceResource.BlockDeviceMappingProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::EC2::Instance.CreditSpecification``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-creditspecification"
          },
          "name": "creditSpecification",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.cloudformation.InstanceResource.CreditSpecificationProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::EC2::Instance.DisableApiTermination``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-disableapitermination"
          },
          "name": "disableApiTermination",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::EC2::Instance.EbsOptimized``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-ebsoptimized"
          },
          "name": "ebsOptimized",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::EC2::Instance.ElasticGpuSpecifications``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-elasticgpuspecifications"
          },
          "name": "elasticGpuSpecifications",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/cdk.Token"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.cloudformation.InstanceResource.ElasticGpuSpecificationProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::EC2::Instance.HostId``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-hostid"
          },
          "name": "hostId",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::EC2::Instance.IamInstanceProfile``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-iaminstanceprofile"
          },
          "name": "iamInstanceProfile",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::EC2::Instance.ImageId``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-imageid"
          },
          "name": "imageId",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::EC2::Instance.InstanceInitiatedShutdownBehavior``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-instanceinitiatedshutdownbehavior"
          },
          "name": "instanceInitiatedShutdownBehavior",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::EC2::Instance.InstanceType``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-instancetype"
          },
          "name": "instanceType",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::EC2::Instance.Ipv6AddressCount``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-ipv6addresscount"
          },
          "name": "ipv6AddressCount",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "number"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::EC2::Instance.Ipv6Addresses``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-ipv6addresses"
          },
          "name": "ipv6Addresses",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/cdk.Token"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.cloudformation.InstanceResource.InstanceIpv6AddressProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::EC2::Instance.KernelId``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-kernelid"
          },
          "name": "kernelId",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::EC2::Instance.KeyName``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-keyname"
          },
          "name": "keyName",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::EC2::Instance.LaunchTemplate``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-launchtemplate"
          },
          "name": "launchTemplate",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.cloudformation.InstanceResource.LaunchTemplateSpecificationProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::EC2::Instance.Monitoring``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-monitoring"
          },
          "name": "monitoring",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::EC2::Instance.NetworkInterfaces``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-networkinterfaces"
          },
          "name": "networkInterfaces",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/cdk.Token"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.cloudformation.InstanceResource.NetworkInterfaceProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::EC2::Instance.PlacementGroupName``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-placementgroupname"
          },
          "name": "placementGroupName",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::EC2::Instance.PrivateIpAddress``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-privateipaddress"
          },
          "name": "privateIpAddress",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::EC2::Instance.RamdiskId``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-ramdiskid"
          },
          "name": "ramdiskId",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::EC2::Instance.SecurityGroupIds``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-securitygroupids"
          },
          "name": "securityGroupIds",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "primitive": "string"
                          },
                          {
                            "fqn": "@aws-cdk/cdk.Token"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::EC2::Instance.SecurityGroups``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-securitygroups"
          },
          "name": "securityGroups",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "primitive": "string"
                          },
                          {
                            "fqn": "@aws-cdk/cdk.Token"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::EC2::Instance.SourceDestCheck``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-sourcedestcheck"
          },
          "name": "sourceDestCheck",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::EC2::Instance.SsmAssociations``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-ssmassociations"
          },
          "name": "ssmAssociations",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/cdk.Token"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.cloudformation.InstanceResource.SsmAssociationProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::EC2::Instance.SubnetId``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-subnetid"
          },
          "name": "subnetId",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::EC2::Instance.Tags``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-tags"
          },
          "name": "tags",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/cdk.Token"
                          },
                          {
                            "fqn": "@aws-cdk/cdk.Tag"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::EC2::Instance.Tenancy``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-tenancy"
          },
          "name": "tenancy",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::EC2::Instance.UserData``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-userdata"
          },
          "name": "userData",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::EC2::Instance.Volumes``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html#cfn-ec2-instance-volumes"
          },
          "name": "volumes",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/cdk.Token"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.cloudformation.InstanceResource.VolumeProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.cloudformation.InternetGatewayResource": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": {
        "fqn": "@aws-cdk/cdk.Resource"
      },
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-internetgateway.html"
      },
      "fqn": "@aws-cdk/aws-ec2.cloudformation.InternetGatewayResource",
      "initializer": {
        "docs": {
          "comment": "Creates a new ``AWS::EC2::InternetGateway``."
        },
        "initializer": true,
        "parameters": [
          {
            "docs": {
              "comment": "the ``cdk.Construct`` this ``InternetGatewayResource`` is a part of"
            },
            "name": "parent",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "docs": {
              "comment": "the name of the resource in the ``cdk.Construct`` tree"
            },
            "name": "name",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "comment": "the properties of this ``InternetGatewayResource``"
            },
            "name": "properties",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.cloudformation.InternetGatewayResourceProps",
              "optional": true
            }
          }
        ]
      },
      "kind": "class",
      "methods": [
        {
          "name": "renderProperties",
          "protected": true,
          "returns": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        }
      ],
      "name": "InternetGatewayResource",
      "namespace": "@aws-cdk/aws-ec2.cloudformation",
      "properties": [
        {
          "const": true,
          "docs": {
            "comment": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "name": "resourceTypeName",
          "static": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.cloudformation.InternetGatewayResourceProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-internetgateway.html"
      },
      "fqn": "@aws-cdk/aws-ec2.cloudformation.InternetGatewayResourceProps",
      "kind": "interface",
      "name": "InternetGatewayResourceProps",
      "namespace": "@aws-cdk/aws-ec2.cloudformation",
      "properties": [
        {
          "docs": {
            "comment": "``AWS::EC2::InternetGateway.Tags``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-internetgateway.html#cfn-ec2-internetgateway-tags"
          },
          "name": "tags",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/cdk.Token"
                          },
                          {
                            "fqn": "@aws-cdk/cdk.Tag"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.cloudformation.LaunchTemplateResource": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": {
        "fqn": "@aws-cdk/cdk.Resource"
      },
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-launchtemplate.html"
      },
      "fqn": "@aws-cdk/aws-ec2.cloudformation.LaunchTemplateResource",
      "initializer": {
        "docs": {
          "comment": "Creates a new ``AWS::EC2::LaunchTemplate``."
        },
        "initializer": true,
        "parameters": [
          {
            "docs": {
              "comment": "the ``cdk.Construct`` this ``LaunchTemplateResource`` is a part of"
            },
            "name": "parent",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "docs": {
              "comment": "the name of the resource in the ``cdk.Construct`` tree"
            },
            "name": "name",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "comment": "the properties of this ``LaunchTemplateResource``"
            },
            "name": "properties",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.cloudformation.LaunchTemplateResourceProps",
              "optional": true
            }
          }
        ]
      },
      "kind": "class",
      "methods": [
        {
          "name": "renderProperties",
          "protected": true,
          "returns": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        }
      ],
      "name": "LaunchTemplateResource",
      "namespace": "@aws-cdk/aws-ec2.cloudformation",
      "properties": [
        {
          "const": true,
          "docs": {
            "comment": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "name": "resourceTypeName",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "cloudformation_attribute": "DefaultVersionNumber"
          },
          "immutable": true,
          "name": "launchTemplateDefaultVersionNumber",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.LaunchTemplateDefaultVersionNumber"
          }
        },
        {
          "docs": {
            "cloudformation_attribute": "LatestVersionNumber"
          },
          "immutable": true,
          "name": "launchTemplateLatestVersionNumber",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.LaunchTemplateLatestVersionNumber"
          }
        }
      ],
      "subtypes": [
        "@aws-cdk/aws-ec2.cloudformation.LaunchTemplateResource.BlockDeviceMappingProperty",
        "@aws-cdk/aws-ec2.cloudformation.LaunchTemplateResource.CreditSpecificationProperty",
        "@aws-cdk/aws-ec2.cloudformation.LaunchTemplateResource.EbsProperty",
        "@aws-cdk/aws-ec2.cloudformation.LaunchTemplateResource.ElasticGpuSpecificationProperty",
        "@aws-cdk/aws-ec2.cloudformation.LaunchTemplateResource.IamInstanceProfileProperty",
        "@aws-cdk/aws-ec2.cloudformation.LaunchTemplateResource.InstanceMarketOptionsProperty",
        "@aws-cdk/aws-ec2.cloudformation.LaunchTemplateResource.Ipv6AddProperty",
        "@aws-cdk/aws-ec2.cloudformation.LaunchTemplateResource.LaunchTemplateDataProperty",
        "@aws-cdk/aws-ec2.cloudformation.LaunchTemplateResource.MonitoringProperty",
        "@aws-cdk/aws-ec2.cloudformation.LaunchTemplateResource.NetworkInterfaceProperty",
        "@aws-cdk/aws-ec2.cloudformation.LaunchTemplateResource.PlacementProperty",
        "@aws-cdk/aws-ec2.cloudformation.LaunchTemplateResource.PrivateIpAddProperty",
        "@aws-cdk/aws-ec2.cloudformation.LaunchTemplateResource.SpotOptionsProperty",
        "@aws-cdk/aws-ec2.cloudformation.LaunchTemplateResource.TagSpecificationProperty"
      ]
    },
    "@aws-cdk/aws-ec2.cloudformation.LaunchTemplateResource.BlockDeviceMappingProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-blockdevicemapping.html"
      },
      "fqn": "@aws-cdk/aws-ec2.cloudformation.LaunchTemplateResource.BlockDeviceMappingProperty",
      "kind": "interface",
      "name": "BlockDeviceMappingProperty",
      "namespace": "@aws-cdk/aws-ec2.cloudformation.LaunchTemplateResource",
      "parenttype": "@aws-cdk/aws-ec2.cloudformation.LaunchTemplateResource",
      "properties": [
        {
          "docs": {
            "comment": "``LaunchTemplateResource.BlockDeviceMappingProperty.DeviceName``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-blockdevicemapping.html#cfn-ec2-launchtemplate-blockdevicemapping-devicename"
          },
          "name": "deviceName",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``LaunchTemplateResource.BlockDeviceMappingProperty.Ebs``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-blockdevicemapping.html#cfn-ec2-launchtemplate-blockdevicemapping-ebs"
          },
          "name": "ebs",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.cloudformation.LaunchTemplateResource.EbsProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``LaunchTemplateResource.BlockDeviceMappingProperty.NoDevice``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-blockdevicemapping.html#cfn-ec2-launchtemplate-blockdevicemapping-nodevice"
          },
          "name": "noDevice",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``LaunchTemplateResource.BlockDeviceMappingProperty.VirtualName``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-blockdevicemapping.html#cfn-ec2-launchtemplate-blockdevicemapping-virtualname"
          },
          "name": "virtualName",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.cloudformation.LaunchTemplateResource.CreditSpecificationProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-creditspecification.html"
      },
      "fqn": "@aws-cdk/aws-ec2.cloudformation.LaunchTemplateResource.CreditSpecificationProperty",
      "kind": "interface",
      "name": "CreditSpecificationProperty",
      "namespace": "@aws-cdk/aws-ec2.cloudformation.LaunchTemplateResource",
      "parenttype": "@aws-cdk/aws-ec2.cloudformation.LaunchTemplateResource",
      "properties": [
        {
          "docs": {
            "comment": "``LaunchTemplateResource.CreditSpecificationProperty.CpuCredits``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-creditspecification.html#cfn-ec2-launchtemplate-launchtemplatedata-creditspecification-cpucredits"
          },
          "name": "cpuCredits",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.cloudformation.LaunchTemplateResource.EbsProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-blockdevicemapping-ebs.html"
      },
      "fqn": "@aws-cdk/aws-ec2.cloudformation.LaunchTemplateResource.EbsProperty",
      "kind": "interface",
      "name": "EbsProperty",
      "namespace": "@aws-cdk/aws-ec2.cloudformation.LaunchTemplateResource",
      "parenttype": "@aws-cdk/aws-ec2.cloudformation.LaunchTemplateResource",
      "properties": [
        {
          "docs": {
            "comment": "``LaunchTemplateResource.EbsProperty.DeleteOnTermination``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-blockdevicemapping-ebs.html#cfn-ec2-launchtemplate-blockdevicemapping-ebs-deleteontermination"
          },
          "name": "deleteOnTermination",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``LaunchTemplateResource.EbsProperty.Encrypted``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-blockdevicemapping-ebs.html#cfn-ec2-launchtemplate-blockdevicemapping-ebs-encrypted"
          },
          "name": "encrypted",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``LaunchTemplateResource.EbsProperty.Iops``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-blockdevicemapping-ebs.html#cfn-ec2-launchtemplate-blockdevicemapping-ebs-iops"
          },
          "name": "iops",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "number"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``LaunchTemplateResource.EbsProperty.KmsKeyId``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-blockdevicemapping-ebs.html#cfn-ec2-launchtemplate-blockdevicemapping-ebs-kmskeyid"
          },
          "name": "kmsKeyId",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``LaunchTemplateResource.EbsProperty.SnapshotId``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-blockdevicemapping-ebs.html#cfn-ec2-launchtemplate-blockdevicemapping-ebs-snapshotid"
          },
          "name": "snapshotId",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``LaunchTemplateResource.EbsProperty.VolumeSize``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-blockdevicemapping-ebs.html#cfn-ec2-launchtemplate-blockdevicemapping-ebs-volumesize"
          },
          "name": "volumeSize",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "number"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``LaunchTemplateResource.EbsProperty.VolumeType``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-blockdevicemapping-ebs.html#cfn-ec2-launchtemplate-blockdevicemapping-ebs-volumetype"
          },
          "name": "volumeType",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.cloudformation.LaunchTemplateResource.ElasticGpuSpecificationProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-elasticgpuspecification.html"
      },
      "fqn": "@aws-cdk/aws-ec2.cloudformation.LaunchTemplateResource.ElasticGpuSpecificationProperty",
      "kind": "interface",
      "name": "ElasticGpuSpecificationProperty",
      "namespace": "@aws-cdk/aws-ec2.cloudformation.LaunchTemplateResource",
      "parenttype": "@aws-cdk/aws-ec2.cloudformation.LaunchTemplateResource",
      "properties": [
        {
          "docs": {
            "comment": "``LaunchTemplateResource.ElasticGpuSpecificationProperty.Type``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-elasticgpuspecification.html#cfn-ec2-launchtemplate-elasticgpuspecification-type"
          },
          "name": "type",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.cloudformation.LaunchTemplateResource.IamInstanceProfileProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-iaminstanceprofile.html"
      },
      "fqn": "@aws-cdk/aws-ec2.cloudformation.LaunchTemplateResource.IamInstanceProfileProperty",
      "kind": "interface",
      "name": "IamInstanceProfileProperty",
      "namespace": "@aws-cdk/aws-ec2.cloudformation.LaunchTemplateResource",
      "parenttype": "@aws-cdk/aws-ec2.cloudformation.LaunchTemplateResource",
      "properties": [
        {
          "docs": {
            "comment": "``LaunchTemplateResource.IamInstanceProfileProperty.Arn``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-iaminstanceprofile.html#cfn-ec2-launchtemplate-launchtemplatedata-iaminstanceprofile-arn"
          },
          "name": "arn",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``LaunchTemplateResource.IamInstanceProfileProperty.Name``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-iaminstanceprofile.html#cfn-ec2-launchtemplate-launchtemplatedata-iaminstanceprofile-name"
          },
          "name": "name",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.cloudformation.LaunchTemplateResource.InstanceMarketOptionsProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-instancemarketoptions.html"
      },
      "fqn": "@aws-cdk/aws-ec2.cloudformation.LaunchTemplateResource.InstanceMarketOptionsProperty",
      "kind": "interface",
      "name": "InstanceMarketOptionsProperty",
      "namespace": "@aws-cdk/aws-ec2.cloudformation.LaunchTemplateResource",
      "parenttype": "@aws-cdk/aws-ec2.cloudformation.LaunchTemplateResource",
      "properties": [
        {
          "docs": {
            "comment": "``LaunchTemplateResource.InstanceMarketOptionsProperty.MarketType``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-instancemarketoptions.html#cfn-ec2-launchtemplate-launchtemplatedata-instancemarketoptions-markettype"
          },
          "name": "marketType",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``LaunchTemplateResource.InstanceMarketOptionsProperty.SpotOptions``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-instancemarketoptions.html#cfn-ec2-launchtemplate-launchtemplatedata-instancemarketoptions-spotoptions"
          },
          "name": "spotOptions",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.cloudformation.LaunchTemplateResource.SpotOptionsProperty"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.cloudformation.LaunchTemplateResource.Ipv6AddProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-ipv6add.html"
      },
      "fqn": "@aws-cdk/aws-ec2.cloudformation.LaunchTemplateResource.Ipv6AddProperty",
      "kind": "interface",
      "name": "Ipv6AddProperty",
      "namespace": "@aws-cdk/aws-ec2.cloudformation.LaunchTemplateResource",
      "parenttype": "@aws-cdk/aws-ec2.cloudformation.LaunchTemplateResource",
      "properties": [
        {
          "docs": {
            "comment": "``LaunchTemplateResource.Ipv6AddProperty.Ipv6Address``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-ipv6add.html#cfn-ec2-launchtemplate-ipv6add-ipv6address"
          },
          "name": "ipv6Address",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.cloudformation.LaunchTemplateResource.LaunchTemplateDataProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html"
      },
      "fqn": "@aws-cdk/aws-ec2.cloudformation.LaunchTemplateResource.LaunchTemplateDataProperty",
      "kind": "interface",
      "name": "LaunchTemplateDataProperty",
      "namespace": "@aws-cdk/aws-ec2.cloudformation.LaunchTemplateResource",
      "parenttype": "@aws-cdk/aws-ec2.cloudformation.LaunchTemplateResource",
      "properties": [
        {
          "docs": {
            "comment": "``LaunchTemplateResource.LaunchTemplateDataProperty.BlockDeviceMappings``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html#cfn-ec2-launchtemplate-launchtemplatedata-blockdevicemappings"
          },
          "name": "blockDeviceMappings",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/cdk.Token"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.cloudformation.LaunchTemplateResource.BlockDeviceMappingProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``LaunchTemplateResource.LaunchTemplateDataProperty.CreditSpecification``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html#cfn-ec2-launchtemplate-launchtemplatedata-creditspecification"
          },
          "name": "creditSpecification",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.cloudformation.LaunchTemplateResource.CreditSpecificationProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``LaunchTemplateResource.LaunchTemplateDataProperty.DisableApiTermination``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html#cfn-ec2-launchtemplate-launchtemplatedata-disableapitermination"
          },
          "name": "disableApiTermination",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``LaunchTemplateResource.LaunchTemplateDataProperty.EbsOptimized``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html#cfn-ec2-launchtemplate-launchtemplatedata-ebsoptimized"
          },
          "name": "ebsOptimized",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``LaunchTemplateResource.LaunchTemplateDataProperty.ElasticGpuSpecifications``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html#cfn-ec2-launchtemplate-launchtemplatedata-elasticgpuspecifications"
          },
          "name": "elasticGpuSpecifications",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/cdk.Token"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.cloudformation.LaunchTemplateResource.ElasticGpuSpecificationProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``LaunchTemplateResource.LaunchTemplateDataProperty.IamInstanceProfile``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html#cfn-ec2-launchtemplate-launchtemplatedata-iaminstanceprofile"
          },
          "name": "iamInstanceProfile",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.cloudformation.LaunchTemplateResource.IamInstanceProfileProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``LaunchTemplateResource.LaunchTemplateDataProperty.ImageId``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html#cfn-ec2-launchtemplate-launchtemplatedata-imageid"
          },
          "name": "imageId",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``LaunchTemplateResource.LaunchTemplateDataProperty.InstanceInitiatedShutdownBehavior``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html#cfn-ec2-launchtemplate-launchtemplatedata-instanceinitiatedshutdownbehavior"
          },
          "name": "instanceInitiatedShutdownBehavior",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``LaunchTemplateResource.LaunchTemplateDataProperty.InstanceMarketOptions``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html#cfn-ec2-launchtemplate-launchtemplatedata-instancemarketoptions"
          },
          "name": "instanceMarketOptions",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.cloudformation.LaunchTemplateResource.InstanceMarketOptionsProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``LaunchTemplateResource.LaunchTemplateDataProperty.InstanceType``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html#cfn-ec2-launchtemplate-launchtemplatedata-instancetype"
          },
          "name": "instanceType",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``LaunchTemplateResource.LaunchTemplateDataProperty.KernelId``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html#cfn-ec2-launchtemplate-launchtemplatedata-kernelid"
          },
          "name": "kernelId",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``LaunchTemplateResource.LaunchTemplateDataProperty.KeyName``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html#cfn-ec2-launchtemplate-launchtemplatedata-keyname"
          },
          "name": "keyName",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``LaunchTemplateResource.LaunchTemplateDataProperty.Monitoring``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html#cfn-ec2-launchtemplate-launchtemplatedata-monitoring"
          },
          "name": "monitoring",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.cloudformation.LaunchTemplateResource.MonitoringProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``LaunchTemplateResource.LaunchTemplateDataProperty.NetworkInterfaces``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html#cfn-ec2-launchtemplate-launchtemplatedata-networkinterfaces"
          },
          "name": "networkInterfaces",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/cdk.Token"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.cloudformation.LaunchTemplateResource.NetworkInterfaceProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``LaunchTemplateResource.LaunchTemplateDataProperty.Placement``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html#cfn-ec2-launchtemplate-launchtemplatedata-placement"
          },
          "name": "placement",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.cloudformation.LaunchTemplateResource.PlacementProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``LaunchTemplateResource.LaunchTemplateDataProperty.RamDiskId``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html#cfn-ec2-launchtemplate-launchtemplatedata-ramdiskid"
          },
          "name": "ramDiskId",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``LaunchTemplateResource.LaunchTemplateDataProperty.SecurityGroupIds``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html#cfn-ec2-launchtemplate-launchtemplatedata-securitygroupids"
          },
          "name": "securityGroupIds",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "primitive": "string"
                          },
                          {
                            "fqn": "@aws-cdk/cdk.Token"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``LaunchTemplateResource.LaunchTemplateDataProperty.SecurityGroups``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html#cfn-ec2-launchtemplate-launchtemplatedata-securitygroups"
          },
          "name": "securityGroups",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "primitive": "string"
                          },
                          {
                            "fqn": "@aws-cdk/cdk.Token"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``LaunchTemplateResource.LaunchTemplateDataProperty.TagSpecifications``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html#cfn-ec2-launchtemplate-launchtemplatedata-tagspecifications"
          },
          "name": "tagSpecifications",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/cdk.Token"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.cloudformation.LaunchTemplateResource.TagSpecificationProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``LaunchTemplateResource.LaunchTemplateDataProperty.UserData``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html#cfn-ec2-launchtemplate-launchtemplatedata-userdata"
          },
          "name": "userData",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.cloudformation.LaunchTemplateResource.MonitoringProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-monitoring.html"
      },
      "fqn": "@aws-cdk/aws-ec2.cloudformation.LaunchTemplateResource.MonitoringProperty",
      "kind": "interface",
      "name": "MonitoringProperty",
      "namespace": "@aws-cdk/aws-ec2.cloudformation.LaunchTemplateResource",
      "parenttype": "@aws-cdk/aws-ec2.cloudformation.LaunchTemplateResource",
      "properties": [
        {
          "docs": {
            "comment": "``LaunchTemplateResource.MonitoringProperty.Enabled``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-monitoring.html#cfn-ec2-launchtemplate-launchtemplatedata-monitoring-enabled"
          },
          "name": "enabled",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.cloudformation.LaunchTemplateResource.NetworkInterfaceProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-networkinterface.html"
      },
      "fqn": "@aws-cdk/aws-ec2.cloudformation.LaunchTemplateResource.NetworkInterfaceProperty",
      "kind": "interface",
      "name": "NetworkInterfaceProperty",
      "namespace": "@aws-cdk/aws-ec2.cloudformation.LaunchTemplateResource",
      "parenttype": "@aws-cdk/aws-ec2.cloudformation.LaunchTemplateResource",
      "properties": [
        {
          "docs": {
            "comment": "``LaunchTemplateResource.NetworkInterfaceProperty.AssociatePublicIpAddress``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-networkinterface.html#cfn-ec2-launchtemplate-networkinterface-associatepublicipaddress"
          },
          "name": "associatePublicIpAddress",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``LaunchTemplateResource.NetworkInterfaceProperty.DeleteOnTermination``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-networkinterface.html#cfn-ec2-launchtemplate-networkinterface-deleteontermination"
          },
          "name": "deleteOnTermination",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``LaunchTemplateResource.NetworkInterfaceProperty.Description``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-networkinterface.html#cfn-ec2-launchtemplate-networkinterface-description"
          },
          "name": "description",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``LaunchTemplateResource.NetworkInterfaceProperty.DeviceIndex``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-networkinterface.html#cfn-ec2-launchtemplate-networkinterface-deviceindex"
          },
          "name": "deviceIndex",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "number"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``LaunchTemplateResource.NetworkInterfaceProperty.Groups``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-networkinterface.html#cfn-ec2-launchtemplate-networkinterface-groups"
          },
          "name": "groups",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "primitive": "string"
                          },
                          {
                            "fqn": "@aws-cdk/cdk.Token"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``LaunchTemplateResource.NetworkInterfaceProperty.Ipv6AddressCount``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-networkinterface.html#cfn-ec2-launchtemplate-networkinterface-ipv6addresscount"
          },
          "name": "ipv6AddressCount",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "number"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``LaunchTemplateResource.NetworkInterfaceProperty.Ipv6Addresses``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-networkinterface.html#cfn-ec2-launchtemplate-networkinterface-ipv6addresses"
          },
          "name": "ipv6Addresses",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/cdk.Token"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.cloudformation.LaunchTemplateResource.Ipv6AddProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``LaunchTemplateResource.NetworkInterfaceProperty.NetworkInterfaceId``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-networkinterface.html#cfn-ec2-launchtemplate-networkinterface-networkinterfaceid"
          },
          "name": "networkInterfaceId",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``LaunchTemplateResource.NetworkInterfaceProperty.PrivateIpAddress``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-networkinterface.html#cfn-ec2-launchtemplate-networkinterface-privateipaddress"
          },
          "name": "privateIpAddress",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``LaunchTemplateResource.NetworkInterfaceProperty.PrivateIpAddresses``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-networkinterface.html#cfn-ec2-launchtemplate-networkinterface-privateipaddresses"
          },
          "name": "privateIpAddresses",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/cdk.Token"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.cloudformation.LaunchTemplateResource.PrivateIpAddProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``LaunchTemplateResource.NetworkInterfaceProperty.SecondaryPrivateIpAddressCount``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-networkinterface.html#cfn-ec2-launchtemplate-networkinterface-secondaryprivateipaddresscount"
          },
          "name": "secondaryPrivateIpAddressCount",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "number"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``LaunchTemplateResource.NetworkInterfaceProperty.SubnetId``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-networkinterface.html#cfn-ec2-launchtemplate-networkinterface-subnetid"
          },
          "name": "subnetId",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.cloudformation.LaunchTemplateResource.PlacementProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-placement.html"
      },
      "fqn": "@aws-cdk/aws-ec2.cloudformation.LaunchTemplateResource.PlacementProperty",
      "kind": "interface",
      "name": "PlacementProperty",
      "namespace": "@aws-cdk/aws-ec2.cloudformation.LaunchTemplateResource",
      "parenttype": "@aws-cdk/aws-ec2.cloudformation.LaunchTemplateResource",
      "properties": [
        {
          "docs": {
            "comment": "``LaunchTemplateResource.PlacementProperty.Affinity``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-placement.html#cfn-ec2-launchtemplate-launchtemplatedata-placement-affinity"
          },
          "name": "affinity",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``LaunchTemplateResource.PlacementProperty.AvailabilityZone``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-placement.html#cfn-ec2-launchtemplate-launchtemplatedata-placement-availabilityzone"
          },
          "name": "availabilityZone",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``LaunchTemplateResource.PlacementProperty.GroupName``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-placement.html#cfn-ec2-launchtemplate-launchtemplatedata-placement-groupname"
          },
          "name": "groupName",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``LaunchTemplateResource.PlacementProperty.HostId``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-placement.html#cfn-ec2-launchtemplate-launchtemplatedata-placement-hostid"
          },
          "name": "hostId",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``LaunchTemplateResource.PlacementProperty.Tenancy``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-placement.html#cfn-ec2-launchtemplate-launchtemplatedata-placement-tenancy"
          },
          "name": "tenancy",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.cloudformation.LaunchTemplateResource.PrivateIpAddProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-privateipadd.html"
      },
      "fqn": "@aws-cdk/aws-ec2.cloudformation.LaunchTemplateResource.PrivateIpAddProperty",
      "kind": "interface",
      "name": "PrivateIpAddProperty",
      "namespace": "@aws-cdk/aws-ec2.cloudformation.LaunchTemplateResource",
      "parenttype": "@aws-cdk/aws-ec2.cloudformation.LaunchTemplateResource",
      "properties": [
        {
          "docs": {
            "comment": "``LaunchTemplateResource.PrivateIpAddProperty.Primary``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-privateipadd.html#cfn-ec2-launchtemplate-privateipadd-primary"
          },
          "name": "primary",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``LaunchTemplateResource.PrivateIpAddProperty.PrivateIpAddress``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-privateipadd.html#cfn-ec2-launchtemplate-privateipadd-privateipaddress"
          },
          "name": "privateIpAddress",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.cloudformation.LaunchTemplateResource.SpotOptionsProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-instancemarketoptions-spotoptions.html"
      },
      "fqn": "@aws-cdk/aws-ec2.cloudformation.LaunchTemplateResource.SpotOptionsProperty",
      "kind": "interface",
      "name": "SpotOptionsProperty",
      "namespace": "@aws-cdk/aws-ec2.cloudformation.LaunchTemplateResource",
      "parenttype": "@aws-cdk/aws-ec2.cloudformation.LaunchTemplateResource",
      "properties": [
        {
          "docs": {
            "comment": "``LaunchTemplateResource.SpotOptionsProperty.InstanceInterruptionBehavior``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-instancemarketoptions-spotoptions.html#cfn-ec2-launchtemplate-launchtemplatedata-instancemarketoptions-spotoptions-instanceinterruptionbehavior"
          },
          "name": "instanceInterruptionBehavior",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``LaunchTemplateResource.SpotOptionsProperty.MaxPrice``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-instancemarketoptions-spotoptions.html#cfn-ec2-launchtemplate-launchtemplatedata-instancemarketoptions-spotoptions-maxprice"
          },
          "name": "maxPrice",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``LaunchTemplateResource.SpotOptionsProperty.SpotInstanceType``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata-instancemarketoptions-spotoptions.html#cfn-ec2-launchtemplate-launchtemplatedata-instancemarketoptions-spotoptions-spotinstancetype"
          },
          "name": "spotInstanceType",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.cloudformation.LaunchTemplateResource.TagSpecificationProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-tagspecification.html"
      },
      "fqn": "@aws-cdk/aws-ec2.cloudformation.LaunchTemplateResource.TagSpecificationProperty",
      "kind": "interface",
      "name": "TagSpecificationProperty",
      "namespace": "@aws-cdk/aws-ec2.cloudformation.LaunchTemplateResource",
      "parenttype": "@aws-cdk/aws-ec2.cloudformation.LaunchTemplateResource",
      "properties": [
        {
          "docs": {
            "comment": "``LaunchTemplateResource.TagSpecificationProperty.ResourceType``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-tagspecification.html#cfn-ec2-launchtemplate-tagspecification-resourcetype"
          },
          "name": "resourceType",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``LaunchTemplateResource.TagSpecificationProperty.Tags``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-tagspecification.html#cfn-ec2-launchtemplate-tagspecification-tags"
          },
          "name": "tags",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/cdk.Token"
                          },
                          {
                            "fqn": "@aws-cdk/cdk.Tag"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.cloudformation.LaunchTemplateResourceProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-launchtemplate.html"
      },
      "fqn": "@aws-cdk/aws-ec2.cloudformation.LaunchTemplateResourceProps",
      "kind": "interface",
      "name": "LaunchTemplateResourceProps",
      "namespace": "@aws-cdk/aws-ec2.cloudformation",
      "properties": [
        {
          "docs": {
            "comment": "``AWS::EC2::LaunchTemplate.LaunchTemplateData``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-launchtemplate.html#cfn-ec2-launchtemplate-launchtemplatedata"
          },
          "name": "launchTemplateData",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.cloudformation.LaunchTemplateResource.LaunchTemplateDataProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::EC2::LaunchTemplate.LaunchTemplateName``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-launchtemplate.html#cfn-ec2-launchtemplate-launchtemplatename"
          },
          "name": "launchTemplateName",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.cloudformation.NatGatewayResource": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": {
        "fqn": "@aws-cdk/cdk.Resource"
      },
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-natgateway.html"
      },
      "fqn": "@aws-cdk/aws-ec2.cloudformation.NatGatewayResource",
      "initializer": {
        "docs": {
          "comment": "Creates a new ``AWS::EC2::NatGateway``."
        },
        "initializer": true,
        "parameters": [
          {
            "docs": {
              "comment": "the ``cdk.Construct`` this ``NatGatewayResource`` is a part of"
            },
            "name": "parent",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "docs": {
              "comment": "the name of the resource in the ``cdk.Construct`` tree"
            },
            "name": "name",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "comment": "the properties of this ``NatGatewayResource``"
            },
            "name": "properties",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.cloudformation.NatGatewayResourceProps"
            }
          }
        ]
      },
      "kind": "class",
      "methods": [
        {
          "name": "renderProperties",
          "protected": true,
          "returns": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        }
      ],
      "name": "NatGatewayResource",
      "namespace": "@aws-cdk/aws-ec2.cloudformation",
      "properties": [
        {
          "const": true,
          "docs": {
            "comment": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "name": "resourceTypeName",
          "static": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.cloudformation.NatGatewayResourceProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-natgateway.html"
      },
      "fqn": "@aws-cdk/aws-ec2.cloudformation.NatGatewayResourceProps",
      "kind": "interface",
      "name": "NatGatewayResourceProps",
      "namespace": "@aws-cdk/aws-ec2.cloudformation",
      "properties": [
        {
          "docs": {
            "comment": "``AWS::EC2::NatGateway.AllocationId``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-natgateway.html#cfn-ec2-natgateway-allocationid"
          },
          "name": "allocationId",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::EC2::NatGateway.SubnetId``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-natgateway.html#cfn-ec2-natgateway-subnetid"
          },
          "name": "subnetId",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::EC2::NatGateway.Tags``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-natgateway.html#cfn-ec2-natgateway-tags"
          },
          "name": "tags",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/cdk.Token"
                          },
                          {
                            "fqn": "@aws-cdk/cdk.Tag"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.cloudformation.NetworkAclEntryResource": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": {
        "fqn": "@aws-cdk/cdk.Resource"
      },
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-acl-entry.html"
      },
      "fqn": "@aws-cdk/aws-ec2.cloudformation.NetworkAclEntryResource",
      "initializer": {
        "docs": {
          "comment": "Creates a new ``AWS::EC2::NetworkAclEntry``."
        },
        "initializer": true,
        "parameters": [
          {
            "docs": {
              "comment": "the ``cdk.Construct`` this ``NetworkAclEntryResource`` is a part of"
            },
            "name": "parent",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "docs": {
              "comment": "the name of the resource in the ``cdk.Construct`` tree"
            },
            "name": "name",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "comment": "the properties of this ``NetworkAclEntryResource``"
            },
            "name": "properties",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.cloudformation.NetworkAclEntryResourceProps"
            }
          }
        ]
      },
      "kind": "class",
      "methods": [
        {
          "name": "renderProperties",
          "protected": true,
          "returns": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        }
      ],
      "name": "NetworkAclEntryResource",
      "namespace": "@aws-cdk/aws-ec2.cloudformation",
      "properties": [
        {
          "const": true,
          "docs": {
            "comment": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "name": "resourceTypeName",
          "static": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "subtypes": [
        "@aws-cdk/aws-ec2.cloudformation.NetworkAclEntryResource.IcmpProperty",
        "@aws-cdk/aws-ec2.cloudformation.NetworkAclEntryResource.PortRangeProperty"
      ]
    },
    "@aws-cdk/aws-ec2.cloudformation.NetworkAclEntryResource.IcmpProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkaclentry-icmp.html"
      },
      "fqn": "@aws-cdk/aws-ec2.cloudformation.NetworkAclEntryResource.IcmpProperty",
      "kind": "interface",
      "name": "IcmpProperty",
      "namespace": "@aws-cdk/aws-ec2.cloudformation.NetworkAclEntryResource",
      "parenttype": "@aws-cdk/aws-ec2.cloudformation.NetworkAclEntryResource",
      "properties": [
        {
          "docs": {
            "comment": "``NetworkAclEntryResource.IcmpProperty.Code``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkaclentry-icmp.html#cfn-ec2-networkaclentry-icmp-code"
          },
          "name": "code",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "number"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``NetworkAclEntryResource.IcmpProperty.Type``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkaclentry-icmp.html#cfn-ec2-networkaclentry-icmp-type"
          },
          "name": "type",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "number"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.cloudformation.NetworkAclEntryResource.PortRangeProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkaclentry-portrange.html"
      },
      "fqn": "@aws-cdk/aws-ec2.cloudformation.NetworkAclEntryResource.PortRangeProperty",
      "kind": "interface",
      "name": "PortRangeProperty",
      "namespace": "@aws-cdk/aws-ec2.cloudformation.NetworkAclEntryResource",
      "parenttype": "@aws-cdk/aws-ec2.cloudformation.NetworkAclEntryResource",
      "properties": [
        {
          "docs": {
            "comment": "``NetworkAclEntryResource.PortRangeProperty.From``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkaclentry-portrange.html#cfn-ec2-networkaclentry-portrange-from"
          },
          "name": "from",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "number"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``NetworkAclEntryResource.PortRangeProperty.To``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkaclentry-portrange.html#cfn-ec2-networkaclentry-portrange-to"
          },
          "name": "to",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "number"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.cloudformation.NetworkAclEntryResourceProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-acl-entry.html"
      },
      "fqn": "@aws-cdk/aws-ec2.cloudformation.NetworkAclEntryResourceProps",
      "kind": "interface",
      "name": "NetworkAclEntryResourceProps",
      "namespace": "@aws-cdk/aws-ec2.cloudformation",
      "properties": [
        {
          "docs": {
            "comment": "``AWS::EC2::NetworkAclEntry.CidrBlock``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-acl-entry.html#cfn-ec2-networkaclentry-cidrblock"
          },
          "name": "cidrBlock",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::EC2::NetworkAclEntry.NetworkAclId``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-acl-entry.html#cfn-ec2-networkaclentry-networkaclid"
          },
          "name": "networkAclId",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::EC2::NetworkAclEntry.Protocol``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-acl-entry.html#cfn-ec2-networkaclentry-protocol"
          },
          "name": "protocol",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "number"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::EC2::NetworkAclEntry.RuleAction``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-acl-entry.html#cfn-ec2-networkaclentry-ruleaction"
          },
          "name": "ruleAction",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::EC2::NetworkAclEntry.RuleNumber``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-acl-entry.html#cfn-ec2-networkaclentry-rulenumber"
          },
          "name": "ruleNumber",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "number"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::EC2::NetworkAclEntry.Egress``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-acl-entry.html#cfn-ec2-networkaclentry-egress"
          },
          "name": "egress",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::EC2::NetworkAclEntry.Icmp``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-acl-entry.html#cfn-ec2-networkaclentry-icmp"
          },
          "name": "icmp",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.cloudformation.NetworkAclEntryResource.IcmpProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::EC2::NetworkAclEntry.Ipv6CidrBlock``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-acl-entry.html#cfn-ec2-networkaclentry-ipv6cidrblock"
          },
          "name": "ipv6CidrBlock",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::EC2::NetworkAclEntry.PortRange``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-acl-entry.html#cfn-ec2-networkaclentry-portrange"
          },
          "name": "portRange",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.cloudformation.NetworkAclEntryResource.PortRangeProperty"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.cloudformation.NetworkAclResource": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": {
        "fqn": "@aws-cdk/cdk.Resource"
      },
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-acl.html"
      },
      "fqn": "@aws-cdk/aws-ec2.cloudformation.NetworkAclResource",
      "initializer": {
        "docs": {
          "comment": "Creates a new ``AWS::EC2::NetworkAcl``."
        },
        "initializer": true,
        "parameters": [
          {
            "docs": {
              "comment": "the ``cdk.Construct`` this ``NetworkAclResource`` is a part of"
            },
            "name": "parent",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "docs": {
              "comment": "the name of the resource in the ``cdk.Construct`` tree"
            },
            "name": "name",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "comment": "the properties of this ``NetworkAclResource``"
            },
            "name": "properties",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.cloudformation.NetworkAclResourceProps"
            }
          }
        ]
      },
      "kind": "class",
      "methods": [
        {
          "name": "renderProperties",
          "protected": true,
          "returns": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        }
      ],
      "name": "NetworkAclResource",
      "namespace": "@aws-cdk/aws-ec2.cloudformation",
      "properties": [
        {
          "const": true,
          "docs": {
            "comment": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "name": "resourceTypeName",
          "static": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.cloudformation.NetworkAclResourceProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-acl.html"
      },
      "fqn": "@aws-cdk/aws-ec2.cloudformation.NetworkAclResourceProps",
      "kind": "interface",
      "name": "NetworkAclResourceProps",
      "namespace": "@aws-cdk/aws-ec2.cloudformation",
      "properties": [
        {
          "docs": {
            "comment": "``AWS::EC2::NetworkAcl.VpcId``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-acl.html#cfn-ec2-networkacl-vpcid"
          },
          "name": "vpcId",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::EC2::NetworkAcl.Tags``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-acl.html#cfn-ec2-networkacl-tags"
          },
          "name": "tags",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/cdk.Token"
                          },
                          {
                            "fqn": "@aws-cdk/cdk.Tag"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.cloudformation.NetworkInterfaceAttachmentResource": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": {
        "fqn": "@aws-cdk/cdk.Resource"
      },
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-interface-attachment.html"
      },
      "fqn": "@aws-cdk/aws-ec2.cloudformation.NetworkInterfaceAttachmentResource",
      "initializer": {
        "docs": {
          "comment": "Creates a new ``AWS::EC2::NetworkInterfaceAttachment``."
        },
        "initializer": true,
        "parameters": [
          {
            "docs": {
              "comment": "the ``cdk.Construct`` this ``NetworkInterfaceAttachmentResource`` is a part of"
            },
            "name": "parent",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "docs": {
              "comment": "the name of the resource in the ``cdk.Construct`` tree"
            },
            "name": "name",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "comment": "the properties of this ``NetworkInterfaceAttachmentResource``"
            },
            "name": "properties",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.cloudformation.NetworkInterfaceAttachmentResourceProps"
            }
          }
        ]
      },
      "kind": "class",
      "methods": [
        {
          "name": "renderProperties",
          "protected": true,
          "returns": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        }
      ],
      "name": "NetworkInterfaceAttachmentResource",
      "namespace": "@aws-cdk/aws-ec2.cloudformation",
      "properties": [
        {
          "const": true,
          "docs": {
            "comment": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "name": "resourceTypeName",
          "static": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.cloudformation.NetworkInterfaceAttachmentResourceProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-interface-attachment.html"
      },
      "fqn": "@aws-cdk/aws-ec2.cloudformation.NetworkInterfaceAttachmentResourceProps",
      "kind": "interface",
      "name": "NetworkInterfaceAttachmentResourceProps",
      "namespace": "@aws-cdk/aws-ec2.cloudformation",
      "properties": [
        {
          "docs": {
            "comment": "``AWS::EC2::NetworkInterfaceAttachment.DeviceIndex``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-interface-attachment.html#cfn-ec2-network-interface-attachment-deviceindex"
          },
          "name": "deviceIndex",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::EC2::NetworkInterfaceAttachment.InstanceId``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-interface-attachment.html#cfn-ec2-network-interface-attachment-instanceid"
          },
          "name": "instanceId",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::EC2::NetworkInterfaceAttachment.NetworkInterfaceId``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-interface-attachment.html#cfn-ec2-network-interface-attachment-networkinterfaceid"
          },
          "name": "networkInterfaceId",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::EC2::NetworkInterfaceAttachment.DeleteOnTermination``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-interface-attachment.html#cfn-ec2-network-interface-attachment-deleteonterm"
          },
          "name": "deleteOnTermination",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.cloudformation.NetworkInterfacePermissionResource": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": {
        "fqn": "@aws-cdk/cdk.Resource"
      },
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinterfacepermission.html"
      },
      "fqn": "@aws-cdk/aws-ec2.cloudformation.NetworkInterfacePermissionResource",
      "initializer": {
        "docs": {
          "comment": "Creates a new ``AWS::EC2::NetworkInterfacePermission``."
        },
        "initializer": true,
        "parameters": [
          {
            "docs": {
              "comment": "the ``cdk.Construct`` this ``NetworkInterfacePermissionResource`` is a part of"
            },
            "name": "parent",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "docs": {
              "comment": "the name of the resource in the ``cdk.Construct`` tree"
            },
            "name": "name",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "comment": "the properties of this ``NetworkInterfacePermissionResource``"
            },
            "name": "properties",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.cloudformation.NetworkInterfacePermissionResourceProps"
            }
          }
        ]
      },
      "kind": "class",
      "methods": [
        {
          "name": "renderProperties",
          "protected": true,
          "returns": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        }
      ],
      "name": "NetworkInterfacePermissionResource",
      "namespace": "@aws-cdk/aws-ec2.cloudformation",
      "properties": [
        {
          "const": true,
          "docs": {
            "comment": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "name": "resourceTypeName",
          "static": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.cloudformation.NetworkInterfacePermissionResourceProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinterfacepermission.html"
      },
      "fqn": "@aws-cdk/aws-ec2.cloudformation.NetworkInterfacePermissionResourceProps",
      "kind": "interface",
      "name": "NetworkInterfacePermissionResourceProps",
      "namespace": "@aws-cdk/aws-ec2.cloudformation",
      "properties": [
        {
          "docs": {
            "comment": "``AWS::EC2::NetworkInterfacePermission.AwsAccountId``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinterfacepermission.html#cfn-ec2-networkinterfacepermission-awsaccountid"
          },
          "name": "awsAccountId",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::EC2::NetworkInterfacePermission.NetworkInterfaceId``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinterfacepermission.html#cfn-ec2-networkinterfacepermission-networkinterfaceid"
          },
          "name": "networkInterfaceId",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::EC2::NetworkInterfacePermission.Permission``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinterfacepermission.html#cfn-ec2-networkinterfacepermission-permission"
          },
          "name": "permission",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.cloudformation.NetworkInterfaceResource": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": {
        "fqn": "@aws-cdk/cdk.Resource"
      },
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-interface.html"
      },
      "fqn": "@aws-cdk/aws-ec2.cloudformation.NetworkInterfaceResource",
      "initializer": {
        "docs": {
          "comment": "Creates a new ``AWS::EC2::NetworkInterface``."
        },
        "initializer": true,
        "parameters": [
          {
            "docs": {
              "comment": "the ``cdk.Construct`` this ``NetworkInterfaceResource`` is a part of"
            },
            "name": "parent",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "docs": {
              "comment": "the name of the resource in the ``cdk.Construct`` tree"
            },
            "name": "name",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "comment": "the properties of this ``NetworkInterfaceResource``"
            },
            "name": "properties",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.cloudformation.NetworkInterfaceResourceProps"
            }
          }
        ]
      },
      "kind": "class",
      "methods": [
        {
          "name": "renderProperties",
          "protected": true,
          "returns": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        }
      ],
      "name": "NetworkInterfaceResource",
      "namespace": "@aws-cdk/aws-ec2.cloudformation",
      "properties": [
        {
          "const": true,
          "docs": {
            "comment": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "name": "resourceTypeName",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "cloudformation_attribute": "PrimaryPrivateIpAddress"
          },
          "immutable": true,
          "name": "networkInterfacePrimaryPrivateIpAddress",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.NetworkInterfacePrimaryPrivateIpAddress"
          }
        },
        {
          "docs": {
            "cloudformation_attribute": "SecondaryPrivateIpAddresses"
          },
          "immutable": true,
          "name": "networkInterfaceSecondaryPrivateIpAddresses",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.NetworkInterfaceSecondaryPrivateIpAddresses"
          }
        }
      ],
      "subtypes": [
        "@aws-cdk/aws-ec2.cloudformation.NetworkInterfaceResource.InstanceIpv6AddressProperty",
        "@aws-cdk/aws-ec2.cloudformation.NetworkInterfaceResource.PrivateIpAddressSpecificationProperty"
      ]
    },
    "@aws-cdk/aws-ec2.cloudformation.NetworkInterfaceResource.InstanceIpv6AddressProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinterface-instanceipv6address.html"
      },
      "fqn": "@aws-cdk/aws-ec2.cloudformation.NetworkInterfaceResource.InstanceIpv6AddressProperty",
      "kind": "interface",
      "name": "InstanceIpv6AddressProperty",
      "namespace": "@aws-cdk/aws-ec2.cloudformation.NetworkInterfaceResource",
      "parenttype": "@aws-cdk/aws-ec2.cloudformation.NetworkInterfaceResource",
      "properties": [
        {
          "docs": {
            "comment": "``NetworkInterfaceResource.InstanceIpv6AddressProperty.Ipv6Address``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinterface-instanceipv6address.html#cfn-ec2-networkinterface-instanceipv6address-ipv6address"
          },
          "name": "ipv6Address",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.cloudformation.NetworkInterfaceResource.PrivateIpAddressSpecificationProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-network-interface-privateipspec.html"
      },
      "fqn": "@aws-cdk/aws-ec2.cloudformation.NetworkInterfaceResource.PrivateIpAddressSpecificationProperty",
      "kind": "interface",
      "name": "PrivateIpAddressSpecificationProperty",
      "namespace": "@aws-cdk/aws-ec2.cloudformation.NetworkInterfaceResource",
      "parenttype": "@aws-cdk/aws-ec2.cloudformation.NetworkInterfaceResource",
      "properties": [
        {
          "docs": {
            "comment": "``NetworkInterfaceResource.PrivateIpAddressSpecificationProperty.Primary``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-network-interface-privateipspec.html#cfn-ec2-networkinterface-privateipspecification-primary"
          },
          "name": "primary",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``NetworkInterfaceResource.PrivateIpAddressSpecificationProperty.PrivateIpAddress``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-network-interface-privateipspec.html#cfn-ec2-networkinterface-privateipspecification-privateipaddress"
          },
          "name": "privateIpAddress",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.cloudformation.NetworkInterfaceResourceProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-interface.html"
      },
      "fqn": "@aws-cdk/aws-ec2.cloudformation.NetworkInterfaceResourceProps",
      "kind": "interface",
      "name": "NetworkInterfaceResourceProps",
      "namespace": "@aws-cdk/aws-ec2.cloudformation",
      "properties": [
        {
          "docs": {
            "comment": "``AWS::EC2::NetworkInterface.SubnetId``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-interface.html#cfn-awsec2networkinterface-subnetid"
          },
          "name": "subnetId",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::EC2::NetworkInterface.Description``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-interface.html#cfn-awsec2networkinterface-description"
          },
          "name": "description",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::EC2::NetworkInterface.GroupSet``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-interface.html#cfn-awsec2networkinterface-groupset"
          },
          "name": "groupSet",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "primitive": "string"
                          },
                          {
                            "fqn": "@aws-cdk/cdk.Token"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::EC2::NetworkInterface.InterfaceType``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-interface.html#cfn-ec2-networkinterface-interfacetype"
          },
          "name": "interfaceType",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::EC2::NetworkInterface.Ipv6AddressCount``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-interface.html#cfn-ec2-networkinterface-ipv6addresscount"
          },
          "name": "ipv6AddressCount",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "number"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::EC2::NetworkInterface.Ipv6Addresses``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-interface.html#cfn-ec2-networkinterface-ipv6addresses"
          },
          "name": "ipv6Addresses",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.cloudformation.NetworkInterfaceResource.InstanceIpv6AddressProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::EC2::NetworkInterface.PrivateIpAddress``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-interface.html#cfn-awsec2networkinterface-privateipaddress"
          },
          "name": "privateIpAddress",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::EC2::NetworkInterface.PrivateIpAddresses``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-interface.html#cfn-awsec2networkinterface-privateipaddresses"
          },
          "name": "privateIpAddresses",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/cdk.Token"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.cloudformation.NetworkInterfaceResource.PrivateIpAddressSpecificationProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::EC2::NetworkInterface.SecondaryPrivateIpAddressCount``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-interface.html#cfn-awsec2networkinterface-secondaryprivateipcount"
          },
          "name": "secondaryPrivateIpAddressCount",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "number"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::EC2::NetworkInterface.SourceDestCheck``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-interface.html#cfn-awsec2networkinterface-sourcedestcheck"
          },
          "name": "sourceDestCheck",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::EC2::NetworkInterface.Tags``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-interface.html#cfn-awsec2networkinterface-tags"
          },
          "name": "tags",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/cdk.Token"
                          },
                          {
                            "fqn": "@aws-cdk/cdk.Tag"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.cloudformation.PlacementGroupResource": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": {
        "fqn": "@aws-cdk/cdk.Resource"
      },
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-placementgroup.html"
      },
      "fqn": "@aws-cdk/aws-ec2.cloudformation.PlacementGroupResource",
      "initializer": {
        "docs": {
          "comment": "Creates a new ``AWS::EC2::PlacementGroup``."
        },
        "initializer": true,
        "parameters": [
          {
            "docs": {
              "comment": "the ``cdk.Construct`` this ``PlacementGroupResource`` is a part of"
            },
            "name": "parent",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "docs": {
              "comment": "the name of the resource in the ``cdk.Construct`` tree"
            },
            "name": "name",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "comment": "the properties of this ``PlacementGroupResource``"
            },
            "name": "properties",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.cloudformation.PlacementGroupResourceProps",
              "optional": true
            }
          }
        ]
      },
      "kind": "class",
      "methods": [
        {
          "name": "renderProperties",
          "protected": true,
          "returns": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        }
      ],
      "name": "PlacementGroupResource",
      "namespace": "@aws-cdk/aws-ec2.cloudformation",
      "properties": [
        {
          "const": true,
          "docs": {
            "comment": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "name": "resourceTypeName",
          "static": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.cloudformation.PlacementGroupResourceProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-placementgroup.html"
      },
      "fqn": "@aws-cdk/aws-ec2.cloudformation.PlacementGroupResourceProps",
      "kind": "interface",
      "name": "PlacementGroupResourceProps",
      "namespace": "@aws-cdk/aws-ec2.cloudformation",
      "properties": [
        {
          "docs": {
            "comment": "``AWS::EC2::PlacementGroup.Strategy``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-placementgroup.html#cfn-ec2-placementgroup-strategy"
          },
          "name": "strategy",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.cloudformation.RouteResource": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": {
        "fqn": "@aws-cdk/cdk.Resource"
      },
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route.html"
      },
      "fqn": "@aws-cdk/aws-ec2.cloudformation.RouteResource",
      "initializer": {
        "docs": {
          "comment": "Creates a new ``AWS::EC2::Route``."
        },
        "initializer": true,
        "parameters": [
          {
            "docs": {
              "comment": "the ``cdk.Construct`` this ``RouteResource`` is a part of"
            },
            "name": "parent",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "docs": {
              "comment": "the name of the resource in the ``cdk.Construct`` tree"
            },
            "name": "name",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "comment": "the properties of this ``RouteResource``"
            },
            "name": "properties",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.cloudformation.RouteResourceProps"
            }
          }
        ]
      },
      "kind": "class",
      "methods": [
        {
          "name": "renderProperties",
          "protected": true,
          "returns": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        }
      ],
      "name": "RouteResource",
      "namespace": "@aws-cdk/aws-ec2.cloudformation",
      "properties": [
        {
          "const": true,
          "docs": {
            "comment": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "name": "resourceTypeName",
          "static": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.cloudformation.RouteResourceProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route.html"
      },
      "fqn": "@aws-cdk/aws-ec2.cloudformation.RouteResourceProps",
      "kind": "interface",
      "name": "RouteResourceProps",
      "namespace": "@aws-cdk/aws-ec2.cloudformation",
      "properties": [
        {
          "docs": {
            "comment": "``AWS::EC2::Route.RouteTableId``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route.html#cfn-ec2-route-routetableid"
          },
          "name": "routeTableId",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::EC2::Route.DestinationCidrBlock``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route.html#cfn-ec2-route-destinationcidrblock"
          },
          "name": "destinationCidrBlock",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::EC2::Route.DestinationIpv6CidrBlock``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route.html#cfn-ec2-route-destinationipv6cidrblock"
          },
          "name": "destinationIpv6CidrBlock",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::EC2::Route.EgressOnlyInternetGatewayId``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route.html#cfn-ec2-route-egressonlyinternetgatewayid"
          },
          "name": "egressOnlyInternetGatewayId",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::EC2::Route.GatewayId``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route.html#cfn-ec2-route-gatewayid"
          },
          "name": "gatewayId",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::EC2::Route.InstanceId``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route.html#cfn-ec2-route-instanceid"
          },
          "name": "instanceId",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::EC2::Route.NatGatewayId``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route.html#cfn-ec2-route-natgatewayid"
          },
          "name": "natGatewayId",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::EC2::Route.NetworkInterfaceId``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route.html#cfn-ec2-route-networkinterfaceid"
          },
          "name": "networkInterfaceId",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::EC2::Route.VpcPeeringConnectionId``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route.html#cfn-ec2-route-vpcpeeringconnectionid"
          },
          "name": "vpcPeeringConnectionId",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.cloudformation.RouteTableResource": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": {
        "fqn": "@aws-cdk/cdk.Resource"
      },
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route-table.html"
      },
      "fqn": "@aws-cdk/aws-ec2.cloudformation.RouteTableResource",
      "initializer": {
        "docs": {
          "comment": "Creates a new ``AWS::EC2::RouteTable``."
        },
        "initializer": true,
        "parameters": [
          {
            "docs": {
              "comment": "the ``cdk.Construct`` this ``RouteTableResource`` is a part of"
            },
            "name": "parent",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "docs": {
              "comment": "the name of the resource in the ``cdk.Construct`` tree"
            },
            "name": "name",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "comment": "the properties of this ``RouteTableResource``"
            },
            "name": "properties",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.cloudformation.RouteTableResourceProps"
            }
          }
        ]
      },
      "kind": "class",
      "methods": [
        {
          "name": "renderProperties",
          "protected": true,
          "returns": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        }
      ],
      "name": "RouteTableResource",
      "namespace": "@aws-cdk/aws-ec2.cloudformation",
      "properties": [
        {
          "const": true,
          "docs": {
            "comment": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "name": "resourceTypeName",
          "static": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.cloudformation.RouteTableResourceProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route-table.html"
      },
      "fqn": "@aws-cdk/aws-ec2.cloudformation.RouteTableResourceProps",
      "kind": "interface",
      "name": "RouteTableResourceProps",
      "namespace": "@aws-cdk/aws-ec2.cloudformation",
      "properties": [
        {
          "docs": {
            "comment": "``AWS::EC2::RouteTable.VpcId``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route-table.html#cfn-ec2-routetable-vpcid"
          },
          "name": "vpcId",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::EC2::RouteTable.Tags``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route-table.html#cfn-ec2-routetable-tags"
          },
          "name": "tags",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/cdk.Token"
                          },
                          {
                            "fqn": "@aws-cdk/cdk.Tag"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.cloudformation.SecurityGroupEgressResource": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": {
        "fqn": "@aws-cdk/cdk.Resource"
      },
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-security-group-egress.html"
      },
      "fqn": "@aws-cdk/aws-ec2.cloudformation.SecurityGroupEgressResource",
      "initializer": {
        "docs": {
          "comment": "Creates a new ``AWS::EC2::SecurityGroupEgress``."
        },
        "initializer": true,
        "parameters": [
          {
            "docs": {
              "comment": "the ``cdk.Construct`` this ``SecurityGroupEgressResource`` is a part of"
            },
            "name": "parent",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "docs": {
              "comment": "the name of the resource in the ``cdk.Construct`` tree"
            },
            "name": "name",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "comment": "the properties of this ``SecurityGroupEgressResource``"
            },
            "name": "properties",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.cloudformation.SecurityGroupEgressResourceProps"
            }
          }
        ]
      },
      "kind": "class",
      "methods": [
        {
          "name": "renderProperties",
          "protected": true,
          "returns": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        }
      ],
      "name": "SecurityGroupEgressResource",
      "namespace": "@aws-cdk/aws-ec2.cloudformation",
      "properties": [
        {
          "const": true,
          "docs": {
            "comment": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "name": "resourceTypeName",
          "static": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.cloudformation.SecurityGroupEgressResourceProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-security-group-egress.html"
      },
      "fqn": "@aws-cdk/aws-ec2.cloudformation.SecurityGroupEgressResourceProps",
      "kind": "interface",
      "name": "SecurityGroupEgressResourceProps",
      "namespace": "@aws-cdk/aws-ec2.cloudformation",
      "properties": [
        {
          "docs": {
            "comment": "``AWS::EC2::SecurityGroupEgress.GroupId``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-security-group-egress.html#cfn-ec2-securitygroupegress-groupid"
          },
          "name": "groupId",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::EC2::SecurityGroupEgress.IpProtocol``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-security-group-egress.html#cfn-ec2-securitygroupegress-ipprotocol"
          },
          "name": "ipProtocol",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::EC2::SecurityGroupEgress.CidrIp``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-security-group-egress.html#cfn-ec2-securitygroupegress-cidrip"
          },
          "name": "cidrIp",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::EC2::SecurityGroupEgress.CidrIpv6``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-security-group-egress.html#cfn-ec2-securitygroupegress-cidripv6"
          },
          "name": "cidrIpv6",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::EC2::SecurityGroupEgress.Description``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-security-group-egress.html#cfn-ec2-securitygroupegress-description"
          },
          "name": "description",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::EC2::SecurityGroupEgress.DestinationPrefixListId``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-security-group-egress.html#cfn-ec2-securitygroupegress-destinationprefixlistid"
          },
          "name": "destinationPrefixListId",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::EC2::SecurityGroupEgress.DestinationSecurityGroupId``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-security-group-egress.html#cfn-ec2-securitygroupegress-destinationsecuritygroupid"
          },
          "name": "destinationSecurityGroupId",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::EC2::SecurityGroupEgress.FromPort``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-security-group-egress.html#cfn-ec2-securitygroupegress-fromport"
          },
          "name": "fromPort",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "number"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::EC2::SecurityGroupEgress.ToPort``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-security-group-egress.html#cfn-ec2-securitygroupegress-toport"
          },
          "name": "toPort",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "number"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.cloudformation.SecurityGroupIngressResource": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": {
        "fqn": "@aws-cdk/cdk.Resource"
      },
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-ingress.html"
      },
      "fqn": "@aws-cdk/aws-ec2.cloudformation.SecurityGroupIngressResource",
      "initializer": {
        "docs": {
          "comment": "Creates a new ``AWS::EC2::SecurityGroupIngress``."
        },
        "initializer": true,
        "parameters": [
          {
            "docs": {
              "comment": "the ``cdk.Construct`` this ``SecurityGroupIngressResource`` is a part of"
            },
            "name": "parent",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "docs": {
              "comment": "the name of the resource in the ``cdk.Construct`` tree"
            },
            "name": "name",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "comment": "the properties of this ``SecurityGroupIngressResource``"
            },
            "name": "properties",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.cloudformation.SecurityGroupIngressResourceProps"
            }
          }
        ]
      },
      "kind": "class",
      "methods": [
        {
          "name": "renderProperties",
          "protected": true,
          "returns": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        }
      ],
      "name": "SecurityGroupIngressResource",
      "namespace": "@aws-cdk/aws-ec2.cloudformation",
      "properties": [
        {
          "const": true,
          "docs": {
            "comment": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "name": "resourceTypeName",
          "static": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.cloudformation.SecurityGroupIngressResourceProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-ingress.html"
      },
      "fqn": "@aws-cdk/aws-ec2.cloudformation.SecurityGroupIngressResourceProps",
      "kind": "interface",
      "name": "SecurityGroupIngressResourceProps",
      "namespace": "@aws-cdk/aws-ec2.cloudformation",
      "properties": [
        {
          "docs": {
            "comment": "``AWS::EC2::SecurityGroupIngress.IpProtocol``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-ingress.html#cfn-ec2-security-group-ingress-ipprotocol"
          },
          "name": "ipProtocol",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::EC2::SecurityGroupIngress.CidrIp``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-ingress.html#cfn-ec2-security-group-ingress-cidrip"
          },
          "name": "cidrIp",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::EC2::SecurityGroupIngress.CidrIpv6``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-ingress.html#cfn-ec2-security-group-ingress-cidripv6"
          },
          "name": "cidrIpv6",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::EC2::SecurityGroupIngress.Description``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-ingress.html#cfn-ec2-security-group-ingress-description"
          },
          "name": "description",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::EC2::SecurityGroupIngress.FromPort``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-ingress.html#cfn-ec2-security-group-ingress-fromport"
          },
          "name": "fromPort",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "number"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::EC2::SecurityGroupIngress.GroupId``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-ingress.html#cfn-ec2-security-group-ingress-groupid"
          },
          "name": "groupId",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::EC2::SecurityGroupIngress.GroupName``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-ingress.html#cfn-ec2-security-group-ingress-groupname"
          },
          "name": "groupName",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::EC2::SecurityGroupIngress.SourceSecurityGroupId``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-ingress.html#cfn-ec2-security-group-ingress-sourcesecuritygroupid"
          },
          "name": "sourceSecurityGroupId",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::EC2::SecurityGroupIngress.SourceSecurityGroupName``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-ingress.html#cfn-ec2-security-group-ingress-sourcesecuritygroupname"
          },
          "name": "sourceSecurityGroupName",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::EC2::SecurityGroupIngress.SourceSecurityGroupOwnerId``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-ingress.html#cfn-ec2-security-group-ingress-sourcesecuritygroupownerid"
          },
          "name": "sourceSecurityGroupOwnerId",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::EC2::SecurityGroupIngress.ToPort``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-ingress.html#cfn-ec2-security-group-ingress-toport"
          },
          "name": "toPort",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "number"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.cloudformation.SecurityGroupResource": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": {
        "fqn": "@aws-cdk/cdk.Resource"
      },
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group.html"
      },
      "fqn": "@aws-cdk/aws-ec2.cloudformation.SecurityGroupResource",
      "initializer": {
        "docs": {
          "comment": "Creates a new ``AWS::EC2::SecurityGroup``."
        },
        "initializer": true,
        "parameters": [
          {
            "docs": {
              "comment": "the ``cdk.Construct`` this ``SecurityGroupResource`` is a part of"
            },
            "name": "parent",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "docs": {
              "comment": "the name of the resource in the ``cdk.Construct`` tree"
            },
            "name": "name",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "comment": "the properties of this ``SecurityGroupResource``"
            },
            "name": "properties",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.cloudformation.SecurityGroupResourceProps"
            }
          }
        ]
      },
      "kind": "class",
      "methods": [
        {
          "name": "renderProperties",
          "protected": true,
          "returns": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        }
      ],
      "name": "SecurityGroupResource",
      "namespace": "@aws-cdk/aws-ec2.cloudformation",
      "properties": [
        {
          "const": true,
          "docs": {
            "comment": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "name": "resourceTypeName",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "cloudformation_attribute": "GroupId"
          },
          "immutable": true,
          "name": "securityGroupId",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.SecurityGroupId"
          }
        },
        {
          "docs": {
            "cloudformation_attribute": "VpcId"
          },
          "immutable": true,
          "name": "securityGroupVpcId",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.SecurityGroupVpcId"
          }
        }
      ],
      "subtypes": [
        "@aws-cdk/aws-ec2.cloudformation.SecurityGroupResource.EgressProperty",
        "@aws-cdk/aws-ec2.cloudformation.SecurityGroupResource.IngressProperty"
      ]
    },
    "@aws-cdk/aws-ec2.cloudformation.SecurityGroupResource.EgressProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-rule.html"
      },
      "fqn": "@aws-cdk/aws-ec2.cloudformation.SecurityGroupResource.EgressProperty",
      "kind": "interface",
      "name": "EgressProperty",
      "namespace": "@aws-cdk/aws-ec2.cloudformation.SecurityGroupResource",
      "parenttype": "@aws-cdk/aws-ec2.cloudformation.SecurityGroupResource",
      "properties": [
        {
          "docs": {
            "comment": "``SecurityGroupResource.EgressProperty.CidrIp``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-rule.html#cfn-ec2-security-group-rule-cidrip"
          },
          "name": "cidrIp",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``SecurityGroupResource.EgressProperty.CidrIpv6``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-rule.html#cfn-ec2-security-group-rule-cidripv6"
          },
          "name": "cidrIpv6",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``SecurityGroupResource.EgressProperty.Description``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-rule.html#cfn-ec2-security-group-rule-description"
          },
          "name": "description",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``SecurityGroupResource.EgressProperty.DestinationPrefixListId``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-rule.html#cfn-ec2-security-group-rule-destinationprefixlistid"
          },
          "name": "destinationPrefixListId",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``SecurityGroupResource.EgressProperty.DestinationSecurityGroupId``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-rule.html#cfn-ec2-security-group-rule-destsecgroupid"
          },
          "name": "destinationSecurityGroupId",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``SecurityGroupResource.EgressProperty.FromPort``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-rule.html#cfn-ec2-security-group-rule-fromport"
          },
          "name": "fromPort",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "number"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``SecurityGroupResource.EgressProperty.IpProtocol``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-rule.html#cfn-ec2-security-group-rule-ipprotocol"
          },
          "name": "ipProtocol",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``SecurityGroupResource.EgressProperty.ToPort``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-rule.html#cfn-ec2-security-group-rule-toport"
          },
          "name": "toPort",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "number"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.cloudformation.SecurityGroupResource.IngressProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-rule.html"
      },
      "fqn": "@aws-cdk/aws-ec2.cloudformation.SecurityGroupResource.IngressProperty",
      "kind": "interface",
      "name": "IngressProperty",
      "namespace": "@aws-cdk/aws-ec2.cloudformation.SecurityGroupResource",
      "parenttype": "@aws-cdk/aws-ec2.cloudformation.SecurityGroupResource",
      "properties": [
        {
          "docs": {
            "comment": "``SecurityGroupResource.IngressProperty.CidrIp``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-rule.html#cfn-ec2-security-group-rule-cidrip"
          },
          "name": "cidrIp",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``SecurityGroupResource.IngressProperty.CidrIpv6``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-rule.html#cfn-ec2-security-group-rule-cidripv6"
          },
          "name": "cidrIpv6",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``SecurityGroupResource.IngressProperty.Description``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-rule.html#cfn-ec2-security-group-rule-description"
          },
          "name": "description",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``SecurityGroupResource.IngressProperty.FromPort``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-rule.html#cfn-ec2-security-group-rule-fromport"
          },
          "name": "fromPort",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "number"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``SecurityGroupResource.IngressProperty.IpProtocol``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-rule.html#cfn-ec2-security-group-rule-ipprotocol"
          },
          "name": "ipProtocol",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``SecurityGroupResource.IngressProperty.SourceSecurityGroupId``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-rule.html#cfn-ec2-security-group-rule-sourcesecuritygroupid"
          },
          "name": "sourceSecurityGroupId",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``SecurityGroupResource.IngressProperty.SourceSecurityGroupName``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-rule.html#cfn-ec2-security-group-rule-sourcesecuritygroupname"
          },
          "name": "sourceSecurityGroupName",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``SecurityGroupResource.IngressProperty.SourceSecurityGroupOwnerId``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-rule.html#cfn-ec2-security-group-rule-sourcesecuritygroupownerid"
          },
          "name": "sourceSecurityGroupOwnerId",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``SecurityGroupResource.IngressProperty.ToPort``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-rule.html#cfn-ec2-security-group-rule-toport"
          },
          "name": "toPort",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "number"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.cloudformation.SecurityGroupResourceProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group.html"
      },
      "fqn": "@aws-cdk/aws-ec2.cloudformation.SecurityGroupResourceProps",
      "kind": "interface",
      "name": "SecurityGroupResourceProps",
      "namespace": "@aws-cdk/aws-ec2.cloudformation",
      "properties": [
        {
          "docs": {
            "comment": "``AWS::EC2::SecurityGroup.GroupDescription``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group.html#cfn-ec2-securitygroup-groupdescription"
          },
          "name": "groupDescription",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::EC2::SecurityGroup.GroupName``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group.html#cfn-ec2-securitygroup-groupname"
          },
          "name": "groupName",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::EC2::SecurityGroup.SecurityGroupEgress``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group.html#cfn-ec2-securitygroup-securitygroupegress"
          },
          "name": "securityGroupEgress",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/cdk.Token"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.cloudformation.SecurityGroupResource.EgressProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::EC2::SecurityGroup.SecurityGroupIngress``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group.html#cfn-ec2-securitygroup-securitygroupingress"
          },
          "name": "securityGroupIngress",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/cdk.Token"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.cloudformation.SecurityGroupResource.IngressProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::EC2::SecurityGroup.Tags``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group.html#cfn-ec2-securitygroup-tags"
          },
          "name": "tags",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/cdk.Token"
                          },
                          {
                            "fqn": "@aws-cdk/cdk.Tag"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::EC2::SecurityGroup.VpcId``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group.html#cfn-ec2-securitygroup-vpcid"
          },
          "name": "vpcId",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.cloudformation.SpotFleetResource": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": {
        "fqn": "@aws-cdk/cdk.Resource"
      },
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-spotfleet.html"
      },
      "fqn": "@aws-cdk/aws-ec2.cloudformation.SpotFleetResource",
      "initializer": {
        "docs": {
          "comment": "Creates a new ``AWS::EC2::SpotFleet``."
        },
        "initializer": true,
        "parameters": [
          {
            "docs": {
              "comment": "the ``cdk.Construct`` this ``SpotFleetResource`` is a part of"
            },
            "name": "parent",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "docs": {
              "comment": "the name of the resource in the ``cdk.Construct`` tree"
            },
            "name": "name",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "comment": "the properties of this ``SpotFleetResource``"
            },
            "name": "properties",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.cloudformation.SpotFleetResourceProps"
            }
          }
        ]
      },
      "kind": "class",
      "methods": [
        {
          "name": "renderProperties",
          "protected": true,
          "returns": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        }
      ],
      "name": "SpotFleetResource",
      "namespace": "@aws-cdk/aws-ec2.cloudformation",
      "properties": [
        {
          "const": true,
          "docs": {
            "comment": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "name": "resourceTypeName",
          "static": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "subtypes": [
        "@aws-cdk/aws-ec2.cloudformation.SpotFleetResource.BlockDeviceMappingProperty",
        "@aws-cdk/aws-ec2.cloudformation.SpotFleetResource.EbsBlockDeviceProperty",
        "@aws-cdk/aws-ec2.cloudformation.SpotFleetResource.GroupIdentifierProperty",
        "@aws-cdk/aws-ec2.cloudformation.SpotFleetResource.IamInstanceProfileSpecificationProperty",
        "@aws-cdk/aws-ec2.cloudformation.SpotFleetResource.InstanceIpv6AddressProperty",
        "@aws-cdk/aws-ec2.cloudformation.SpotFleetResource.InstanceNetworkInterfaceSpecificationProperty",
        "@aws-cdk/aws-ec2.cloudformation.SpotFleetResource.PrivateIpAddressSpecificationProperty",
        "@aws-cdk/aws-ec2.cloudformation.SpotFleetResource.SpotFleetLaunchSpecificationProperty",
        "@aws-cdk/aws-ec2.cloudformation.SpotFleetResource.SpotFleetMonitoringProperty",
        "@aws-cdk/aws-ec2.cloudformation.SpotFleetResource.SpotFleetRequestConfigDataProperty",
        "@aws-cdk/aws-ec2.cloudformation.SpotFleetResource.SpotFleetTagSpecificationProperty",
        "@aws-cdk/aws-ec2.cloudformation.SpotFleetResource.SpotPlacementProperty"
      ]
    },
    "@aws-cdk/aws-ec2.cloudformation.SpotFleetResource.BlockDeviceMappingProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-blockdevicemappings.html"
      },
      "fqn": "@aws-cdk/aws-ec2.cloudformation.SpotFleetResource.BlockDeviceMappingProperty",
      "kind": "interface",
      "name": "BlockDeviceMappingProperty",
      "namespace": "@aws-cdk/aws-ec2.cloudformation.SpotFleetResource",
      "parenttype": "@aws-cdk/aws-ec2.cloudformation.SpotFleetResource",
      "properties": [
        {
          "docs": {
            "comment": "``SpotFleetResource.BlockDeviceMappingProperty.DeviceName``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-blockdevicemappings.html#cfn-ec2-spotfleet-blockdevicemapping-devicename"
          },
          "name": "deviceName",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``SpotFleetResource.BlockDeviceMappingProperty.Ebs``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-blockdevicemappings.html#cfn-ec2-spotfleet-blockdevicemapping-ebs"
          },
          "name": "ebs",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.cloudformation.SpotFleetResource.EbsBlockDeviceProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``SpotFleetResource.BlockDeviceMappingProperty.NoDevice``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-blockdevicemappings.html#cfn-ec2-spotfleet-blockdevicemapping-nodevice"
          },
          "name": "noDevice",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``SpotFleetResource.BlockDeviceMappingProperty.VirtualName``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-blockdevicemappings.html#cfn-ec2-spotfleet-blockdevicemapping-virtualname"
          },
          "name": "virtualName",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.cloudformation.SpotFleetResource.EbsBlockDeviceProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-blockdevicemappings-ebs.html"
      },
      "fqn": "@aws-cdk/aws-ec2.cloudformation.SpotFleetResource.EbsBlockDeviceProperty",
      "kind": "interface",
      "name": "EbsBlockDeviceProperty",
      "namespace": "@aws-cdk/aws-ec2.cloudformation.SpotFleetResource",
      "parenttype": "@aws-cdk/aws-ec2.cloudformation.SpotFleetResource",
      "properties": [
        {
          "docs": {
            "comment": "``SpotFleetResource.EbsBlockDeviceProperty.DeleteOnTermination``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-blockdevicemappings-ebs.html#cfn-ec2-spotfleet-ebsblockdevice-deleteontermination"
          },
          "name": "deleteOnTermination",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``SpotFleetResource.EbsBlockDeviceProperty.Encrypted``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-blockdevicemappings-ebs.html#cfn-ec2-spotfleet-ebsblockdevice-encrypted"
          },
          "name": "encrypted",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``SpotFleetResource.EbsBlockDeviceProperty.Iops``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-blockdevicemappings-ebs.html#cfn-ec2-spotfleet-ebsblockdevice-iops"
          },
          "name": "iops",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "number"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``SpotFleetResource.EbsBlockDeviceProperty.SnapshotId``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-blockdevicemappings-ebs.html#cfn-ec2-spotfleet-ebsblockdevice-snapshotid"
          },
          "name": "snapshotId",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``SpotFleetResource.EbsBlockDeviceProperty.VolumeSize``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-blockdevicemappings-ebs.html#cfn-ec2-spotfleet-ebsblockdevice-volumesize"
          },
          "name": "volumeSize",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "number"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``SpotFleetResource.EbsBlockDeviceProperty.VolumeType``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-blockdevicemappings-ebs.html#cfn-ec2-spotfleet-ebsblockdevice-volumetype"
          },
          "name": "volumeType",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.cloudformation.SpotFleetResource.GroupIdentifierProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-securitygroups.html"
      },
      "fqn": "@aws-cdk/aws-ec2.cloudformation.SpotFleetResource.GroupIdentifierProperty",
      "kind": "interface",
      "name": "GroupIdentifierProperty",
      "namespace": "@aws-cdk/aws-ec2.cloudformation.SpotFleetResource",
      "parenttype": "@aws-cdk/aws-ec2.cloudformation.SpotFleetResource",
      "properties": [
        {
          "docs": {
            "comment": "``SpotFleetResource.GroupIdentifierProperty.GroupId``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-securitygroups.html#cfn-ec2-spotfleet-groupidentifier-groupid"
          },
          "name": "groupId",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.cloudformation.SpotFleetResource.IamInstanceProfileSpecificationProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-iaminstanceprofile.html"
      },
      "fqn": "@aws-cdk/aws-ec2.cloudformation.SpotFleetResource.IamInstanceProfileSpecificationProperty",
      "kind": "interface",
      "name": "IamInstanceProfileSpecificationProperty",
      "namespace": "@aws-cdk/aws-ec2.cloudformation.SpotFleetResource",
      "parenttype": "@aws-cdk/aws-ec2.cloudformation.SpotFleetResource",
      "properties": [
        {
          "docs": {
            "comment": "``SpotFleetResource.IamInstanceProfileSpecificationProperty.Arn``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-iaminstanceprofile.html#cfn-ec2-spotfleet-iaminstanceprofilespecification-arn"
          },
          "name": "arn",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.cloudformation.SpotFleetResource.InstanceIpv6AddressProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-instanceipv6address.html"
      },
      "fqn": "@aws-cdk/aws-ec2.cloudformation.SpotFleetResource.InstanceIpv6AddressProperty",
      "kind": "interface",
      "name": "InstanceIpv6AddressProperty",
      "namespace": "@aws-cdk/aws-ec2.cloudformation.SpotFleetResource",
      "parenttype": "@aws-cdk/aws-ec2.cloudformation.SpotFleetResource",
      "properties": [
        {
          "docs": {
            "comment": "``SpotFleetResource.InstanceIpv6AddressProperty.Ipv6Address``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-instanceipv6address.html#cfn-ec2-spotfleet-instanceipv6address-ipv6address"
          },
          "name": "ipv6Address",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.cloudformation.SpotFleetResource.InstanceNetworkInterfaceSpecificationProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-networkinterfaces.html"
      },
      "fqn": "@aws-cdk/aws-ec2.cloudformation.SpotFleetResource.InstanceNetworkInterfaceSpecificationProperty",
      "kind": "interface",
      "name": "InstanceNetworkInterfaceSpecificationProperty",
      "namespace": "@aws-cdk/aws-ec2.cloudformation.SpotFleetResource",
      "parenttype": "@aws-cdk/aws-ec2.cloudformation.SpotFleetResource",
      "properties": [
        {
          "docs": {
            "comment": "``SpotFleetResource.InstanceNetworkInterfaceSpecificationProperty.AssociatePublicIpAddress``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-networkinterfaces.html#cfn-ec2-spotfleet-instancenetworkinterfacespecification-associatepublicipaddress"
          },
          "name": "associatePublicIpAddress",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``SpotFleetResource.InstanceNetworkInterfaceSpecificationProperty.DeleteOnTermination``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-networkinterfaces.html#cfn-ec2-spotfleet-instancenetworkinterfacespecification-deleteontermination"
          },
          "name": "deleteOnTermination",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``SpotFleetResource.InstanceNetworkInterfaceSpecificationProperty.Description``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-networkinterfaces.html#cfn-ec2-spotfleet-instancenetworkinterfacespecification-description"
          },
          "name": "description",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``SpotFleetResource.InstanceNetworkInterfaceSpecificationProperty.DeviceIndex``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-networkinterfaces.html#cfn-ec2-spotfleet-instancenetworkinterfacespecification-deviceindex"
          },
          "name": "deviceIndex",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "number"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``SpotFleetResource.InstanceNetworkInterfaceSpecificationProperty.Groups``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-networkinterfaces.html#cfn-ec2-spotfleet-instancenetworkinterfacespecification-groups"
          },
          "name": "groups",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "primitive": "string"
                          },
                          {
                            "fqn": "@aws-cdk/cdk.Token"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``SpotFleetResource.InstanceNetworkInterfaceSpecificationProperty.Ipv6AddressCount``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-networkinterfaces.html#cfn-ec2-spotfleet-instancenetworkinterfacespecification-ipv6addresscount"
          },
          "name": "ipv6AddressCount",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "number"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``SpotFleetResource.InstanceNetworkInterfaceSpecificationProperty.Ipv6Addresses``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-networkinterfaces.html#cfn-ec2-spotfleet-instancenetworkinterfacespecification-ipv6addresses"
          },
          "name": "ipv6Addresses",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/cdk.Token"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.cloudformation.SpotFleetResource.InstanceIpv6AddressProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``SpotFleetResource.InstanceNetworkInterfaceSpecificationProperty.NetworkInterfaceId``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-networkinterfaces.html#cfn-ec2-spotfleet-instancenetworkinterfacespecification-networkinterfaceid"
          },
          "name": "networkInterfaceId",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``SpotFleetResource.InstanceNetworkInterfaceSpecificationProperty.PrivateIpAddresses``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-networkinterfaces.html#cfn-ec2-spotfleet-instancenetworkinterfacespecification-privateipaddresses"
          },
          "name": "privateIpAddresses",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/cdk.Token"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.cloudformation.SpotFleetResource.PrivateIpAddressSpecificationProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``SpotFleetResource.InstanceNetworkInterfaceSpecificationProperty.SecondaryPrivateIpAddressCount``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-networkinterfaces.html#cfn-ec2-spotfleet-instancenetworkinterfacespecification-secondaryprivateipaddresscount"
          },
          "name": "secondaryPrivateIpAddressCount",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "number"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``SpotFleetResource.InstanceNetworkInterfaceSpecificationProperty.SubnetId``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-networkinterfaces.html#cfn-ec2-spotfleet-instancenetworkinterfacespecification-subnetid"
          },
          "name": "subnetId",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.cloudformation.SpotFleetResource.PrivateIpAddressSpecificationProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-networkinterfaces-privateipaddresses.html"
      },
      "fqn": "@aws-cdk/aws-ec2.cloudformation.SpotFleetResource.PrivateIpAddressSpecificationProperty",
      "kind": "interface",
      "name": "PrivateIpAddressSpecificationProperty",
      "namespace": "@aws-cdk/aws-ec2.cloudformation.SpotFleetResource",
      "parenttype": "@aws-cdk/aws-ec2.cloudformation.SpotFleetResource",
      "properties": [
        {
          "docs": {
            "comment": "``SpotFleetResource.PrivateIpAddressSpecificationProperty.Primary``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-networkinterfaces-privateipaddresses.html#cfn-ec2-spotfleet-privateipaddressspecification-primary"
          },
          "name": "primary",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``SpotFleetResource.PrivateIpAddressSpecificationProperty.PrivateIpAddress``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-networkinterfaces-privateipaddresses.html#cfn-ec2-spotfleet-privateipaddressspecification-privateipaddress"
          },
          "name": "privateIpAddress",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.cloudformation.SpotFleetResource.SpotFleetLaunchSpecificationProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications.html"
      },
      "fqn": "@aws-cdk/aws-ec2.cloudformation.SpotFleetResource.SpotFleetLaunchSpecificationProperty",
      "kind": "interface",
      "name": "SpotFleetLaunchSpecificationProperty",
      "namespace": "@aws-cdk/aws-ec2.cloudformation.SpotFleetResource",
      "parenttype": "@aws-cdk/aws-ec2.cloudformation.SpotFleetResource",
      "properties": [
        {
          "docs": {
            "comment": "``SpotFleetResource.SpotFleetLaunchSpecificationProperty.BlockDeviceMappings``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications.html#cfn-ec2-spotfleet-spotfleetlaunchspecification-blockdevicemappings"
          },
          "name": "blockDeviceMappings",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/cdk.Token"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.cloudformation.SpotFleetResource.BlockDeviceMappingProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``SpotFleetResource.SpotFleetLaunchSpecificationProperty.EbsOptimized``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications.html#cfn-ec2-spotfleet-spotfleetlaunchspecification-ebsoptimized"
          },
          "name": "ebsOptimized",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``SpotFleetResource.SpotFleetLaunchSpecificationProperty.IamInstanceProfile``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications.html#cfn-ec2-spotfleet-spotfleetlaunchspecification-iaminstanceprofile"
          },
          "name": "iamInstanceProfile",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.cloudformation.SpotFleetResource.IamInstanceProfileSpecificationProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``SpotFleetResource.SpotFleetLaunchSpecificationProperty.ImageId``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications.html#cfn-ec2-spotfleet-spotfleetlaunchspecification-imageid"
          },
          "name": "imageId",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``SpotFleetResource.SpotFleetLaunchSpecificationProperty.InstanceType``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications.html#cfn-ec2-spotfleet-spotfleetlaunchspecification-instancetype"
          },
          "name": "instanceType",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``SpotFleetResource.SpotFleetLaunchSpecificationProperty.KernelId``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications.html#cfn-ec2-spotfleet-spotfleetlaunchspecification-kernelid"
          },
          "name": "kernelId",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``SpotFleetResource.SpotFleetLaunchSpecificationProperty.KeyName``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications.html#cfn-ec2-spotfleet-spotfleetlaunchspecification-keyname"
          },
          "name": "keyName",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``SpotFleetResource.SpotFleetLaunchSpecificationProperty.Monitoring``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications.html#cfn-ec2-spotfleet-spotfleetlaunchspecification-monitoring"
          },
          "name": "monitoring",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.cloudformation.SpotFleetResource.SpotFleetMonitoringProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``SpotFleetResource.SpotFleetLaunchSpecificationProperty.NetworkInterfaces``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications.html#cfn-ec2-spotfleet-spotfleetlaunchspecification-networkinterfaces"
          },
          "name": "networkInterfaces",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/cdk.Token"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.cloudformation.SpotFleetResource.InstanceNetworkInterfaceSpecificationProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``SpotFleetResource.SpotFleetLaunchSpecificationProperty.Placement``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications.html#cfn-ec2-spotfleet-spotfleetlaunchspecification-placement"
          },
          "name": "placement",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.cloudformation.SpotFleetResource.SpotPlacementProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``SpotFleetResource.SpotFleetLaunchSpecificationProperty.RamdiskId``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications.html#cfn-ec2-spotfleet-spotfleetlaunchspecification-ramdiskid"
          },
          "name": "ramdiskId",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``SpotFleetResource.SpotFleetLaunchSpecificationProperty.SecurityGroups``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications.html#cfn-ec2-spotfleet-spotfleetlaunchspecification-securitygroups"
          },
          "name": "securityGroups",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/cdk.Token"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.cloudformation.SpotFleetResource.GroupIdentifierProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``SpotFleetResource.SpotFleetLaunchSpecificationProperty.SpotPrice``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications.html#cfn-ec2-spotfleet-spotfleetlaunchspecification-spotprice"
          },
          "name": "spotPrice",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``SpotFleetResource.SpotFleetLaunchSpecificationProperty.SubnetId``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications.html#cfn-ec2-spotfleet-spotfleetlaunchspecification-subnetid"
          },
          "name": "subnetId",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``SpotFleetResource.SpotFleetLaunchSpecificationProperty.TagSpecifications``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications.html#cfn-ec2-spotfleet-spotfleetlaunchspecification-tagspecifications"
          },
          "name": "tagSpecifications",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/cdk.Token"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.cloudformation.SpotFleetResource.SpotFleetTagSpecificationProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``SpotFleetResource.SpotFleetLaunchSpecificationProperty.UserData``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications.html#cfn-ec2-spotfleet-spotfleetlaunchspecification-userdata"
          },
          "name": "userData",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``SpotFleetResource.SpotFleetLaunchSpecificationProperty.WeightedCapacity``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications.html#cfn-ec2-spotfleet-spotfleetlaunchspecification-weightedcapacity"
          },
          "name": "weightedCapacity",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "number"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.cloudformation.SpotFleetResource.SpotFleetMonitoringProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-monitoring.html"
      },
      "fqn": "@aws-cdk/aws-ec2.cloudformation.SpotFleetResource.SpotFleetMonitoringProperty",
      "kind": "interface",
      "name": "SpotFleetMonitoringProperty",
      "namespace": "@aws-cdk/aws-ec2.cloudformation.SpotFleetResource",
      "parenttype": "@aws-cdk/aws-ec2.cloudformation.SpotFleetResource",
      "properties": [
        {
          "docs": {
            "comment": "``SpotFleetResource.SpotFleetMonitoringProperty.Enabled``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-monitoring.html#cfn-ec2-spotfleet-spotfleetmonitoring-enabled"
          },
          "name": "enabled",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.cloudformation.SpotFleetResource.SpotFleetRequestConfigDataProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata.html"
      },
      "fqn": "@aws-cdk/aws-ec2.cloudformation.SpotFleetResource.SpotFleetRequestConfigDataProperty",
      "kind": "interface",
      "name": "SpotFleetRequestConfigDataProperty",
      "namespace": "@aws-cdk/aws-ec2.cloudformation.SpotFleetResource",
      "parenttype": "@aws-cdk/aws-ec2.cloudformation.SpotFleetResource",
      "properties": [
        {
          "docs": {
            "comment": "``SpotFleetResource.SpotFleetRequestConfigDataProperty.AllocationStrategy``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata.html#cfn-ec2-spotfleet-spotfleetrequestconfigdata-allocationstrategy"
          },
          "name": "allocationStrategy",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``SpotFleetResource.SpotFleetRequestConfigDataProperty.ExcessCapacityTerminationPolicy``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata.html#cfn-ec2-spotfleet-spotfleetrequestconfigdata-excesscapacityterminationpolicy"
          },
          "name": "excessCapacityTerminationPolicy",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``SpotFleetResource.SpotFleetRequestConfigDataProperty.IamFleetRole``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata.html#cfn-ec2-spotfleet-spotfleetrequestconfigdata-iamfleetrole"
          },
          "name": "iamFleetRole",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``SpotFleetResource.SpotFleetRequestConfigDataProperty.LaunchSpecifications``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata.html#cfn-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications"
          },
          "name": "launchSpecifications",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/cdk.Token"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.cloudformation.SpotFleetResource.SpotFleetLaunchSpecificationProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``SpotFleetResource.SpotFleetRequestConfigDataProperty.ReplaceUnhealthyInstances``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata.html#cfn-ec2-spotfleet-spotfleetrequestconfigdata-replaceunhealthyinstances"
          },
          "name": "replaceUnhealthyInstances",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``SpotFleetResource.SpotFleetRequestConfigDataProperty.SpotPrice``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata.html#cfn-ec2-spotfleet-spotfleetrequestconfigdata-spotprice"
          },
          "name": "spotPrice",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``SpotFleetResource.SpotFleetRequestConfigDataProperty.TargetCapacity``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata.html#cfn-ec2-spotfleet-spotfleetrequestconfigdata-targetcapacity"
          },
          "name": "targetCapacity",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "number"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``SpotFleetResource.SpotFleetRequestConfigDataProperty.TerminateInstancesWithExpiration``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata.html#cfn-ec2-spotfleet-spotfleetrequestconfigdata-terminateinstanceswithexpiration"
          },
          "name": "terminateInstancesWithExpiration",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``SpotFleetResource.SpotFleetRequestConfigDataProperty.Type``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata.html#cfn-ec2-spotfleet-spotfleetrequestconfigdata-type"
          },
          "name": "type",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``SpotFleetResource.SpotFleetRequestConfigDataProperty.ValidFrom``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata.html#cfn-ec2-spotfleet-spotfleetrequestconfigdata-validfrom"
          },
          "name": "validFrom",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``SpotFleetResource.SpotFleetRequestConfigDataProperty.ValidUntil``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata.html#cfn-ec2-spotfleet-spotfleetrequestconfigdata-validuntil"
          },
          "name": "validUntil",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.cloudformation.SpotFleetResource.SpotFleetTagSpecificationProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-tagspecifications.html"
      },
      "fqn": "@aws-cdk/aws-ec2.cloudformation.SpotFleetResource.SpotFleetTagSpecificationProperty",
      "kind": "interface",
      "name": "SpotFleetTagSpecificationProperty",
      "namespace": "@aws-cdk/aws-ec2.cloudformation.SpotFleetResource",
      "parenttype": "@aws-cdk/aws-ec2.cloudformation.SpotFleetResource",
      "properties": [
        {
          "docs": {
            "comment": "``SpotFleetResource.SpotFleetTagSpecificationProperty.ResourceType``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-tagspecifications.html#cfn-ec2-spotfleet-spotfleettagspecification-resourcetype"
          },
          "name": "resourceType",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.cloudformation.SpotFleetResource.SpotPlacementProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-placement.html"
      },
      "fqn": "@aws-cdk/aws-ec2.cloudformation.SpotFleetResource.SpotPlacementProperty",
      "kind": "interface",
      "name": "SpotPlacementProperty",
      "namespace": "@aws-cdk/aws-ec2.cloudformation.SpotFleetResource",
      "parenttype": "@aws-cdk/aws-ec2.cloudformation.SpotFleetResource",
      "properties": [
        {
          "docs": {
            "comment": "``SpotFleetResource.SpotPlacementProperty.AvailabilityZone``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-placement.html#cfn-ec2-spotfleet-spotplacement-availabilityzone"
          },
          "name": "availabilityZone",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``SpotFleetResource.SpotPlacementProperty.GroupName``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-placement.html#cfn-ec2-spotfleet-spotplacement-groupname"
          },
          "name": "groupName",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.cloudformation.SpotFleetResourceProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-spotfleet.html"
      },
      "fqn": "@aws-cdk/aws-ec2.cloudformation.SpotFleetResourceProps",
      "kind": "interface",
      "name": "SpotFleetResourceProps",
      "namespace": "@aws-cdk/aws-ec2.cloudformation",
      "properties": [
        {
          "docs": {
            "comment": "``AWS::EC2::SpotFleet.SpotFleetRequestConfigData``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-spotfleet.html#cfn-ec2-spotfleet-spotfleetrequestconfigdata"
          },
          "name": "spotFleetRequestConfigData",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "fqn": "@aws-cdk/aws-ec2.cloudformation.SpotFleetResource.SpotFleetRequestConfigDataProperty"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.cloudformation.SubnetCidrBlockResource": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": {
        "fqn": "@aws-cdk/cdk.Resource"
      },
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnetcidrblock.html"
      },
      "fqn": "@aws-cdk/aws-ec2.cloudformation.SubnetCidrBlockResource",
      "initializer": {
        "docs": {
          "comment": "Creates a new ``AWS::EC2::SubnetCidrBlock``."
        },
        "initializer": true,
        "parameters": [
          {
            "docs": {
              "comment": "the ``cdk.Construct`` this ``SubnetCidrBlockResource`` is a part of"
            },
            "name": "parent",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "docs": {
              "comment": "the name of the resource in the ``cdk.Construct`` tree"
            },
            "name": "name",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "comment": "the properties of this ``SubnetCidrBlockResource``"
            },
            "name": "properties",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.cloudformation.SubnetCidrBlockResourceProps"
            }
          }
        ]
      },
      "kind": "class",
      "methods": [
        {
          "name": "renderProperties",
          "protected": true,
          "returns": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        }
      ],
      "name": "SubnetCidrBlockResource",
      "namespace": "@aws-cdk/aws-ec2.cloudformation",
      "properties": [
        {
          "const": true,
          "docs": {
            "comment": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "name": "resourceTypeName",
          "static": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.cloudformation.SubnetCidrBlockResourceProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnetcidrblock.html"
      },
      "fqn": "@aws-cdk/aws-ec2.cloudformation.SubnetCidrBlockResourceProps",
      "kind": "interface",
      "name": "SubnetCidrBlockResourceProps",
      "namespace": "@aws-cdk/aws-ec2.cloudformation",
      "properties": [
        {
          "docs": {
            "comment": "``AWS::EC2::SubnetCidrBlock.Ipv6CidrBlock``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnetcidrblock.html#cfn-ec2-subnetcidrblock-ipv6cidrblock"
          },
          "name": "ipv6CidrBlock",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::EC2::SubnetCidrBlock.SubnetId``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnetcidrblock.html#cfn-ec2-subnetcidrblock-subnetid"
          },
          "name": "subnetId",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.cloudformation.SubnetNetworkAclAssociationResource": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": {
        "fqn": "@aws-cdk/cdk.Resource"
      },
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet-network-acl-assoc.html"
      },
      "fqn": "@aws-cdk/aws-ec2.cloudformation.SubnetNetworkAclAssociationResource",
      "initializer": {
        "docs": {
          "comment": "Creates a new ``AWS::EC2::SubnetNetworkAclAssociation``."
        },
        "initializer": true,
        "parameters": [
          {
            "docs": {
              "comment": "the ``cdk.Construct`` this ``SubnetNetworkAclAssociationResource`` is a part of"
            },
            "name": "parent",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "docs": {
              "comment": "the name of the resource in the ``cdk.Construct`` tree"
            },
            "name": "name",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "comment": "the properties of this ``SubnetNetworkAclAssociationResource``"
            },
            "name": "properties",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.cloudformation.SubnetNetworkAclAssociationResourceProps"
            }
          }
        ]
      },
      "kind": "class",
      "methods": [
        {
          "name": "renderProperties",
          "protected": true,
          "returns": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        }
      ],
      "name": "SubnetNetworkAclAssociationResource",
      "namespace": "@aws-cdk/aws-ec2.cloudformation",
      "properties": [
        {
          "const": true,
          "docs": {
            "comment": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "name": "resourceTypeName",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "cloudformation_attribute": "AssociationId"
          },
          "immutable": true,
          "name": "subnetNetworkAclAssociationAssociationId",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.SubnetNetworkAclAssociationAssociationId"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.cloudformation.SubnetNetworkAclAssociationResourceProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet-network-acl-assoc.html"
      },
      "fqn": "@aws-cdk/aws-ec2.cloudformation.SubnetNetworkAclAssociationResourceProps",
      "kind": "interface",
      "name": "SubnetNetworkAclAssociationResourceProps",
      "namespace": "@aws-cdk/aws-ec2.cloudformation",
      "properties": [
        {
          "docs": {
            "comment": "``AWS::EC2::SubnetNetworkAclAssociation.NetworkAclId``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet-network-acl-assoc.html#cfn-ec2-subnetnetworkaclassociation-networkaclid"
          },
          "name": "networkAclId",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::EC2::SubnetNetworkAclAssociation.SubnetId``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet-network-acl-assoc.html#cfn-ec2-subnetnetworkaclassociation-associationid"
          },
          "name": "subnetId",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.cloudformation.SubnetResource": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": {
        "fqn": "@aws-cdk/cdk.Resource"
      },
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet.html"
      },
      "fqn": "@aws-cdk/aws-ec2.cloudformation.SubnetResource",
      "initializer": {
        "docs": {
          "comment": "Creates a new ``AWS::EC2::Subnet``."
        },
        "initializer": true,
        "parameters": [
          {
            "docs": {
              "comment": "the ``cdk.Construct`` this ``SubnetResource`` is a part of"
            },
            "name": "parent",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "docs": {
              "comment": "the name of the resource in the ``cdk.Construct`` tree"
            },
            "name": "name",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "comment": "the properties of this ``SubnetResource``"
            },
            "name": "properties",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.cloudformation.SubnetResourceProps"
            }
          }
        ]
      },
      "kind": "class",
      "methods": [
        {
          "name": "renderProperties",
          "protected": true,
          "returns": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        }
      ],
      "name": "SubnetResource",
      "namespace": "@aws-cdk/aws-ec2.cloudformation",
      "properties": [
        {
          "const": true,
          "docs": {
            "comment": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "name": "resourceTypeName",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "cloudformation_attribute": "AvailabilityZone"
          },
          "immutable": true,
          "name": "subnetAvailabilityZone",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.SubnetAvailabilityZone"
          }
        },
        {
          "docs": {
            "cloudformation_attribute": "Ipv6CidrBlocks"
          },
          "immutable": true,
          "name": "subnetIpv6CidrBlocks",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.SubnetIpv6CidrBlocks"
          }
        },
        {
          "docs": {
            "cloudformation_attribute": "NetworkAclAssociationId"
          },
          "immutable": true,
          "name": "subnetNetworkAclAssociationId",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.SubnetNetworkAclAssociationId"
          }
        },
        {
          "docs": {
            "cloudformation_attribute": "VpcId"
          },
          "immutable": true,
          "name": "subnetVpcId",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.SubnetVpcId"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.cloudformation.SubnetResourceProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet.html"
      },
      "fqn": "@aws-cdk/aws-ec2.cloudformation.SubnetResourceProps",
      "kind": "interface",
      "name": "SubnetResourceProps",
      "namespace": "@aws-cdk/aws-ec2.cloudformation",
      "properties": [
        {
          "docs": {
            "comment": "``AWS::EC2::Subnet.CidrBlock``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet.html#cfn-ec2-subnet-cidrblock"
          },
          "name": "cidrBlock",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::EC2::Subnet.VpcId``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet.html#cfn-awsec2subnet-prop-vpcid"
          },
          "name": "vpcId",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::EC2::Subnet.AssignIpv6AddressOnCreation``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet.html#cfn-ec2-subnet-assignipv6addressoncreation"
          },
          "name": "assignIpv6AddressOnCreation",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::EC2::Subnet.AvailabilityZone``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet.html#cfn-ec2-subnet-availabilityzone"
          },
          "name": "availabilityZone",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::EC2::Subnet.Ipv6CidrBlock``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet.html#cfn-ec2-subnet-ipv6cidrblock"
          },
          "name": "ipv6CidrBlock",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::EC2::Subnet.MapPublicIpOnLaunch``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet.html#cfn-ec2-subnet-mappubliciponlaunch"
          },
          "name": "mapPublicIpOnLaunch",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::EC2::Subnet.Tags``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet.html#cfn-ec2-subnet-tags"
          },
          "name": "tags",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/cdk.Token"
                          },
                          {
                            "fqn": "@aws-cdk/cdk.Tag"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.cloudformation.SubnetRouteTableAssociationResource": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": {
        "fqn": "@aws-cdk/cdk.Resource"
      },
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet-route-table-assoc.html"
      },
      "fqn": "@aws-cdk/aws-ec2.cloudformation.SubnetRouteTableAssociationResource",
      "initializer": {
        "docs": {
          "comment": "Creates a new ``AWS::EC2::SubnetRouteTableAssociation``."
        },
        "initializer": true,
        "parameters": [
          {
            "docs": {
              "comment": "the ``cdk.Construct`` this ``SubnetRouteTableAssociationResource`` is a part of"
            },
            "name": "parent",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "docs": {
              "comment": "the name of the resource in the ``cdk.Construct`` tree"
            },
            "name": "name",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "comment": "the properties of this ``SubnetRouteTableAssociationResource``"
            },
            "name": "properties",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.cloudformation.SubnetRouteTableAssociationResourceProps"
            }
          }
        ]
      },
      "kind": "class",
      "methods": [
        {
          "name": "renderProperties",
          "protected": true,
          "returns": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        }
      ],
      "name": "SubnetRouteTableAssociationResource",
      "namespace": "@aws-cdk/aws-ec2.cloudformation",
      "properties": [
        {
          "const": true,
          "docs": {
            "comment": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "name": "resourceTypeName",
          "static": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.cloudformation.SubnetRouteTableAssociationResourceProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet-route-table-assoc.html"
      },
      "fqn": "@aws-cdk/aws-ec2.cloudformation.SubnetRouteTableAssociationResourceProps",
      "kind": "interface",
      "name": "SubnetRouteTableAssociationResourceProps",
      "namespace": "@aws-cdk/aws-ec2.cloudformation",
      "properties": [
        {
          "docs": {
            "comment": "``AWS::EC2::SubnetRouteTableAssociation.RouteTableId``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet-route-table-assoc.html#cfn-ec2-subnetroutetableassociation-routetableid"
          },
          "name": "routeTableId",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::EC2::SubnetRouteTableAssociation.SubnetId``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet-route-table-assoc.html#cfn-ec2-subnetroutetableassociation-subnetid"
          },
          "name": "subnetId",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.cloudformation.TrunkInterfaceAssociationResource": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": {
        "fqn": "@aws-cdk/cdk.Resource"
      },
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trunkinterfaceassociation.html"
      },
      "fqn": "@aws-cdk/aws-ec2.cloudformation.TrunkInterfaceAssociationResource",
      "initializer": {
        "docs": {
          "comment": "Creates a new ``AWS::EC2::TrunkInterfaceAssociation``."
        },
        "initializer": true,
        "parameters": [
          {
            "docs": {
              "comment": "the ``cdk.Construct`` this ``TrunkInterfaceAssociationResource`` is a part of"
            },
            "name": "parent",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "docs": {
              "comment": "the name of the resource in the ``cdk.Construct`` tree"
            },
            "name": "name",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "comment": "the properties of this ``TrunkInterfaceAssociationResource``"
            },
            "name": "properties",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.cloudformation.TrunkInterfaceAssociationResourceProps"
            }
          }
        ]
      },
      "kind": "class",
      "methods": [
        {
          "name": "renderProperties",
          "protected": true,
          "returns": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        }
      ],
      "name": "TrunkInterfaceAssociationResource",
      "namespace": "@aws-cdk/aws-ec2.cloudformation",
      "properties": [
        {
          "const": true,
          "docs": {
            "comment": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "name": "resourceTypeName",
          "static": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.cloudformation.TrunkInterfaceAssociationResourceProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trunkinterfaceassociation.html"
      },
      "fqn": "@aws-cdk/aws-ec2.cloudformation.TrunkInterfaceAssociationResourceProps",
      "kind": "interface",
      "name": "TrunkInterfaceAssociationResourceProps",
      "namespace": "@aws-cdk/aws-ec2.cloudformation",
      "properties": [
        {
          "docs": {
            "comment": "``AWS::EC2::TrunkInterfaceAssociation.BranchInterfaceId``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trunkinterfaceassociation.html#cfn-ec2-trunkinterfaceassociation-branchinterfaceid"
          },
          "name": "branchInterfaceId",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::EC2::TrunkInterfaceAssociation.TrunkInterfaceId``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trunkinterfaceassociation.html#cfn-ec2-trunkinterfaceassociation-trunkinterfaceid"
          },
          "name": "trunkInterfaceId",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::EC2::TrunkInterfaceAssociation.GREKey``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trunkinterfaceassociation.html#cfn-ec2-trunkinterfaceassociation-grekey"
          },
          "name": "greKey",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "number"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::EC2::TrunkInterfaceAssociation.VLANId``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trunkinterfaceassociation.html#cfn-ec2-trunkinterfaceassociation-vlanid"
          },
          "name": "vlanId",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "number"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.cloudformation.VPCCidrBlockResource": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": {
        "fqn": "@aws-cdk/cdk.Resource"
      },
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpccidrblock.html"
      },
      "fqn": "@aws-cdk/aws-ec2.cloudformation.VPCCidrBlockResource",
      "initializer": {
        "docs": {
          "comment": "Creates a new ``AWS::EC2::VPCCidrBlock``."
        },
        "initializer": true,
        "parameters": [
          {
            "docs": {
              "comment": "the ``cdk.Construct`` this ``VPCCidrBlockResource`` is a part of"
            },
            "name": "parent",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "docs": {
              "comment": "the name of the resource in the ``cdk.Construct`` tree"
            },
            "name": "name",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "comment": "the properties of this ``VPCCidrBlockResource``"
            },
            "name": "properties",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.cloudformation.VPCCidrBlockResourceProps"
            }
          }
        ]
      },
      "kind": "class",
      "methods": [
        {
          "name": "renderProperties",
          "protected": true,
          "returns": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        }
      ],
      "name": "VPCCidrBlockResource",
      "namespace": "@aws-cdk/aws-ec2.cloudformation",
      "properties": [
        {
          "const": true,
          "docs": {
            "comment": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "name": "resourceTypeName",
          "static": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.cloudformation.VPCCidrBlockResourceProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpccidrblock.html"
      },
      "fqn": "@aws-cdk/aws-ec2.cloudformation.VPCCidrBlockResourceProps",
      "kind": "interface",
      "name": "VPCCidrBlockResourceProps",
      "namespace": "@aws-cdk/aws-ec2.cloudformation",
      "properties": [
        {
          "docs": {
            "comment": "``AWS::EC2::VPCCidrBlock.VpcId``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpccidrblock.html#cfn-ec2-vpccidrblock-vpcid"
          },
          "name": "vpcId",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::EC2::VPCCidrBlock.AmazonProvidedIpv6CidrBlock``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpccidrblock.html#cfn-ec2-vpccidrblock-amazonprovidedipv6cidrblock"
          },
          "name": "amazonProvidedIpv6CidrBlock",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::EC2::VPCCidrBlock.CidrBlock``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpccidrblock.html#cfn-ec2-vpccidrblock-cidrblock"
          },
          "name": "cidrBlock",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.cloudformation.VPCDHCPOptionsAssociationResource": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": {
        "fqn": "@aws-cdk/cdk.Resource"
      },
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpc-dhcp-options-assoc.html"
      },
      "fqn": "@aws-cdk/aws-ec2.cloudformation.VPCDHCPOptionsAssociationResource",
      "initializer": {
        "docs": {
          "comment": "Creates a new ``AWS::EC2::VPCDHCPOptionsAssociation``."
        },
        "initializer": true,
        "parameters": [
          {
            "docs": {
              "comment": "the ``cdk.Construct`` this ``VPCDHCPOptionsAssociationResource`` is a part of"
            },
            "name": "parent",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "docs": {
              "comment": "the name of the resource in the ``cdk.Construct`` tree"
            },
            "name": "name",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "comment": "the properties of this ``VPCDHCPOptionsAssociationResource``"
            },
            "name": "properties",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.cloudformation.VPCDHCPOptionsAssociationResourceProps"
            }
          }
        ]
      },
      "kind": "class",
      "methods": [
        {
          "name": "renderProperties",
          "protected": true,
          "returns": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        }
      ],
      "name": "VPCDHCPOptionsAssociationResource",
      "namespace": "@aws-cdk/aws-ec2.cloudformation",
      "properties": [
        {
          "const": true,
          "docs": {
            "comment": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "name": "resourceTypeName",
          "static": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.cloudformation.VPCDHCPOptionsAssociationResourceProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpc-dhcp-options-assoc.html"
      },
      "fqn": "@aws-cdk/aws-ec2.cloudformation.VPCDHCPOptionsAssociationResourceProps",
      "kind": "interface",
      "name": "VPCDHCPOptionsAssociationResourceProps",
      "namespace": "@aws-cdk/aws-ec2.cloudformation",
      "properties": [
        {
          "docs": {
            "comment": "``AWS::EC2::VPCDHCPOptionsAssociation.DhcpOptionsId``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpc-dhcp-options-assoc.html#cfn-ec2-vpcdhcpoptionsassociation-dhcpoptionsid"
          },
          "name": "dhcpOptionsId",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::EC2::VPCDHCPOptionsAssociation.VpcId``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpc-dhcp-options-assoc.html#cfn-ec2-vpcdhcpoptionsassociation-vpcid"
          },
          "name": "vpcId",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.cloudformation.VPCEndpointResource": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": {
        "fqn": "@aws-cdk/cdk.Resource"
      },
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpoint.html"
      },
      "fqn": "@aws-cdk/aws-ec2.cloudformation.VPCEndpointResource",
      "initializer": {
        "docs": {
          "comment": "Creates a new ``AWS::EC2::VPCEndpoint``."
        },
        "initializer": true,
        "parameters": [
          {
            "docs": {
              "comment": "the ``cdk.Construct`` this ``VPCEndpointResource`` is a part of"
            },
            "name": "parent",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "docs": {
              "comment": "the name of the resource in the ``cdk.Construct`` tree"
            },
            "name": "name",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "comment": "the properties of this ``VPCEndpointResource``"
            },
            "name": "properties",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.cloudformation.VPCEndpointResourceProps"
            }
          }
        ]
      },
      "kind": "class",
      "methods": [
        {
          "name": "renderProperties",
          "protected": true,
          "returns": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        }
      ],
      "name": "VPCEndpointResource",
      "namespace": "@aws-cdk/aws-ec2.cloudformation",
      "properties": [
        {
          "const": true,
          "docs": {
            "comment": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "name": "resourceTypeName",
          "static": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.cloudformation.VPCEndpointResourceProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpoint.html"
      },
      "fqn": "@aws-cdk/aws-ec2.cloudformation.VPCEndpointResourceProps",
      "kind": "interface",
      "name": "VPCEndpointResourceProps",
      "namespace": "@aws-cdk/aws-ec2.cloudformation",
      "properties": [
        {
          "docs": {
            "comment": "``AWS::EC2::VPCEndpoint.ServiceName``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpoint.html#cfn-ec2-vpcendpoint-servicename"
          },
          "name": "serviceName",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::EC2::VPCEndpoint.VpcId``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpoint.html#cfn-ec2-vpcendpoint-vpcid"
          },
          "name": "vpcId",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::EC2::VPCEndpoint.PolicyDocument``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpoint.html#cfn-ec2-vpcendpoint-policydocument"
          },
          "name": "policyDocument",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "json"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::EC2::VPCEndpoint.RouteTableIds``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpoint.html#cfn-ec2-vpcendpoint-routetableids"
          },
          "name": "routeTableIds",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "primitive": "string"
                          },
                          {
                            "fqn": "@aws-cdk/cdk.Token"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.cloudformation.VPCGatewayAttachmentResource": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": {
        "fqn": "@aws-cdk/cdk.Resource"
      },
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpc-gateway-attachment.html"
      },
      "fqn": "@aws-cdk/aws-ec2.cloudformation.VPCGatewayAttachmentResource",
      "initializer": {
        "docs": {
          "comment": "Creates a new ``AWS::EC2::VPCGatewayAttachment``."
        },
        "initializer": true,
        "parameters": [
          {
            "docs": {
              "comment": "the ``cdk.Construct`` this ``VPCGatewayAttachmentResource`` is a part of"
            },
            "name": "parent",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "docs": {
              "comment": "the name of the resource in the ``cdk.Construct`` tree"
            },
            "name": "name",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "comment": "the properties of this ``VPCGatewayAttachmentResource``"
            },
            "name": "properties",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.cloudformation.VPCGatewayAttachmentResourceProps"
            }
          }
        ]
      },
      "kind": "class",
      "methods": [
        {
          "name": "renderProperties",
          "protected": true,
          "returns": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        }
      ],
      "name": "VPCGatewayAttachmentResource",
      "namespace": "@aws-cdk/aws-ec2.cloudformation",
      "properties": [
        {
          "const": true,
          "docs": {
            "comment": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "name": "resourceTypeName",
          "static": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.cloudformation.VPCGatewayAttachmentResourceProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpc-gateway-attachment.html"
      },
      "fqn": "@aws-cdk/aws-ec2.cloudformation.VPCGatewayAttachmentResourceProps",
      "kind": "interface",
      "name": "VPCGatewayAttachmentResourceProps",
      "namespace": "@aws-cdk/aws-ec2.cloudformation",
      "properties": [
        {
          "docs": {
            "comment": "``AWS::EC2::VPCGatewayAttachment.VpcId``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpc-gateway-attachment.html#cfn-ec2-vpcgatewayattachment-vpcid"
          },
          "name": "vpcId",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::EC2::VPCGatewayAttachment.InternetGatewayId``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpc-gateway-attachment.html#cfn-ec2-vpcgatewayattachment-internetgatewayid"
          },
          "name": "internetGatewayId",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::EC2::VPCGatewayAttachment.VpnGatewayId``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpc-gateway-attachment.html#cfn-ec2-vpcgatewayattachment-vpngatewayid"
          },
          "name": "vpnGatewayId",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.cloudformation.VPCPeeringConnectionResource": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": {
        "fqn": "@aws-cdk/cdk.Resource"
      },
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcpeeringconnection.html"
      },
      "fqn": "@aws-cdk/aws-ec2.cloudformation.VPCPeeringConnectionResource",
      "initializer": {
        "docs": {
          "comment": "Creates a new ``AWS::EC2::VPCPeeringConnection``."
        },
        "initializer": true,
        "parameters": [
          {
            "docs": {
              "comment": "the ``cdk.Construct`` this ``VPCPeeringConnectionResource`` is a part of"
            },
            "name": "parent",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "docs": {
              "comment": "the name of the resource in the ``cdk.Construct`` tree"
            },
            "name": "name",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "comment": "the properties of this ``VPCPeeringConnectionResource``"
            },
            "name": "properties",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.cloudformation.VPCPeeringConnectionResourceProps"
            }
          }
        ]
      },
      "kind": "class",
      "methods": [
        {
          "name": "renderProperties",
          "protected": true,
          "returns": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        }
      ],
      "name": "VPCPeeringConnectionResource",
      "namespace": "@aws-cdk/aws-ec2.cloudformation",
      "properties": [
        {
          "const": true,
          "docs": {
            "comment": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "name": "resourceTypeName",
          "static": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.cloudformation.VPCPeeringConnectionResourceProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcpeeringconnection.html"
      },
      "fqn": "@aws-cdk/aws-ec2.cloudformation.VPCPeeringConnectionResourceProps",
      "kind": "interface",
      "name": "VPCPeeringConnectionResourceProps",
      "namespace": "@aws-cdk/aws-ec2.cloudformation",
      "properties": [
        {
          "docs": {
            "comment": "``AWS::EC2::VPCPeeringConnection.PeerVpcId``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcpeeringconnection.html#cfn-ec2-vpcpeeringconnection-peervpcid"
          },
          "name": "peerVpcId",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::EC2::VPCPeeringConnection.VpcId``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcpeeringconnection.html#cfn-ec2-vpcpeeringconnection-vpcid"
          },
          "name": "vpcId",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::EC2::VPCPeeringConnection.PeerOwnerId``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcpeeringconnection.html#cfn-ec2-vpcpeeringconnection-peerownerid"
          },
          "name": "peerOwnerId",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::EC2::VPCPeeringConnection.PeerRoleArn``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcpeeringconnection.html#cfn-ec2-vpcpeeringconnection-peerrolearn"
          },
          "name": "peerRoleArn",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::EC2::VPCPeeringConnection.Tags``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcpeeringconnection.html#cfn-ec2-vpcpeeringconnection-tags"
          },
          "name": "tags",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/cdk.Token"
                          },
                          {
                            "fqn": "@aws-cdk/cdk.Tag"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.cloudformation.VPCResource": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": {
        "fqn": "@aws-cdk/cdk.Resource"
      },
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpc.html"
      },
      "fqn": "@aws-cdk/aws-ec2.cloudformation.VPCResource",
      "initializer": {
        "docs": {
          "comment": "Creates a new ``AWS::EC2::VPC``."
        },
        "initializer": true,
        "parameters": [
          {
            "docs": {
              "comment": "the ``cdk.Construct`` this ``VPCResource`` is a part of"
            },
            "name": "parent",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "docs": {
              "comment": "the name of the resource in the ``cdk.Construct`` tree"
            },
            "name": "name",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "comment": "the properties of this ``VPCResource``"
            },
            "name": "properties",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.cloudformation.VPCResourceProps"
            }
          }
        ]
      },
      "kind": "class",
      "methods": [
        {
          "name": "renderProperties",
          "protected": true,
          "returns": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        }
      ],
      "name": "VPCResource",
      "namespace": "@aws-cdk/aws-ec2.cloudformation",
      "properties": [
        {
          "const": true,
          "docs": {
            "comment": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "name": "resourceTypeName",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "cloudformation_attribute": "CidrBlock"
          },
          "immutable": true,
          "name": "vpcCidrBlock",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.VPCCidrBlock"
          }
        },
        {
          "docs": {
            "cloudformation_attribute": "CidrBlockAssociations"
          },
          "immutable": true,
          "name": "vpcCidrBlockAssociations",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.VPCCidrBlockAssociations"
          }
        },
        {
          "docs": {
            "cloudformation_attribute": "DefaultNetworkAcl"
          },
          "immutable": true,
          "name": "vpcDefaultNetworkAcl",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.VPCDefaultNetworkAcl"
          }
        },
        {
          "docs": {
            "cloudformation_attribute": "DefaultSecurityGroup"
          },
          "immutable": true,
          "name": "vpcDefaultSecurityGroup",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.VPCDefaultSecurityGroup"
          }
        },
        {
          "docs": {
            "cloudformation_attribute": "Ipv6CidrBlocks"
          },
          "immutable": true,
          "name": "vpcIpv6CidrBlocks",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.VPCIpv6CidrBlocks"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.cloudformation.VPCResourceProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpc.html"
      },
      "fqn": "@aws-cdk/aws-ec2.cloudformation.VPCResourceProps",
      "kind": "interface",
      "name": "VPCResourceProps",
      "namespace": "@aws-cdk/aws-ec2.cloudformation",
      "properties": [
        {
          "docs": {
            "comment": "``AWS::EC2::VPC.CidrBlock``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpc.html#cfn-aws-ec2-vpc-cidrblock"
          },
          "name": "cidrBlock",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::EC2::VPC.EnableDnsHostnames``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpc.html#cfn-aws-ec2-vpc-EnableDnsHostnames"
          },
          "name": "enableDnsHostnames",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::EC2::VPC.EnableDnsSupport``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpc.html#cfn-aws-ec2-vpc-EnableDnsSupport"
          },
          "name": "enableDnsSupport",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::EC2::VPC.InstanceTenancy``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpc.html#cfn-aws-ec2-vpc-instancetenancy"
          },
          "name": "instanceTenancy",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::EC2::VPC.Tags``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpc.html#cfn-aws-ec2-vpc-tags"
          },
          "name": "tags",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/cdk.Token"
                          },
                          {
                            "fqn": "@aws-cdk/cdk.Tag"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.cloudformation.VPNConnectionResource": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": {
        "fqn": "@aws-cdk/cdk.Resource"
      },
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-connection.html"
      },
      "fqn": "@aws-cdk/aws-ec2.cloudformation.VPNConnectionResource",
      "initializer": {
        "docs": {
          "comment": "Creates a new ``AWS::EC2::VPNConnection``."
        },
        "initializer": true,
        "parameters": [
          {
            "docs": {
              "comment": "the ``cdk.Construct`` this ``VPNConnectionResource`` is a part of"
            },
            "name": "parent",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "docs": {
              "comment": "the name of the resource in the ``cdk.Construct`` tree"
            },
            "name": "name",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "comment": "the properties of this ``VPNConnectionResource``"
            },
            "name": "properties",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.cloudformation.VPNConnectionResourceProps"
            }
          }
        ]
      },
      "kind": "class",
      "methods": [
        {
          "name": "renderProperties",
          "protected": true,
          "returns": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        }
      ],
      "name": "VPNConnectionResource",
      "namespace": "@aws-cdk/aws-ec2.cloudformation",
      "properties": [
        {
          "const": true,
          "docs": {
            "comment": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "name": "resourceTypeName",
          "static": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "subtypes": [
        "@aws-cdk/aws-ec2.cloudformation.VPNConnectionResource.VpnTunnelOptionsSpecificationProperty"
      ]
    },
    "@aws-cdk/aws-ec2.cloudformation.VPNConnectionResource.VpnTunnelOptionsSpecificationProperty": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-vpnconnection-vpntunneloptionsspecification.html"
      },
      "fqn": "@aws-cdk/aws-ec2.cloudformation.VPNConnectionResource.VpnTunnelOptionsSpecificationProperty",
      "kind": "interface",
      "name": "VpnTunnelOptionsSpecificationProperty",
      "namespace": "@aws-cdk/aws-ec2.cloudformation.VPNConnectionResource",
      "parenttype": "@aws-cdk/aws-ec2.cloudformation.VPNConnectionResource",
      "properties": [
        {
          "docs": {
            "comment": "``VPNConnectionResource.VpnTunnelOptionsSpecificationProperty.PreSharedKey``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-vpnconnection-vpntunneloptionsspecification.html#cfn-ec2-vpnconnection-vpntunneloptionsspecification-presharedkey"
          },
          "name": "preSharedKey",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``VPNConnectionResource.VpnTunnelOptionsSpecificationProperty.TunnelInsideCidr``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-vpnconnection-vpntunneloptionsspecification.html#cfn-ec2-vpnconnection-vpntunneloptionsspecification-tunnelinsidecidr"
          },
          "name": "tunnelInsideCidr",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.cloudformation.VPNConnectionResourceProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-connection.html"
      },
      "fqn": "@aws-cdk/aws-ec2.cloudformation.VPNConnectionResourceProps",
      "kind": "interface",
      "name": "VPNConnectionResourceProps",
      "namespace": "@aws-cdk/aws-ec2.cloudformation",
      "properties": [
        {
          "docs": {
            "comment": "``AWS::EC2::VPNConnection.CustomerGatewayId``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-connection.html#cfn-ec2-vpnconnection-customergatewayid"
          },
          "name": "customerGatewayId",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::EC2::VPNConnection.Type``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-connection.html#cfn-ec2-vpnconnection-type"
          },
          "name": "type",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::EC2::VPNConnection.VpnGatewayId``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-connection.html#cfn-ec2-vpnconnection-vpngatewayid"
          },
          "name": "vpnGatewayId",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::EC2::VPNConnection.StaticRoutesOnly``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-connection.html#cfn-ec2-vpnconnection-StaticRoutesOnly"
          },
          "name": "staticRoutesOnly",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::EC2::VPNConnection.Tags``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-connection.html#cfn-ec2-vpnconnection-tags"
          },
          "name": "tags",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/cdk.Token"
                          },
                          {
                            "fqn": "@aws-cdk/cdk.Tag"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::EC2::VPNConnection.VpnTunnelOptionsSpecifications``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-connection.html#cfn-ec2-vpnconnection-vpntunneloptionsspecifications"
          },
          "name": "vpnTunnelOptionsSpecifications",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/cdk.Token"
                          },
                          {
                            "fqn": "@aws-cdk/aws-ec2.cloudformation.VPNConnectionResource.VpnTunnelOptionsSpecificationProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.cloudformation.VPNConnectionRouteResource": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": {
        "fqn": "@aws-cdk/cdk.Resource"
      },
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-connection-route.html"
      },
      "fqn": "@aws-cdk/aws-ec2.cloudformation.VPNConnectionRouteResource",
      "initializer": {
        "docs": {
          "comment": "Creates a new ``AWS::EC2::VPNConnectionRoute``."
        },
        "initializer": true,
        "parameters": [
          {
            "docs": {
              "comment": "the ``cdk.Construct`` this ``VPNConnectionRouteResource`` is a part of"
            },
            "name": "parent",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "docs": {
              "comment": "the name of the resource in the ``cdk.Construct`` tree"
            },
            "name": "name",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "comment": "the properties of this ``VPNConnectionRouteResource``"
            },
            "name": "properties",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.cloudformation.VPNConnectionRouteResourceProps"
            }
          }
        ]
      },
      "kind": "class",
      "methods": [
        {
          "name": "renderProperties",
          "protected": true,
          "returns": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        }
      ],
      "name": "VPNConnectionRouteResource",
      "namespace": "@aws-cdk/aws-ec2.cloudformation",
      "properties": [
        {
          "const": true,
          "docs": {
            "comment": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "name": "resourceTypeName",
          "static": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.cloudformation.VPNConnectionRouteResourceProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-connection-route.html"
      },
      "fqn": "@aws-cdk/aws-ec2.cloudformation.VPNConnectionRouteResourceProps",
      "kind": "interface",
      "name": "VPNConnectionRouteResourceProps",
      "namespace": "@aws-cdk/aws-ec2.cloudformation",
      "properties": [
        {
          "docs": {
            "comment": "``AWS::EC2::VPNConnectionRoute.DestinationCidrBlock``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-connection-route.html#cfn-ec2-vpnconnectionroute-cidrblock"
          },
          "name": "destinationCidrBlock",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::EC2::VPNConnectionRoute.VpnConnectionId``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-connection-route.html#cfn-ec2-vpnconnectionroute-connectionid"
          },
          "name": "vpnConnectionId",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.cloudformation.VPNGatewayResource": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": {
        "fqn": "@aws-cdk/cdk.Resource"
      },
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-gateway.html"
      },
      "fqn": "@aws-cdk/aws-ec2.cloudformation.VPNGatewayResource",
      "initializer": {
        "docs": {
          "comment": "Creates a new ``AWS::EC2::VPNGateway``."
        },
        "initializer": true,
        "parameters": [
          {
            "docs": {
              "comment": "the ``cdk.Construct`` this ``VPNGatewayResource`` is a part of"
            },
            "name": "parent",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "docs": {
              "comment": "the name of the resource in the ``cdk.Construct`` tree"
            },
            "name": "name",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "comment": "the properties of this ``VPNGatewayResource``"
            },
            "name": "properties",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.cloudformation.VPNGatewayResourceProps"
            }
          }
        ]
      },
      "kind": "class",
      "methods": [
        {
          "name": "renderProperties",
          "protected": true,
          "returns": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        }
      ],
      "name": "VPNGatewayResource",
      "namespace": "@aws-cdk/aws-ec2.cloudformation",
      "properties": [
        {
          "const": true,
          "docs": {
            "comment": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "name": "resourceTypeName",
          "static": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.cloudformation.VPNGatewayResourceProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-gateway.html"
      },
      "fqn": "@aws-cdk/aws-ec2.cloudformation.VPNGatewayResourceProps",
      "kind": "interface",
      "name": "VPNGatewayResourceProps",
      "namespace": "@aws-cdk/aws-ec2.cloudformation",
      "properties": [
        {
          "docs": {
            "comment": "``AWS::EC2::VPNGateway.Type``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-gateway.html#cfn-ec2-vpngateway-type"
          },
          "name": "type",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::EC2::VPNGateway.AmazonSideAsn``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-gateway.html#cfn-ec2-vpngateway-amazonsideasn"
          },
          "name": "amazonSideAsn",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "number"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::EC2::VPNGateway.Tags``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-gateway.html#cfn-ec2-vpngateway-tags"
          },
          "name": "tags",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/cdk.Token"
                          },
                          {
                            "fqn": "@aws-cdk/cdk.Tag"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.cloudformation.VPNGatewayRoutePropagationResource": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": {
        "fqn": "@aws-cdk/cdk.Resource"
      },
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-gatewayrouteprop.html"
      },
      "fqn": "@aws-cdk/aws-ec2.cloudformation.VPNGatewayRoutePropagationResource",
      "initializer": {
        "docs": {
          "comment": "Creates a new ``AWS::EC2::VPNGatewayRoutePropagation``."
        },
        "initializer": true,
        "parameters": [
          {
            "docs": {
              "comment": "the ``cdk.Construct`` this ``VPNGatewayRoutePropagationResource`` is a part of"
            },
            "name": "parent",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "docs": {
              "comment": "the name of the resource in the ``cdk.Construct`` tree"
            },
            "name": "name",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "comment": "the properties of this ``VPNGatewayRoutePropagationResource``"
            },
            "name": "properties",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.cloudformation.VPNGatewayRoutePropagationResourceProps"
            }
          }
        ]
      },
      "kind": "class",
      "methods": [
        {
          "name": "renderProperties",
          "protected": true,
          "returns": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        }
      ],
      "name": "VPNGatewayRoutePropagationResource",
      "namespace": "@aws-cdk/aws-ec2.cloudformation",
      "properties": [
        {
          "const": true,
          "docs": {
            "comment": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "name": "resourceTypeName",
          "static": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.cloudformation.VPNGatewayRoutePropagationResourceProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-gatewayrouteprop.html"
      },
      "fqn": "@aws-cdk/aws-ec2.cloudformation.VPNGatewayRoutePropagationResourceProps",
      "kind": "interface",
      "name": "VPNGatewayRoutePropagationResourceProps",
      "namespace": "@aws-cdk/aws-ec2.cloudformation",
      "properties": [
        {
          "docs": {
            "comment": "``AWS::EC2::VPNGatewayRoutePropagation.RouteTableIds``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-gatewayrouteprop.html#cfn-ec2-vpngatewayrouteprop-routetableids"
          },
          "name": "routeTableIds",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "primitive": "string"
                          },
                          {
                            "fqn": "@aws-cdk/cdk.Token"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::EC2::VPNGatewayRoutePropagation.VpnGatewayId``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-gatewayrouteprop.html#cfn-ec2-vpngatewayrouteprop-vpngatewayid"
          },
          "name": "vpnGatewayId",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.cloudformation.VolumeAttachmentResource": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": {
        "fqn": "@aws-cdk/cdk.Resource"
      },
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volumeattachment.html"
      },
      "fqn": "@aws-cdk/aws-ec2.cloudformation.VolumeAttachmentResource",
      "initializer": {
        "docs": {
          "comment": "Creates a new ``AWS::EC2::VolumeAttachment``."
        },
        "initializer": true,
        "parameters": [
          {
            "docs": {
              "comment": "the ``cdk.Construct`` this ``VolumeAttachmentResource`` is a part of"
            },
            "name": "parent",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "docs": {
              "comment": "the name of the resource in the ``cdk.Construct`` tree"
            },
            "name": "name",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "comment": "the properties of this ``VolumeAttachmentResource``"
            },
            "name": "properties",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.cloudformation.VolumeAttachmentResourceProps"
            }
          }
        ]
      },
      "kind": "class",
      "methods": [
        {
          "name": "renderProperties",
          "protected": true,
          "returns": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        }
      ],
      "name": "VolumeAttachmentResource",
      "namespace": "@aws-cdk/aws-ec2.cloudformation",
      "properties": [
        {
          "const": true,
          "docs": {
            "comment": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "name": "resourceTypeName",
          "static": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.cloudformation.VolumeAttachmentResourceProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volumeattachment.html"
      },
      "fqn": "@aws-cdk/aws-ec2.cloudformation.VolumeAttachmentResourceProps",
      "kind": "interface",
      "name": "VolumeAttachmentResourceProps",
      "namespace": "@aws-cdk/aws-ec2.cloudformation",
      "properties": [
        {
          "docs": {
            "comment": "``AWS::EC2::VolumeAttachment.Device``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volumeattachment.html#cfn-ec2-ebs-volumeattachment-device"
          },
          "name": "device",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::EC2::VolumeAttachment.InstanceId``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volumeattachment.html#cfn-ec2-ebs-volumeattachment-instanceid"
          },
          "name": "instanceId",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::EC2::VolumeAttachment.VolumeId``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volumeattachment.html#cfn-ec2-ebs-volumeattachment-volumeid"
          },
          "name": "volumeId",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.cloudformation.VolumeResource": {
      "assembly": "@aws-cdk/aws-ec2",
      "base": {
        "fqn": "@aws-cdk/cdk.Resource"
      },
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volume.html"
      },
      "fqn": "@aws-cdk/aws-ec2.cloudformation.VolumeResource",
      "initializer": {
        "docs": {
          "comment": "Creates a new ``AWS::EC2::Volume``."
        },
        "initializer": true,
        "parameters": [
          {
            "docs": {
              "comment": "the ``cdk.Construct`` this ``VolumeResource`` is a part of"
            },
            "name": "parent",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "docs": {
              "comment": "the name of the resource in the ``cdk.Construct`` tree"
            },
            "name": "name",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "comment": "the properties of this ``VolumeResource``"
            },
            "name": "properties",
            "type": {
              "fqn": "@aws-cdk/aws-ec2.cloudformation.VolumeResourceProps"
            }
          }
        ]
      },
      "kind": "class",
      "methods": [
        {
          "name": "renderProperties",
          "protected": true,
          "returns": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        }
      ],
      "name": "VolumeResource",
      "namespace": "@aws-cdk/aws-ec2.cloudformation",
      "properties": [
        {
          "const": true,
          "docs": {
            "comment": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "name": "resourceTypeName",
          "static": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ec2.cloudformation.VolumeResourceProps": {
      "assembly": "@aws-cdk/aws-ec2",
      "datatype": true,
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volume.html"
      },
      "fqn": "@aws-cdk/aws-ec2.cloudformation.VolumeResourceProps",
      "kind": "interface",
      "name": "VolumeResourceProps",
      "namespace": "@aws-cdk/aws-ec2.cloudformation",
      "properties": [
        {
          "docs": {
            "comment": "``AWS::EC2::Volume.AvailabilityZone``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volume.html#cfn-ec2-ebs-volume-availabilityzone"
          },
          "name": "availabilityZone",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::EC2::Volume.AutoEnableIO``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volume.html#cfn-ec2-ebs-volume-autoenableio"
          },
          "name": "autoEnableIo",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::EC2::Volume.Encrypted``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volume.html#cfn-ec2-ebs-volume-encrypted"
          },
          "name": "encrypted",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::EC2::Volume.Iops``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volume.html#cfn-ec2-ebs-volume-iops"
          },
          "name": "iops",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "number"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::EC2::Volume.KmsKeyId``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volume.html#cfn-ec2-ebs-volume-kmskeyid"
          },
          "name": "kmsKeyId",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::EC2::Volume.Size``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volume.html#cfn-ec2-ebs-volume-size"
          },
          "name": "size",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "number"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::EC2::Volume.SnapshotId``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volume.html#cfn-ec2-ebs-volume-snapshotid"
          },
          "name": "snapshotId",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::EC2::Volume.Tags``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volume.html#cfn-ec2-ebs-volume-tags"
          },
          "name": "tags",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/cdk.Token"
                          },
                          {
                            "fqn": "@aws-cdk/cdk.Tag"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::EC2::Volume.VolumeType``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volume.html#cfn-ec2-ebs-volume-volumetype"
          },
          "name": "volumeType",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        }
      ]
    }
  },
  "version": "0.7.3-beta"
}
