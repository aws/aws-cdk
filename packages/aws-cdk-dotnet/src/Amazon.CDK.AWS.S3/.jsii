{
  "fingerprint": "xc1qhBRWZU2dMRRG1LMtI2FcSQP/4BKLi+ZvgJib79E=",
  "dependencies": {
    "@aws-cdk/aws-iam": {
      "dependencies": {
        "@aws-cdk/cdk": {
          "dependencies": {
            "@aws-cdk/cx-api": {
              "targets": {
                "dotnet": {
                  "namespace": "Amazon.CDK.CXAPI"
                },
                "java": {
                  "maven": {
                    "artifactId": "cxapi",
                    "groupId": "com.amazonaws.cdk"
                  },
                  "package": "com.amazonaws.cdk.cxapi"
                },
                "js": {
                  "npm": "@aws-cdk/cx-api"
                }
              },
              "version": "0.7.3-beta"
            }
          },
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK"
            },
            "java": {
              "maven": {
                "artifactId": "cdk",
                "groupId": "com.amazonaws.cdk"
              },
              "package": "com.amazonaws.cdk"
            },
            "js": {
              "npm": "@aws-cdk/cdk"
            }
          },
          "version": "0.7.3-beta"
        }
      },
      "targets": {
        "dotnet": {
          "namespace": "Amazon.CDK.AWS.IAM"
        },
        "java": {
          "maven": {
            "artifactId": "aws-iam",
            "groupId": "com.amazonaws.cdk"
          },
          "package": "com.amazonaws.cdk.aws.iam"
        },
        "js": {
          "npm": "@aws-cdk/aws-iam"
        }
      },
      "version": "0.7.3-beta"
    },
    "@aws-cdk/aws-kms": {
      "dependencies": {
        "@aws-cdk/aws-iam": {
          "dependencies": {
            "@aws-cdk/cdk": {
              "dependencies": {
                "@aws-cdk/cx-api": {
                  "targets": {
                    "dotnet": {
                      "namespace": "Amazon.CDK.CXAPI"
                    },
                    "java": {
                      "maven": {
                        "artifactId": "cxapi",
                        "groupId": "com.amazonaws.cdk"
                      },
                      "package": "com.amazonaws.cdk.cxapi"
                    },
                    "js": {
                      "npm": "@aws-cdk/cx-api"
                    }
                  },
                  "version": "0.7.3-beta"
                }
              },
              "targets": {
                "dotnet": {
                  "namespace": "Amazon.CDK"
                },
                "java": {
                  "maven": {
                    "artifactId": "cdk",
                    "groupId": "com.amazonaws.cdk"
                  },
                  "package": "com.amazonaws.cdk"
                },
                "js": {
                  "npm": "@aws-cdk/cdk"
                }
              },
              "version": "0.7.3-beta"
            }
          },
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.IAM"
            },
            "java": {
              "maven": {
                "artifactId": "aws-iam",
                "groupId": "com.amazonaws.cdk"
              },
              "package": "com.amazonaws.cdk.aws.iam"
            },
            "js": {
              "npm": "@aws-cdk/aws-iam"
            }
          },
          "version": "0.7.3-beta"
        },
        "@aws-cdk/cdk": {
          "dependencies": {
            "@aws-cdk/cx-api": {
              "targets": {
                "dotnet": {
                  "namespace": "Amazon.CDK.CXAPI"
                },
                "java": {
                  "maven": {
                    "artifactId": "cxapi",
                    "groupId": "com.amazonaws.cdk"
                  },
                  "package": "com.amazonaws.cdk.cxapi"
                },
                "js": {
                  "npm": "@aws-cdk/cx-api"
                }
              },
              "version": "0.7.3-beta"
            }
          },
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK"
            },
            "java": {
              "maven": {
                "artifactId": "cdk",
                "groupId": "com.amazonaws.cdk"
              },
              "package": "com.amazonaws.cdk"
            },
            "js": {
              "npm": "@aws-cdk/cdk"
            }
          },
          "version": "0.7.3-beta"
        }
      },
      "targets": {
        "dotnet": {
          "namespace": "Amazon.CDK.AWS.KMS"
        },
        "java": {
          "maven": {
            "artifactId": "aws-kms",
            "groupId": "com.amazonaws.cdk"
          },
          "package": "com.amazonaws.cdk.aws.kms"
        },
        "js": {
          "npm": "@aws-cdk/aws-kms"
        }
      },
      "version": "0.7.3-beta"
    },
    "@aws-cdk/cdk": {
      "dependencies": {
        "@aws-cdk/cx-api": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.CXAPI"
            },
            "java": {
              "maven": {
                "artifactId": "cxapi",
                "groupId": "com.amazonaws.cdk"
              },
              "package": "com.amazonaws.cdk.cxapi"
            },
            "js": {
              "npm": "@aws-cdk/cx-api"
            }
          },
          "version": "0.7.3-beta"
        }
      },
      "targets": {
        "dotnet": {
          "namespace": "Amazon.CDK"
        },
        "java": {
          "maven": {
            "artifactId": "cdk",
            "groupId": "com.amazonaws.cdk"
          },
          "package": "com.amazonaws.cdk"
        },
        "js": {
          "npm": "@aws-cdk/cdk"
        }
      },
      "version": "0.7.3-beta"
    }
  },
  "externals": {
    "@aws-cdk/aws-iam.IPrincipal": {
      "assembly": "@aws-cdk/aws-iam",
      "docs": {
        "comment": "A construct that represents an IAM principal, such as a user, group or role."
      },
      "fqn": "@aws-cdk/aws-iam.IPrincipal",
      "kind": "interface",
      "methods": [
        {
          "docs": {
            "comment": "Adds an IAM statement to the default inline policy associated with this\nprincipal. If a policy doesn't exist, it is created."
          },
          "name": "addToPolicy",
          "parameters": [
            {
              "name": "statement",
              "type": {
                "fqn": "@aws-cdk/cdk.PolicyStatement"
              }
            }
          ]
        },
        {
          "docs": {
            "comment": "Attaches an inline policy to this principal.\nThis is the same as calling `policy.addToXxx(principal)`."
          },
          "name": "attachInlinePolicy",
          "parameters": [
            {
              "docs": {
                "comment": "The policy resource to attach to this principal."
              },
              "name": "policy",
              "type": {
                "fqn": "@aws-cdk/aws-iam.Policy"
              }
            }
          ]
        },
        {
          "docs": {
            "comment": "Attaches a managed policy to this principal."
          },
          "name": "attachManagedPolicy",
          "parameters": [
            {
              "docs": {
                "comment": "The ARN of the managed policy"
              },
              "name": "arn",
              "type": {
                "primitive": "any"
              }
            }
          ]
        }
      ],
      "name": "IPrincipal",
      "namespace": "@aws-cdk/aws-iam",
      "properties": [
        {
          "docs": {
            "comment": "The IAM principal of this identity (i.e. AWS principal, service principal, etc)."
          },
          "immutable": true,
          "name": "principal",
          "type": {
            "fqn": "@aws-cdk/cdk.PolicyPrincipal"
          }
        }
      ]
    },
    "@aws-cdk/aws-kms.EncryptionKeyRef": {
      "abstract": true,
      "assembly": "@aws-cdk/aws-kms",
      "base": {
        "fqn": "@aws-cdk/cdk.Construct"
      },
      "fqn": "@aws-cdk/aws-kms.EncryptionKeyRef",
      "initializer": {
        "docs": {
          "comment": "Creates a new construct node."
        },
        "initializer": true,
        "parameters": [
          {
            "docs": {
              "comment": "The parent construct"
            },
            "name": "parent",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "name": "name",
            "type": {
              "primitive": "string"
            }
          }
        ]
      },
      "kind": "class",
      "methods": [
        {
          "docs": {
            "comment": "Defines an imported encryption key.\n\n`ref` can be obtained either via a call to `key.export()` or using\nliterals.\n\nFor example:\n\n     const keyRefProps = key.export();\n     const keyRef1 = EncryptionKeyRef.import(this, 'MyImportedKey1', keyRefProps);\n     const keyRef2 = EncryptionKeyRef.import(this, 'MyImportedKey2', {\n         keyArn: new KeyArn('arn:aws:kms:...')\n     });"
          },
          "name": "import",
          "parameters": [
            {
              "docs": {
                "comment": "The parent construct."
              },
              "name": "parent",
              "type": {
                "fqn": "@aws-cdk/cdk.Construct"
              }
            },
            {
              "docs": {
                "comment": "The name of the construct."
              },
              "name": "name",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "comment": "The key reference."
              },
              "name": "props",
              "type": {
                "fqn": "@aws-cdk/aws-kms.EncryptionKeyRefProps"
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/aws-kms.EncryptionKeyRef"
          },
          "static": true
        },
        {
          "docs": {
            "comment": "Defines a new alias for the key."
          },
          "name": "addAlias",
          "parameters": [
            {
              "name": "alias",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/aws-kms.EncryptionKeyAlias"
          }
        },
        {
          "docs": {
            "comment": "Adds a statement to the KMS key resource policy."
          },
          "name": "addToResourcePolicy",
          "parameters": [
            {
              "name": "statement",
              "type": {
                "fqn": "@aws-cdk/cdk.PolicyStatement"
              }
            }
          ]
        },
        {
          "docs": {
            "comment": "Exports this key from the current stack.",
            "returns": "a key ref which can be used in a call to `EncryptionKey.import(ref)`."
          },
          "name": "export",
          "returns": {
            "fqn": "@aws-cdk/aws-kms.EncryptionKeyRefProps"
          }
        }
      ],
      "name": "EncryptionKeyRef",
      "namespace": "@aws-cdk/aws-kms",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "comment": "The ARN of the key."
          },
          "immutable": true,
          "name": "keyArn",
          "type": {
            "fqn": "@aws-cdk/aws-kms.KeyArn"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "Optional policy document that represents the resource policy of this key.\n\nIf specified, addToResourcePolicy can be used to edit this policy.\nOtherwise this method will no-op."
          },
          "immutable": true,
          "name": "policy",
          "protected": true,
          "type": {
            "fqn": "@aws-cdk/cdk.PolicyDocument",
            "optional": true
          }
        }
      ]
    },
    "@aws-cdk/cdk.Arn": {
      "assembly": "@aws-cdk/cdk",
      "base": {
        "fqn": "@aws-cdk/cdk.Token"
      },
      "docs": {
        "comment": "An Amazon Resource Name (ARN).\nhttp://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html"
      },
      "fqn": "@aws-cdk/cdk.Arn",
      "initializer": {
        "docs": {
          "comment": "Creates a token that resolves to `value`. If value is a function,\nthe function is evaluated upon resolution and the value it returns will be\nuesd as the token's value."
        },
        "initializer": true,
        "parameters": [
          {
            "name": "valueOrFunction",
            "type": {
              "optional": true,
              "primitive": "any"
            }
          }
        ]
      },
      "kind": "class",
      "methods": [
        {
          "docs": {
            "comment": "Creates an ARN from components.\nIf any component is the empty string,\nan empty string will be inserted into the generated ARN\nat the location that component corresponds to."
          },
          "name": "fromComponents",
          "parameters": [
            {
              "name": "components",
              "type": {
                "fqn": "@aws-cdk/cdk.ArnComponents"
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/cdk.Arn"
          },
          "static": true
        },
        {
          "docs": {
            "comment": "Given an ARN, parses it and returns components.\n\nThe ARN it will be parsed and validated. The separator (`sep`) will be\nset to '/' if the 6th component includes a '/', in which case, `resource`\nwill be set to the value before the '/' and `resourceName` will be the\nrest. In case there is no '/', `resource` will be set to the 6th\ncomponents and `resourceName` will be set to the rest of the string.",
            "returns": "an ArnComponents object which allows access to the various\ncomponents of the ARN."
          },
          "name": "parse",
          "parameters": [
            {
              "name": "arn",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/cdk.ArnComponents"
          },
          "static": true
        },
        {
          "docs": {
            "comment": "Given a Token evaluating to ARN, parses it and returns components.\n\nThe ARN cannot be validated, since we don't have the actual value yet\nat the time of this function call. You will have to know the separator\nand the type of ARN.\n\nThe resulting `ArnComponents` object will contain tokens for the\nsubexpressions of the ARN, not string literals.\n\nWARNING: this function cannot properly parse the complete final\nresourceName (path) out of ARNs that use '/' to both separate the\n'resource' from the 'resourceName' AND to subdivide the resourceName\nfurther. For example, in S3 ARNs:\n\n      arn:aws:s3:::my_corporate_bucket/path/to/exampleobject.png\n\nAfter parsing the resourceName will not contain 'path/to/exampleobject.png'\nbut simply 'path'. This is a limitation because there is no slicing\nfunctionality in CloudFormation templates.",
            "returns": "an ArnComponents object which allows access to the various\ncomponents of the ARN."
          },
          "name": "parseToken",
          "parameters": [
            {
              "docs": {
                "comment": "The input token that contains an ARN"
              },
              "name": "arn",
              "type": {
                "fqn": "@aws-cdk/cdk.Token"
              }
            },
            {
              "docs": {
                "comment": "The separator used to separate resource from resourceName"
              },
              "name": "sep",
              "type": {
                "optional": true,
                "primitive": "string"
              }
            },
            {
              "docs": {
                "comment": "Whether there is a name component in the ARN at all.\nFor example, SNS Topics ARNs have the 'resource' component contain the\ntopic name, and no 'resourceName' component."
              },
              "name": "hasName",
              "type": {
                "optional": true,
                "primitive": "boolean"
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/cdk.ArnComponents"
          },
          "static": true
        }
      ],
      "name": "Arn",
      "namespace": "@aws-cdk/cdk"
    },
    "@aws-cdk/cdk.Construct": {
      "assembly": "@aws-cdk/cdk",
      "docs": {
        "comment": "Represents the building block of the construct graph.\nWhen a construct is created, it is always added as a child"
      },
      "fqn": "@aws-cdk/cdk.Construct",
      "initializer": {
        "docs": {
          "comment": "Creates a new construct node."
        },
        "initializer": true,
        "parameters": [
          {
            "docs": {
              "comment": "The parent construct"
            },
            "name": "parent",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "name": "name",
            "type": {
              "primitive": "string"
            }
          }
        ]
      },
      "kind": "class",
      "methods": [
        {
          "docs": {
            "comment": "Returns a string representation of this construct."
          },
          "name": "toString",
          "returns": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "comment": "Returns a string with a tree representation of this construct and it's children."
          },
          "name": "toTreeString",
          "parameters": [
            {
              "name": "depth",
              "type": {
                "optional": true,
                "primitive": "number"
              }
            }
          ],
          "returns": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "comment": "Return a descendant by path, or undefined",
            "returns": "a child by path or undefined if not found."
          },
          "name": "tryFindChild",
          "parameters": [
            {
              "name": "path",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/cdk.Construct",
            "optional": true
          }
        },
        {
          "docs": {
            "comment": "Return a descendant by path\n\nThrows an exception if the descendant is not found.",
            "returns": "Child with the given path."
          },
          "name": "findChild",
          "parameters": [
            {
              "name": "path",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/cdk.Construct"
          }
        },
        {
          "docs": {
            "comment": "This can be used to set contextual values.\nContext must be set before any children are added, since children may consult context info during construction.\nIf the key already exists, it will be overridden."
          },
          "name": "setContext",
          "parameters": [
            {
              "docs": {
                "comment": "The context key"
              },
              "name": "key",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "comment": "The context value"
              },
              "name": "value",
              "type": {
                "primitive": "any"
              }
            }
          ]
        },
        {
          "docs": {
            "comment": "Retrieves a value from tree context.\n\nContext is usually initialized at the root, but can be overridden at any point in the tree.",
            "returns": "The context value or undefined"
          },
          "name": "getContext",
          "parameters": [
            {
              "docs": {
                "comment": "The context key"
              },
              "name": "key",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "primitive": "any"
          }
        },
        {
          "docs": {
            "comment": "Retrieve a value from tree-global context\n\nIt is an error if the context object is not available."
          },
          "name": "requireContext",
          "parameters": [
            {
              "name": "key",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "primitive": "any"
          }
        },
        {
          "docs": {
            "comment": "Adds a metadata entry to this construct.\nEntries are arbitrary values and will also include a stack trace to allow tracing back to\nthe code location for when the entry was added. It can be used, for example, to include source\nmapping in CloudFormation templates to improve diagnostics."
          },
          "name": "addMetadata",
          "parameters": [
            {
              "docs": {
                "comment": "a string denoting the type of metadata"
              },
              "name": "type",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "comment": "the value of the metadata (can be a Token). If null/undefined, metadata will not be added."
              },
              "name": "data",
              "type": {
                "primitive": "any"
              }
            },
            {
              "docs": {
                "comment": "a function under which to restrict the metadata entry's stack trace (defaults to this.addMetadata)"
              },
              "name": "from",
              "type": {
                "optional": true,
                "primitive": "any"
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/cdk.Construct"
          }
        },
        {
          "docs": {
            "comment": "Adds a { \"aws:cdk:info\": <message> } metadata entry to this construct.\nThe toolkit will display the info message when apps are synthesized."
          },
          "name": "addInfo",
          "parameters": [
            {
              "docs": {
                "comment": "The info message."
              },
              "name": "message",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/cdk.Construct"
          }
        },
        {
          "docs": {
            "comment": "Adds a { warning: <message> } metadata entry to this construct.\nThe toolkit will display the warning when an app is synthesized, or fail\nif run in --strict mode."
          },
          "name": "addWarning",
          "parameters": [
            {
              "docs": {
                "comment": "The warning message."
              },
              "name": "message",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/cdk.Construct"
          }
        },
        {
          "docs": {
            "comment": "Adds an { error: <message> } metadata entry to this construct.\nThe toolkit will fail synthesis when errors are reported."
          },
          "name": "addError",
          "parameters": [
            {
              "docs": {
                "comment": "The error message."
              },
              "name": "message",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/cdk.Construct"
          }
        },
        {
          "docs": {
            "comment": "This method can be implemented by derived constructs in order to perform\nvalidation logic. It is called on all constructs before synthesis.",
            "returns": "An array of validation error messages, or an empty array if there the construct is valid."
          },
          "name": "validate",
          "returns": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "comment": "Invokes 'validate' on all child constructs and then on this construct (depth-first).",
            "returns": "A list of validation errors. If the list is empty, all constructs are valid."
          },
          "name": "validateTree",
          "returns": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/cdk.ValidationError"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "comment": "Return the ancestors (including self) of this Construct up until and excluding the indicated component"
          },
          "name": "ancestors",
          "parameters": [
            {
              "name": "upTo",
              "type": {
                "fqn": "@aws-cdk/cdk.Construct",
                "optional": true
              }
            }
          ],
          "protected": true,
          "returns": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/cdk.Construct"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "aws": "-cdk/runtime`` instead.",
            "comment": "Throws if the `props` bag doesn't include the property `name`.\nIn the future we can add some type-checking here, maybe even auto-generate during compilation.",
            "deprecated": "use ``requireProperty`` from ``"
          },
          "name": "required",
          "parameters": [
            {
              "docs": {
                "comment": "The props bag."
              },
              "name": "props",
              "type": {
                "primitive": "any"
              }
            },
            {
              "docs": {
                "comment": "The name of the required property."
              },
              "name": "name",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "protected": true,
          "returns": {
            "primitive": "any"
          }
        },
        {
          "docs": {
            "comment": "Adds a child construct to this node.",
            "returns": "The resolved path part name of the child"
          },
          "name": "addChild",
          "parameters": [
            {
              "docs": {
                "comment": "The child construct"
              },
              "name": "child",
              "type": {
                "fqn": "@aws-cdk/cdk.Construct"
              }
            },
            {
              "name": "childName",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "protected": true
        },
        {
          "docs": {
            "comment": "Locks this construct from allowing more children to be added. After this\ncall, no more children can be added to this construct or to any children."
          },
          "name": "lock",
          "protected": true
        },
        {
          "docs": {
            "comment": "Unlocks this costruct and allows mutations (adding children)."
          },
          "name": "unlock",
          "protected": true
        }
      ],
      "name": "Construct",
      "namespace": "@aws-cdk/cdk",
      "properties": [
        {
          "docs": {
            "comment": "Returns the parent of this node or undefined if this is a root node."
          },
          "immutable": true,
          "name": "parent",
          "type": {
            "fqn": "@aws-cdk/cdk.Construct",
            "optional": true
          }
        },
        {
          "docs": {
            "comment": "The name of this construct"
          },
          "immutable": true,
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "comment": "All direct children of this construct."
          },
          "immutable": true,
          "name": "children",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/cdk.Construct"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "comment": "Returns the path of all constructs from root to this construct, in string form.",
            "returns": "/-separated path of this Construct."
          },
          "immutable": true,
          "name": "path",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "comment": "An array of metadata objects associated with this construct.\nThis can be used, for example, to implement support for deprecation notices, source mapping, etc."
          },
          "immutable": true,
          "name": "metadata",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/cdk.MetadataEntry"
              },
              "kind": "array"
            }
          }
        }
      ]
    },
    "@aws-cdk/cdk.IDependable": {
      "assembly": "@aws-cdk/cdk",
      "datatype": true,
      "docs": {
        "comment": "Represents a construct that can be \"depended on\" via `addDependency`."
      },
      "fqn": "@aws-cdk/cdk.IDependable",
      "kind": "interface",
      "name": "IDependable",
      "namespace": "@aws-cdk/cdk",
      "properties": [
        {
          "docs": {
            "comment": "Returns the set of all stack elements (resources, parameters, conditions)\nthat should be added when a resource \"depends on\" this construct."
          },
          "immutable": true,
          "name": "dependencyElements",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/cdk.IDependable"
              },
              "kind": "array"
            }
          }
        }
      ]
    },
    "@aws-cdk/cdk.PolicyDocument": {
      "assembly": "@aws-cdk/cdk",
      "base": {
        "fqn": "@aws-cdk/cdk.Token"
      },
      "fqn": "@aws-cdk/cdk.PolicyDocument",
      "initializer": {
        "docs": {
          "comment": "Creates a new IAM policy document."
        },
        "initializer": true,
        "parameters": [
          {
            "name": "baseDocument",
            "type": {
              "optional": true,
              "primitive": "any"
            }
          }
        ]
      },
      "kind": "class",
      "methods": [
        {
          "name": "resolve",
          "returns": {
            "primitive": "any"
          }
        },
        {
          "name": "addStatement",
          "parameters": [
            {
              "name": "statement",
              "type": {
                "fqn": "@aws-cdk/cdk.PolicyStatement"
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/cdk.PolicyDocument"
          }
        }
      ],
      "name": "PolicyDocument",
      "namespace": "@aws-cdk/cdk",
      "properties": [
        {
          "immutable": true,
          "name": "isEmpty",
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "docs": {
            "comment": "The number of statements already added to this policy.\nCan be used, for example, to generate uniuqe \"sid\"s within the policy."
          },
          "immutable": true,
          "name": "statementCount",
          "type": {
            "primitive": "number"
          }
        }
      ]
    },
    "@aws-cdk/cdk.PolicyStatement": {
      "assembly": "@aws-cdk/cdk",
      "base": {
        "fqn": "@aws-cdk/cdk.Token"
      },
      "docs": {
        "comment": "Represents a statement in an IAM policy document."
      },
      "fqn": "@aws-cdk/cdk.PolicyStatement",
      "initializer": {
        "initializer": true,
        "parameters": [
          {
            "name": "effect",
            "type": {
              "fqn": "@aws-cdk/cdk.PolicyStatementEffect",
              "optional": true
            }
          }
        ]
      },
      "kind": "class",
      "methods": [
        {
          "name": "addAction",
          "parameters": [
            {
              "name": "action",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/cdk.PolicyStatement"
          }
        },
        {
          "name": "addActions",
          "parameters": [
            {
              "name": "actions",
              "type": {
                "primitive": "string"
              },
              "variadic": true
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/cdk.PolicyStatement"
          },
          "variadic": true
        },
        {
          "name": "addPrincipal",
          "parameters": [
            {
              "name": "principal",
              "type": {
                "fqn": "@aws-cdk/cdk.PolicyPrincipal"
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/cdk.PolicyStatement"
          }
        },
        {
          "name": "addAwsPrincipal",
          "parameters": [
            {
              "name": "arn",
              "type": {
                "primitive": "any"
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/cdk.PolicyStatement"
          }
        },
        {
          "name": "addAwsAccountPrincipal",
          "parameters": [
            {
              "name": "accountId",
              "type": {
                "primitive": "any"
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/cdk.PolicyStatement"
          }
        },
        {
          "name": "addServicePrincipal",
          "parameters": [
            {
              "name": "service",
              "type": {
                "primitive": "any"
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/cdk.PolicyStatement"
          }
        },
        {
          "name": "addFederatedPrincipal",
          "parameters": [
            {
              "name": "federated",
              "type": {
                "primitive": "any"
              }
            },
            {
              "name": "conditions",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/cdk.PolicyStatement"
          }
        },
        {
          "name": "addAccountRootPrincipal",
          "returns": {
            "fqn": "@aws-cdk/cdk.PolicyStatement"
          }
        },
        {
          "name": "addResource",
          "parameters": [
            {
              "name": "resource",
              "type": {
                "primitive": "any"
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/cdk.PolicyStatement"
          }
        },
        {
          "docs": {
            "comment": "Adds a ``\"*\"`` resource to this statement."
          },
          "name": "addAllResources",
          "returns": {
            "fqn": "@aws-cdk/cdk.PolicyStatement"
          }
        },
        {
          "name": "addResources",
          "parameters": [
            {
              "name": "resources",
              "type": {
                "primitive": "any"
              },
              "variadic": true
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/cdk.PolicyStatement"
          },
          "variadic": true
        },
        {
          "name": "describe",
          "parameters": [
            {
              "name": "sid",
              "type": {
                "primitive": "any"
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/cdk.PolicyStatement"
          }
        },
        {
          "docs": {
            "comment": "Sets the permission effect to deny access to resources."
          },
          "name": "allow",
          "returns": {
            "fqn": "@aws-cdk/cdk.PolicyStatement"
          }
        },
        {
          "docs": {
            "comment": "Sets the permission effect to allow access to resources."
          },
          "name": "deny",
          "returns": {
            "fqn": "@aws-cdk/cdk.PolicyStatement"
          }
        },
        {
          "docs": {
            "comment": "Add a condition to the Policy"
          },
          "name": "addCondition",
          "parameters": [
            {
              "name": "key",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "value",
              "type": {
                "primitive": "any"
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/cdk.PolicyStatement"
          }
        },
        {
          "docs": {
            "comment": "Add multiple conditions to the Policy"
          },
          "name": "addConditions",
          "parameters": [
            {
              "name": "conditions",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/cdk.PolicyStatement"
          }
        },
        {
          "docs": {
            "comment": "Add a condition to the Policy.",
            "deprecated": "For backwards compatibility. Use addCondition() instead."
          },
          "name": "setCondition",
          "parameters": [
            {
              "name": "key",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "value",
              "type": {
                "primitive": "any"
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/cdk.PolicyStatement"
          }
        },
        {
          "name": "limitToAccount",
          "parameters": [
            {
              "name": "accountId",
              "type": {
                "primitive": "any"
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/cdk.PolicyStatement"
          }
        },
        {
          "name": "resolve",
          "returns": {
            "primitive": "any"
          }
        },
        {
          "name": "toJson",
          "returns": {
            "primitive": "any"
          }
        }
      ],
      "name": "PolicyStatement",
      "namespace": "@aws-cdk/cdk",
      "properties": [
        {
          "docs": {
            "comment": "Indicates if this permission has a \"Principal\" section."
          },
          "immutable": true,
          "name": "hasPrincipal",
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "docs": {
            "comment": "Indicates if this permission as at least one resource associated with it."
          },
          "immutable": true,
          "name": "hasResource",
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "docs": {
            "comment": "Indicates if this permission has only a ``\"*\"`` resource associated with it."
          },
          "immutable": true,
          "name": "isOnlyStarResource",
          "type": {
            "primitive": "boolean"
          }
        }
      ]
    },
    "@aws-cdk/cdk.Referenceable": {
      "abstract": true,
      "assembly": "@aws-cdk/cdk",
      "base": {
        "fqn": "@aws-cdk/cdk.StackElement"
      },
      "docs": {
        "comment": "A construct, which is part of a stack and can be referenced using it's logical ID\nusing the CloudFormation intrinsic function { Ref: ID }."
      },
      "fqn": "@aws-cdk/cdk.Referenceable",
      "initializer": {
        "docs": {
          "comment": "Creates an entity and binds it to a tree.\nNote that the root of the tree must be a Stack object (not just any Root)."
        },
        "initializer": true,
        "parameters": [
          {
            "docs": {
              "comment": "The parent construct"
            },
            "name": "parent",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "name": "name",
            "type": {
              "primitive": "string"
            }
          }
        ]
      },
      "kind": "class",
      "name": "Referenceable",
      "namespace": "@aws-cdk/cdk",
      "properties": [
        {
          "docs": {
            "comment": "Returns a token to a CloudFormation { Ref } that references this entity based on it's logical ID."
          },
          "immutable": true,
          "name": "ref",
          "type": {
            "fqn": "@aws-cdk/cdk.Token"
          }
        }
      ]
    },
    "@aws-cdk/cdk.RemovalPolicy": {
      "assembly": "@aws-cdk/cdk",
      "fqn": "@aws-cdk/cdk.RemovalPolicy",
      "kind": "enum",
      "members": [
        {
          "name": "Destroy"
        },
        {
          "name": "Orphan"
        },
        {
          "name": "Forbid"
        }
      ],
      "name": "RemovalPolicy",
      "namespace": "@aws-cdk/cdk"
    },
    "@aws-cdk/cdk.Resource": {
      "assembly": "@aws-cdk/cdk",
      "base": {
        "fqn": "@aws-cdk/cdk.Referenceable"
      },
      "docs": {
        "comment": "Represents a CloudFormation resource."
      },
      "fqn": "@aws-cdk/cdk.Resource",
      "initializer": {
        "docs": {
          "comment": "Creates a resource construct."
        },
        "initializer": true,
        "parameters": [
          {
            "name": "parent",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "name": "name",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/cdk.ResourceProps"
            }
          }
        ]
      },
      "kind": "class",
      "methods": [
        {
          "docs": {
            "comment": "A decoration used to create a CloudFormation attribute property."
          },
          "name": "attribute",
          "parameters": [
            {
              "docs": {
                "comment": "Custom name for the attribute (default is the name of the property)\nNOTE: we return \"any\" here to satistfy jsii, which doesn't support lambdas."
              },
              "name": "customName",
              "type": {
                "optional": true,
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "primitive": "any"
          },
          "static": true
        },
        {
          "docs": {
            "comment": "Returns a token for an runtime attribute of this resource.\nIdeally, use generated attribute accessors (e.g. `resource.arn`), but this can be used for future compatibility\nin case there is no generated attribute."
          },
          "name": "getAtt",
          "parameters": [
            {
              "docs": {
                "comment": "The name of the attribute."
              },
              "name": "attributeName",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/cdk.Token"
          }
        },
        {
          "docs": {
            "comment": "Adds a dependency on another resource."
          },
          "name": "addDependency",
          "parameters": [
            {
              "docs": {
                "comment": "The other resource."
              },
              "name": "other",
              "type": {
                "fqn": "@aws-cdk/cdk.IDependable"
              },
              "variadic": true
            }
          ],
          "variadic": true
        },
        {
          "docs": {
            "comment": "Emits CloudFormation for this resource."
          },
          "name": "toCloudFormation",
          "returns": {
            "primitive": "json"
          }
        },
        {
          "name": "renderProperties",
          "protected": true,
          "returns": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        }
      ],
      "name": "Resource",
      "namespace": "@aws-cdk/cdk",
      "properties": [
        {
          "docs": {
            "comment": "Options for this resource, such as condition, update policy etc."
          },
          "immutable": true,
          "name": "options",
          "type": {
            "fqn": "@aws-cdk/cdk.ResourceOptions"
          }
        },
        {
          "docs": {
            "comment": "AWS resource type."
          },
          "immutable": true,
          "name": "resourceType",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "comment": "AWS resource properties"
          },
          "immutable": true,
          "name": "properties",
          "protected": true,
          "type": {
            "primitive": "any"
          }
        }
      ]
    },
    "@aws-cdk/cdk.StackElement": {
      "abstract": true,
      "assembly": "@aws-cdk/cdk",
      "base": {
        "fqn": "@aws-cdk/cdk.Construct"
      },
      "docs": {
        "comment": "An element of a CloudFormation stack."
      },
      "fqn": "@aws-cdk/cdk.StackElement",
      "initializer": {
        "docs": {
          "comment": "Creates an entity and binds it to a tree.\nNote that the root of the tree must be a Stack object (not just any Root)."
        },
        "initializer": true,
        "parameters": [
          {
            "docs": {
              "comment": "The parent construct"
            },
            "name": "parent",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "name": "name",
            "type": {
              "primitive": "string"
            }
          }
        ]
      },
      "interfaces": [
        {
          "fqn": "@aws-cdk/cdk.IDependable"
        }
      ],
      "kind": "class",
      "methods": [
        {
          "abstract": true,
          "docs": {
            "comment": "Returns the CloudFormation 'snippet' for this entity. The snippet will only be merged\nat the root level to ensure there are no identity conflicts.\n\nFor example, a Resource class will return something like:\n{\n     Resources: {\n         [this.logicalId]: {\n             Type: this.resourceType,\n             Properties: this.props,\n             Condition: this.condition\n         }\n     }\n}"
          },
          "name": "toCloudFormation",
          "returns": {
            "primitive": "json"
          }
        }
      ],
      "name": "StackElement",
      "namespace": "@aws-cdk/cdk",
      "properties": [
        {
          "docs": {
            "comment": "The logical ID for this CloudFormation stack element"
          },
          "immutable": true,
          "name": "logicalId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "comment": "The stack this Construct has been made a part of"
          },
          "name": "stack",
          "protected": true,
          "type": {
            "fqn": "@aws-cdk/cdk.Stack"
          }
        },
        {
          "docs": {
            "returns": "the stack trace of the point where this Resource was created from, sourced\nfrom the +metadata+ entry typed +aws:cdk:logicalId+, and with the bottom-most\nnode +internal+ entries filtered."
          },
          "immutable": true,
          "name": "creationStackTrace",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "comment": "Return the path with respect to the stack"
          },
          "immutable": true,
          "name": "stackPath",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "comment": "Returns the set of all stack elements (resources, parameters, conditions)\nthat should be added when a resource \"depends on\" this construct."
          },
          "immutable": true,
          "name": "dependencyElements",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/cdk.IDependable"
              },
              "kind": "array"
            }
          }
        }
      ]
    },
    "@aws-cdk/cdk.Tag": {
      "assembly": "@aws-cdk/cdk",
      "datatype": true,
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html"
      },
      "fqn": "@aws-cdk/cdk.Tag",
      "kind": "interface",
      "name": "Tag",
      "namespace": "@aws-cdk/cdk",
      "properties": [
        {
          "docs": {
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html#cfn-resource-tags-key"
          },
          "name": "key",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html#cfn-resource-tags-value"
          },
          "name": "value",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/cdk.Token": {
      "assembly": "@aws-cdk/cdk",
      "docs": {
        "comment": "Represents a lazy-evaluated value. Can be used to delay evaluation of a certain value\nin case, for example, that it requires some context or late-bound data."
      },
      "fqn": "@aws-cdk/cdk.Token",
      "initializer": {
        "docs": {
          "comment": "Creates a token that resolves to `value`. If value is a function,\nthe function is evaluated upon resolution and the value it returns will be\nuesd as the token's value."
        },
        "initializer": true,
        "parameters": [
          {
            "name": "valueOrFunction",
            "type": {
              "optional": true,
              "primitive": "any"
            }
          }
        ]
      },
      "kind": "class",
      "methods": [
        {
          "docs": {
            "returns": "The resolved value for this token."
          },
          "name": "resolve",
          "returns": {
            "primitive": "any"
          }
        }
      ],
      "name": "Token",
      "namespace": "@aws-cdk/cdk"
    }
  },
  "name": "@aws-cdk/aws-s3",
  "readme": {
    "markdown": "## AWS S3 Construct Library\n\nDefine an unencrypted S3 bucket.\n\n```ts\nnew Bucket(this, 'MyFirstBucket');\n```\n\n`Bucket` constructs expose the following deploy-time attributes:\n\n * `bucketArn` - the ARN of the bucket (i.e. `arn:aws:s3:::bucket_name`)\n * `bucketName` - the name of the bucket (i.e. `bucket_name`)\n * `bucketUrl` - the URL of the bucket (i.e.\n   `https://s3.us-west-1.amazonaws.com/onlybucket`)\n * `arnForObjects(...pattern)` - the ARN of an object or objects within the\n   bucket (i.e.\n   `arn:aws:s3:::my_corporate_bucket/exampleobject.png` or\n   `arn:aws:s3:::my_corporate_bucket/Development/*`)\n * `urlForObject(key)` - the URL of an object within the bucket (i.e.\n   `https://s3.cn-north-1.amazonaws.com.cn/china-bucket/mykey`)\n\n### Encryption\n\nDefine a KMS-encrypted bucket:\n\n```ts\nconst bucket = new Bucket(this, 'MyUnencryptedBucket', {\n    encryption: BucketEncryption.Kms\n});\n\n// you can access the encryption key:\nassert(bucket.encryptionKey instanceof kms.EncryptionKey);\n```\n\nYou can also supply your own key:\n\n```ts\nconst myKmsKey = new kms.EncryptionKey(this, 'MyKey');\n\nconst bucket = new Bucket(this, 'MyEncryptedBucket', {\n    encryption: BucketEncryption.Kms,\n    encryptionKey: myKmsKey\n});\n\nassert(bucket.encryptionKey === myKmsKey);\n```\n\nUse `BucketEncryption.ManagedKms` to use the S3 master KMS key:\n\n```ts\nconst bucket = new Bucket(this, 'Buck', {\n    encryption: BucketEncryption.ManagedKms\n});\n\nassert(bucket.encryptionKey == null);\n```\n\n### Bucket Policy\n\nBy default, a bucket policy will be automatically created for the bucket upon the first call to `addToPolicy(statement)`:\n\n```ts\nconst bucket = new Bucket(this, 'MyBucket');\nbucket.addToPolicy(statement);\n\n// we now have a policy!\n```\n\nYou can bring you own policy as well:\n\n```ts\nconst policy = new BucketPolicy(this, 'MyBucketPolicy');\nconst bucket = new Bucket(this, 'MyBucket', { policy });\n```\n\n### Importing and Exporting Buckets\n\nYou can create a `Bucket` construct that represents an external/existing/unowned bucket by using the `Bucket.import` factory method.\n\nThis method accepts an object that adheres to `BucketRef` which basically include tokens to bucket's attributes.\n\nThis means that you can define a `BucketRef` using token literals:\n\n```ts\nconst bucket = Bucket.import(this, {\n    bucketArn: new BucketArn('arn:aws:s3:::my-bucket')\n});\n\n// now you can just call methods on the bucket\nbucket.grantReadWrite(user);\n```\n\nThe `bucket.export()` method can be used to \"export\" the bucket from the current stack. It returns a `BucketRef` object that can later be used in a call to `Bucket.import` in another stack.\n\nHere's an example.\n\nLet's define a stack with an S3 bucket and export it using `bucket.export()`.\n\n```ts\nclass Producer extends Stack {\n    public readonly myBucketRef: BucketRef;\n\n    constructor(parent: App, name: string) {\n        super(parent, name);\n\n        const bucket = new Bucket(this, 'MyBucket');\n        this.myBucketRef = bucket.export();\n    }\n}\n```\n\nNow let's define a stack that requires a BucketRef as an input and uses\n`Bucket.import` to create a `Bucket` object that represents this external\nbucket. Grant a user principal created within this consuming stack read/write\npermissions to this bucket and contents.\n\n```ts\ninterface ConsumerProps {\n    public userBucketRef: BucketRef;\n}\n\nclass Consumer extends Stack {\n    constructor(parent: App, name: string, props: ConsumerProps) {\n        super(parent, name);\n\n        const user = new User(this, 'MyUser');\n        const userBucket = Bucket.import(this, props.userBucketRef);\n        userBucket.grantReadWrite(user);\n    }\n}\n```\n\nNow, let's define our CDK app to bind these together:\n\n```ts\nconst app = new App(process.argv);\n\nconst producer = new Producer(app, 'produce');\n\nnew Consumer(app, 'consume', {\n    userBucketRef: producer.myBucketRef\n});\n\nprocess.stdout.write(app.run());\n```\n"
  },
  "schema": "jsii/1.0",
  "targets": {
    "dotnet": {
      "namespace": "Amazon.CDK.AWS.S3"
    },
    "java": {
      "maven": {
        "artifactId": "aws-s3",
        "groupId": "com.amazonaws.cdk"
      },
      "package": "com.amazonaws.cdk.aws.s3"
    },
    "js": {
      "npm": "@aws-cdk/aws-s3"
    }
  },
  "types": {
    "@aws-cdk/aws-s3.Bucket": {
      "assembly": "@aws-cdk/aws-s3",
      "base": {
        "fqn": "@aws-cdk/aws-s3.BucketRef"
      },
      "docs": {
        "comment": "An S3 bucket with associated policy objects\n\nThis bucket does not yet have all features that exposed by the underlying\nBucketResource."
      },
      "fqn": "@aws-cdk/aws-s3.Bucket",
      "initializer": {
        "initializer": true,
        "parameters": [
          {
            "name": "parent",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "name": "name",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-s3.BucketProps",
              "optional": true
            }
          }
        ]
      },
      "kind": "class",
      "methods": [
        {
          "docs": {
            "comment": "Add a lifecycle rule to the bucket"
          },
          "name": "addLifecycleRule",
          "parameters": [
            {
              "docs": {
                "comment": "The rule to add"
              },
              "name": "rule",
              "type": {
                "fqn": "@aws-cdk/aws-s3.LifecycleRule"
              }
            }
          ]
        }
      ],
      "name": "Bucket",
      "namespace": "@aws-cdk/aws-s3",
      "properties": [
        {
          "docs": {
            "comment": "The ARN of the bucket."
          },
          "immutable": true,
          "name": "bucketArn",
          "type": {
            "fqn": "@aws-cdk/aws-s3.BucketArn"
          }
        },
        {
          "docs": {
            "comment": "The name of the bucket."
          },
          "immutable": true,
          "name": "bucketName",
          "type": {
            "fqn": "@aws-cdk/aws-s3.BucketName"
          }
        },
        {
          "immutable": true,
          "name": "domainName",
          "type": {
            "fqn": "@aws-cdk/aws-s3.BucketDomainName"
          }
        },
        {
          "immutable": true,
          "name": "dualstackDomainName",
          "type": {
            "fqn": "@aws-cdk/aws-s3.BucketDualStackDomainName"
          }
        },
        {
          "docs": {
            "comment": "Optional KMS encryption key associated with this bucket."
          },
          "immutable": true,
          "name": "encryptionKey",
          "type": {
            "fqn": "@aws-cdk/aws-kms.EncryptionKeyRef",
            "optional": true
          }
        },
        {
          "docs": {
            "comment": "The resource policy assoicated with this bucket.\n\nIf `autoCreatePolicy` is true, a `BucketPolicy` will be created upon the\nfirst call to addToResourcePolicy(s)."
          },
          "name": "policy",
          "protected": true,
          "type": {
            "fqn": "@aws-cdk/aws-s3.BucketPolicy",
            "optional": true
          }
        },
        {
          "docs": {
            "comment": "Indicates if a bucket resource policy should automatically created upon\nthe first call to `addToResourcePolicy`."
          },
          "name": "autoCreatePolicy",
          "protected": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.BucketArn": {
      "assembly": "@aws-cdk/aws-s3",
      "base": {
        "fqn": "@aws-cdk/cdk.Arn"
      },
      "fqn": "@aws-cdk/aws-s3.BucketArn",
      "initializer": {
        "docs": {
          "comment": "Creates a token that resolves to `value`. If value is a function,\nthe function is evaluated upon resolution and the value it returns will be\nuesd as the token's value."
        },
        "initializer": true,
        "parameters": [
          {
            "name": "valueOrFunction",
            "type": {
              "optional": true,
              "primitive": "any"
            }
          }
        ]
      },
      "kind": "class",
      "name": "BucketArn",
      "namespace": "@aws-cdk/aws-s3"
    },
    "@aws-cdk/aws-s3.BucketDomainName": {
      "assembly": "@aws-cdk/aws-s3",
      "base": {
        "fqn": "@aws-cdk/cdk.Token"
      },
      "fqn": "@aws-cdk/aws-s3.BucketDomainName",
      "initializer": {
        "docs": {
          "comment": "Creates a token that resolves to `value`. If value is a function,\nthe function is evaluated upon resolution and the value it returns will be\nuesd as the token's value."
        },
        "initializer": true,
        "parameters": [
          {
            "name": "valueOrFunction",
            "type": {
              "optional": true,
              "primitive": "any"
            }
          }
        ]
      },
      "kind": "class",
      "name": "BucketDomainName",
      "namespace": "@aws-cdk/aws-s3"
    },
    "@aws-cdk/aws-s3.BucketDualStackDomainName": {
      "assembly": "@aws-cdk/aws-s3",
      "base": {
        "fqn": "@aws-cdk/cdk.Token"
      },
      "fqn": "@aws-cdk/aws-s3.BucketDualStackDomainName",
      "initializer": {
        "docs": {
          "comment": "Creates a token that resolves to `value`. If value is a function,\nthe function is evaluated upon resolution and the value it returns will be\nuesd as the token's value."
        },
        "initializer": true,
        "parameters": [
          {
            "name": "valueOrFunction",
            "type": {
              "optional": true,
              "primitive": "any"
            }
          }
        ]
      },
      "kind": "class",
      "name": "BucketDualStackDomainName",
      "namespace": "@aws-cdk/aws-s3"
    },
    "@aws-cdk/aws-s3.BucketEncryption": {
      "assembly": "@aws-cdk/aws-s3",
      "docs": {
        "comment": "What kind of server-side encryption to apply to this bucket"
      },
      "fqn": "@aws-cdk/aws-s3.BucketEncryption",
      "kind": "enum",
      "members": [
        {
          "name": "Unencrypted"
        },
        {
          "name": "KmsManaged"
        },
        {
          "name": "S3Managed"
        },
        {
          "name": "Kms"
        }
      ],
      "name": "BucketEncryption",
      "namespace": "@aws-cdk/aws-s3"
    },
    "@aws-cdk/aws-s3.BucketName": {
      "assembly": "@aws-cdk/aws-s3",
      "base": {
        "fqn": "@aws-cdk/cdk.Token"
      },
      "docs": {
        "comment": "The name of the bucket."
      },
      "fqn": "@aws-cdk/aws-s3.BucketName",
      "initializer": {
        "docs": {
          "comment": "Creates a token that resolves to `value`. If value is a function,\nthe function is evaluated upon resolution and the value it returns will be\nuesd as the token's value."
        },
        "initializer": true,
        "parameters": [
          {
            "name": "valueOrFunction",
            "type": {
              "optional": true,
              "primitive": "any"
            }
          }
        ]
      },
      "kind": "class",
      "name": "BucketName",
      "namespace": "@aws-cdk/aws-s3"
    },
    "@aws-cdk/aws-s3.BucketPolicy": {
      "assembly": "@aws-cdk/aws-s3",
      "base": {
        "fqn": "@aws-cdk/cdk.Construct"
      },
      "docs": {
        "comment": "Applies an Amazon S3 bucket policy to an Amazon S3 bucket."
      },
      "fqn": "@aws-cdk/aws-s3.BucketPolicy",
      "initializer": {
        "initializer": true,
        "parameters": [
          {
            "name": "parent",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "name": "name",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-s3.BucketPolicyProps"
            }
          }
        ]
      },
      "kind": "class",
      "name": "BucketPolicy",
      "namespace": "@aws-cdk/aws-s3",
      "properties": [
        {
          "docs": {
            "comment": "A policy document containing permissions to add to the specified bucket.\nFor more information, see Access Policy Language Overview in the Amazon\nSimple Storage Service Developer Guide."
          },
          "immutable": true,
          "name": "document",
          "type": {
            "fqn": "@aws-cdk/cdk.PolicyDocument"
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.BucketPolicyProps": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "fqn": "@aws-cdk/aws-s3.BucketPolicyProps",
      "kind": "interface",
      "name": "BucketPolicyProps",
      "namespace": "@aws-cdk/aws-s3",
      "properties": [
        {
          "docs": {
            "comment": "The Amazon S3 bucket that the policy applies to."
          },
          "name": "bucket",
          "type": {
            "fqn": "@aws-cdk/aws-s3.BucketRef"
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.BucketProps": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "fqn": "@aws-cdk/aws-s3.BucketProps",
      "kind": "interface",
      "name": "BucketProps",
      "namespace": "@aws-cdk/aws-s3",
      "properties": [
        {
          "docs": {
            "comment": "The kind of server-side encryption to apply to this bucket.\n\nIf you choose KMS, you can specify a KMS key via `encryptionKey`. If\nencryption key is not specified, a key will automatically be created.",
            "default": "Unencrypted"
          },
          "name": "encryption",
          "type": {
            "fqn": "@aws-cdk/aws-s3.BucketEncryption",
            "optional": true
          }
        },
        {
          "docs": {
            "comment": "External KMS key to use for bucket encryption.\n\nThe 'encryption' property must be either not specified or set to \"Kms\".\nAn error will be emitted if encryption is set to \"Unencrypted\" or\n\"Managed\".",
            "default": "If encryption is set to \"Kms\" and this property is undefined, a\nnew KMS key will be created and associated with this bucket."
          },
          "name": "encryptionKey",
          "type": {
            "fqn": "@aws-cdk/aws-kms.EncryptionKeyRef",
            "optional": true
          }
        },
        {
          "docs": {
            "comment": "Physical name of this bucket.",
            "default": "Assigned by CloudFormation (recommended)"
          },
          "name": "bucketName",
          "type": {
            "optional": true,
            "primitive": "string"
          }
        },
        {
          "docs": {
            "comment": "Policy to apply when the bucket is removed from this stack.",
            "default": "By default, the bucket will be destroyed if it is removed from the stack."
          },
          "name": "removalPolicy",
          "type": {
            "fqn": "@aws-cdk/cdk.RemovalPolicy",
            "optional": true
          }
        },
        {
          "docs": {
            "comment": "The bucket policy associated with this bucket.",
            "default": "A bucket policy will be created automatically in the first call\nto addToPolicy."
          },
          "name": "policy",
          "type": {
            "fqn": "@aws-cdk/aws-s3.BucketPolicy",
            "optional": true
          }
        },
        {
          "docs": {
            "comment": "Whether this bucket should have versioning turned on or not.",
            "default": "false"
          },
          "name": "versioned",
          "type": {
            "optional": true,
            "primitive": "boolean"
          }
        },
        {
          "docs": {
            "comment": "Rules that define how Amazon S3 manages objects during their lifetime.",
            "default": "No lifecycle rules"
          },
          "name": "lifecycleRules",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-s3.LifecycleRule"
              },
              "kind": "array"
            },
            "optional": true
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.BucketRef": {
      "abstract": true,
      "assembly": "@aws-cdk/aws-s3",
      "base": {
        "fqn": "@aws-cdk/cdk.Construct"
      },
      "docs": {
        "comment": "Represents an S3 Bucket.\n\nBuckets can be either defined within this stack:\n\n     new Bucket(this, 'MyBucket', { props });\n\nOr imported from an existing bucket:\n\n     BucketRef.import(this, 'MyImportedBucket', { bucketArn: ... });\n\nYou can also export a bucket and import it into another stack:\n\n     const ref = myBucket.export();\n     BucketRef.import(this, 'MyImportedBucket', ref);"
      },
      "fqn": "@aws-cdk/aws-s3.BucketRef",
      "initializer": {
        "docs": {
          "comment": "Creates a new construct node."
        },
        "initializer": true,
        "parameters": [
          {
            "docs": {
              "comment": "The parent construct"
            },
            "name": "parent",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "name": "name",
            "type": {
              "primitive": "string"
            }
          }
        ]
      },
      "kind": "class",
      "methods": [
        {
          "docs": {
            "comment": "Creates a Bucket construct that represents an external bucket."
          },
          "name": "import",
          "parameters": [
            {
              "docs": {
                "comment": "The parent creating construct (usually `this`)."
              },
              "name": "parent",
              "type": {
                "fqn": "@aws-cdk/cdk.Construct"
              }
            },
            {
              "docs": {
                "comment": "The construct's name."
              },
              "name": "name",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "props",
              "type": {
                "fqn": "@aws-cdk/aws-s3.BucketRefProps"
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/aws-s3.BucketRef"
          },
          "static": true
        },
        {
          "docs": {
            "comment": "Exports this bucket from the stack."
          },
          "name": "export",
          "returns": {
            "fqn": "@aws-cdk/aws-s3.BucketRefProps"
          }
        },
        {
          "docs": {
            "comment": "Adds a statement to the resource policy for a principal (i.e.\naccount/role/service) to perform actions on this bucket and/or it's\ncontents. Use `bucketArn` and `arnForObjects(keys)` to obtain ARNs for\nthis bucket or objects."
          },
          "name": "addToResourcePolicy",
          "parameters": [
            {
              "name": "permission",
              "type": {
                "fqn": "@aws-cdk/cdk.PolicyStatement"
              }
            }
          ]
        },
        {
          "docs": {
            "comment": "The https URL of an S3 object. For example:",
            "example": "https://s3.cn-north-1.amazonaws.com.cn/china-bucket/mykey",
            "returns": "an ObjectS3Url token"
          },
          "name": "urlForObject",
          "parameters": [
            {
              "docs": {
                "comment": "The S3 key of the object. If not specified, the URL of the\nbucket is returned."
              },
              "name": "key",
              "type": {
                "optional": true,
                "primitive": "any"
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/aws-s3.S3Url"
          }
        },
        {
          "docs": {
            "comment": "Returns an ARN that represents all objects within the bucket that match\nthe key pattern specified. To represent all keys, specify ``\"*\"``.\n\nIf you specify multiple components for keyPattern, they will be concatenated::\n\n     arnForObjects('home/', team, '/', user, '/*')"
          },
          "name": "arnForObjects",
          "parameters": [
            {
              "name": "keyPattern",
              "type": {
                "primitive": "any"
              },
              "variadic": true
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/cdk.Arn"
          },
          "variadic": true
        },
        {
          "docs": {
            "comment": "Temporary API for granting read permissions for this bucket and it's\ncontents to an IAM principal (Role/Group/User).\n\nIf an encryption key is used, permission to ues the key to decrypt the\ncontents of the bucket will also be granted."
          },
          "name": "grantRead",
          "parameters": [
            {
              "name": "identity",
              "type": {
                "fqn": "@aws-cdk/aws-iam.IPrincipal",
                "optional": true
              }
            },
            {
              "name": "objectsKeyPattern",
              "type": {
                "optional": true,
                "primitive": "any"
              }
            }
          ]
        },
        {
          "docs": {
            "comment": "Grants read/write permissions for this bucket and it's contents to an IAM\nprincipal (Role/Group/User).\n\nIf an encryption key is used, permission to use the key for\nencrypt/decrypt will also be granted."
          },
          "name": "grantReadWrite",
          "parameters": [
            {
              "name": "identity",
              "type": {
                "fqn": "@aws-cdk/aws-iam.IPrincipal",
                "optional": true
              }
            },
            {
              "name": "objectsKeyPattern",
              "type": {
                "optional": true,
                "primitive": "any"
              }
            }
          ]
        }
      ],
      "name": "BucketRef",
      "namespace": "@aws-cdk/aws-s3",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "comment": "The ARN of the bucket."
          },
          "immutable": true,
          "name": "bucketArn",
          "type": {
            "fqn": "@aws-cdk/aws-s3.BucketArn"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "The name of the bucket."
          },
          "immutable": true,
          "name": "bucketName",
          "type": {
            "fqn": "@aws-cdk/aws-s3.BucketName"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "Optional KMS encryption key associated with this bucket."
          },
          "immutable": true,
          "name": "encryptionKey",
          "type": {
            "fqn": "@aws-cdk/aws-kms.EncryptionKeyRef",
            "optional": true
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "The resource policy assoicated with this bucket.\n\nIf `autoCreatePolicy` is true, a `BucketPolicy` will be created upon the\nfirst call to addToResourcePolicy(s)."
          },
          "name": "policy",
          "protected": true,
          "type": {
            "fqn": "@aws-cdk/aws-s3.BucketPolicy",
            "optional": true
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "Indicates if a bucket resource policy should automatically created upon\nthe first call to `addToResourcePolicy`."
          },
          "name": "autoCreatePolicy",
          "protected": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "docs": {
            "comment": "The https:// URL of this bucket.",
            "example": "https://s3.us-west-1.amazonaws.com/onlybucket\nSimilar to calling `urlForObject` with no object key."
          },
          "immutable": true,
          "name": "bucketUrl",
          "type": {
            "fqn": "@aws-cdk/aws-s3.S3Url"
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.BucketRefProps": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "comment": "A reference to a bucket. The easiest way to instantiate is to call\n`bucket.export()`. Then, the consumer can use `Bucket.import(this, ref)` and\nget a `Bucket`."
      },
      "fqn": "@aws-cdk/aws-s3.BucketRefProps",
      "kind": "interface",
      "name": "BucketRefProps",
      "namespace": "@aws-cdk/aws-s3",
      "properties": [
        {
          "docs": {
            "comment": "The ARN fo the bucket. At least one of bucketArn or bucketName must be\ndefined in order to initialize a bucket ref."
          },
          "name": "bucketArn",
          "type": {
            "fqn": "@aws-cdk/aws-s3.BucketArn",
            "optional": true
          }
        },
        {
          "docs": {
            "comment": "The name of the bucket. If the underlying value of ARN is a string, the\nname will be parsed from the ARN. Otherwise, the name is optional, but\nsome features that require the bucket name such as auto-creating a bucket\npolicy, won't work."
          },
          "name": "bucketName",
          "type": {
            "fqn": "@aws-cdk/aws-s3.BucketName",
            "optional": true
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.BucketWebsiteUrl": {
      "assembly": "@aws-cdk/aws-s3",
      "base": {
        "fqn": "@aws-cdk/cdk.Token"
      },
      "fqn": "@aws-cdk/aws-s3.BucketWebsiteUrl",
      "initializer": {
        "docs": {
          "comment": "Creates a token that resolves to `value`. If value is a function,\nthe function is evaluated upon resolution and the value it returns will be\nuesd as the token's value."
        },
        "initializer": true,
        "parameters": [
          {
            "name": "valueOrFunction",
            "type": {
              "optional": true,
              "primitive": "any"
            }
          }
        ]
      },
      "kind": "class",
      "name": "BucketWebsiteUrl",
      "namespace": "@aws-cdk/aws-s3"
    },
    "@aws-cdk/aws-s3.LifecycleRule": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "comment": "Declaration of a Life cycle rule"
      },
      "fqn": "@aws-cdk/aws-s3.LifecycleRule",
      "kind": "interface",
      "name": "LifecycleRule",
      "namespace": "@aws-cdk/aws-s3",
      "properties": [
        {
          "docs": {
            "comment": "A unique identifier for this rule. The value cannot be more than 255 characters."
          },
          "name": "id",
          "type": {
            "optional": true,
            "primitive": "string"
          }
        },
        {
          "docs": {
            "comment": "Whether this rule is enabled.",
            "default": "true"
          },
          "name": "enabled",
          "type": {
            "optional": true,
            "primitive": "boolean"
          }
        },
        {
          "docs": {
            "comment": "Specifies a lifecycle rule that aborts incomplete multipart uploads to an Amazon S3 bucket.\n\nThe AbortIncompleteMultipartUpload property type creates a lifecycle\nrule that aborts incomplete multipart uploads to an Amazon S3 bucket.\nWhen Amazon S3 aborts a multipart upload, it deletes all parts\nassociated with the multipart upload.",
            "default": "Incomplete uploads are never aborted"
          },
          "name": "abortIncompleteMultipartUploadAfterDays",
          "type": {
            "optional": true,
            "primitive": "number"
          }
        },
        {
          "docs": {
            "comment": "Indicates when objects are deleted from Amazon S3 and Amazon Glacier.\n\nThe date value must be in ISO 8601 format. The time is always midnight UTC.\n\nIf you specify an expiration and transition time, you must use the same\ntime unit for both properties (either in days or by date). The\nexpiration time must also be later than the transition time.",
            "default": "No expiration date"
          },
          "name": "expirationDate",
          "type": {
            "optional": true,
            "primitive": "date"
          }
        },
        {
          "docs": {
            "comment": "Indicates the number of days after creation when objects are deleted from Amazon S3 and Amazon Glacier.\n\nIf you specify an expiration and transition time, you must use the same\ntime unit for both properties (either in days or by date). The\nexpiration time must also be later than the transition time.",
            "default": "No expiration timeout"
          },
          "name": "expirationInDays",
          "type": {
            "optional": true,
            "primitive": "number"
          }
        },
        {
          "docs": {
            "comment": "Time between when a new version of the object is uploaded to the bucket and when old versions of the object expire.\n\nFor buckets with versioning enabled (or suspended), specifies the time,\nin days, between when a new version of the object is uploaded to the\nbucket and when old versions of the object expire. When object versions\nexpire, Amazon S3 permanently deletes them. If you specify a transition\nand expiration time, the expiration time must be later than the\ntransition time.",
            "default": "No noncurrent version expiration"
          },
          "name": "noncurrentVersionExpirationInDays",
          "type": {
            "optional": true,
            "primitive": "number"
          }
        },
        {
          "docs": {
            "comment": "One or more transition rules that specify when non-current objects transition to a specified storage class.\n\nOnly for for buckets with versioning enabled (or suspended).\n\nIf you specify a transition and expiration time, the expiration time\nmust be later than the transition time."
          },
          "name": "noncurrentVersionTransitions",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-s3.NoncurrentVersionTransition"
              },
              "kind": "array"
            },
            "optional": true
          }
        },
        {
          "docs": {
            "comment": "One or more transition rules that specify when an object transitions to a specified storage class.\n\nIf you specify an expiration and transition time, you must use the same\ntime unit for both properties (either in days or by date). The\nexpiration time must also be later than the transition time.",
            "default": "No transition rules"
          },
          "name": "transitions",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-s3.Transition"
              },
              "kind": "array"
            },
            "optional": true
          }
        },
        {
          "docs": {
            "comment": "Object key prefix that identifies one or more objects to which this rule applies.",
            "default": "Rule applies to all objects"
          },
          "name": "prefix",
          "type": {
            "optional": true,
            "primitive": "string"
          }
        },
        {
          "docs": {
            "comment": "The TagFilter property type specifies tags to use to identify a subset of objects for an Amazon S3 bucket.",
            "default": "Rule applies to all objects"
          },
          "name": "tagFilters",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            },
            "optional": true
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.NoncurrentVersionTransition": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "comment": "Describes when noncurrent versions transition to a specified storage class."
      },
      "fqn": "@aws-cdk/aws-s3.NoncurrentVersionTransition",
      "kind": "interface",
      "name": "NoncurrentVersionTransition",
      "namespace": "@aws-cdk/aws-s3",
      "properties": [
        {
          "docs": {
            "comment": "The storage class to which you want the object to transition."
          },
          "name": "storageClass",
          "type": {
            "fqn": "@aws-cdk/aws-s3.StorageClass"
          }
        },
        {
          "docs": {
            "comment": "Indicates the number of days after creation when objects are transitioned to the specified storage class.",
            "default": "No transition count."
          },
          "name": "transitionInDays",
          "type": {
            "primitive": "number"
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.ObjectKey": {
      "assembly": "@aws-cdk/aws-s3",
      "base": {
        "fqn": "@aws-cdk/cdk.Token"
      },
      "docs": {
        "comment": "A key to an S3 object."
      },
      "fqn": "@aws-cdk/aws-s3.ObjectKey",
      "initializer": {
        "docs": {
          "comment": "Creates a token that resolves to `value`. If value is a function,\nthe function is evaluated upon resolution and the value it returns will be\nuesd as the token's value."
        },
        "initializer": true,
        "parameters": [
          {
            "name": "valueOrFunction",
            "type": {
              "optional": true,
              "primitive": "any"
            }
          }
        ]
      },
      "kind": "class",
      "name": "ObjectKey",
      "namespace": "@aws-cdk/aws-s3"
    },
    "@aws-cdk/aws-s3.S3Url": {
      "assembly": "@aws-cdk/aws-s3",
      "base": {
        "fqn": "@aws-cdk/cdk.Token"
      },
      "docs": {
        "comment": "The web URL (https://s3.us-west-1.amazonaws.com/bucket/key) of an S3 object."
      },
      "fqn": "@aws-cdk/aws-s3.S3Url",
      "initializer": {
        "docs": {
          "comment": "Creates a token that resolves to `value`. If value is a function,\nthe function is evaluated upon resolution and the value it returns will be\nuesd as the token's value."
        },
        "initializer": true,
        "parameters": [
          {
            "name": "valueOrFunction",
            "type": {
              "optional": true,
              "primitive": "any"
            }
          }
        ]
      },
      "kind": "class",
      "name": "S3Url",
      "namespace": "@aws-cdk/aws-s3"
    },
    "@aws-cdk/aws-s3.StorageClass": {
      "assembly": "@aws-cdk/aws-s3",
      "docs": {
        "comment": "Storage class to move an object to"
      },
      "fqn": "@aws-cdk/aws-s3.StorageClass",
      "kind": "enum",
      "members": [
        {
          "name": "InfrequentAccess"
        },
        {
          "name": "OneZoneInfrequentAccess"
        },
        {
          "name": "Glacier"
        }
      ],
      "name": "StorageClass",
      "namespace": "@aws-cdk/aws-s3"
    },
    "@aws-cdk/aws-s3.Transition": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "comment": "Describes when an object transitions to a specified storage class."
      },
      "fqn": "@aws-cdk/aws-s3.Transition",
      "kind": "interface",
      "name": "Transition",
      "namespace": "@aws-cdk/aws-s3",
      "properties": [
        {
          "docs": {
            "comment": "The storage class to which you want the object to transition."
          },
          "name": "storageClass",
          "type": {
            "fqn": "@aws-cdk/aws-s3.StorageClass"
          }
        },
        {
          "docs": {
            "comment": "Indicates when objects are transitioned to the specified storage class.\n\nThe date value must be in ISO 8601 format. The time is always midnight UTC.",
            "default": "No transition date."
          },
          "name": "transitionDate",
          "type": {
            "optional": true,
            "primitive": "date"
          }
        },
        {
          "docs": {
            "comment": "Indicates the number of days after creation when objects are transitioned to the specified storage class.",
            "default": "No transition count."
          },
          "name": "transitionInDays",
          "type": {
            "optional": true,
            "primitive": "number"
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.cloudformation.BucketPolicyResource": {
      "assembly": "@aws-cdk/aws-s3",
      "base": {
        "fqn": "@aws-cdk/cdk.Resource"
      },
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-policy.html"
      },
      "fqn": "@aws-cdk/aws-s3.cloudformation.BucketPolicyResource",
      "initializer": {
        "docs": {
          "comment": "Creates a new ``AWS::S3::BucketPolicy``."
        },
        "initializer": true,
        "parameters": [
          {
            "docs": {
              "comment": "the ``cdk.Construct`` this ``BucketPolicyResource`` is a part of"
            },
            "name": "parent",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "docs": {
              "comment": "the name of the resource in the ``cdk.Construct`` tree"
            },
            "name": "name",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "comment": "the properties of this ``BucketPolicyResource``"
            },
            "name": "properties",
            "type": {
              "fqn": "@aws-cdk/aws-s3.cloudformation.BucketPolicyResourceProps"
            }
          }
        ]
      },
      "kind": "class",
      "methods": [
        {
          "name": "renderProperties",
          "protected": true,
          "returns": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        }
      ],
      "name": "BucketPolicyResource",
      "namespace": "@aws-cdk/aws-s3.cloudformation",
      "properties": [
        {
          "const": true,
          "docs": {
            "comment": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "name": "resourceTypeName",
          "static": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.cloudformation.BucketPolicyResourceProps": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-policy.html"
      },
      "fqn": "@aws-cdk/aws-s3.cloudformation.BucketPolicyResourceProps",
      "kind": "interface",
      "name": "BucketPolicyResourceProps",
      "namespace": "@aws-cdk/aws-s3.cloudformation",
      "properties": [
        {
          "docs": {
            "comment": "``AWS::S3::BucketPolicy.Bucket``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-policy.html#aws-properties-s3-policy-bucket"
          },
          "name": "bucket",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::S3::BucketPolicy.PolicyDocument``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-policy.html#aws-properties-s3-policy-policydocument"
          },
          "name": "policyDocument",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "json"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.cloudformation.BucketResource": {
      "assembly": "@aws-cdk/aws-s3",
      "base": {
        "fqn": "@aws-cdk/cdk.Resource"
      },
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket.html"
      },
      "fqn": "@aws-cdk/aws-s3.cloudformation.BucketResource",
      "initializer": {
        "docs": {
          "comment": "Creates a new ``AWS::S3::Bucket``."
        },
        "initializer": true,
        "parameters": [
          {
            "docs": {
              "comment": "the ``cdk.Construct`` this ``BucketResource`` is a part of"
            },
            "name": "parent",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "docs": {
              "comment": "the name of the resource in the ``cdk.Construct`` tree"
            },
            "name": "name",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "comment": "the properties of this ``BucketResource``"
            },
            "name": "properties",
            "type": {
              "fqn": "@aws-cdk/aws-s3.cloudformation.BucketResourceProps",
              "optional": true
            }
          }
        ]
      },
      "kind": "class",
      "methods": [
        {
          "name": "renderProperties",
          "protected": true,
          "returns": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        }
      ],
      "name": "BucketResource",
      "namespace": "@aws-cdk/aws-s3.cloudformation",
      "properties": [
        {
          "const": true,
          "docs": {
            "comment": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "name": "resourceTypeName",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "cloudformation_attribute": "Arn"
          },
          "immutable": true,
          "name": "bucketArn",
          "type": {
            "fqn": "@aws-cdk/aws-s3.BucketArn"
          }
        },
        {
          "docs": {
            "cloudformation_attribute": "DomainName"
          },
          "immutable": true,
          "name": "bucketDomainName",
          "type": {
            "fqn": "@aws-cdk/aws-s3.BucketDomainName"
          }
        },
        {
          "docs": {
            "cloudformation_attribute": "DualStackDomainName"
          },
          "immutable": true,
          "name": "bucketDualStackDomainName",
          "type": {
            "fqn": "@aws-cdk/aws-s3.BucketDualStackDomainName"
          }
        },
        {
          "docs": {
            "cloudformation_attribute": "WebsiteURL"
          },
          "immutable": true,
          "name": "bucketWebsiteUrl",
          "type": {
            "fqn": "@aws-cdk/aws-s3.BucketWebsiteUrl"
          }
        }
      ],
      "subtypes": [
        "@aws-cdk/aws-s3.cloudformation.BucketResource.AbortIncompleteMultipartUploadProperty",
        "@aws-cdk/aws-s3.cloudformation.BucketResource.AccelerateConfigurationProperty",
        "@aws-cdk/aws-s3.cloudformation.BucketResource.AccessControlTranslationProperty",
        "@aws-cdk/aws-s3.cloudformation.BucketResource.AnalyticsConfigurationProperty",
        "@aws-cdk/aws-s3.cloudformation.BucketResource.BucketEncryptionProperty",
        "@aws-cdk/aws-s3.cloudformation.BucketResource.CorsConfigurationProperty",
        "@aws-cdk/aws-s3.cloudformation.BucketResource.CorsRuleProperty",
        "@aws-cdk/aws-s3.cloudformation.BucketResource.DataExportProperty",
        "@aws-cdk/aws-s3.cloudformation.BucketResource.DestinationProperty",
        "@aws-cdk/aws-s3.cloudformation.BucketResource.EncryptionConfigurationProperty",
        "@aws-cdk/aws-s3.cloudformation.BucketResource.FilterRuleProperty",
        "@aws-cdk/aws-s3.cloudformation.BucketResource.InventoryConfigurationProperty",
        "@aws-cdk/aws-s3.cloudformation.BucketResource.LambdaConfigurationProperty",
        "@aws-cdk/aws-s3.cloudformation.BucketResource.LifecycleConfigurationProperty",
        "@aws-cdk/aws-s3.cloudformation.BucketResource.LoggingConfigurationProperty",
        "@aws-cdk/aws-s3.cloudformation.BucketResource.MetricsConfigurationProperty",
        "@aws-cdk/aws-s3.cloudformation.BucketResource.NoncurrentVersionTransitionProperty",
        "@aws-cdk/aws-s3.cloudformation.BucketResource.NotificationConfigurationProperty",
        "@aws-cdk/aws-s3.cloudformation.BucketResource.NotificationFilterProperty",
        "@aws-cdk/aws-s3.cloudformation.BucketResource.QueueConfigurationProperty",
        "@aws-cdk/aws-s3.cloudformation.BucketResource.RedirectAllRequestsToProperty",
        "@aws-cdk/aws-s3.cloudformation.BucketResource.RedirectRuleProperty",
        "@aws-cdk/aws-s3.cloudformation.BucketResource.ReplicationConfigurationProperty",
        "@aws-cdk/aws-s3.cloudformation.BucketResource.ReplicationDestinationProperty",
        "@aws-cdk/aws-s3.cloudformation.BucketResource.ReplicationRuleProperty",
        "@aws-cdk/aws-s3.cloudformation.BucketResource.RoutingRuleProperty",
        "@aws-cdk/aws-s3.cloudformation.BucketResource.RoutingRuleConditionProperty",
        "@aws-cdk/aws-s3.cloudformation.BucketResource.RuleProperty",
        "@aws-cdk/aws-s3.cloudformation.BucketResource.S3KeyFilterProperty",
        "@aws-cdk/aws-s3.cloudformation.BucketResource.ServerSideEncryptionByDefaultProperty",
        "@aws-cdk/aws-s3.cloudformation.BucketResource.ServerSideEncryptionRuleProperty",
        "@aws-cdk/aws-s3.cloudformation.BucketResource.SourceSelectionCriteriaProperty",
        "@aws-cdk/aws-s3.cloudformation.BucketResource.SseKmsEncryptedObjectsProperty",
        "@aws-cdk/aws-s3.cloudformation.BucketResource.StorageClassAnalysisProperty",
        "@aws-cdk/aws-s3.cloudformation.BucketResource.TagFilterProperty",
        "@aws-cdk/aws-s3.cloudformation.BucketResource.TopicConfigurationProperty",
        "@aws-cdk/aws-s3.cloudformation.BucketResource.TransitionProperty",
        "@aws-cdk/aws-s3.cloudformation.BucketResource.VersioningConfigurationProperty",
        "@aws-cdk/aws-s3.cloudformation.BucketResource.WebsiteConfigurationProperty"
      ]
    },
    "@aws-cdk/aws-s3.cloudformation.BucketResource.AbortIncompleteMultipartUploadProperty": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-abortincompletemultipartupload.html"
      },
      "fqn": "@aws-cdk/aws-s3.cloudformation.BucketResource.AbortIncompleteMultipartUploadProperty",
      "kind": "interface",
      "name": "AbortIncompleteMultipartUploadProperty",
      "namespace": "@aws-cdk/aws-s3.cloudformation.BucketResource",
      "parenttype": "@aws-cdk/aws-s3.cloudformation.BucketResource",
      "properties": [
        {
          "docs": {
            "comment": "``BucketResource.AbortIncompleteMultipartUploadProperty.DaysAfterInitiation``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-abortincompletemultipartupload.html#cfn-s3-bucket-abortincompletemultipartupload-daysafterinitiation"
          },
          "name": "daysAfterInitiation",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "number"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.cloudformation.BucketResource.AccelerateConfigurationProperty": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-accelerateconfiguration.html"
      },
      "fqn": "@aws-cdk/aws-s3.cloudformation.BucketResource.AccelerateConfigurationProperty",
      "kind": "interface",
      "name": "AccelerateConfigurationProperty",
      "namespace": "@aws-cdk/aws-s3.cloudformation.BucketResource",
      "parenttype": "@aws-cdk/aws-s3.cloudformation.BucketResource",
      "properties": [
        {
          "docs": {
            "comment": "``BucketResource.AccelerateConfigurationProperty.AccelerationStatus``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-accelerateconfiguration.html#cfn-s3-bucket-accelerateconfiguration-accelerationstatus"
          },
          "name": "accelerationStatus",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.cloudformation.BucketResource.AccessControlTranslationProperty": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-accesscontroltranslation.html"
      },
      "fqn": "@aws-cdk/aws-s3.cloudformation.BucketResource.AccessControlTranslationProperty",
      "kind": "interface",
      "name": "AccessControlTranslationProperty",
      "namespace": "@aws-cdk/aws-s3.cloudformation.BucketResource",
      "parenttype": "@aws-cdk/aws-s3.cloudformation.BucketResource",
      "properties": [
        {
          "docs": {
            "comment": "``BucketResource.AccessControlTranslationProperty.Owner``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-accesscontroltranslation.html#cfn-s3-bucket-accesscontroltranslation-owner"
          },
          "name": "owner",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.cloudformation.BucketResource.AnalyticsConfigurationProperty": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-analyticsconfiguration.html"
      },
      "fqn": "@aws-cdk/aws-s3.cloudformation.BucketResource.AnalyticsConfigurationProperty",
      "kind": "interface",
      "name": "AnalyticsConfigurationProperty",
      "namespace": "@aws-cdk/aws-s3.cloudformation.BucketResource",
      "parenttype": "@aws-cdk/aws-s3.cloudformation.BucketResource",
      "properties": [
        {
          "docs": {
            "comment": "``BucketResource.AnalyticsConfigurationProperty.Id``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-analyticsconfiguration.html#cfn-s3-bucket-analyticsconfiguration-id"
          },
          "name": "id",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``BucketResource.AnalyticsConfigurationProperty.Prefix``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-analyticsconfiguration.html#cfn-s3-bucket-analyticsconfiguration-prefix"
          },
          "name": "prefix",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``BucketResource.AnalyticsConfigurationProperty.StorageClassAnalysis``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-analyticsconfiguration.html#cfn-s3-bucket-analyticsconfiguration-storageclassanalysis"
          },
          "name": "storageClassAnalysis",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "fqn": "@aws-cdk/aws-s3.cloudformation.BucketResource.StorageClassAnalysisProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``BucketResource.AnalyticsConfigurationProperty.TagFilters``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-analyticsconfiguration.html#cfn-s3-bucket-analyticsconfiguration-tagfilters"
          },
          "name": "tagFilters",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/cdk.Token"
                          },
                          {
                            "fqn": "@aws-cdk/aws-s3.cloudformation.BucketResource.TagFilterProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.cloudformation.BucketResource.BucketEncryptionProperty": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-bucketencryption.html"
      },
      "fqn": "@aws-cdk/aws-s3.cloudformation.BucketResource.BucketEncryptionProperty",
      "kind": "interface",
      "name": "BucketEncryptionProperty",
      "namespace": "@aws-cdk/aws-s3.cloudformation.BucketResource",
      "parenttype": "@aws-cdk/aws-s3.cloudformation.BucketResource",
      "properties": [
        {
          "docs": {
            "comment": "``BucketResource.BucketEncryptionProperty.ServerSideEncryptionConfiguration``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-bucketencryption.html#cfn-s3-bucket-bucketencryption-serversideencryptionconfiguration"
          },
          "name": "serverSideEncryptionConfiguration",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/cdk.Token"
                          },
                          {
                            "fqn": "@aws-cdk/aws-s3.cloudformation.BucketResource.ServerSideEncryptionRuleProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.cloudformation.BucketResource.CorsConfigurationProperty": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-cors.html"
      },
      "fqn": "@aws-cdk/aws-s3.cloudformation.BucketResource.CorsConfigurationProperty",
      "kind": "interface",
      "name": "CorsConfigurationProperty",
      "namespace": "@aws-cdk/aws-s3.cloudformation.BucketResource",
      "parenttype": "@aws-cdk/aws-s3.cloudformation.BucketResource",
      "properties": [
        {
          "docs": {
            "comment": "``BucketResource.CorsConfigurationProperty.CorsRules``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-cors.html#cfn-s3-bucket-cors-corsrule"
          },
          "name": "corsRules",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/cdk.Token"
                          },
                          {
                            "fqn": "@aws-cdk/aws-s3.cloudformation.BucketResource.CorsRuleProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.cloudformation.BucketResource.CorsRuleProperty": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-cors-corsrule.html"
      },
      "fqn": "@aws-cdk/aws-s3.cloudformation.BucketResource.CorsRuleProperty",
      "kind": "interface",
      "name": "CorsRuleProperty",
      "namespace": "@aws-cdk/aws-s3.cloudformation.BucketResource",
      "parenttype": "@aws-cdk/aws-s3.cloudformation.BucketResource",
      "properties": [
        {
          "docs": {
            "comment": "``BucketResource.CorsRuleProperty.AllowedHeaders``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-cors-corsrule.html#cfn-s3-bucket-cors-corsrule-allowedheaders"
          },
          "name": "allowedHeaders",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "primitive": "string"
                          },
                          {
                            "fqn": "@aws-cdk/cdk.Token"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``BucketResource.CorsRuleProperty.AllowedMethods``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-cors-corsrule.html#cfn-s3-bucket-cors-corsrule-allowedmethods"
          },
          "name": "allowedMethods",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "primitive": "string"
                          },
                          {
                            "fqn": "@aws-cdk/cdk.Token"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``BucketResource.CorsRuleProperty.AllowedOrigins``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-cors-corsrule.html#cfn-s3-bucket-cors-corsrule-allowedorigins"
          },
          "name": "allowedOrigins",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "primitive": "string"
                          },
                          {
                            "fqn": "@aws-cdk/cdk.Token"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``BucketResource.CorsRuleProperty.ExposedHeaders``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-cors-corsrule.html#cfn-s3-bucket-cors-corsrule-exposedheaders"
          },
          "name": "exposedHeaders",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "primitive": "string"
                          },
                          {
                            "fqn": "@aws-cdk/cdk.Token"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``BucketResource.CorsRuleProperty.Id``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-cors-corsrule.html#cfn-s3-bucket-cors-corsrule-id"
          },
          "name": "id",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``BucketResource.CorsRuleProperty.MaxAge``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-cors-corsrule.html#cfn-s3-bucket-cors-corsrule-maxage"
          },
          "name": "maxAge",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "number"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.cloudformation.BucketResource.DataExportProperty": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-dataexport.html"
      },
      "fqn": "@aws-cdk/aws-s3.cloudformation.BucketResource.DataExportProperty",
      "kind": "interface",
      "name": "DataExportProperty",
      "namespace": "@aws-cdk/aws-s3.cloudformation.BucketResource",
      "parenttype": "@aws-cdk/aws-s3.cloudformation.BucketResource",
      "properties": [
        {
          "docs": {
            "comment": "``BucketResource.DataExportProperty.Destination``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-dataexport.html#cfn-s3-bucket-dataexport-destination"
          },
          "name": "destination",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "fqn": "@aws-cdk/aws-s3.cloudformation.BucketResource.DestinationProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``BucketResource.DataExportProperty.OutputSchemaVersion``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-dataexport.html#cfn-s3-bucket-dataexport-outputschemaversion"
          },
          "name": "outputSchemaVersion",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.cloudformation.BucketResource.DestinationProperty": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-destination.html"
      },
      "fqn": "@aws-cdk/aws-s3.cloudformation.BucketResource.DestinationProperty",
      "kind": "interface",
      "name": "DestinationProperty",
      "namespace": "@aws-cdk/aws-s3.cloudformation.BucketResource",
      "parenttype": "@aws-cdk/aws-s3.cloudformation.BucketResource",
      "properties": [
        {
          "docs": {
            "comment": "``BucketResource.DestinationProperty.BucketAccountId``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-destination.html#cfn-s3-bucket-destination-bucketaccountid"
          },
          "name": "bucketAccountId",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``BucketResource.DestinationProperty.BucketArn``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-destination.html#cfn-s3-bucket-destination-bucketarn"
          },
          "name": "bucketArn",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``BucketResource.DestinationProperty.Format``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-destination.html#cfn-s3-bucket-destination-format"
          },
          "name": "format",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``BucketResource.DestinationProperty.Prefix``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-destination.html#cfn-s3-bucket-destination-prefix"
          },
          "name": "prefix",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.cloudformation.BucketResource.EncryptionConfigurationProperty": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-encryptionconfiguration.html"
      },
      "fqn": "@aws-cdk/aws-s3.cloudformation.BucketResource.EncryptionConfigurationProperty",
      "kind": "interface",
      "name": "EncryptionConfigurationProperty",
      "namespace": "@aws-cdk/aws-s3.cloudformation.BucketResource",
      "parenttype": "@aws-cdk/aws-s3.cloudformation.BucketResource",
      "properties": [
        {
          "docs": {
            "comment": "``BucketResource.EncryptionConfigurationProperty.ReplicaKmsKeyID``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-encryptionconfiguration.html#cfn-s3-bucket-encryptionconfiguration-replicakmskeyid"
          },
          "name": "replicaKmsKeyId",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.cloudformation.BucketResource.FilterRuleProperty": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-notificationconfiguration-config-filter-s3key-rules.html"
      },
      "fqn": "@aws-cdk/aws-s3.cloudformation.BucketResource.FilterRuleProperty",
      "kind": "interface",
      "name": "FilterRuleProperty",
      "namespace": "@aws-cdk/aws-s3.cloudformation.BucketResource",
      "parenttype": "@aws-cdk/aws-s3.cloudformation.BucketResource",
      "properties": [
        {
          "docs": {
            "comment": "``BucketResource.FilterRuleProperty.Name``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-notificationconfiguration-config-filter-s3key-rules.html#cfn-s3-bucket-notificationconfiguraiton-config-filter-s3key-rules-name"
          },
          "name": "name",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``BucketResource.FilterRuleProperty.Value``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-notificationconfiguration-config-filter-s3key-rules.html#cfn-s3-bucket-notificationconfiguraiton-config-filter-s3key-rules-value"
          },
          "name": "value",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.cloudformation.BucketResource.InventoryConfigurationProperty": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-inventoryconfiguration.html"
      },
      "fqn": "@aws-cdk/aws-s3.cloudformation.BucketResource.InventoryConfigurationProperty",
      "kind": "interface",
      "name": "InventoryConfigurationProperty",
      "namespace": "@aws-cdk/aws-s3.cloudformation.BucketResource",
      "parenttype": "@aws-cdk/aws-s3.cloudformation.BucketResource",
      "properties": [
        {
          "docs": {
            "comment": "``BucketResource.InventoryConfigurationProperty.Destination``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-inventoryconfiguration.html#cfn-s3-bucket-inventoryconfiguration-destination"
          },
          "name": "destination",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "fqn": "@aws-cdk/aws-s3.cloudformation.BucketResource.DestinationProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``BucketResource.InventoryConfigurationProperty.Enabled``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-inventoryconfiguration.html#cfn-s3-bucket-inventoryconfiguration-enabled"
          },
          "name": "enabled",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``BucketResource.InventoryConfigurationProperty.Id``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-inventoryconfiguration.html#cfn-s3-bucket-inventoryconfiguration-id"
          },
          "name": "id",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``BucketResource.InventoryConfigurationProperty.IncludedObjectVersions``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-inventoryconfiguration.html#cfn-s3-bucket-inventoryconfiguration-includedobjectversions"
          },
          "name": "includedObjectVersions",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``BucketResource.InventoryConfigurationProperty.OptionalFields``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-inventoryconfiguration.html#cfn-s3-bucket-inventoryconfiguration-optionalfields"
          },
          "name": "optionalFields",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "primitive": "string"
                          },
                          {
                            "fqn": "@aws-cdk/cdk.Token"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``BucketResource.InventoryConfigurationProperty.Prefix``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-inventoryconfiguration.html#cfn-s3-bucket-inventoryconfiguration-prefix"
          },
          "name": "prefix",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``BucketResource.InventoryConfigurationProperty.ScheduleFrequency``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-inventoryconfiguration.html#cfn-s3-bucket-inventoryconfiguration-schedulefrequency"
          },
          "name": "scheduleFrequency",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.cloudformation.BucketResource.LambdaConfigurationProperty": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-notificationconfig-lambdaconfig.html"
      },
      "fqn": "@aws-cdk/aws-s3.cloudformation.BucketResource.LambdaConfigurationProperty",
      "kind": "interface",
      "name": "LambdaConfigurationProperty",
      "namespace": "@aws-cdk/aws-s3.cloudformation.BucketResource",
      "parenttype": "@aws-cdk/aws-s3.cloudformation.BucketResource",
      "properties": [
        {
          "docs": {
            "comment": "``BucketResource.LambdaConfigurationProperty.Event``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-notificationconfig-lambdaconfig.html#cfn-s3-bucket-notificationconfig-lambdaconfig-event"
          },
          "name": "event",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``BucketResource.LambdaConfigurationProperty.Filter``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-notificationconfig-lambdaconfig.html#cfn-s3-bucket-notificationconfig-lambdaconfig-filter"
          },
          "name": "filter",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "fqn": "@aws-cdk/aws-s3.cloudformation.BucketResource.NotificationFilterProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``BucketResource.LambdaConfigurationProperty.Function``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-notificationconfig-lambdaconfig.html#cfn-s3-bucket-notificationconfig-lambdaconfig-function"
          },
          "name": "function",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.cloudformation.BucketResource.LifecycleConfigurationProperty": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-lifecycleconfig.html"
      },
      "fqn": "@aws-cdk/aws-s3.cloudformation.BucketResource.LifecycleConfigurationProperty",
      "kind": "interface",
      "name": "LifecycleConfigurationProperty",
      "namespace": "@aws-cdk/aws-s3.cloudformation.BucketResource",
      "parenttype": "@aws-cdk/aws-s3.cloudformation.BucketResource",
      "properties": [
        {
          "docs": {
            "comment": "``BucketResource.LifecycleConfigurationProperty.Rules``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-lifecycleconfig.html#cfn-s3-bucket-lifecycleconfig-rules"
          },
          "name": "rules",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/cdk.Token"
                          },
                          {
                            "fqn": "@aws-cdk/aws-s3.cloudformation.BucketResource.RuleProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.cloudformation.BucketResource.LoggingConfigurationProperty": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-loggingconfig.html"
      },
      "fqn": "@aws-cdk/aws-s3.cloudformation.BucketResource.LoggingConfigurationProperty",
      "kind": "interface",
      "name": "LoggingConfigurationProperty",
      "namespace": "@aws-cdk/aws-s3.cloudformation.BucketResource",
      "parenttype": "@aws-cdk/aws-s3.cloudformation.BucketResource",
      "properties": [
        {
          "docs": {
            "comment": "``BucketResource.LoggingConfigurationProperty.DestinationBucketName``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-loggingconfig.html#cfn-s3-bucket-loggingconfig-destinationbucketname"
          },
          "name": "destinationBucketName",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``BucketResource.LoggingConfigurationProperty.LogFilePrefix``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-loggingconfig.html#cfn-s3-bucket-loggingconfig-logfileprefix"
          },
          "name": "logFilePrefix",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.cloudformation.BucketResource.MetricsConfigurationProperty": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-metricsconfiguration.html"
      },
      "fqn": "@aws-cdk/aws-s3.cloudformation.BucketResource.MetricsConfigurationProperty",
      "kind": "interface",
      "name": "MetricsConfigurationProperty",
      "namespace": "@aws-cdk/aws-s3.cloudformation.BucketResource",
      "parenttype": "@aws-cdk/aws-s3.cloudformation.BucketResource",
      "properties": [
        {
          "docs": {
            "comment": "``BucketResource.MetricsConfigurationProperty.Id``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-metricsconfiguration.html#cfn-s3-bucket-metricsconfiguration-id"
          },
          "name": "id",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``BucketResource.MetricsConfigurationProperty.Prefix``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-metricsconfiguration.html#cfn-s3-bucket-metricsconfiguration-prefix"
          },
          "name": "prefix",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``BucketResource.MetricsConfigurationProperty.TagFilters``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-metricsconfiguration.html#cfn-s3-bucket-metricsconfiguration-tagfilters"
          },
          "name": "tagFilters",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/cdk.Token"
                          },
                          {
                            "fqn": "@aws-cdk/aws-s3.cloudformation.BucketResource.TagFilterProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.cloudformation.BucketResource.NoncurrentVersionTransitionProperty": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-lifecycleconfig-rule-noncurrentversiontransition.html"
      },
      "fqn": "@aws-cdk/aws-s3.cloudformation.BucketResource.NoncurrentVersionTransitionProperty",
      "kind": "interface",
      "name": "NoncurrentVersionTransitionProperty",
      "namespace": "@aws-cdk/aws-s3.cloudformation.BucketResource",
      "parenttype": "@aws-cdk/aws-s3.cloudformation.BucketResource",
      "properties": [
        {
          "docs": {
            "comment": "``BucketResource.NoncurrentVersionTransitionProperty.StorageClass``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-lifecycleconfig-rule-noncurrentversiontransition.html#cfn-s3-bucket-lifecycleconfig-rule-noncurrentversiontransition-storageclass"
          },
          "name": "storageClass",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``BucketResource.NoncurrentVersionTransitionProperty.TransitionInDays``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-lifecycleconfig-rule-noncurrentversiontransition.html#cfn-s3-bucket-lifecycleconfig-rule-noncurrentversiontransition-transitionindays"
          },
          "name": "transitionInDays",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "number"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.cloudformation.BucketResource.NotificationConfigurationProperty": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-notificationconfig.html"
      },
      "fqn": "@aws-cdk/aws-s3.cloudformation.BucketResource.NotificationConfigurationProperty",
      "kind": "interface",
      "name": "NotificationConfigurationProperty",
      "namespace": "@aws-cdk/aws-s3.cloudformation.BucketResource",
      "parenttype": "@aws-cdk/aws-s3.cloudformation.BucketResource",
      "properties": [
        {
          "docs": {
            "comment": "``BucketResource.NotificationConfigurationProperty.LambdaConfigurations``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-notificationconfig.html#cfn-s3-bucket-notificationconfig-lambdaconfig"
          },
          "name": "lambdaConfigurations",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/cdk.Token"
                          },
                          {
                            "fqn": "@aws-cdk/aws-s3.cloudformation.BucketResource.LambdaConfigurationProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``BucketResource.NotificationConfigurationProperty.QueueConfigurations``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-notificationconfig.html#cfn-s3-bucket-notificationconfig-queueconfig"
          },
          "name": "queueConfigurations",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/cdk.Token"
                          },
                          {
                            "fqn": "@aws-cdk/aws-s3.cloudformation.BucketResource.QueueConfigurationProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``BucketResource.NotificationConfigurationProperty.TopicConfigurations``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-notificationconfig.html#cfn-s3-bucket-notificationconfig-topicconfig"
          },
          "name": "topicConfigurations",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/cdk.Token"
                          },
                          {
                            "fqn": "@aws-cdk/aws-s3.cloudformation.BucketResource.TopicConfigurationProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.cloudformation.BucketResource.NotificationFilterProperty": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-notificationconfiguration-config-filter.html"
      },
      "fqn": "@aws-cdk/aws-s3.cloudformation.BucketResource.NotificationFilterProperty",
      "kind": "interface",
      "name": "NotificationFilterProperty",
      "namespace": "@aws-cdk/aws-s3.cloudformation.BucketResource",
      "parenttype": "@aws-cdk/aws-s3.cloudformation.BucketResource",
      "properties": [
        {
          "docs": {
            "comment": "``BucketResource.NotificationFilterProperty.S3Key``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-notificationconfiguration-config-filter.html#cfn-s3-bucket-notificationconfiguraiton-config-filter-s3key"
          },
          "name": "s3Key",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "fqn": "@aws-cdk/aws-s3.cloudformation.BucketResource.S3KeyFilterProperty"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.cloudformation.BucketResource.QueueConfigurationProperty": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-notificationconfig-queueconfig.html"
      },
      "fqn": "@aws-cdk/aws-s3.cloudformation.BucketResource.QueueConfigurationProperty",
      "kind": "interface",
      "name": "QueueConfigurationProperty",
      "namespace": "@aws-cdk/aws-s3.cloudformation.BucketResource",
      "parenttype": "@aws-cdk/aws-s3.cloudformation.BucketResource",
      "properties": [
        {
          "docs": {
            "comment": "``BucketResource.QueueConfigurationProperty.Event``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-notificationconfig-queueconfig.html#cfn-s3-bucket-notificationconfig-queueconfig-event"
          },
          "name": "event",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``BucketResource.QueueConfigurationProperty.Filter``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-notificationconfig-queueconfig.html#cfn-s3-bucket-notificationconfig-queueconfig-filter"
          },
          "name": "filter",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "fqn": "@aws-cdk/aws-s3.cloudformation.BucketResource.NotificationFilterProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``BucketResource.QueueConfigurationProperty.Queue``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-notificationconfig-queueconfig.html#cfn-s3-bucket-notificationconfig-queueconfig-queue"
          },
          "name": "queue",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.cloudformation.BucketResource.RedirectAllRequestsToProperty": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-websiteconfiguration-redirectallrequeststo.html"
      },
      "fqn": "@aws-cdk/aws-s3.cloudformation.BucketResource.RedirectAllRequestsToProperty",
      "kind": "interface",
      "name": "RedirectAllRequestsToProperty",
      "namespace": "@aws-cdk/aws-s3.cloudformation.BucketResource",
      "parenttype": "@aws-cdk/aws-s3.cloudformation.BucketResource",
      "properties": [
        {
          "docs": {
            "comment": "``BucketResource.RedirectAllRequestsToProperty.HostName``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-websiteconfiguration-redirectallrequeststo.html#cfn-s3-websiteconfiguration-redirectallrequeststo-hostname"
          },
          "name": "hostName",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``BucketResource.RedirectAllRequestsToProperty.Protocol``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-websiteconfiguration-redirectallrequeststo.html#cfn-s3-websiteconfiguration-redirectallrequeststo-protocol"
          },
          "name": "protocol",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.cloudformation.BucketResource.RedirectRuleProperty": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-websiteconfiguration-routingrules-redirectrule.html"
      },
      "fqn": "@aws-cdk/aws-s3.cloudformation.BucketResource.RedirectRuleProperty",
      "kind": "interface",
      "name": "RedirectRuleProperty",
      "namespace": "@aws-cdk/aws-s3.cloudformation.BucketResource",
      "parenttype": "@aws-cdk/aws-s3.cloudformation.BucketResource",
      "properties": [
        {
          "docs": {
            "comment": "``BucketResource.RedirectRuleProperty.HostName``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-websiteconfiguration-routingrules-redirectrule.html#cfn-s3-websiteconfiguration-redirectrule-hostname"
          },
          "name": "hostName",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``BucketResource.RedirectRuleProperty.HttpRedirectCode``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-websiteconfiguration-routingrules-redirectrule.html#cfn-s3-websiteconfiguration-redirectrule-httpredirectcode"
          },
          "name": "httpRedirectCode",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``BucketResource.RedirectRuleProperty.Protocol``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-websiteconfiguration-routingrules-redirectrule.html#cfn-s3-websiteconfiguration-redirectrule-protocol"
          },
          "name": "protocol",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``BucketResource.RedirectRuleProperty.ReplaceKeyPrefixWith``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-websiteconfiguration-routingrules-redirectrule.html#cfn-s3-websiteconfiguration-redirectrule-replacekeyprefixwith"
          },
          "name": "replaceKeyPrefixWith",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``BucketResource.RedirectRuleProperty.ReplaceKeyWith``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-websiteconfiguration-routingrules-redirectrule.html#cfn-s3-websiteconfiguration-redirectrule-replacekeywith"
          },
          "name": "replaceKeyWith",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.cloudformation.BucketResource.ReplicationConfigurationProperty": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-replicationconfiguration.html"
      },
      "fqn": "@aws-cdk/aws-s3.cloudformation.BucketResource.ReplicationConfigurationProperty",
      "kind": "interface",
      "name": "ReplicationConfigurationProperty",
      "namespace": "@aws-cdk/aws-s3.cloudformation.BucketResource",
      "parenttype": "@aws-cdk/aws-s3.cloudformation.BucketResource",
      "properties": [
        {
          "docs": {
            "comment": "``BucketResource.ReplicationConfigurationProperty.Role``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-replicationconfiguration.html#cfn-s3-bucket-replicationconfiguration-role"
          },
          "name": "role",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``BucketResource.ReplicationConfigurationProperty.Rules``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-replicationconfiguration.html#cfn-s3-bucket-replicationconfiguration-rules"
          },
          "name": "rules",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/cdk.Token"
                          },
                          {
                            "fqn": "@aws-cdk/aws-s3.cloudformation.BucketResource.ReplicationRuleProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.cloudformation.BucketResource.ReplicationDestinationProperty": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-replicationconfiguration-rules-destination.html"
      },
      "fqn": "@aws-cdk/aws-s3.cloudformation.BucketResource.ReplicationDestinationProperty",
      "kind": "interface",
      "name": "ReplicationDestinationProperty",
      "namespace": "@aws-cdk/aws-s3.cloudformation.BucketResource",
      "parenttype": "@aws-cdk/aws-s3.cloudformation.BucketResource",
      "properties": [
        {
          "docs": {
            "comment": "``BucketResource.ReplicationDestinationProperty.AccessControlTranslation``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-replicationconfiguration-rules-destination.html#cfn-s3-bucket-replicationdestination-accesscontroltranslation"
          },
          "name": "accessControlTranslation",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "fqn": "@aws-cdk/aws-s3.cloudformation.BucketResource.AccessControlTranslationProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``BucketResource.ReplicationDestinationProperty.Account``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-replicationconfiguration-rules-destination.html#cfn-s3-bucket-replicationdestination-account"
          },
          "name": "account",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``BucketResource.ReplicationDestinationProperty.Bucket``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-replicationconfiguration-rules-destination.html#cfn-s3-bucket-replicationconfiguration-rules-destination-bucket"
          },
          "name": "bucket",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``BucketResource.ReplicationDestinationProperty.EncryptionConfiguration``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-replicationconfiguration-rules-destination.html#cfn-s3-bucket-replicationdestination-encryptionconfiguration"
          },
          "name": "encryptionConfiguration",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "fqn": "@aws-cdk/aws-s3.cloudformation.BucketResource.EncryptionConfigurationProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``BucketResource.ReplicationDestinationProperty.StorageClass``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-replicationconfiguration-rules-destination.html#cfn-s3-bucket-replicationconfiguration-rules-destination-storageclass"
          },
          "name": "storageClass",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.cloudformation.BucketResource.ReplicationRuleProperty": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-replicationconfiguration-rules.html"
      },
      "fqn": "@aws-cdk/aws-s3.cloudformation.BucketResource.ReplicationRuleProperty",
      "kind": "interface",
      "name": "ReplicationRuleProperty",
      "namespace": "@aws-cdk/aws-s3.cloudformation.BucketResource",
      "parenttype": "@aws-cdk/aws-s3.cloudformation.BucketResource",
      "properties": [
        {
          "docs": {
            "comment": "``BucketResource.ReplicationRuleProperty.Destination``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-replicationconfiguration-rules.html#cfn-s3-bucket-replicationconfiguration-rules-destination"
          },
          "name": "destination",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "fqn": "@aws-cdk/aws-s3.cloudformation.BucketResource.ReplicationDestinationProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``BucketResource.ReplicationRuleProperty.Id``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-replicationconfiguration-rules.html#cfn-s3-bucket-replicationconfiguration-rules-id"
          },
          "name": "id",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``BucketResource.ReplicationRuleProperty.Prefix``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-replicationconfiguration-rules.html#cfn-s3-bucket-replicationconfiguration-rules-prefix"
          },
          "name": "prefix",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``BucketResource.ReplicationRuleProperty.SourceSelectionCriteria``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-replicationconfiguration-rules.html#cfn-s3-bucket-replicationrule-sourceselectioncriteria"
          },
          "name": "sourceSelectionCriteria",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "fqn": "@aws-cdk/aws-s3.cloudformation.BucketResource.SourceSelectionCriteriaProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``BucketResource.ReplicationRuleProperty.Status``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-replicationconfiguration-rules.html#cfn-s3-bucket-replicationconfiguration-rules-status"
          },
          "name": "status",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.cloudformation.BucketResource.RoutingRuleConditionProperty": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-websiteconfiguration-routingrules-routingrulecondition.html"
      },
      "fqn": "@aws-cdk/aws-s3.cloudformation.BucketResource.RoutingRuleConditionProperty",
      "kind": "interface",
      "name": "RoutingRuleConditionProperty",
      "namespace": "@aws-cdk/aws-s3.cloudformation.BucketResource",
      "parenttype": "@aws-cdk/aws-s3.cloudformation.BucketResource",
      "properties": [
        {
          "docs": {
            "comment": "``BucketResource.RoutingRuleConditionProperty.HttpErrorCodeReturnedEquals``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-websiteconfiguration-routingrules-routingrulecondition.html#cfn-s3-websiteconfiguration-routingrules-routingrulecondition-httperrorcodereturnedequals"
          },
          "name": "httpErrorCodeReturnedEquals",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``BucketResource.RoutingRuleConditionProperty.KeyPrefixEquals``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-websiteconfiguration-routingrules-routingrulecondition.html#cfn-s3-websiteconfiguration-routingrules-routingrulecondition-keyprefixequals"
          },
          "name": "keyPrefixEquals",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.cloudformation.BucketResource.RoutingRuleProperty": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-websiteconfiguration-routingrules.html"
      },
      "fqn": "@aws-cdk/aws-s3.cloudformation.BucketResource.RoutingRuleProperty",
      "kind": "interface",
      "name": "RoutingRuleProperty",
      "namespace": "@aws-cdk/aws-s3.cloudformation.BucketResource",
      "parenttype": "@aws-cdk/aws-s3.cloudformation.BucketResource",
      "properties": [
        {
          "docs": {
            "comment": "``BucketResource.RoutingRuleProperty.RedirectRule``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-websiteconfiguration-routingrules.html#cfn-s3-websiteconfiguration-routingrules-redirectrule"
          },
          "name": "redirectRule",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "fqn": "@aws-cdk/aws-s3.cloudformation.BucketResource.RedirectRuleProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``BucketResource.RoutingRuleProperty.RoutingRuleCondition``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-websiteconfiguration-routingrules.html#cfn-s3-websiteconfiguration-routingrules-routingrulecondition"
          },
          "name": "routingRuleCondition",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "fqn": "@aws-cdk/aws-s3.cloudformation.BucketResource.RoutingRuleConditionProperty"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.cloudformation.BucketResource.RuleProperty": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-lifecycleconfig-rule.html"
      },
      "fqn": "@aws-cdk/aws-s3.cloudformation.BucketResource.RuleProperty",
      "kind": "interface",
      "name": "RuleProperty",
      "namespace": "@aws-cdk/aws-s3.cloudformation.BucketResource",
      "parenttype": "@aws-cdk/aws-s3.cloudformation.BucketResource",
      "properties": [
        {
          "docs": {
            "comment": "``BucketResource.RuleProperty.AbortIncompleteMultipartUpload``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-lifecycleconfig-rule.html#cfn-s3-bucket-rule-abortincompletemultipartupload"
          },
          "name": "abortIncompleteMultipartUpload",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "fqn": "@aws-cdk/aws-s3.cloudformation.BucketResource.AbortIncompleteMultipartUploadProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``BucketResource.RuleProperty.ExpirationDate``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-lifecycleconfig-rule.html#cfn-s3-bucket-lifecycleconfig-rule-expirationdate"
          },
          "name": "expirationDate",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "primitive": "date"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``BucketResource.RuleProperty.ExpirationInDays``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-lifecycleconfig-rule.html#cfn-s3-bucket-lifecycleconfig-rule-expirationindays"
          },
          "name": "expirationInDays",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "number"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``BucketResource.RuleProperty.Id``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-lifecycleconfig-rule.html#cfn-s3-bucket-lifecycleconfig-rule-id"
          },
          "name": "id",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``BucketResource.RuleProperty.NoncurrentVersionExpirationInDays``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-lifecycleconfig-rule.html#cfn-s3-bucket-lifecycleconfig-rule-noncurrentversionexpirationindays"
          },
          "name": "noncurrentVersionExpirationInDays",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "number"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``BucketResource.RuleProperty.NoncurrentVersionTransition``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-lifecycleconfig-rule.html#cfn-s3-bucket-lifecycleconfig-rule-noncurrentversiontransition"
          },
          "name": "noncurrentVersionTransition",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "fqn": "@aws-cdk/aws-s3.cloudformation.BucketResource.NoncurrentVersionTransitionProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``BucketResource.RuleProperty.NoncurrentVersionTransitions``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-lifecycleconfig-rule.html#cfn-s3-bucket-lifecycleconfig-rule-noncurrentversiontransitions"
          },
          "name": "noncurrentVersionTransitions",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/cdk.Token"
                          },
                          {
                            "fqn": "@aws-cdk/aws-s3.cloudformation.BucketResource.NoncurrentVersionTransitionProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``BucketResource.RuleProperty.Prefix``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-lifecycleconfig-rule.html#cfn-s3-bucket-lifecycleconfig-rule-prefix"
          },
          "name": "prefix",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``BucketResource.RuleProperty.Status``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-lifecycleconfig-rule.html#cfn-s3-bucket-lifecycleconfig-rule-status"
          },
          "name": "status",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``BucketResource.RuleProperty.TagFilters``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-lifecycleconfig-rule.html#cfn-s3-bucket-rule-tagfilters"
          },
          "name": "tagFilters",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/cdk.Token"
                          },
                          {
                            "fqn": "@aws-cdk/aws-s3.cloudformation.BucketResource.TagFilterProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``BucketResource.RuleProperty.Transition``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-lifecycleconfig-rule.html#cfn-s3-bucket-lifecycleconfig-rule-transition"
          },
          "name": "transition",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "fqn": "@aws-cdk/aws-s3.cloudformation.BucketResource.TransitionProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``BucketResource.RuleProperty.Transitions``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-lifecycleconfig-rule.html#cfn-s3-bucket-lifecycleconfig-rule-transitions"
          },
          "name": "transitions",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/cdk.Token"
                          },
                          {
                            "fqn": "@aws-cdk/aws-s3.cloudformation.BucketResource.TransitionProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.cloudformation.BucketResource.S3KeyFilterProperty": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-notificationconfiguration-config-filter-s3key.html"
      },
      "fqn": "@aws-cdk/aws-s3.cloudformation.BucketResource.S3KeyFilterProperty",
      "kind": "interface",
      "name": "S3KeyFilterProperty",
      "namespace": "@aws-cdk/aws-s3.cloudformation.BucketResource",
      "parenttype": "@aws-cdk/aws-s3.cloudformation.BucketResource",
      "properties": [
        {
          "docs": {
            "comment": "``BucketResource.S3KeyFilterProperty.Rules``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-notificationconfiguration-config-filter-s3key.html#cfn-s3-bucket-notificationconfiguraiton-config-filter-s3key-rules"
          },
          "name": "rules",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/cdk.Token"
                          },
                          {
                            "fqn": "@aws-cdk/aws-s3.cloudformation.BucketResource.FilterRuleProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.cloudformation.BucketResource.ServerSideEncryptionByDefaultProperty": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-serversideencryptionbydefault.html"
      },
      "fqn": "@aws-cdk/aws-s3.cloudformation.BucketResource.ServerSideEncryptionByDefaultProperty",
      "kind": "interface",
      "name": "ServerSideEncryptionByDefaultProperty",
      "namespace": "@aws-cdk/aws-s3.cloudformation.BucketResource",
      "parenttype": "@aws-cdk/aws-s3.cloudformation.BucketResource",
      "properties": [
        {
          "docs": {
            "comment": "``BucketResource.ServerSideEncryptionByDefaultProperty.KMSMasterKeyID``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-serversideencryptionbydefault.html#cfn-s3-bucket-serversideencryptionbydefault-kmsmasterkeyid"
          },
          "name": "kmsMasterKeyId",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``BucketResource.ServerSideEncryptionByDefaultProperty.SSEAlgorithm``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-serversideencryptionbydefault.html#cfn-s3-bucket-serversideencryptionbydefault-ssealgorithm"
          },
          "name": "sseAlgorithm",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.cloudformation.BucketResource.ServerSideEncryptionRuleProperty": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-serversideencryptionrule.html"
      },
      "fqn": "@aws-cdk/aws-s3.cloudformation.BucketResource.ServerSideEncryptionRuleProperty",
      "kind": "interface",
      "name": "ServerSideEncryptionRuleProperty",
      "namespace": "@aws-cdk/aws-s3.cloudformation.BucketResource",
      "parenttype": "@aws-cdk/aws-s3.cloudformation.BucketResource",
      "properties": [
        {
          "docs": {
            "comment": "``BucketResource.ServerSideEncryptionRuleProperty.ServerSideEncryptionByDefault``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-serversideencryptionrule.html#cfn-s3-bucket-serversideencryptionrule-serversideencryptionbydefault"
          },
          "name": "serverSideEncryptionByDefault",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "fqn": "@aws-cdk/aws-s3.cloudformation.BucketResource.ServerSideEncryptionByDefaultProperty"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.cloudformation.BucketResource.SourceSelectionCriteriaProperty": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-sourceselectioncriteria.html"
      },
      "fqn": "@aws-cdk/aws-s3.cloudformation.BucketResource.SourceSelectionCriteriaProperty",
      "kind": "interface",
      "name": "SourceSelectionCriteriaProperty",
      "namespace": "@aws-cdk/aws-s3.cloudformation.BucketResource",
      "parenttype": "@aws-cdk/aws-s3.cloudformation.BucketResource",
      "properties": [
        {
          "docs": {
            "comment": "``BucketResource.SourceSelectionCriteriaProperty.SseKmsEncryptedObjects``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-sourceselectioncriteria.html#cfn-s3-bucket-sourceselectioncriteria-ssekmsencryptedobjects"
          },
          "name": "sseKmsEncryptedObjects",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "fqn": "@aws-cdk/aws-s3.cloudformation.BucketResource.SseKmsEncryptedObjectsProperty"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.cloudformation.BucketResource.SseKmsEncryptedObjectsProperty": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-ssekmsencryptedobjects.html"
      },
      "fqn": "@aws-cdk/aws-s3.cloudformation.BucketResource.SseKmsEncryptedObjectsProperty",
      "kind": "interface",
      "name": "SseKmsEncryptedObjectsProperty",
      "namespace": "@aws-cdk/aws-s3.cloudformation.BucketResource",
      "parenttype": "@aws-cdk/aws-s3.cloudformation.BucketResource",
      "properties": [
        {
          "docs": {
            "comment": "``BucketResource.SseKmsEncryptedObjectsProperty.Status``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-ssekmsencryptedobjects.html#cfn-s3-bucket-ssekmsencryptedobjects-status"
          },
          "name": "status",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.cloudformation.BucketResource.StorageClassAnalysisProperty": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-storageclassanalysis.html"
      },
      "fqn": "@aws-cdk/aws-s3.cloudformation.BucketResource.StorageClassAnalysisProperty",
      "kind": "interface",
      "name": "StorageClassAnalysisProperty",
      "namespace": "@aws-cdk/aws-s3.cloudformation.BucketResource",
      "parenttype": "@aws-cdk/aws-s3.cloudformation.BucketResource",
      "properties": [
        {
          "docs": {
            "comment": "``BucketResource.StorageClassAnalysisProperty.DataExport``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-storageclassanalysis.html#cfn-s3-bucket-storageclassanalysis-dataexport"
          },
          "name": "dataExport",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "fqn": "@aws-cdk/aws-s3.cloudformation.BucketResource.DataExportProperty"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.cloudformation.BucketResource.TagFilterProperty": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-tagfilter.html"
      },
      "fqn": "@aws-cdk/aws-s3.cloudformation.BucketResource.TagFilterProperty",
      "kind": "interface",
      "name": "TagFilterProperty",
      "namespace": "@aws-cdk/aws-s3.cloudformation.BucketResource",
      "parenttype": "@aws-cdk/aws-s3.cloudformation.BucketResource",
      "properties": [
        {
          "docs": {
            "comment": "``BucketResource.TagFilterProperty.Key``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-tagfilter.html#cfn-s3-bucket-tagfilter-key"
          },
          "name": "key",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``BucketResource.TagFilterProperty.Value``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-tagfilter.html#cfn-s3-bucket-tagfilter-value"
          },
          "name": "value",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.cloudformation.BucketResource.TopicConfigurationProperty": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-notificationconfig-topicconfig.html"
      },
      "fqn": "@aws-cdk/aws-s3.cloudformation.BucketResource.TopicConfigurationProperty",
      "kind": "interface",
      "name": "TopicConfigurationProperty",
      "namespace": "@aws-cdk/aws-s3.cloudformation.BucketResource",
      "parenttype": "@aws-cdk/aws-s3.cloudformation.BucketResource",
      "properties": [
        {
          "docs": {
            "comment": "``BucketResource.TopicConfigurationProperty.Event``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-notificationconfig-topicconfig.html#cfn-s3-bucket-notificationconfig-topicconfig-event"
          },
          "name": "event",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``BucketResource.TopicConfigurationProperty.Filter``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-notificationconfig-topicconfig.html#cfn-s3-bucket-notificationconfig-topicconfig-filter"
          },
          "name": "filter",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "fqn": "@aws-cdk/aws-s3.cloudformation.BucketResource.NotificationFilterProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``BucketResource.TopicConfigurationProperty.Topic``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-notificationconfig-topicconfig.html#cfn-s3-bucket-notificationconfig-topicconfig-topic"
          },
          "name": "topic",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.cloudformation.BucketResource.TransitionProperty": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-lifecycleconfig-rule-transition.html"
      },
      "fqn": "@aws-cdk/aws-s3.cloudformation.BucketResource.TransitionProperty",
      "kind": "interface",
      "name": "TransitionProperty",
      "namespace": "@aws-cdk/aws-s3.cloudformation.BucketResource",
      "parenttype": "@aws-cdk/aws-s3.cloudformation.BucketResource",
      "properties": [
        {
          "docs": {
            "comment": "``BucketResource.TransitionProperty.StorageClass``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-lifecycleconfig-rule-transition.html#cfn-s3-bucket-lifecycleconfig-rule-transition-storageclass"
          },
          "name": "storageClass",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``BucketResource.TransitionProperty.TransitionDate``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-lifecycleconfig-rule-transition.html#cfn-s3-bucket-lifecycleconfig-rule-transition-transitiondate"
          },
          "name": "transitionDate",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "primitive": "date"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``BucketResource.TransitionProperty.TransitionInDays``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-lifecycleconfig-rule-transition.html#cfn-s3-bucket-lifecycleconfig-rule-transition-transitionindays"
          },
          "name": "transitionInDays",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "number"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.cloudformation.BucketResource.VersioningConfigurationProperty": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-versioningconfig.html"
      },
      "fqn": "@aws-cdk/aws-s3.cloudformation.BucketResource.VersioningConfigurationProperty",
      "kind": "interface",
      "name": "VersioningConfigurationProperty",
      "namespace": "@aws-cdk/aws-s3.cloudformation.BucketResource",
      "parenttype": "@aws-cdk/aws-s3.cloudformation.BucketResource",
      "properties": [
        {
          "docs": {
            "comment": "``BucketResource.VersioningConfigurationProperty.Status``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-versioningconfig.html#cfn-s3-bucket-versioningconfig-status"
          },
          "name": "status",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.cloudformation.BucketResource.WebsiteConfigurationProperty": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-websiteconfiguration.html"
      },
      "fqn": "@aws-cdk/aws-s3.cloudformation.BucketResource.WebsiteConfigurationProperty",
      "kind": "interface",
      "name": "WebsiteConfigurationProperty",
      "namespace": "@aws-cdk/aws-s3.cloudformation.BucketResource",
      "parenttype": "@aws-cdk/aws-s3.cloudformation.BucketResource",
      "properties": [
        {
          "docs": {
            "comment": "``BucketResource.WebsiteConfigurationProperty.ErrorDocument``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-websiteconfiguration.html#cfn-s3-websiteconfiguration-errordocument"
          },
          "name": "errorDocument",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``BucketResource.WebsiteConfigurationProperty.IndexDocument``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-websiteconfiguration.html#cfn-s3-websiteconfiguration-indexdocument"
          },
          "name": "indexDocument",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``BucketResource.WebsiteConfigurationProperty.RedirectAllRequestsTo``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-websiteconfiguration.html#cfn-s3-websiteconfiguration-redirectallrequeststo"
          },
          "name": "redirectAllRequestsTo",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "fqn": "@aws-cdk/aws-s3.cloudformation.BucketResource.RedirectAllRequestsToProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``BucketResource.WebsiteConfigurationProperty.RoutingRules``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-websiteconfiguration.html#cfn-s3-websiteconfiguration-routingrules"
          },
          "name": "routingRules",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/cdk.Token"
                          },
                          {
                            "fqn": "@aws-cdk/aws-s3.cloudformation.BucketResource.RoutingRuleProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-s3.cloudformation.BucketResourceProps": {
      "assembly": "@aws-cdk/aws-s3",
      "datatype": true,
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket.html"
      },
      "fqn": "@aws-cdk/aws-s3.cloudformation.BucketResourceProps",
      "kind": "interface",
      "name": "BucketResourceProps",
      "namespace": "@aws-cdk/aws-s3.cloudformation",
      "properties": [
        {
          "docs": {
            "comment": "``AWS::S3::Bucket.AccelerateConfiguration``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket.html#cfn-s3-bucket-accelerateconfiguration"
          },
          "name": "accelerateConfiguration",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "fqn": "@aws-cdk/aws-s3.cloudformation.BucketResource.AccelerateConfigurationProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::S3::Bucket.AccessControl``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket.html#cfn-s3-bucket-accesscontrol"
          },
          "name": "accessControl",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::S3::Bucket.AnalyticsConfigurations``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket.html#cfn-s3-bucket-analyticsconfigurations"
          },
          "name": "analyticsConfigurations",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/cdk.Token"
                          },
                          {
                            "fqn": "@aws-cdk/aws-s3.cloudformation.BucketResource.AnalyticsConfigurationProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::S3::Bucket.BucketEncryption``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket.html#cfn-s3-bucket-bucketencryption"
          },
          "name": "bucketEncryption",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "fqn": "@aws-cdk/aws-s3.cloudformation.BucketResource.BucketEncryptionProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::S3::Bucket.BucketName``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket.html#cfn-s3-bucket-name"
          },
          "name": "bucketName",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::S3::Bucket.CorsConfiguration``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket.html#cfn-s3-bucket-crossoriginconfig"
          },
          "name": "corsConfiguration",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "fqn": "@aws-cdk/aws-s3.cloudformation.BucketResource.CorsConfigurationProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::S3::Bucket.InventoryConfigurations``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket.html#cfn-s3-bucket-inventoryconfigurations"
          },
          "name": "inventoryConfigurations",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/cdk.Token"
                          },
                          {
                            "fqn": "@aws-cdk/aws-s3.cloudformation.BucketResource.InventoryConfigurationProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::S3::Bucket.LifecycleConfiguration``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket.html#cfn-s3-bucket-lifecycleconfig"
          },
          "name": "lifecycleConfiguration",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "fqn": "@aws-cdk/aws-s3.cloudformation.BucketResource.LifecycleConfigurationProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::S3::Bucket.LoggingConfiguration``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket.html#cfn-s3-bucket-loggingconfig"
          },
          "name": "loggingConfiguration",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "fqn": "@aws-cdk/aws-s3.cloudformation.BucketResource.LoggingConfigurationProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::S3::Bucket.MetricsConfigurations``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket.html#cfn-s3-bucket-metricsconfigurations"
          },
          "name": "metricsConfigurations",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/cdk.Token"
                          },
                          {
                            "fqn": "@aws-cdk/aws-s3.cloudformation.BucketResource.MetricsConfigurationProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::S3::Bucket.NotificationConfiguration``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket.html#cfn-s3-bucket-notification"
          },
          "name": "notificationConfiguration",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "fqn": "@aws-cdk/aws-s3.cloudformation.BucketResource.NotificationConfigurationProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::S3::Bucket.ReplicationConfiguration``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket.html#cfn-s3-bucket-replicationconfiguration"
          },
          "name": "replicationConfiguration",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "fqn": "@aws-cdk/aws-s3.cloudformation.BucketResource.ReplicationConfigurationProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::S3::Bucket.Tags``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket.html#cfn-s3-bucket-tags"
          },
          "name": "tags",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/cdk.Token"
                          },
                          {
                            "fqn": "@aws-cdk/cdk.Tag"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::S3::Bucket.VersioningConfiguration``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket.html#cfn-s3-bucket-versioning"
          },
          "name": "versioningConfiguration",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "fqn": "@aws-cdk/aws-s3.cloudformation.BucketResource.VersioningConfigurationProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::S3::Bucket.WebsiteConfiguration``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket.html#cfn-s3-bucket-websiteconfiguration"
          },
          "name": "websiteConfiguration",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "fqn": "@aws-cdk/aws-s3.cloudformation.BucketResource.WebsiteConfigurationProperty"
                }
              ]
            }
          }
        }
      ]
    }
  },
  "version": "0.7.3-beta"
}
