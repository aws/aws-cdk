{
  "fingerprint": "P+ekjsI8mxjIKaFhjwNltOzWwkfZM3s34UZrZ0wjDyQ=",
  "dependencies": {
    "@aws-cdk/aws-iam": {
      "dependencies": {
        "@aws-cdk/cdk": {
          "dependencies": {
            "@aws-cdk/cx-api": {
              "targets": {
                "dotnet": {
                  "namespace": "Amazon.CDK.CXAPI"
                },
                "java": {
                  "maven": {
                    "artifactId": "cxapi",
                    "groupId": "com.amazonaws.cdk"
                  },
                  "package": "com.amazonaws.cdk.cxapi"
                },
                "js": {
                  "npm": "@aws-cdk/cx-api"
                }
              },
              "version": "0.7.3-beta"
            }
          },
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK"
            },
            "java": {
              "maven": {
                "artifactId": "cdk",
                "groupId": "com.amazonaws.cdk"
              },
              "package": "com.amazonaws.cdk"
            },
            "js": {
              "npm": "@aws-cdk/cdk"
            }
          },
          "version": "0.7.3-beta"
        }
      },
      "targets": {
        "dotnet": {
          "namespace": "Amazon.CDK.AWS.IAM"
        },
        "java": {
          "maven": {
            "artifactId": "aws-iam",
            "groupId": "com.amazonaws.cdk"
          },
          "package": "com.amazonaws.cdk.aws.iam"
        },
        "js": {
          "npm": "@aws-cdk/aws-iam"
        }
      },
      "version": "0.7.3-beta"
    },
    "@aws-cdk/aws-kms": {
      "dependencies": {
        "@aws-cdk/aws-iam": {
          "dependencies": {
            "@aws-cdk/cdk": {
              "dependencies": {
                "@aws-cdk/cx-api": {
                  "targets": {
                    "dotnet": {
                      "namespace": "Amazon.CDK.CXAPI"
                    },
                    "java": {
                      "maven": {
                        "artifactId": "cxapi",
                        "groupId": "com.amazonaws.cdk"
                      },
                      "package": "com.amazonaws.cdk.cxapi"
                    },
                    "js": {
                      "npm": "@aws-cdk/cx-api"
                    }
                  },
                  "version": "0.7.3-beta"
                }
              },
              "targets": {
                "dotnet": {
                  "namespace": "Amazon.CDK"
                },
                "java": {
                  "maven": {
                    "artifactId": "cdk",
                    "groupId": "com.amazonaws.cdk"
                  },
                  "package": "com.amazonaws.cdk"
                },
                "js": {
                  "npm": "@aws-cdk/cdk"
                }
              },
              "version": "0.7.3-beta"
            }
          },
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.IAM"
            },
            "java": {
              "maven": {
                "artifactId": "aws-iam",
                "groupId": "com.amazonaws.cdk"
              },
              "package": "com.amazonaws.cdk.aws.iam"
            },
            "js": {
              "npm": "@aws-cdk/aws-iam"
            }
          },
          "version": "0.7.3-beta"
        },
        "@aws-cdk/cdk": {
          "dependencies": {
            "@aws-cdk/cx-api": {
              "targets": {
                "dotnet": {
                  "namespace": "Amazon.CDK.CXAPI"
                },
                "java": {
                  "maven": {
                    "artifactId": "cxapi",
                    "groupId": "com.amazonaws.cdk"
                  },
                  "package": "com.amazonaws.cdk.cxapi"
                },
                "js": {
                  "npm": "@aws-cdk/cx-api"
                }
              },
              "version": "0.7.3-beta"
            }
          },
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK"
            },
            "java": {
              "maven": {
                "artifactId": "cdk",
                "groupId": "com.amazonaws.cdk"
              },
              "package": "com.amazonaws.cdk"
            },
            "js": {
              "npm": "@aws-cdk/cdk"
            }
          },
          "version": "0.7.3-beta"
        }
      },
      "targets": {
        "dotnet": {
          "namespace": "Amazon.CDK.AWS.KMS"
        },
        "java": {
          "maven": {
            "artifactId": "aws-kms",
            "groupId": "com.amazonaws.cdk"
          },
          "package": "com.amazonaws.cdk.aws.kms"
        },
        "js": {
          "npm": "@aws-cdk/aws-kms"
        }
      },
      "version": "0.7.3-beta"
    },
    "@aws-cdk/aws-logs": {
      "dependencies": {
        "@aws-cdk/aws-iam": {
          "dependencies": {
            "@aws-cdk/cdk": {
              "dependencies": {
                "@aws-cdk/cx-api": {
                  "targets": {
                    "dotnet": {
                      "namespace": "Amazon.CDK.CXAPI"
                    },
                    "java": {
                      "maven": {
                        "artifactId": "cxapi",
                        "groupId": "com.amazonaws.cdk"
                      },
                      "package": "com.amazonaws.cdk.cxapi"
                    },
                    "js": {
                      "npm": "@aws-cdk/cx-api"
                    }
                  },
                  "version": "0.7.3-beta"
                }
              },
              "targets": {
                "dotnet": {
                  "namespace": "Amazon.CDK"
                },
                "java": {
                  "maven": {
                    "artifactId": "cdk",
                    "groupId": "com.amazonaws.cdk"
                  },
                  "package": "com.amazonaws.cdk"
                },
                "js": {
                  "npm": "@aws-cdk/cdk"
                }
              },
              "version": "0.7.3-beta"
            }
          },
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.AWS.IAM"
            },
            "java": {
              "maven": {
                "artifactId": "aws-iam",
                "groupId": "com.amazonaws.cdk"
              },
              "package": "com.amazonaws.cdk.aws.iam"
            },
            "js": {
              "npm": "@aws-cdk/aws-iam"
            }
          },
          "version": "0.7.3-beta"
        },
        "@aws-cdk/cdk": {
          "dependencies": {
            "@aws-cdk/cx-api": {
              "targets": {
                "dotnet": {
                  "namespace": "Amazon.CDK.CXAPI"
                },
                "java": {
                  "maven": {
                    "artifactId": "cxapi",
                    "groupId": "com.amazonaws.cdk"
                  },
                  "package": "com.amazonaws.cdk.cxapi"
                },
                "js": {
                  "npm": "@aws-cdk/cx-api"
                }
              },
              "version": "0.7.3-beta"
            }
          },
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK"
            },
            "java": {
              "maven": {
                "artifactId": "cdk",
                "groupId": "com.amazonaws.cdk"
              },
              "package": "com.amazonaws.cdk"
            },
            "js": {
              "npm": "@aws-cdk/cdk"
            }
          },
          "version": "0.7.3-beta"
        }
      },
      "targets": {
        "dotnet": {
          "namespace": "Amazon.CDK.AWS.Logs"
        },
        "java": {
          "maven": {
            "artifactId": "aws-logs",
            "groupId": "com.amazonaws.cdk"
          },
          "package": "com.amazonaws.cdk.aws.logs"
        },
        "js": {
          "npm": "@aws-cdk/aws-logs"
        }
      },
      "version": "0.7.3-beta"
    },
    "@aws-cdk/cdk": {
      "dependencies": {
        "@aws-cdk/cx-api": {
          "targets": {
            "dotnet": {
              "namespace": "Amazon.CDK.CXAPI"
            },
            "java": {
              "maven": {
                "artifactId": "cxapi",
                "groupId": "com.amazonaws.cdk"
              },
              "package": "com.amazonaws.cdk.cxapi"
            },
            "js": {
              "npm": "@aws-cdk/cx-api"
            }
          },
          "version": "0.7.3-beta"
        }
      },
      "targets": {
        "dotnet": {
          "namespace": "Amazon.CDK"
        },
        "java": {
          "maven": {
            "artifactId": "cdk",
            "groupId": "com.amazonaws.cdk"
          },
          "package": "com.amazonaws.cdk"
        },
        "js": {
          "npm": "@aws-cdk/cdk"
        }
      },
      "version": "0.7.3-beta"
    }
  },
  "externals": {
    "@aws-cdk/aws-iam.IIdentityResource": {
      "assembly": "@aws-cdk/aws-iam",
      "docs": {
        "deprecated": "Use IPrincipal"
      },
      "fqn": "@aws-cdk/aws-iam.IIdentityResource",
      "interfaces": [
        {
          "fqn": "@aws-cdk/aws-iam.IPrincipal"
        }
      ],
      "kind": "interface",
      "name": "IIdentityResource",
      "namespace": "@aws-cdk/aws-iam"
    },
    "@aws-cdk/aws-iam.IPrincipal": {
      "assembly": "@aws-cdk/aws-iam",
      "docs": {
        "comment": "A construct that represents an IAM principal, such as a user, group or role."
      },
      "fqn": "@aws-cdk/aws-iam.IPrincipal",
      "kind": "interface",
      "methods": [
        {
          "docs": {
            "comment": "Adds an IAM statement to the default inline policy associated with this\nprincipal. If a policy doesn't exist, it is created."
          },
          "name": "addToPolicy",
          "parameters": [
            {
              "name": "statement",
              "type": {
                "fqn": "@aws-cdk/cdk.PolicyStatement"
              }
            }
          ]
        },
        {
          "docs": {
            "comment": "Attaches an inline policy to this principal.\nThis is the same as calling `policy.addToXxx(principal)`."
          },
          "name": "attachInlinePolicy",
          "parameters": [
            {
              "docs": {
                "comment": "The policy resource to attach to this principal."
              },
              "name": "policy",
              "type": {
                "fqn": "@aws-cdk/aws-iam.Policy"
              }
            }
          ]
        },
        {
          "docs": {
            "comment": "Attaches a managed policy to this principal."
          },
          "name": "attachManagedPolicy",
          "parameters": [
            {
              "docs": {
                "comment": "The ARN of the managed policy"
              },
              "name": "arn",
              "type": {
                "primitive": "any"
              }
            }
          ]
        }
      ],
      "name": "IPrincipal",
      "namespace": "@aws-cdk/aws-iam",
      "properties": [
        {
          "docs": {
            "comment": "The IAM principal of this identity (i.e. AWS principal, service principal, etc)."
          },
          "immutable": true,
          "name": "principal",
          "type": {
            "fqn": "@aws-cdk/cdk.PolicyPrincipal"
          }
        }
      ]
    },
    "@aws-cdk/aws-kms.EncryptionKeyRef": {
      "abstract": true,
      "assembly": "@aws-cdk/aws-kms",
      "base": {
        "fqn": "@aws-cdk/cdk.Construct"
      },
      "fqn": "@aws-cdk/aws-kms.EncryptionKeyRef",
      "initializer": {
        "docs": {
          "comment": "Creates a new construct node."
        },
        "initializer": true,
        "parameters": [
          {
            "docs": {
              "comment": "The parent construct"
            },
            "name": "parent",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "name": "name",
            "type": {
              "primitive": "string"
            }
          }
        ]
      },
      "kind": "class",
      "methods": [
        {
          "docs": {
            "comment": "Defines an imported encryption key.\n\n`ref` can be obtained either via a call to `key.export()` or using\nliterals.\n\nFor example:\n\n     const keyRefProps = key.export();\n     const keyRef1 = EncryptionKeyRef.import(this, 'MyImportedKey1', keyRefProps);\n     const keyRef2 = EncryptionKeyRef.import(this, 'MyImportedKey2', {\n         keyArn: new KeyArn('arn:aws:kms:...')\n     });"
          },
          "name": "import",
          "parameters": [
            {
              "docs": {
                "comment": "The parent construct."
              },
              "name": "parent",
              "type": {
                "fqn": "@aws-cdk/cdk.Construct"
              }
            },
            {
              "docs": {
                "comment": "The name of the construct."
              },
              "name": "name",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "comment": "The key reference."
              },
              "name": "props",
              "type": {
                "fqn": "@aws-cdk/aws-kms.EncryptionKeyRefProps"
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/aws-kms.EncryptionKeyRef"
          },
          "static": true
        },
        {
          "docs": {
            "comment": "Defines a new alias for the key."
          },
          "name": "addAlias",
          "parameters": [
            {
              "name": "alias",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/aws-kms.EncryptionKeyAlias"
          }
        },
        {
          "docs": {
            "comment": "Adds a statement to the KMS key resource policy."
          },
          "name": "addToResourcePolicy",
          "parameters": [
            {
              "name": "statement",
              "type": {
                "fqn": "@aws-cdk/cdk.PolicyStatement"
              }
            }
          ]
        },
        {
          "docs": {
            "comment": "Exports this key from the current stack.",
            "returns": "a key ref which can be used in a call to `EncryptionKey.import(ref)`."
          },
          "name": "export",
          "returns": {
            "fqn": "@aws-cdk/aws-kms.EncryptionKeyRefProps"
          }
        }
      ],
      "name": "EncryptionKeyRef",
      "namespace": "@aws-cdk/aws-kms",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "comment": "The ARN of the key."
          },
          "immutable": true,
          "name": "keyArn",
          "type": {
            "fqn": "@aws-cdk/aws-kms.KeyArn"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "Optional policy document that represents the resource policy of this key.\n\nIf specified, addToResourcePolicy can be used to edit this policy.\nOtherwise this method will no-op."
          },
          "immutable": true,
          "name": "policy",
          "protected": true,
          "type": {
            "fqn": "@aws-cdk/cdk.PolicyDocument",
            "optional": true
          }
        }
      ]
    },
    "@aws-cdk/aws-kms.EncryptionKeyRefProps": {
      "assembly": "@aws-cdk/aws-kms",
      "datatype": true,
      "fqn": "@aws-cdk/aws-kms.EncryptionKeyRefProps",
      "kind": "interface",
      "name": "EncryptionKeyRefProps",
      "namespace": "@aws-cdk/aws-kms",
      "properties": [
        {
          "docs": {
            "comment": "The ARN of the external KMS key."
          },
          "name": "keyArn",
          "type": {
            "fqn": "@aws-cdk/aws-kms.KeyArn"
          }
        }
      ]
    },
    "@aws-cdk/aws-logs.ILogSubscriptionDestination": {
      "assembly": "@aws-cdk/aws-logs",
      "docs": {
        "comment": "Interface for classes that can be the destination of a log Subscription"
      },
      "fqn": "@aws-cdk/aws-logs.ILogSubscriptionDestination",
      "kind": "interface",
      "methods": [
        {
          "docs": {
            "comment": "Return the properties required to send subscription events to this destination.\n\nIf necessary, the destination can use the properties of the SubscriptionFilter\nobject itself to configure its permissions to allow the subscription to write\nto it.\n\nThe destination may reconfigure its own permissions in response to this\nfunction call."
          },
          "name": "logSubscriptionDestination",
          "parameters": [
            {
              "name": "sourceLogGroup",
              "type": {
                "fqn": "@aws-cdk/aws-logs.LogGroup"
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/aws-logs.LogSubscriptionDestination"
          }
        }
      ],
      "name": "ILogSubscriptionDestination",
      "namespace": "@aws-cdk/aws-logs"
    },
    "@aws-cdk/aws-logs.LogGroup": {
      "assembly": "@aws-cdk/aws-logs",
      "base": {
        "fqn": "@aws-cdk/cdk.Construct"
      },
      "docs": {
        "comment": "A new CloudWatch Log Group"
      },
      "fqn": "@aws-cdk/aws-logs.LogGroup",
      "initializer": {
        "initializer": true,
        "parameters": [
          {
            "name": "parent",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-logs.LogGroupProps",
              "optional": true
            }
          }
        ]
      },
      "kind": "class",
      "methods": [
        {
          "docs": {
            "comment": "Create a new Log Stream for this Log Group"
          },
          "name": "newStream",
          "parameters": [
            {
              "docs": {
                "comment": "Parent construct"
              },
              "name": "parent",
              "type": {
                "fqn": "@aws-cdk/cdk.Construct"
              }
            },
            {
              "docs": {
                "comment": "Unique identifier for the construct in its parent"
              },
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "comment": "Properties for creating the LogStream"
              },
              "name": "props",
              "type": {
                "fqn": "@aws-cdk/aws-logs.NewLogStreamProps",
                "optional": true
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/aws-logs.LogStream"
          }
        },
        {
          "docs": {
            "comment": "Create a new Subscription Filter on this Log Group"
          },
          "name": "newSubscriptionFilter",
          "parameters": [
            {
              "docs": {
                "comment": "Parent construct"
              },
              "name": "parent",
              "type": {
                "fqn": "@aws-cdk/cdk.Construct"
              }
            },
            {
              "docs": {
                "comment": "Unique identifier for the construct in its parent"
              },
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "comment": "Properties for creating the SubscriptionFilter"
              },
              "name": "props",
              "type": {
                "fqn": "@aws-cdk/aws-logs.NewSubscriptionFilterProps"
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/aws-logs.SubscriptionFilter"
          }
        },
        {
          "docs": {
            "comment": "Create a new Metric Filter on this Log Group"
          },
          "name": "newMetricFilter",
          "parameters": [
            {
              "docs": {
                "comment": "Parent construct"
              },
              "name": "parent",
              "type": {
                "fqn": "@aws-cdk/cdk.Construct"
              }
            },
            {
              "docs": {
                "comment": "Unique identifier for the construct in its parent"
              },
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "comment": "Properties for creating the MetricFilter"
              },
              "name": "props",
              "type": {
                "fqn": "@aws-cdk/aws-logs.NewMetricFilterProps"
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/aws-logs.MetricFilter"
          }
        }
      ],
      "name": "LogGroup",
      "namespace": "@aws-cdk/aws-logs",
      "properties": [
        {
          "docs": {
            "comment": "The ARN of this log group"
          },
          "immutable": true,
          "name": "logGroupArn",
          "type": {
            "fqn": "@aws-cdk/aws-logs.LogGroupArn"
          }
        },
        {
          "docs": {
            "comment": "The name of this log group"
          },
          "immutable": true,
          "name": "logGroupName",
          "type": {
            "fqn": "@aws-cdk/aws-logs.LogGroupName"
          }
        }
      ]
    },
    "@aws-cdk/aws-logs.LogSubscriptionDestination": {
      "assembly": "@aws-cdk/aws-logs",
      "datatype": true,
      "docs": {
        "comment": "Properties returned by a Subscription destination"
      },
      "fqn": "@aws-cdk/aws-logs.LogSubscriptionDestination",
      "kind": "interface",
      "name": "LogSubscriptionDestination",
      "namespace": "@aws-cdk/aws-logs",
      "properties": [
        {
          "docs": {
            "comment": "The ARN of the subscription's destination"
          },
          "immutable": true,
          "name": "arn",
          "type": {
            "fqn": "@aws-cdk/cdk.Arn"
          }
        },
        {
          "docs": {
            "comment": "The role to assume to write log events to the destination",
            "default": "No role assumed"
          },
          "immutable": true,
          "name": "role",
          "type": {
            "fqn": "@aws-cdk/aws-iam.Role",
            "optional": true
          }
        }
      ]
    },
    "@aws-cdk/cdk.Arn": {
      "assembly": "@aws-cdk/cdk",
      "base": {
        "fqn": "@aws-cdk/cdk.Token"
      },
      "docs": {
        "comment": "An Amazon Resource Name (ARN).\nhttp://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html"
      },
      "fqn": "@aws-cdk/cdk.Arn",
      "initializer": {
        "docs": {
          "comment": "Creates a token that resolves to `value`. If value is a function,\nthe function is evaluated upon resolution and the value it returns will be\nuesd as the token's value."
        },
        "initializer": true,
        "parameters": [
          {
            "name": "valueOrFunction",
            "type": {
              "optional": true,
              "primitive": "any"
            }
          }
        ]
      },
      "kind": "class",
      "methods": [
        {
          "docs": {
            "comment": "Creates an ARN from components.\nIf any component is the empty string,\nan empty string will be inserted into the generated ARN\nat the location that component corresponds to."
          },
          "name": "fromComponents",
          "parameters": [
            {
              "name": "components",
              "type": {
                "fqn": "@aws-cdk/cdk.ArnComponents"
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/cdk.Arn"
          },
          "static": true
        },
        {
          "docs": {
            "comment": "Given an ARN, parses it and returns components.\n\nThe ARN it will be parsed and validated. The separator (`sep`) will be\nset to '/' if the 6th component includes a '/', in which case, `resource`\nwill be set to the value before the '/' and `resourceName` will be the\nrest. In case there is no '/', `resource` will be set to the 6th\ncomponents and `resourceName` will be set to the rest of the string.",
            "returns": "an ArnComponents object which allows access to the various\ncomponents of the ARN."
          },
          "name": "parse",
          "parameters": [
            {
              "name": "arn",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/cdk.ArnComponents"
          },
          "static": true
        },
        {
          "docs": {
            "comment": "Given a Token evaluating to ARN, parses it and returns components.\n\nThe ARN cannot be validated, since we don't have the actual value yet\nat the time of this function call. You will have to know the separator\nand the type of ARN.\n\nThe resulting `ArnComponents` object will contain tokens for the\nsubexpressions of the ARN, not string literals.\n\nWARNING: this function cannot properly parse the complete final\nresourceName (path) out of ARNs that use '/' to both separate the\n'resource' from the 'resourceName' AND to subdivide the resourceName\nfurther. For example, in S3 ARNs:\n\n      arn:aws:s3:::my_corporate_bucket/path/to/exampleobject.png\n\nAfter parsing the resourceName will not contain 'path/to/exampleobject.png'\nbut simply 'path'. This is a limitation because there is no slicing\nfunctionality in CloudFormation templates.",
            "returns": "an ArnComponents object which allows access to the various\ncomponents of the ARN."
          },
          "name": "parseToken",
          "parameters": [
            {
              "docs": {
                "comment": "The input token that contains an ARN"
              },
              "name": "arn",
              "type": {
                "fqn": "@aws-cdk/cdk.Token"
              }
            },
            {
              "docs": {
                "comment": "The separator used to separate resource from resourceName"
              },
              "name": "sep",
              "type": {
                "optional": true,
                "primitive": "string"
              }
            },
            {
              "docs": {
                "comment": "Whether there is a name component in the ARN at all.\nFor example, SNS Topics ARNs have the 'resource' component contain the\ntopic name, and no 'resourceName' component."
              },
              "name": "hasName",
              "type": {
                "optional": true,
                "primitive": "boolean"
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/cdk.ArnComponents"
          },
          "static": true
        }
      ],
      "name": "Arn",
      "namespace": "@aws-cdk/cdk"
    },
    "@aws-cdk/cdk.Construct": {
      "assembly": "@aws-cdk/cdk",
      "docs": {
        "comment": "Represents the building block of the construct graph.\nWhen a construct is created, it is always added as a child"
      },
      "fqn": "@aws-cdk/cdk.Construct",
      "initializer": {
        "docs": {
          "comment": "Creates a new construct node."
        },
        "initializer": true,
        "parameters": [
          {
            "docs": {
              "comment": "The parent construct"
            },
            "name": "parent",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "name": "name",
            "type": {
              "primitive": "string"
            }
          }
        ]
      },
      "kind": "class",
      "methods": [
        {
          "docs": {
            "comment": "Returns a string representation of this construct."
          },
          "name": "toString",
          "returns": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "comment": "Returns a string with a tree representation of this construct and it's children."
          },
          "name": "toTreeString",
          "parameters": [
            {
              "name": "depth",
              "type": {
                "optional": true,
                "primitive": "number"
              }
            }
          ],
          "returns": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "comment": "Return a descendant by path, or undefined",
            "returns": "a child by path or undefined if not found."
          },
          "name": "tryFindChild",
          "parameters": [
            {
              "name": "path",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/cdk.Construct",
            "optional": true
          }
        },
        {
          "docs": {
            "comment": "Return a descendant by path\n\nThrows an exception if the descendant is not found.",
            "returns": "Child with the given path."
          },
          "name": "findChild",
          "parameters": [
            {
              "name": "path",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/cdk.Construct"
          }
        },
        {
          "docs": {
            "comment": "This can be used to set contextual values.\nContext must be set before any children are added, since children may consult context info during construction.\nIf the key already exists, it will be overridden."
          },
          "name": "setContext",
          "parameters": [
            {
              "docs": {
                "comment": "The context key"
              },
              "name": "key",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "comment": "The context value"
              },
              "name": "value",
              "type": {
                "primitive": "any"
              }
            }
          ]
        },
        {
          "docs": {
            "comment": "Retrieves a value from tree context.\n\nContext is usually initialized at the root, but can be overridden at any point in the tree.",
            "returns": "The context value or undefined"
          },
          "name": "getContext",
          "parameters": [
            {
              "docs": {
                "comment": "The context key"
              },
              "name": "key",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "primitive": "any"
          }
        },
        {
          "docs": {
            "comment": "Retrieve a value from tree-global context\n\nIt is an error if the context object is not available."
          },
          "name": "requireContext",
          "parameters": [
            {
              "name": "key",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "primitive": "any"
          }
        },
        {
          "docs": {
            "comment": "Adds a metadata entry to this construct.\nEntries are arbitrary values and will also include a stack trace to allow tracing back to\nthe code location for when the entry was added. It can be used, for example, to include source\nmapping in CloudFormation templates to improve diagnostics."
          },
          "name": "addMetadata",
          "parameters": [
            {
              "docs": {
                "comment": "a string denoting the type of metadata"
              },
              "name": "type",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "comment": "the value of the metadata (can be a Token). If null/undefined, metadata will not be added."
              },
              "name": "data",
              "type": {
                "primitive": "any"
              }
            },
            {
              "docs": {
                "comment": "a function under which to restrict the metadata entry's stack trace (defaults to this.addMetadata)"
              },
              "name": "from",
              "type": {
                "optional": true,
                "primitive": "any"
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/cdk.Construct"
          }
        },
        {
          "docs": {
            "comment": "Adds a { \"aws:cdk:info\": <message> } metadata entry to this construct.\nThe toolkit will display the info message when apps are synthesized."
          },
          "name": "addInfo",
          "parameters": [
            {
              "docs": {
                "comment": "The info message."
              },
              "name": "message",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/cdk.Construct"
          }
        },
        {
          "docs": {
            "comment": "Adds a { warning: <message> } metadata entry to this construct.\nThe toolkit will display the warning when an app is synthesized, or fail\nif run in --strict mode."
          },
          "name": "addWarning",
          "parameters": [
            {
              "docs": {
                "comment": "The warning message."
              },
              "name": "message",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/cdk.Construct"
          }
        },
        {
          "docs": {
            "comment": "Adds an { error: <message> } metadata entry to this construct.\nThe toolkit will fail synthesis when errors are reported."
          },
          "name": "addError",
          "parameters": [
            {
              "docs": {
                "comment": "The error message."
              },
              "name": "message",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/cdk.Construct"
          }
        },
        {
          "docs": {
            "comment": "This method can be implemented by derived constructs in order to perform\nvalidation logic. It is called on all constructs before synthesis.",
            "returns": "An array of validation error messages, or an empty array if there the construct is valid."
          },
          "name": "validate",
          "returns": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "comment": "Invokes 'validate' on all child constructs and then on this construct (depth-first).",
            "returns": "A list of validation errors. If the list is empty, all constructs are valid."
          },
          "name": "validateTree",
          "returns": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/cdk.ValidationError"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "comment": "Return the ancestors (including self) of this Construct up until and excluding the indicated component"
          },
          "name": "ancestors",
          "parameters": [
            {
              "name": "upTo",
              "type": {
                "fqn": "@aws-cdk/cdk.Construct",
                "optional": true
              }
            }
          ],
          "protected": true,
          "returns": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/cdk.Construct"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "aws": "-cdk/runtime`` instead.",
            "comment": "Throws if the `props` bag doesn't include the property `name`.\nIn the future we can add some type-checking here, maybe even auto-generate during compilation.",
            "deprecated": "use ``requireProperty`` from ``"
          },
          "name": "required",
          "parameters": [
            {
              "docs": {
                "comment": "The props bag."
              },
              "name": "props",
              "type": {
                "primitive": "any"
              }
            },
            {
              "docs": {
                "comment": "The name of the required property."
              },
              "name": "name",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "protected": true,
          "returns": {
            "primitive": "any"
          }
        },
        {
          "docs": {
            "comment": "Adds a child construct to this node.",
            "returns": "The resolved path part name of the child"
          },
          "name": "addChild",
          "parameters": [
            {
              "docs": {
                "comment": "The child construct"
              },
              "name": "child",
              "type": {
                "fqn": "@aws-cdk/cdk.Construct"
              }
            },
            {
              "name": "childName",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "protected": true
        },
        {
          "docs": {
            "comment": "Locks this construct from allowing more children to be added. After this\ncall, no more children can be added to this construct or to any children."
          },
          "name": "lock",
          "protected": true
        },
        {
          "docs": {
            "comment": "Unlocks this costruct and allows mutations (adding children)."
          },
          "name": "unlock",
          "protected": true
        }
      ],
      "name": "Construct",
      "namespace": "@aws-cdk/cdk",
      "properties": [
        {
          "docs": {
            "comment": "Returns the parent of this node or undefined if this is a root node."
          },
          "immutable": true,
          "name": "parent",
          "type": {
            "fqn": "@aws-cdk/cdk.Construct",
            "optional": true
          }
        },
        {
          "docs": {
            "comment": "The name of this construct"
          },
          "immutable": true,
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "comment": "All direct children of this construct."
          },
          "immutable": true,
          "name": "children",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/cdk.Construct"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "comment": "Returns the path of all constructs from root to this construct, in string form.",
            "returns": "/-separated path of this Construct."
          },
          "immutable": true,
          "name": "path",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "comment": "An array of metadata objects associated with this construct.\nThis can be used, for example, to implement support for deprecation notices, source mapping, etc."
          },
          "immutable": true,
          "name": "metadata",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/cdk.MetadataEntry"
              },
              "kind": "array"
            }
          }
        }
      ]
    },
    "@aws-cdk/cdk.IDependable": {
      "assembly": "@aws-cdk/cdk",
      "datatype": true,
      "docs": {
        "comment": "Represents a construct that can be \"depended on\" via `addDependency`."
      },
      "fqn": "@aws-cdk/cdk.IDependable",
      "kind": "interface",
      "name": "IDependable",
      "namespace": "@aws-cdk/cdk",
      "properties": [
        {
          "docs": {
            "comment": "Returns the set of all stack elements (resources, parameters, conditions)\nthat should be added when a resource \"depends on\" this construct."
          },
          "immutable": true,
          "name": "dependencyElements",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/cdk.IDependable"
              },
              "kind": "array"
            }
          }
        }
      ]
    },
    "@aws-cdk/cdk.Referenceable": {
      "abstract": true,
      "assembly": "@aws-cdk/cdk",
      "base": {
        "fqn": "@aws-cdk/cdk.StackElement"
      },
      "docs": {
        "comment": "A construct, which is part of a stack and can be referenced using it's logical ID\nusing the CloudFormation intrinsic function { Ref: ID }."
      },
      "fqn": "@aws-cdk/cdk.Referenceable",
      "initializer": {
        "docs": {
          "comment": "Creates an entity and binds it to a tree.\nNote that the root of the tree must be a Stack object (not just any Root)."
        },
        "initializer": true,
        "parameters": [
          {
            "docs": {
              "comment": "The parent construct"
            },
            "name": "parent",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "name": "name",
            "type": {
              "primitive": "string"
            }
          }
        ]
      },
      "kind": "class",
      "name": "Referenceable",
      "namespace": "@aws-cdk/cdk",
      "properties": [
        {
          "docs": {
            "comment": "Returns a token to a CloudFormation { Ref } that references this entity based on it's logical ID."
          },
          "immutable": true,
          "name": "ref",
          "type": {
            "fqn": "@aws-cdk/cdk.Token"
          }
        }
      ]
    },
    "@aws-cdk/cdk.Resource": {
      "assembly": "@aws-cdk/cdk",
      "base": {
        "fqn": "@aws-cdk/cdk.Referenceable"
      },
      "docs": {
        "comment": "Represents a CloudFormation resource."
      },
      "fqn": "@aws-cdk/cdk.Resource",
      "initializer": {
        "docs": {
          "comment": "Creates a resource construct."
        },
        "initializer": true,
        "parameters": [
          {
            "name": "parent",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "name": "name",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/cdk.ResourceProps"
            }
          }
        ]
      },
      "kind": "class",
      "methods": [
        {
          "docs": {
            "comment": "A decoration used to create a CloudFormation attribute property."
          },
          "name": "attribute",
          "parameters": [
            {
              "docs": {
                "comment": "Custom name for the attribute (default is the name of the property)\nNOTE: we return \"any\" here to satistfy jsii, which doesn't support lambdas."
              },
              "name": "customName",
              "type": {
                "optional": true,
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "primitive": "any"
          },
          "static": true
        },
        {
          "docs": {
            "comment": "Returns a token for an runtime attribute of this resource.\nIdeally, use generated attribute accessors (e.g. `resource.arn`), but this can be used for future compatibility\nin case there is no generated attribute."
          },
          "name": "getAtt",
          "parameters": [
            {
              "docs": {
                "comment": "The name of the attribute."
              },
              "name": "attributeName",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/cdk.Token"
          }
        },
        {
          "docs": {
            "comment": "Adds a dependency on another resource."
          },
          "name": "addDependency",
          "parameters": [
            {
              "docs": {
                "comment": "The other resource."
              },
              "name": "other",
              "type": {
                "fqn": "@aws-cdk/cdk.IDependable"
              },
              "variadic": true
            }
          ],
          "variadic": true
        },
        {
          "docs": {
            "comment": "Emits CloudFormation for this resource."
          },
          "name": "toCloudFormation",
          "returns": {
            "primitive": "json"
          }
        },
        {
          "name": "renderProperties",
          "protected": true,
          "returns": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        }
      ],
      "name": "Resource",
      "namespace": "@aws-cdk/cdk",
      "properties": [
        {
          "docs": {
            "comment": "Options for this resource, such as condition, update policy etc."
          },
          "immutable": true,
          "name": "options",
          "type": {
            "fqn": "@aws-cdk/cdk.ResourceOptions"
          }
        },
        {
          "docs": {
            "comment": "AWS resource type."
          },
          "immutable": true,
          "name": "resourceType",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "comment": "AWS resource properties"
          },
          "immutable": true,
          "name": "properties",
          "protected": true,
          "type": {
            "primitive": "any"
          }
        }
      ]
    },
    "@aws-cdk/cdk.StackElement": {
      "abstract": true,
      "assembly": "@aws-cdk/cdk",
      "base": {
        "fqn": "@aws-cdk/cdk.Construct"
      },
      "docs": {
        "comment": "An element of a CloudFormation stack."
      },
      "fqn": "@aws-cdk/cdk.StackElement",
      "initializer": {
        "docs": {
          "comment": "Creates an entity and binds it to a tree.\nNote that the root of the tree must be a Stack object (not just any Root)."
        },
        "initializer": true,
        "parameters": [
          {
            "docs": {
              "comment": "The parent construct"
            },
            "name": "parent",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "name": "name",
            "type": {
              "primitive": "string"
            }
          }
        ]
      },
      "interfaces": [
        {
          "fqn": "@aws-cdk/cdk.IDependable"
        }
      ],
      "kind": "class",
      "methods": [
        {
          "abstract": true,
          "docs": {
            "comment": "Returns the CloudFormation 'snippet' for this entity. The snippet will only be merged\nat the root level to ensure there are no identity conflicts.\n\nFor example, a Resource class will return something like:\n{\n     Resources: {\n         [this.logicalId]: {\n             Type: this.resourceType,\n             Properties: this.props,\n             Condition: this.condition\n         }\n     }\n}"
          },
          "name": "toCloudFormation",
          "returns": {
            "primitive": "json"
          }
        }
      ],
      "name": "StackElement",
      "namespace": "@aws-cdk/cdk",
      "properties": [
        {
          "docs": {
            "comment": "The logical ID for this CloudFormation stack element"
          },
          "immutable": true,
          "name": "logicalId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "comment": "The stack this Construct has been made a part of"
          },
          "name": "stack",
          "protected": true,
          "type": {
            "fqn": "@aws-cdk/cdk.Stack"
          }
        },
        {
          "docs": {
            "returns": "the stack trace of the point where this Resource was created from, sourced\nfrom the +metadata+ entry typed +aws:cdk:logicalId+, and with the bottom-most\nnode +internal+ entries filtered."
          },
          "immutable": true,
          "name": "creationStackTrace",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "comment": "Return the path with respect to the stack"
          },
          "immutable": true,
          "name": "stackPath",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "comment": "Returns the set of all stack elements (resources, parameters, conditions)\nthat should be added when a resource \"depends on\" this construct."
          },
          "immutable": true,
          "name": "dependencyElements",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/cdk.IDependable"
              },
              "kind": "array"
            }
          }
        }
      ]
    },
    "@aws-cdk/cdk.Tag": {
      "assembly": "@aws-cdk/cdk",
      "datatype": true,
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html"
      },
      "fqn": "@aws-cdk/cdk.Tag",
      "kind": "interface",
      "name": "Tag",
      "namespace": "@aws-cdk/cdk",
      "properties": [
        {
          "docs": {
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html#cfn-resource-tags-key"
          },
          "name": "key",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html#cfn-resource-tags-value"
          },
          "name": "value",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/cdk.Token": {
      "assembly": "@aws-cdk/cdk",
      "docs": {
        "comment": "Represents a lazy-evaluated value. Can be used to delay evaluation of a certain value\nin case, for example, that it requires some context or late-bound data."
      },
      "fqn": "@aws-cdk/cdk.Token",
      "initializer": {
        "docs": {
          "comment": "Creates a token that resolves to `value`. If value is a function,\nthe function is evaluated upon resolution and the value it returns will be\nuesd as the token's value."
        },
        "initializer": true,
        "parameters": [
          {
            "name": "valueOrFunction",
            "type": {
              "optional": true,
              "primitive": "any"
            }
          }
        ]
      },
      "kind": "class",
      "methods": [
        {
          "docs": {
            "returns": "The resolved value for this token."
          },
          "name": "resolve",
          "returns": {
            "primitive": "any"
          }
        }
      ],
      "name": "Token",
      "namespace": "@aws-cdk/cdk"
    }
  },
  "name": "@aws-cdk/aws-kinesis",
  "readme": {
    "markdown": "## AWS Kinesis Construct Library\n\nDefine an unencrypted Kinesis stream.\n\n```ts\nnew Stream(this, 'MyFirstStream');\n```\n\n### Encryption\n\nDefine a KMS-encrypted stream:\n\n```ts\nconst stream = newStream(this, 'MyEncryptedStream', {\n    encryption: StreamEncryption.Kms\n});\n\n// you can access the encryption key:\nassert(stream.encryptionKey instanceof kms.EncryptionKey);\n```\n\nYou can also supply your own key:\n\n```ts\nconst myKmsKey = new kms.EncryptionKey(this, 'MyKey');\n\nconst stream = new Stream(this, 'MyEncryptedStream', {\n    encryption: StreamEncryption.Kms,\n    encryptionKey: myKmsKey\n});\n\nassert(stream.encryptionKey === myKmsKey);\n```\n"
  },
  "schema": "jsii/1.0",
  "targets": {
    "dotnet": {
      "namespace": "Amazon.CDK.AWS.Kinesis"
    },
    "java": {
      "maven": {
        "artifactId": "aws-kinesis",
        "groupId": "com.amazonaws.cdk"
      },
      "package": "com.amazonaws.cdk.aws.kinesis"
    },
    "js": {
      "npm": "@aws-cdk/aws-kinesis"
    }
  },
  "types": {
    "@aws-cdk/aws-kinesis.Stream": {
      "assembly": "@aws-cdk/aws-kinesis",
      "base": {
        "fqn": "@aws-cdk/aws-kinesis.StreamRef"
      },
      "docs": {
        "comment": "A Kinesis stream. Can be encrypted with a KMS key."
      },
      "fqn": "@aws-cdk/aws-kinesis.Stream",
      "initializer": {
        "initializer": true,
        "parameters": [
          {
            "name": "parent",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "name": "name",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-kinesis.StreamProps",
              "optional": true
            }
          }
        ]
      },
      "kind": "class",
      "name": "Stream",
      "namespace": "@aws-cdk/aws-kinesis",
      "properties": [
        {
          "docs": {
            "comment": "The ARN of the stream."
          },
          "immutable": true,
          "name": "streamArn",
          "type": {
            "fqn": "@aws-cdk/aws-kinesis.StreamArn"
          }
        },
        {
          "docs": {
            "comment": "The name of the stream"
          },
          "immutable": true,
          "name": "streamName",
          "type": {
            "fqn": "@aws-cdk/aws-kinesis.StreamName"
          }
        },
        {
          "docs": {
            "comment": "Optional KMS encryption key associated with this stream."
          },
          "immutable": true,
          "name": "encryptionKey",
          "type": {
            "fqn": "@aws-cdk/aws-kms.EncryptionKeyRef",
            "optional": true
          }
        }
      ]
    },
    "@aws-cdk/aws-kinesis.StreamArn": {
      "assembly": "@aws-cdk/aws-kinesis",
      "base": {
        "fqn": "@aws-cdk/cdk.Arn"
      },
      "fqn": "@aws-cdk/aws-kinesis.StreamArn",
      "initializer": {
        "docs": {
          "comment": "Creates a token that resolves to `value`. If value is a function,\nthe function is evaluated upon resolution and the value it returns will be\nuesd as the token's value."
        },
        "initializer": true,
        "parameters": [
          {
            "name": "valueOrFunction",
            "type": {
              "optional": true,
              "primitive": "any"
            }
          }
        ]
      },
      "kind": "class",
      "name": "StreamArn",
      "namespace": "@aws-cdk/aws-kinesis"
    },
    "@aws-cdk/aws-kinesis.StreamEncryption": {
      "assembly": "@aws-cdk/aws-kinesis",
      "docs": {
        "comment": "What kind of server-side encryption to apply to this stream"
      },
      "fqn": "@aws-cdk/aws-kinesis.StreamEncryption",
      "kind": "enum",
      "members": [
        {
          "name": "Unencrypted"
        },
        {
          "name": "Kms"
        }
      ],
      "name": "StreamEncryption",
      "namespace": "@aws-cdk/aws-kinesis"
    },
    "@aws-cdk/aws-kinesis.StreamName": {
      "assembly": "@aws-cdk/aws-kinesis",
      "base": {
        "fqn": "@aws-cdk/cdk.Token"
      },
      "docs": {
        "comment": "The name of the stream."
      },
      "fqn": "@aws-cdk/aws-kinesis.StreamName",
      "initializer": {
        "docs": {
          "comment": "Creates a token that resolves to `value`. If value is a function,\nthe function is evaluated upon resolution and the value it returns will be\nuesd as the token's value."
        },
        "initializer": true,
        "parameters": [
          {
            "name": "valueOrFunction",
            "type": {
              "optional": true,
              "primitive": "any"
            }
          }
        ]
      },
      "kind": "class",
      "name": "StreamName",
      "namespace": "@aws-cdk/aws-kinesis"
    },
    "@aws-cdk/aws-kinesis.StreamProps": {
      "assembly": "@aws-cdk/aws-kinesis",
      "datatype": true,
      "fqn": "@aws-cdk/aws-kinesis.StreamProps",
      "kind": "interface",
      "name": "StreamProps",
      "namespace": "@aws-cdk/aws-kinesis",
      "properties": [
        {
          "docs": {
            "comment": "Enforces a particular physical stream name.",
            "default": "<generated>"
          },
          "name": "streamName",
          "type": {
            "optional": true,
            "primitive": "string"
          }
        },
        {
          "docs": {
            "comment": "The number of hours for the data records that are stored in shards to remain accessible.",
            "default": "24"
          },
          "name": "retentionPeriodHours",
          "type": {
            "optional": true,
            "primitive": "number"
          }
        },
        {
          "docs": {
            "comment": "The number of shards for the stream.",
            "default": "1"
          },
          "name": "shardCount",
          "type": {
            "optional": true,
            "primitive": "number"
          }
        },
        {
          "docs": {
            "comment": "The kind of server-side encryption to apply to this stream.\n\nIf you choose KMS, you can specify a KMS key via `encryptionKey`. If\nencryption key is not specified, a key will automatically be created.",
            "default": "Unencrypted"
          },
          "name": "encryption",
          "type": {
            "fqn": "@aws-cdk/aws-kinesis.StreamEncryption",
            "optional": true
          }
        },
        {
          "docs": {
            "comment": "External KMS key to use for stream encryption.\n\nThe 'encryption' property must be set to \"Kms\".",
            "default": "If encryption is set to \"Kms\" and this property is undefined, a\nnew KMS key will be created and associated with this stream."
          },
          "name": "encryptionKey",
          "type": {
            "fqn": "@aws-cdk/aws-kms.EncryptionKeyRef",
            "optional": true
          }
        }
      ]
    },
    "@aws-cdk/aws-kinesis.StreamRef": {
      "abstract": true,
      "assembly": "@aws-cdk/aws-kinesis",
      "base": {
        "fqn": "@aws-cdk/cdk.Construct"
      },
      "docs": {
        "comment": "Represents a Kinesis Stream.\n\nStreams can be either defined within this stack:\n\n     new Stream(this, 'MyStream', { props });\n\nOr imported from an existing stream:\n\n     StreamRef.import(this, 'MyImportedStream', { streamArn: ... });\n\nYou can also export a stream and import it into another stack:\n\n     const ref = myStream.export();\n     StreamRef.import(this, 'MyImportedStream', ref);"
      },
      "fqn": "@aws-cdk/aws-kinesis.StreamRef",
      "initializer": {
        "docs": {
          "comment": "Creates a new construct node."
        },
        "initializer": true,
        "parameters": [
          {
            "docs": {
              "comment": "The parent construct"
            },
            "name": "parent",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "name": "name",
            "type": {
              "primitive": "string"
            }
          }
        ]
      },
      "interfaces": [
        {
          "fqn": "@aws-cdk/aws-logs.ILogSubscriptionDestination"
        }
      ],
      "kind": "class",
      "methods": [
        {
          "docs": {
            "comment": "Creates a Stream construct that represents an external stream."
          },
          "name": "import",
          "parameters": [
            {
              "docs": {
                "comment": "The parent creating construct (usually `this`)."
              },
              "name": "parent",
              "type": {
                "fqn": "@aws-cdk/cdk.Construct"
              }
            },
            {
              "docs": {
                "comment": "The construct's name."
              },
              "name": "name",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "props",
              "type": {
                "fqn": "@aws-cdk/aws-kinesis.StreamRefProps"
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/aws-kinesis.StreamRef"
          },
          "static": true
        },
        {
          "docs": {
            "comment": "Exports this stream from the stack."
          },
          "name": "export",
          "returns": {
            "fqn": "@aws-cdk/aws-kinesis.StreamRefProps"
          }
        },
        {
          "docs": {
            "comment": "Grant write permissions for this stream and its contents to an IAM\nprincipal (Role/Group/User).\n\nIf an encryption key is used, permission to ues the key to decrypt the\ncontents of the stream will also be granted."
          },
          "name": "grantRead",
          "parameters": [
            {
              "name": "identity",
              "type": {
                "fqn": "@aws-cdk/aws-iam.IIdentityResource",
                "optional": true
              }
            }
          ]
        },
        {
          "docs": {
            "comment": "Grant read permissions for this stream and its contents to an IAM\nprincipal (Role/Group/User).\n\nIf an encryption key is used, permission to ues the key to decrypt the\ncontents of the stream will also be granted."
          },
          "name": "grantWrite",
          "parameters": [
            {
              "name": "identity",
              "type": {
                "fqn": "@aws-cdk/aws-iam.IIdentityResource",
                "optional": true
              }
            }
          ]
        },
        {
          "docs": {
            "comment": "Grants read/write permissions for this stream and its contents to an IAM\nprincipal (Role/Group/User).\n\nIf an encryption key is used, permission to use the key for\nencrypt/decrypt will also be granted."
          },
          "name": "grantReadWrite",
          "parameters": [
            {
              "name": "identity",
              "type": {
                "fqn": "@aws-cdk/aws-iam.IIdentityResource",
                "optional": true
              }
            }
          ]
        },
        {
          "docs": {
            "comment": "Return the properties required to send subscription events to this destination.\n\nIf necessary, the destination can use the properties of the SubscriptionFilter\nobject itself to configure its permissions to allow the subscription to write\nto it.\n\nThe destination may reconfigure its own permissions in response to this\nfunction call."
          },
          "name": "logSubscriptionDestination",
          "parameters": [
            {
              "name": "sourceLogGroup",
              "type": {
                "fqn": "@aws-cdk/aws-logs.LogGroup"
              }
            }
          ],
          "returns": {
            "fqn": "@aws-cdk/aws-logs.LogSubscriptionDestination"
          }
        }
      ],
      "name": "StreamRef",
      "namespace": "@aws-cdk/aws-kinesis",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "comment": "The ARN of the stream."
          },
          "immutable": true,
          "name": "streamArn",
          "type": {
            "fqn": "@aws-cdk/aws-kinesis.StreamArn"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "The name of the stream"
          },
          "immutable": true,
          "name": "streamName",
          "type": {
            "fqn": "@aws-cdk/aws-kinesis.StreamName"
          }
        },
        {
          "abstract": true,
          "docs": {
            "comment": "Optional KMS encryption key associated with this stream."
          },
          "immutable": true,
          "name": "encryptionKey",
          "type": {
            "fqn": "@aws-cdk/aws-kms.EncryptionKeyRef",
            "optional": true
          }
        }
      ]
    },
    "@aws-cdk/aws-kinesis.StreamRefProps": {
      "assembly": "@aws-cdk/aws-kinesis",
      "datatype": true,
      "docs": {
        "comment": "A reference to a stream. The easiest way to instantiate is to call\n`stream.export()`. Then, the consumer can use `Stream.import(this, ref)` and\nget a `Stream`."
      },
      "fqn": "@aws-cdk/aws-kinesis.StreamRefProps",
      "kind": "interface",
      "name": "StreamRefProps",
      "namespace": "@aws-cdk/aws-kinesis",
      "properties": [
        {
          "docs": {
            "comment": "The ARN of the stream."
          },
          "name": "streamArn",
          "type": {
            "fqn": "@aws-cdk/aws-kinesis.StreamArn"
          }
        },
        {
          "docs": {
            "comment": "The KMS key securing the contents of the stream if encryption is enabled."
          },
          "name": "encryptionKey",
          "type": {
            "fqn": "@aws-cdk/aws-kms.EncryptionKeyRefProps",
            "optional": true
          }
        }
      ]
    },
    "@aws-cdk/aws-kinesis.cloudformation.StreamResource": {
      "assembly": "@aws-cdk/aws-kinesis",
      "base": {
        "fqn": "@aws-cdk/cdk.Resource"
      },
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesis-stream.html"
      },
      "fqn": "@aws-cdk/aws-kinesis.cloudformation.StreamResource",
      "initializer": {
        "docs": {
          "comment": "Creates a new ``AWS::Kinesis::Stream``."
        },
        "initializer": true,
        "parameters": [
          {
            "docs": {
              "comment": "the ``cdk.Construct`` this ``StreamResource`` is a part of"
            },
            "name": "parent",
            "type": {
              "fqn": "@aws-cdk/cdk.Construct"
            }
          },
          {
            "docs": {
              "comment": "the name of the resource in the ``cdk.Construct`` tree"
            },
            "name": "name",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "comment": "the properties of this ``StreamResource``"
            },
            "name": "properties",
            "type": {
              "fqn": "@aws-cdk/aws-kinesis.cloudformation.StreamResourceProps"
            }
          }
        ]
      },
      "kind": "class",
      "methods": [
        {
          "name": "renderProperties",
          "protected": true,
          "returns": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        }
      ],
      "name": "StreamResource",
      "namespace": "@aws-cdk/aws-kinesis.cloudformation",
      "properties": [
        {
          "const": true,
          "docs": {
            "comment": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "name": "resourceTypeName",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "cloudformation_attribute": "Arn"
          },
          "immutable": true,
          "name": "streamArn",
          "type": {
            "fqn": "@aws-cdk/aws-kinesis.StreamArn"
          }
        }
      ],
      "subtypes": [
        "@aws-cdk/aws-kinesis.cloudformation.StreamResource.StreamEncryptionProperty"
      ]
    },
    "@aws-cdk/aws-kinesis.cloudformation.StreamResource.StreamEncryptionProperty": {
      "assembly": "@aws-cdk/aws-kinesis",
      "datatype": true,
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-kinesis-stream-streamencryption.html"
      },
      "fqn": "@aws-cdk/aws-kinesis.cloudformation.StreamResource.StreamEncryptionProperty",
      "kind": "interface",
      "name": "StreamEncryptionProperty",
      "namespace": "@aws-cdk/aws-kinesis.cloudformation.StreamResource",
      "parenttype": "@aws-cdk/aws-kinesis.cloudformation.StreamResource",
      "properties": [
        {
          "docs": {
            "comment": "``StreamResource.StreamEncryptionProperty.EncryptionType``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-kinesis-stream-streamencryption.html#cfn-kinesis-stream-streamencryption-encryptiontype"
          },
          "name": "encryptionType",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``StreamResource.StreamEncryptionProperty.KeyId``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-kinesis-stream-streamencryption.html#cfn-kinesis-stream-streamencryption-keyid"
          },
          "name": "keyId",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-kinesis.cloudformation.StreamResourceProps": {
      "assembly": "@aws-cdk/aws-kinesis",
      "datatype": true,
      "docs": {
        "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesis-stream.html"
      },
      "fqn": "@aws-cdk/aws-kinesis.cloudformation.StreamResourceProps",
      "kind": "interface",
      "name": "StreamResourceProps",
      "namespace": "@aws-cdk/aws-kinesis.cloudformation",
      "properties": [
        {
          "docs": {
            "comment": "``AWS::Kinesis::Stream.ShardCount``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesis-stream.html#cfn-kinesis-stream-shardcount"
          },
          "name": "shardCount",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "number"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::Kinesis::Stream.Name``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesis-stream.html#cfn-kinesis-stream-name"
          },
          "name": "streamName",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "string"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::Kinesis::Stream.RetentionPeriodHours``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesis-stream.html#cfn-kinesis-stream-retentionperiodhours"
          },
          "name": "retentionPeriodHours",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "primitive": "number"
                },
                {
                  "fqn": "@aws-cdk/cdk.Token"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::Kinesis::Stream.StreamEncryption``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesis-stream.html#cfn-kinesis-stream-streamencryption"
          },
          "name": "streamEncryption",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "fqn": "@aws-cdk/aws-kinesis.cloudformation.StreamResource.StreamEncryptionProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "comment": "``AWS::Kinesis::Stream.Tags``",
            "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesis-stream.html#cfn-kinesis-stream-tags"
          },
          "name": "tags",
          "type": {
            "optional": true,
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/cdk.Token"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/cdk.Token"
                          },
                          {
                            "fqn": "@aws-cdk/cdk.Tag"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ]
    }
  },
  "version": "0.7.3-beta"
}
