{
  "version": "48.0.0",
  "artifacts": {
    "aws-cdk-msk-integ.assets": {
      "type": "cdk:asset-manifest",
      "properties": {
        "file": "aws-cdk-msk-integ.assets.json",
        "requiresBootstrapStackVersion": 6,
        "bootstrapStackVersionSsmParameter": "/cdk-bootstrap/hnb659fds/version"
      }
    },
    "aws-cdk-msk-integ": {
      "type": "aws:cloudformation:stack",
      "environment": "aws://unknown-account/unknown-region",
      "properties": {
        "templateFile": "aws-cdk-msk-integ.template.json",
        "terminationProtection": false,
        "validateOnSynth": false,
        "assumeRoleArn": "arn:${AWS::Partition}:iam::${AWS::AccountId}:role/cdk-hnb659fds-deploy-role-${AWS::AccountId}-${AWS::Region}",
        "cloudFormationExecutionRoleArn": "arn:${AWS::Partition}:iam::${AWS::AccountId}:role/cdk-hnb659fds-cfn-exec-role-${AWS::AccountId}-${AWS::Region}",
        "stackTemplateAssetObjectUrl": "s3://cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}/ffa3725f9b13d2d262ef3c0e3fba62eaced0ceae4caece94bc5fb0224e803efc.json",
        "requiresBootstrapStackVersion": 6,
        "bootstrapStackVersionSsmParameter": "/cdk-bootstrap/hnb659fds/version",
        "additionalDependencies": [
          "aws-cdk-msk-integ.assets"
        ],
        "lookupRole": {
          "arn": "arn:${AWS::Partition}:iam::${AWS::AccountId}:role/cdk-hnb659fds-lookup-role-${AWS::AccountId}-${AWS::Region}",
          "requiresBootstrapStackVersion": 8,
          "bootstrapStackVersionSsmParameter": "/cdk-bootstrap/hnb659fds/version"
        }
      },
      "dependencies": [
        "aws-cdk-msk-integ.assets"
      ],
      "metadata": {
        "/aws-cdk-msk-integ/VPC": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "maxAzs": "*",
              "restrictDefaultSecurityGroup": false
            }
          }
        ],
        "/aws-cdk-msk-integ/VPC/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "VPCB9E5F0B4"
          }
        ],
        "/aws-cdk-msk-integ/VPC/PublicSubnet1": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "availabilityZone": "*",
              "vpcId": "*",
              "cidrBlock": "*",
              "mapPublicIpOnLaunch": true,
              "ipv6CidrBlock": "*",
              "assignIpv6AddressOnCreation": "*"
            }
          },
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "availabilityZone": "*",
              "vpcId": "*",
              "cidrBlock": "*",
              "mapPublicIpOnLaunch": true,
              "ipv6CidrBlock": "*",
              "assignIpv6AddressOnCreation": "*"
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {}
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "addNatGateway": [
                "*"
              ]
            }
          }
        ],
        "/aws-cdk-msk-integ/VPC/PublicSubnet1/Subnet": [
          {
            "type": "aws:cdk:logicalId",
            "data": "VPCPublicSubnet1SubnetB4246D30"
          }
        ],
        "/aws-cdk-msk-integ/VPC/PublicSubnet1/RouteTable": [
          {
            "type": "aws:cdk:logicalId",
            "data": "VPCPublicSubnet1RouteTableFEE4B781"
          }
        ],
        "/aws-cdk-msk-integ/VPC/PublicSubnet1/RouteTableAssociation": [
          {
            "type": "aws:cdk:logicalId",
            "data": "VPCPublicSubnet1RouteTableAssociation0B0896DC"
          }
        ],
        "/aws-cdk-msk-integ/VPC/PublicSubnet1/DefaultRoute": [
          {
            "type": "aws:cdk:logicalId",
            "data": "VPCPublicSubnet1DefaultRoute91CEF279"
          }
        ],
        "/aws-cdk-msk-integ/VPC/PublicSubnet1/EIP": [
          {
            "type": "aws:cdk:logicalId",
            "data": "VPCPublicSubnet1EIP6AD938E8"
          }
        ],
        "/aws-cdk-msk-integ/VPC/PublicSubnet1/NATGateway": [
          {
            "type": "aws:cdk:logicalId",
            "data": "VPCPublicSubnet1NATGatewayE0556630"
          }
        ],
        "/aws-cdk-msk-integ/VPC/PublicSubnet2": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "availabilityZone": "*",
              "vpcId": "*",
              "cidrBlock": "*",
              "mapPublicIpOnLaunch": true,
              "ipv6CidrBlock": "*",
              "assignIpv6AddressOnCreation": "*"
            }
          },
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "availabilityZone": "*",
              "vpcId": "*",
              "cidrBlock": "*",
              "mapPublicIpOnLaunch": true,
              "ipv6CidrBlock": "*",
              "assignIpv6AddressOnCreation": "*"
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {}
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "addNatGateway": [
                "*"
              ]
            }
          }
        ],
        "/aws-cdk-msk-integ/VPC/PublicSubnet2/Subnet": [
          {
            "type": "aws:cdk:logicalId",
            "data": "VPCPublicSubnet2Subnet74179F39"
          }
        ],
        "/aws-cdk-msk-integ/VPC/PublicSubnet2/RouteTable": [
          {
            "type": "aws:cdk:logicalId",
            "data": "VPCPublicSubnet2RouteTable6F1A15F1"
          }
        ],
        "/aws-cdk-msk-integ/VPC/PublicSubnet2/RouteTableAssociation": [
          {
            "type": "aws:cdk:logicalId",
            "data": "VPCPublicSubnet2RouteTableAssociation5A808732"
          }
        ],
        "/aws-cdk-msk-integ/VPC/PublicSubnet2/DefaultRoute": [
          {
            "type": "aws:cdk:logicalId",
            "data": "VPCPublicSubnet2DefaultRouteB7481BBA"
          }
        ],
        "/aws-cdk-msk-integ/VPC/PublicSubnet2/EIP": [
          {
            "type": "aws:cdk:logicalId",
            "data": "VPCPublicSubnet2EIP4947BC00"
          }
        ],
        "/aws-cdk-msk-integ/VPC/PublicSubnet2/NATGateway": [
          {
            "type": "aws:cdk:logicalId",
            "data": "VPCPublicSubnet2NATGateway3C070193"
          }
        ],
        "/aws-cdk-msk-integ/VPC/PrivateSubnet1": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "availabilityZone": "*",
              "vpcId": "*",
              "cidrBlock": "*",
              "mapPublicIpOnLaunch": false,
              "ipv6CidrBlock": "*",
              "assignIpv6AddressOnCreation": "*"
            }
          },
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "availabilityZone": "*",
              "vpcId": "*",
              "cidrBlock": "*",
              "mapPublicIpOnLaunch": false,
              "ipv6CidrBlock": "*",
              "assignIpv6AddressOnCreation": "*"
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {}
          }
        ],
        "/aws-cdk-msk-integ/VPC/PrivateSubnet1/Subnet": [
          {
            "type": "aws:cdk:logicalId",
            "data": "VPCPrivateSubnet1Subnet8BCA10E0"
          }
        ],
        "/aws-cdk-msk-integ/VPC/PrivateSubnet1/RouteTable": [
          {
            "type": "aws:cdk:logicalId",
            "data": "VPCPrivateSubnet1RouteTableBE8A6027"
          }
        ],
        "/aws-cdk-msk-integ/VPC/PrivateSubnet1/RouteTableAssociation": [
          {
            "type": "aws:cdk:logicalId",
            "data": "VPCPrivateSubnet1RouteTableAssociation347902D1"
          }
        ],
        "/aws-cdk-msk-integ/VPC/PrivateSubnet1/DefaultRoute": [
          {
            "type": "aws:cdk:logicalId",
            "data": "VPCPrivateSubnet1DefaultRouteAE1D6490"
          }
        ],
        "/aws-cdk-msk-integ/VPC/PrivateSubnet2": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "availabilityZone": "*",
              "vpcId": "*",
              "cidrBlock": "*",
              "mapPublicIpOnLaunch": false,
              "ipv6CidrBlock": "*",
              "assignIpv6AddressOnCreation": "*"
            }
          },
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "availabilityZone": "*",
              "vpcId": "*",
              "cidrBlock": "*",
              "mapPublicIpOnLaunch": false,
              "ipv6CidrBlock": "*",
              "assignIpv6AddressOnCreation": "*"
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {}
          }
        ],
        "/aws-cdk-msk-integ/VPC/PrivateSubnet2/Subnet": [
          {
            "type": "aws:cdk:logicalId",
            "data": "VPCPrivateSubnet2SubnetCFCDAA7A"
          }
        ],
        "/aws-cdk-msk-integ/VPC/PrivateSubnet2/RouteTable": [
          {
            "type": "aws:cdk:logicalId",
            "data": "VPCPrivateSubnet2RouteTable0A19E10E"
          }
        ],
        "/aws-cdk-msk-integ/VPC/PrivateSubnet2/RouteTableAssociation": [
          {
            "type": "aws:cdk:logicalId",
            "data": "VPCPrivateSubnet2RouteTableAssociation0C73D413"
          }
        ],
        "/aws-cdk-msk-integ/VPC/PrivateSubnet2/DefaultRoute": [
          {
            "type": "aws:cdk:logicalId",
            "data": "VPCPrivateSubnet2DefaultRouteF4F5CFD2"
          }
        ],
        "/aws-cdk-msk-integ/VPC/IGW": [
          {
            "type": "aws:cdk:logicalId",
            "data": "VPCIGWB7E252D3"
          }
        ],
        "/aws-cdk-msk-integ/VPC/VPCGW": [
          {
            "type": "aws:cdk:logicalId",
            "data": "VPCVPCGW99B986DC"
          }
        ],
        "/aws-cdk-msk-integ/LoggingBucket": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "removalPolicy": "destroy",
              "autoDeleteObjects": true
            }
          }
        ],
        "/aws-cdk-msk-integ/LoggingBucket/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "LoggingBucket1E5A6F3B"
          }
        ],
        "/aws-cdk-msk-integ/LoggingBucket/Policy": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "bucket": "*"
            }
          }
        ],
        "/aws-cdk-msk-integ/LoggingBucket/Policy/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "LoggingBucketPolicy21938756"
          }
        ],
        "/aws-cdk-msk-integ/LoggingBucket/AutoDeleteObjectsCustomResource": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": "*"
          }
        ],
        "/aws-cdk-msk-integ/LoggingBucket/AutoDeleteObjectsCustomResource/Default": [
          {
            "type": "aws:cdk:logicalId",
            "data": "LoggingBucketAutoDeleteObjectsCustomResource3835D361"
          }
        ],
        "/aws-cdk-msk-integ/LatestNodeRuntimeMap": [
          {
            "type": "aws:cdk:logicalId",
            "data": "LatestNodeRuntimeMap"
          }
        ],
        "/aws-cdk-msk-integ/Custom::S3AutoDeleteObjectsCustomResourceProvider": [
          {
            "type": "aws:cdk:is-custom-resource-handler-customResourceProvider",
            "data": true
          }
        ],
        "/aws-cdk-msk-integ/Custom::S3AutoDeleteObjectsCustomResourceProvider/Role": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092"
          }
        ],
        "/aws-cdk-msk-integ/Custom::S3AutoDeleteObjectsCustomResourceProvider/Handler": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F"
          }
        ],
        "/aws-cdk-msk-integ/Cluster": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": "*"
          }
        ],
        "/aws-cdk-msk-integ/Cluster/SecurityGroup": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "description": "*",
              "vpc": "*"
            }
          }
        ],
        "/aws-cdk-msk-integ/Cluster/SecurityGroup/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ClusterSecurityGroup0921994B"
          }
        ],
        "/aws-cdk-msk-integ/Cluster/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ClusterEB0386A7"
          }
        ],
        "/aws-cdk-msk-integ/Cluster/BootstrapBrokersBootstrapBrokerStringTls/Provider": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "uuid": "*",
              "lambdaPurpose": "*",
              "memorySize": "*",
              "timeout": "*",
              "role": "*",
              "logGroup": "*",
              "functionName": "*",
              "vpc": "*",
              "vpcSubnets": "*",
              "code": "*",
              "handler": "*",
              "runtime": "*"
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "addMetadata": [
                "*",
                true
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "addMetadata": [
                "*",
                "*"
              ]
            }
          }
        ],
        "/aws-cdk-msk-integ/Cluster/BootstrapBrokersBootstrapBrokerStringTls/Resource": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": "*"
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": "*"
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": "*"
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": "*"
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": "*"
          }
        ],
        "/aws-cdk-msk-integ/Cluster/BootstrapBrokersBootstrapBrokerStringTls/Resource/Default": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ClusterBootstrapBrokersBootstrapBrokerStringTls2E6167B7"
          }
        ],
        "/aws-cdk-msk-integ/Cluster/BootstrapBrokersBootstrapBrokerStringTls/CustomResourcePolicy": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "statements": "*"
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "addStatements": [
                {}
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "attachToRole": [
                "*"
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "attachToRole": [
                "*"
              ]
            }
          }
        ],
        "/aws-cdk-msk-integ/Cluster/BootstrapBrokersBootstrapBrokerStringTls/CustomResourcePolicy/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ClusterBootstrapBrokersBootstrapBrokerStringTlsCustomResourcePolicy13FC2126"
          }
        ],
        "/aws-cdk-msk-integ/Exports/Output{\"Fn::GetAtt\":[\"LoggingBucket1E5A6F3B\",\"Arn\"]}": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ExportsOutputFnGetAttLoggingBucket1E5A6F3BArn248EC7EA"
          }
        ],
        "/aws-cdk-msk-integ/Exports/Output{\"Ref\":\"LoggingBucket1E5A6F3B\"}": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ExportsOutputRefLoggingBucket1E5A6F3B2AAAD6ED"
          }
        ],
        "/aws-cdk-msk-integ/AWS679f53fac002430cb0da5b7982bd2287": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "memorySize": "*",
              "timeout": "*",
              "role": "*",
              "logGroup": "*",
              "functionName": "*",
              "vpc": "*",
              "vpcSubnets": "*",
              "code": "*",
              "handler": "*",
              "runtime": "*"
            }
          },
          {
            "type": "aws:cdk:is-custom-resource-handler-singleton",
            "data": true
          },
          {
            "type": "aws:cdk:is-custom-resource-handler-runtime-family",
            "data": 0
          },
          {
            "type": "aws:cdk:is-custom-resource-handler-singleton",
            "data": true
          },
          {
            "type": "aws:cdk:is-custom-resource-handler-runtime-family",
            "data": 0
          },
          {
            "type": "aws:cdk:is-custom-resource-handler-singleton",
            "data": true
          },
          {
            "type": "aws:cdk:is-custom-resource-handler-runtime-family",
            "data": 0
          },
          {
            "type": "aws:cdk:is-custom-resource-handler-singleton",
            "data": true
          },
          {
            "type": "aws:cdk:is-custom-resource-handler-runtime-family",
            "data": 0
          },
          {
            "type": "aws:cdk:is-custom-resource-handler-singleton",
            "data": true
          },
          {
            "type": "aws:cdk:is-custom-resource-handler-runtime-family",
            "data": 0
          },
          {
            "type": "aws:cdk:is-custom-resource-handler-singleton",
            "data": true
          },
          {
            "type": "aws:cdk:is-custom-resource-handler-runtime-family",
            "data": 0
          },
          {
            "type": "aws:cdk:is-custom-resource-handler-singleton",
            "data": true
          },
          {
            "type": "aws:cdk:is-custom-resource-handler-runtime-family",
            "data": 0
          }
        ],
        "/aws-cdk-msk-integ/AWS679f53fac002430cb0da5b7982bd2287/ServiceRole": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "assumedBy": {
                "principalAccount": "*",
                "assumeRoleAction": "*"
              },
              "managedPolicies": [
                {
                  "managedPolicyArn": "*"
                }
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "attachInlinePolicy": [
                "*"
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "attachInlinePolicy": [
                "*"
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "attachInlinePolicy": [
                "*"
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "attachInlinePolicy": [
                "*"
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "attachInlinePolicy": [
                "*"
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "attachInlinePolicy": [
                "*"
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "attachInlinePolicy": [
                "*"
              ]
            }
          }
        ],
        "/aws-cdk-msk-integ/AWS679f53fac002430cb0da5b7982bd2287/ServiceRole/ImportServiceRole": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": "*"
          }
        ],
        "/aws-cdk-msk-integ/AWS679f53fac002430cb0da5b7982bd2287/ServiceRole/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2"
          }
        ],
        "/aws-cdk-msk-integ/AWS679f53fac002430cb0da5b7982bd2287/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "AWS679f53fac002430cb0da5b7982bd22872D164C4C"
          }
        ],
        "/aws-cdk-msk-integ/BootstrapBrokers": [
          {
            "type": "aws:cdk:logicalId",
            "data": "BootstrapBrokers"
          }
        ],
        "/aws-cdk-msk-integ/BootstrapBrokers2": [
          {
            "type": "aws:cdk:logicalId",
            "data": "BootstrapBrokers2"
          }
        ],
        "/aws-cdk-msk-integ/ClusterIAM": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": "*"
          }
        ],
        "/aws-cdk-msk-integ/ClusterIAM/SecurityGroup": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "description": "*",
              "vpc": "*"
            }
          }
        ],
        "/aws-cdk-msk-integ/ClusterIAM/SecurityGroup/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ClusterIAMSecurityGroupA09813F0"
          }
        ],
        "/aws-cdk-msk-integ/ClusterIAM/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ClusterIAMC4B15B57"
          }
        ],
        "/aws-cdk-msk-integ/ClusterIAM/BootstrapBrokersBootstrapBrokerStringSaslIam/Provider": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "uuid": "*",
              "lambdaPurpose": "*",
              "memorySize": "*",
              "timeout": "*",
              "role": "*",
              "logGroup": "*",
              "functionName": "*",
              "vpc": "*",
              "vpcSubnets": "*",
              "code": "*",
              "handler": "*",
              "runtime": "*"
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "addMetadata": [
                "*",
                true
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "addMetadata": [
                "*",
                "*"
              ]
            }
          }
        ],
        "/aws-cdk-msk-integ/ClusterIAM/BootstrapBrokersBootstrapBrokerStringSaslIam/Resource": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": "*"
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": "*"
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": "*"
          }
        ],
        "/aws-cdk-msk-integ/ClusterIAM/BootstrapBrokersBootstrapBrokerStringSaslIam/Resource/Default": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ClusterIAMBootstrapBrokersBootstrapBrokerStringSaslIamEB333452"
          }
        ],
        "/aws-cdk-msk-integ/ClusterIAM/BootstrapBrokersBootstrapBrokerStringSaslIam/CustomResourcePolicy": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "statements": "*"
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "addStatements": [
                {}
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "attachToRole": [
                "*"
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "attachToRole": [
                "*"
              ]
            }
          }
        ],
        "/aws-cdk-msk-integ/ClusterIAM/BootstrapBrokersBootstrapBrokerStringSaslIam/CustomResourcePolicy/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ClusterIAMBootstrapBrokersBootstrapBrokerStringSaslIamCustomResourcePolicy51509D99"
          }
        ],
        "/aws-cdk-msk-integ/BootstrapBrokers3": [
          {
            "type": "aws:cdk:logicalId",
            "data": "BootstrapBrokers3"
          }
        ],
        "/aws-cdk-msk-integ/CertificateAuthority": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CertificateAuthority"
          },
          {
            "type": "Description",
            "data": "Signing authority for Certificates"
          }
        ],
        "/aws-cdk-msk-integ/Certificate": [
          {
            "type": "aws:cdk:logicalId",
            "data": "Certificate"
          },
          {
            "type": "Description",
            "data": "Certificate for signing requests from MSK-Cluster"
          }
        ],
        "/aws-cdk-msk-integ/CertificateActivation": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CertificateActivation"
          }
        ],
        "/aws-cdk-msk-integ/ClusterIAMTLS": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": "*"
          }
        ],
        "/aws-cdk-msk-integ/ClusterIAMTLS/SecurityGroup": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "description": "*",
              "vpc": "*"
            }
          }
        ],
        "/aws-cdk-msk-integ/ClusterIAMTLS/SecurityGroup/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ClusterIAMTLSSecurityGroup57AD0504"
          }
        ],
        "/aws-cdk-msk-integ/ClusterIAMTLS/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ClusterIAMTLS84D04AEF"
          }
        ],
        "/aws-cdk-msk-integ/ClusterIAMTLS/BootstrapBrokersBootstrapBrokerStringTls/Provider": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "uuid": "*",
              "lambdaPurpose": "*",
              "memorySize": "*",
              "timeout": "*",
              "role": "*",
              "logGroup": "*",
              "functionName": "*",
              "vpc": "*",
              "vpcSubnets": "*",
              "code": "*",
              "handler": "*",
              "runtime": "*"
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "addMetadata": [
                "*",
                true
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "addMetadata": [
                "*",
                "*"
              ]
            }
          }
        ],
        "/aws-cdk-msk-integ/ClusterIAMTLS/BootstrapBrokersBootstrapBrokerStringTls/Resource": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": "*"
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": "*"
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": "*"
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": "*"
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": "*"
          }
        ],
        "/aws-cdk-msk-integ/ClusterIAMTLS/BootstrapBrokersBootstrapBrokerStringTls/Resource/Default": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ClusterIAMTLSBootstrapBrokersBootstrapBrokerStringTlsB831721C"
          }
        ],
        "/aws-cdk-msk-integ/ClusterIAMTLS/BootstrapBrokersBootstrapBrokerStringTls/CustomResourcePolicy": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "statements": "*"
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "addStatements": [
                {}
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "attachToRole": [
                "*"
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "attachToRole": [
                "*"
              ]
            }
          }
        ],
        "/aws-cdk-msk-integ/ClusterIAMTLS/BootstrapBrokersBootstrapBrokerStringTls/CustomResourcePolicy/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ClusterIAMTLSBootstrapBrokersBootstrapBrokerStringTlsCustomResourcePolicy508CF9CC"
          }
        ],
        "/aws-cdk-msk-integ/BootstrapBrokers4": [
          {
            "type": "aws:cdk:logicalId",
            "data": "BootstrapBrokers4"
          }
        ],
        "/aws-cdk-msk-integ/BootstrapBrokers5": [
          {
            "type": "aws:cdk:logicalId",
            "data": "BootstrapBrokers5"
          }
        ],
        "/aws-cdk-msk-integ/Cluster_V3_1_1": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": "*"
          }
        ],
        "/aws-cdk-msk-integ/Cluster_V3_1_1/SecurityGroup": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "description": "*",
              "vpc": "*"
            }
          }
        ],
        "/aws-cdk-msk-integ/Cluster_V3_1_1/SecurityGroup/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ClusterV311SecurityGroupABBE5779"
          }
        ],
        "/aws-cdk-msk-integ/Cluster_V3_1_1/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ClusterV311F7E1C843"
          }
        ],
        "/aws-cdk-msk-integ/Cluster_V3_1_1/BootstrapBrokersBootstrapBrokerStringTls/Provider": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "uuid": "*",
              "lambdaPurpose": "*",
              "memorySize": "*",
              "timeout": "*",
              "role": "*",
              "logGroup": "*",
              "functionName": "*",
              "vpc": "*",
              "vpcSubnets": "*",
              "code": "*",
              "handler": "*",
              "runtime": "*"
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "addMetadata": [
                "*",
                true
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "addMetadata": [
                "*",
                "*"
              ]
            }
          }
        ],
        "/aws-cdk-msk-integ/Cluster_V3_1_1/BootstrapBrokersBootstrapBrokerStringTls/Resource": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": "*"
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": "*"
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": "*"
          }
        ],
        "/aws-cdk-msk-integ/Cluster_V3_1_1/BootstrapBrokersBootstrapBrokerStringTls/Resource/Default": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ClusterV311BootstrapBrokersBootstrapBrokerStringTls2DE11AD7"
          }
        ],
        "/aws-cdk-msk-integ/Cluster_V3_1_1/BootstrapBrokersBootstrapBrokerStringTls/CustomResourcePolicy": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "statements": "*"
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "addStatements": [
                {}
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "attachToRole": [
                "*"
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "attachToRole": [
                "*"
              ]
            }
          }
        ],
        "/aws-cdk-msk-integ/Cluster_V3_1_1/BootstrapBrokersBootstrapBrokerStringTls/CustomResourcePolicy/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ClusterV311BootstrapBrokersBootstrapBrokerStringTlsCustomResourcePolicy2F56212C"
          }
        ],
        "/aws-cdk-msk-integ/BootstrapBrokers6": [
          {
            "type": "aws:cdk:logicalId",
            "data": "BootstrapBrokers6"
          }
        ],
        "/aws-cdk-msk-integ/Cluster_V3_2_0": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": "*"
          }
        ],
        "/aws-cdk-msk-integ/Cluster_V3_2_0/SecurityGroup": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "description": "*",
              "vpc": "*"
            }
          }
        ],
        "/aws-cdk-msk-integ/Cluster_V3_2_0/SecurityGroup/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ClusterV320SecurityGroup6CF1C0F9"
          }
        ],
        "/aws-cdk-msk-integ/Cluster_V3_2_0/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ClusterV320997D57C6"
          }
        ],
        "/aws-cdk-msk-integ/Cluster_V3_2_0/BootstrapBrokersBootstrapBrokerStringTls/Provider": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "uuid": "*",
              "lambdaPurpose": "*",
              "memorySize": "*",
              "timeout": "*",
              "role": "*",
              "logGroup": "*",
              "functionName": "*",
              "vpc": "*",
              "vpcSubnets": "*",
              "code": "*",
              "handler": "*",
              "runtime": "*"
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "addMetadata": [
                "*",
                true
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "addMetadata": [
                "*",
                "*"
              ]
            }
          }
        ],
        "/aws-cdk-msk-integ/Cluster_V3_2_0/BootstrapBrokersBootstrapBrokerStringTls/Resource": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": "*"
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": "*"
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": "*"
          }
        ],
        "/aws-cdk-msk-integ/Cluster_V3_2_0/BootstrapBrokersBootstrapBrokerStringTls/Resource/Default": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ClusterV320BootstrapBrokersBootstrapBrokerStringTlsDF31241F"
          }
        ],
        "/aws-cdk-msk-integ/Cluster_V3_2_0/BootstrapBrokersBootstrapBrokerStringTls/CustomResourcePolicy": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "statements": "*"
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "addStatements": [
                {}
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "attachToRole": [
                "*"
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "attachToRole": [
                "*"
              ]
            }
          }
        ],
        "/aws-cdk-msk-integ/Cluster_V3_2_0/BootstrapBrokersBootstrapBrokerStringTls/CustomResourcePolicy/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ClusterV320BootstrapBrokersBootstrapBrokerStringTlsCustomResourcePolicy8326D812"
          }
        ],
        "/aws-cdk-msk-integ/BootstrapBrokers7": [
          {
            "type": "aws:cdk:logicalId",
            "data": "BootstrapBrokers7"
          }
        ],
        "/aws-cdk-msk-integ/Cluster_V3_3_1": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": "*"
          }
        ],
        "/aws-cdk-msk-integ/Cluster_V3_3_1/SecurityGroup": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "description": "*",
              "vpc": "*"
            }
          }
        ],
        "/aws-cdk-msk-integ/Cluster_V3_3_1/SecurityGroup/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ClusterV331SecurityGroup332504D8"
          }
        ],
        "/aws-cdk-msk-integ/Cluster_V3_3_1/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ClusterV33111A3F7AB"
          }
        ],
        "/aws-cdk-msk-integ/Cluster_V3_3_1/BootstrapBrokersBootstrapBrokerStringTls/Provider": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "uuid": "*",
              "lambdaPurpose": "*",
              "memorySize": "*",
              "timeout": "*",
              "role": "*",
              "logGroup": "*",
              "functionName": "*",
              "vpc": "*",
              "vpcSubnets": "*",
              "code": "*",
              "handler": "*",
              "runtime": "*"
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "addMetadata": [
                "*",
                true
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "addMetadata": [
                "*",
                "*"
              ]
            }
          }
        ],
        "/aws-cdk-msk-integ/Cluster_V3_3_1/BootstrapBrokersBootstrapBrokerStringTls/Resource": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": "*"
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": "*"
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": "*"
          }
        ],
        "/aws-cdk-msk-integ/Cluster_V3_3_1/BootstrapBrokersBootstrapBrokerStringTls/Resource/Default": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ClusterV331BootstrapBrokersBootstrapBrokerStringTls2574EE93"
          }
        ],
        "/aws-cdk-msk-integ/Cluster_V3_3_1/BootstrapBrokersBootstrapBrokerStringTls/CustomResourcePolicy": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "statements": "*"
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "addStatements": [
                {}
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "attachToRole": [
                "*"
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "attachToRole": [
                "*"
              ]
            }
          }
        ],
        "/aws-cdk-msk-integ/Cluster_V3_3_1/BootstrapBrokersBootstrapBrokerStringTls/CustomResourcePolicy/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ClusterV331BootstrapBrokersBootstrapBrokerStringTlsCustomResourcePolicy30610F08"
          }
        ],
        "/aws-cdk-msk-integ/BootstrapBrokers8": [
          {
            "type": "aws:cdk:logicalId",
            "data": "BootstrapBrokers8"
          }
        ],
        "/aws-cdk-msk-integ/Cluster_V3_3_2": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": "*"
          }
        ],
        "/aws-cdk-msk-integ/Cluster_V3_3_2/SecurityGroup": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "description": "*",
              "vpc": "*"
            }
          }
        ],
        "/aws-cdk-msk-integ/Cluster_V3_3_2/SecurityGroup/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ClusterV332SecurityGroupDDA33760"
          }
        ],
        "/aws-cdk-msk-integ/Cluster_V3_3_2/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ClusterV332929A761F"
          }
        ],
        "/aws-cdk-msk-integ/Cluster_V3_3_2/BootstrapBrokersBootstrapBrokerStringTls/Provider": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "uuid": "*",
              "lambdaPurpose": "*",
              "memorySize": "*",
              "timeout": "*",
              "role": "*",
              "logGroup": "*",
              "functionName": "*",
              "vpc": "*",
              "vpcSubnets": "*",
              "code": "*",
              "handler": "*",
              "runtime": "*"
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "addMetadata": [
                "*",
                true
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "addMetadata": [
                "*",
                "*"
              ]
            }
          }
        ],
        "/aws-cdk-msk-integ/Cluster_V3_3_2/BootstrapBrokersBootstrapBrokerStringTls/Resource": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": "*"
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": "*"
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": "*"
          }
        ],
        "/aws-cdk-msk-integ/Cluster_V3_3_2/BootstrapBrokersBootstrapBrokerStringTls/Resource/Default": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ClusterV332BootstrapBrokersBootstrapBrokerStringTls06A03A3A"
          }
        ],
        "/aws-cdk-msk-integ/Cluster_V3_3_2/BootstrapBrokersBootstrapBrokerStringTls/CustomResourcePolicy": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "statements": "*"
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "addStatements": [
                {}
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "attachToRole": [
                "*"
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "attachToRole": [
                "*"
              ]
            }
          }
        ],
        "/aws-cdk-msk-integ/Cluster_V3_3_2/BootstrapBrokersBootstrapBrokerStringTls/CustomResourcePolicy/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ClusterV332BootstrapBrokersBootstrapBrokerStringTlsCustomResourcePolicy2EA79A00"
          }
        ],
        "/aws-cdk-msk-integ/BootstrapBrokers9": [
          {
            "type": "aws:cdk:logicalId",
            "data": "BootstrapBrokers9"
          }
        ],
        "/aws-cdk-msk-integ/BootstrapVersion": [
          {
            "type": "aws:cdk:logicalId",
            "data": "BootstrapVersion"
          }
        ],
        "/aws-cdk-msk-integ/CheckBootstrapVersion": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CheckBootstrapVersion"
          }
        ]
      },
      "displayName": "aws-cdk-msk-integ"
    },
    "MskLoggingDefaultTestDeployAssertC2F074AF.assets": {
      "type": "cdk:asset-manifest",
      "properties": {
        "file": "MskLoggingDefaultTestDeployAssertC2F074AF.assets.json",
        "requiresBootstrapStackVersion": 6,
        "bootstrapStackVersionSsmParameter": "/cdk-bootstrap/hnb659fds/version"
      }
    },
    "MskLoggingDefaultTestDeployAssertC2F074AF": {
      "type": "aws:cloudformation:stack",
      "environment": "aws://unknown-account/unknown-region",
      "properties": {
        "templateFile": "MskLoggingDefaultTestDeployAssertC2F074AF.template.json",
        "terminationProtection": false,
        "validateOnSynth": false,
        "assumeRoleArn": "arn:${AWS::Partition}:iam::${AWS::AccountId}:role/cdk-hnb659fds-deploy-role-${AWS::AccountId}-${AWS::Region}",
        "cloudFormationExecutionRoleArn": "arn:${AWS::Partition}:iam::${AWS::AccountId}:role/cdk-hnb659fds-cfn-exec-role-${AWS::AccountId}-${AWS::Region}",
        "stackTemplateAssetObjectUrl": "s3://cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}/bfd90ba216ff0346e7b4e9b8f561dd0afa9d81f0e7628721e9717bd21e48cbd7.json",
        "requiresBootstrapStackVersion": 6,
        "bootstrapStackVersionSsmParameter": "/cdk-bootstrap/hnb659fds/version",
        "additionalDependencies": [
          "MskLoggingDefaultTestDeployAssertC2F074AF.assets"
        ],
        "lookupRole": {
          "arn": "arn:${AWS::Partition}:iam::${AWS::AccountId}:role/cdk-hnb659fds-lookup-role-${AWS::AccountId}-${AWS::Region}",
          "requiresBootstrapStackVersion": 8,
          "bootstrapStackVersionSsmParameter": "/cdk-bootstrap/hnb659fds/version"
        }
      },
      "dependencies": [
        "aws-cdk-msk-integ",
        "MskLoggingDefaultTestDeployAssertC2F074AF.assets"
      ],
      "metadata": {
        "/MskLogging/DefaultTest/DeployAssert/AwsApiCallS3listObjectsV26b9d6cbe6c7fc63b1146226918d8056f/Default": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": "*"
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": "*"
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": "*"
          }
        ],
        "/MskLogging/DefaultTest/DeployAssert/AwsApiCallS3listObjectsV26b9d6cbe6c7fc63b1146226918d8056f/Default/Default": [
          {
            "type": "aws:cdk:logicalId",
            "data": "AwsApiCallS3listObjectsV26b9d6cbe6c7fc63b1146226918d8056f"
          }
        ],
        "/MskLogging/DefaultTest/DeployAssert/AwsApiCallS3listObjectsV26b9d6cbe6c7fc63b1146226918d8056f/AssertionResults": [
          {
            "type": "aws:cdk:logicalId",
            "data": "AssertionResultsAwsApiCallS3listObjectsV26b9d6cbe6c7fc63b1146226918d8056f"
          }
        ],
        "/MskLogging/DefaultTest/DeployAssert/SingletonFunction1488541a7b23466481b69b4408076b81/Role": [
          {
            "type": "aws:cdk:logicalId",
            "data": "SingletonFunction1488541a7b23466481b69b4408076b81Role37ABCE73"
          }
        ],
        "/MskLogging/DefaultTest/DeployAssert/SingletonFunction1488541a7b23466481b69b4408076b81/Handler": [
          {
            "type": "aws:cdk:logicalId",
            "data": "SingletonFunction1488541a7b23466481b69b4408076b81HandlerCD40AE9F"
          }
        ],
        "/MskLogging/DefaultTest/DeployAssert/LatestNodeRuntimeMap": [
          {
            "type": "aws:cdk:logicalId",
            "data": "LatestNodeRuntimeMap"
          }
        ],
        "/MskLogging/DefaultTest/DeployAssert/BootstrapVersion": [
          {
            "type": "aws:cdk:logicalId",
            "data": "BootstrapVersion"
          }
        ],
        "/MskLogging/DefaultTest/DeployAssert/CheckBootstrapVersion": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CheckBootstrapVersion"
          }
        ]
      },
      "displayName": "MskLogging/DefaultTest/DeployAssert"
    },
    "Tree": {
      "type": "cdk:tree",
      "properties": {
        "file": "tree.json"
      }
    },
    "aws-cdk-lib/feature-flag-report": {
      "type": "cdk:feature-flag-report",
      "properties": {
        "module": "aws-cdk-lib",
        "flags": {
          "@aws-cdk/aws-signer:signingProfileNamePassedToCfn": {
            "recommendedValue": true,
            "explanation": "Pass signingProfileName to CfnSigningProfile"
          },
          "@aws-cdk/core:newStyleStackSynthesis": {
            "recommendedValue": true,
            "explanation": "Switch to new stack synthesis method which enables CI/CD",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/core:stackRelativeExports": {
            "recommendedValue": true,
            "explanation": "Name exports based on the construct paths relative to the stack, rather than the global construct path",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/aws-ecs-patterns:secGroupsDisablesImplicitOpenListener": {
            "recommendedValue": true,
            "explanation": "Disable implicit openListener when custom security groups are provided"
          },
          "@aws-cdk/aws-rds:lowercaseDbIdentifier": {
            "recommendedValue": true,
            "explanation": "Force lowercasing of RDS Cluster names in CDK",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/aws-apigateway:usagePlanKeyOrderInsensitiveId": {
            "recommendedValue": true,
            "explanation": "Allow adding/removing multiple UsagePlanKeys independently",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/aws-lambda:recognizeVersionProps": {
            "recommendedValue": true,
            "explanation": "Enable this feature flag to opt in to the updated logical id calculation for Lambda Version created using the  `fn.currentVersion`.",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/aws-lambda:recognizeLayerVersion": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Enable this feature flag to opt in to the updated logical id calculation for Lambda Version created using the `fn.currentVersion`."
          },
          "@aws-cdk/aws-cloudfront:defaultSecurityPolicyTLSv1.2_2021": {
            "recommendedValue": true,
            "explanation": "Enable this feature flag to have cloudfront distributions use the security policy TLSv1.2_2021 by default.",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/core:checkSecretUsage": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Enable this flag to make it impossible to accidentally use SecretValues in unsafe locations"
          },
          "@aws-cdk/core:target-partitions": {
            "recommendedValue": [
              "aws",
              "aws-cn"
            ],
            "explanation": "What regions to include in lookup tables of environment agnostic stacks"
          },
          "@aws-cdk-containers/ecs-service-extensions:enableDefaultLogDriver": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "ECS extensions will automatically add an `awslogs` driver if no logging is specified"
          },
          "@aws-cdk/aws-ec2:uniqueImdsv2TemplateName": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Enable this feature flag to have Launch Templates generated by the `InstanceRequireImdsv2Aspect` use unique names."
          },
          "@aws-cdk/aws-ecs:arnFormatIncludesClusterName": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "ARN format used by ECS. In the new ARN format, the cluster name is part of the resource ID."
          },
          "@aws-cdk/aws-iam:minimizePolicies": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Minimize IAM policies by combining Statements"
          },
          "@aws-cdk/core:validateSnapshotRemovalPolicy": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Error on snapshot removal policies on resources that do not support it."
          },
          "@aws-cdk/aws-codepipeline:crossAccountKeyAliasStackSafeResourceName": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Generate key aliases that include the stack name"
          },
          "@aws-cdk/aws-s3:createDefaultLoggingPolicy": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Enable this feature flag to create an S3 bucket policy by default in cases where an AWS service would automatically create the Policy if one does not exist."
          },
          "@aws-cdk/aws-sns-subscriptions:restrictSqsDescryption": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Restrict KMS key policy for encrypted Queues a bit more"
          },
          "@aws-cdk/aws-apigateway:disableCloudWatchRole": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Make default CloudWatch Role behavior safe for multiple API Gateways in one environment"
          },
          "@aws-cdk/core:enablePartitionLiterals": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Make ARNs concrete if AWS partition is known"
          },
          "@aws-cdk/aws-events:eventsTargetQueueSameAccount": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Event Rules may only push to encrypted SQS queues in the same account"
          },
          "@aws-cdk/aws-ecs:disableExplicitDeploymentControllerForCircuitBreaker": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Avoid setting the \"ECS\" deployment controller when adding a circuit breaker"
          },
          "@aws-cdk/aws-iam:importedRoleStackSafeDefaultPolicyName": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Enable this feature to by default create default policy names for imported roles that depend on the stack the role is in."
          },
          "@aws-cdk/aws-s3:serverAccessLogsUseBucketPolicy": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Use S3 Bucket Policy instead of ACLs for Server Access Logging"
          },
          "@aws-cdk/aws-route53-patters:useCertificate": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Use the official `Certificate` resource instead of `DnsValidatedCertificate`"
          },
          "@aws-cdk/customresources:installLatestAwsSdkDefault": {
            "userValue": false,
            "recommendedValue": false,
            "explanation": "Whether to install the latest SDK by default in AwsCustomResource"
          },
          "@aws-cdk/aws-rds:databaseProxyUniqueResourceName": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Use unique resource name for Database Proxy"
          },
          "@aws-cdk/aws-codedeploy:removeAlarmsFromDeploymentGroup": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Remove CloudWatch alarms from deployment group"
          },
          "@aws-cdk/aws-apigateway:authorizerChangeDeploymentLogicalId": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Include authorizer configuration in the calculation of the API deployment logical ID."
          },
          "@aws-cdk/aws-ec2:launchTemplateDefaultUserData": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Define user data for a launch template by default when a machine image is provided."
          },
          "@aws-cdk/aws-secretsmanager:useAttachedSecretResourcePolicyForSecretTargetAttachments": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "SecretTargetAttachments uses the ResourcePolicy of the attached Secret."
          },
          "@aws-cdk/aws-redshift:columnId": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Whether to use an ID to track Redshift column changes"
          },
          "@aws-cdk/aws-stepfunctions-tasks:enableEmrServicePolicyV2": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Enable AmazonEMRServicePolicy_v2 managed policies"
          },
          "@aws-cdk/aws-ec2:restrictDefaultSecurityGroup": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Restrict access to the VPC default security group"
          },
          "@aws-cdk/aws-apigateway:requestValidatorUniqueId": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Generate a unique id for each RequestValidator added to a method"
          },
          "@aws-cdk/aws-kms:aliasNameRef": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "KMS Alias name and keyArn will have implicit reference to KMS Key"
          },
          "@aws-cdk/aws-kms:applyImportedAliasPermissionsToPrincipal": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Enable grant methods on Aliases imported by name to use kms:ResourceAliases condition"
          },
          "@aws-cdk/aws-autoscaling:generateLaunchTemplateInsteadOfLaunchConfig": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Generate a launch template when creating an AutoScalingGroup"
          },
          "@aws-cdk/core:includePrefixInUniqueNameGeneration": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Include the stack prefix in the stack name generation process"
          },
          "@aws-cdk/aws-efs:denyAnonymousAccess": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "EFS denies anonymous clients accesses"
          },
          "@aws-cdk/aws-opensearchservice:enableOpensearchMultiAzWithStandby": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Enables support for Multi-AZ with Standby deployment for opensearch domains"
          },
          "@aws-cdk/aws-lambda-nodejs:useLatestRuntimeVersion": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Enables aws-lambda-nodejs.Function to use the latest available NodeJs runtime as the default"
          },
          "@aws-cdk/aws-efs:mountTargetOrderInsensitiveLogicalId": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, mount targets will have a stable logicalId that is linked to the associated subnet."
          },
          "@aws-cdk/aws-rds:auroraClusterChangeScopeOfInstanceParameterGroupWithEachParameters": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, a scope of InstanceParameterGroup for AuroraClusterInstance with each parameters will change."
          },
          "@aws-cdk/aws-appsync:useArnForSourceApiAssociationIdentifier": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, will always use the arn for identifiers for CfnSourceApiAssociation in the GraphqlApi construct rather than id."
          },
          "@aws-cdk/aws-rds:preventRenderingDeprecatedCredentials": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, creating an RDS database cluster from a snapshot will only render credentials for snapshot credentials."
          },
          "@aws-cdk/aws-codepipeline-actions:useNewDefaultBranchForCodeCommitSource": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, the CodeCommit source action is using the default branch name 'main'."
          },
          "@aws-cdk/aws-cloudwatch-actions:changeLambdaPermissionLogicalIdForLambdaAction": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, the logical ID of a Lambda permission for a Lambda action includes an alarm ID."
          },
          "@aws-cdk/aws-codepipeline:crossAccountKeysDefaultValueToFalse": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Enables Pipeline to set the default value for crossAccountKeys to false."
          },
          "@aws-cdk/aws-codepipeline:defaultPipelineTypeToV2": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Enables Pipeline to set the default pipeline type to V2."
          },
          "@aws-cdk/aws-kms:reduceCrossAccountRegionPolicyScope": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, IAM Policy created from KMS key grant will reduce the resource scope to this key only."
          },
          "@aws-cdk/pipelines:reduceAssetRoleTrustScope": {
            "recommendedValue": true,
            "explanation": "Remove the root account principal from PipelineAssetsFileRole trust policy",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/aws-eks:nodegroupNameAttribute": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, nodegroupName attribute of the provisioned EKS NodeGroup will not have the cluster name prefix."
          },
          "@aws-cdk/aws-ec2:ebsDefaultGp3Volume": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, the default volume type of the EBS volume will be GP3"
          },
          "@aws-cdk/aws-ecs:removeDefaultDeploymentAlarm": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, remove default deployment alarm settings"
          },
          "@aws-cdk/custom-resources:logApiResponseDataPropertyTrueDefault": {
            "userValue": false,
            "recommendedValue": false,
            "explanation": "When enabled, the custom resource used for `AwsCustomResource` will configure the `logApiResponseData` property as true by default"
          },
          "@aws-cdk/aws-s3:keepNotificationInImportedBucket": {
            "userValue": false,
            "recommendedValue": false,
            "explanation": "When enabled, Adding notifications to a bucket in the current stack will not remove notification from imported stack."
          },
          "@aws-cdk/aws-stepfunctions-tasks:useNewS3UriParametersForBedrockInvokeModelTask": {
            "recommendedValue": true,
            "explanation": "When enabled, use new props for S3 URI field in task definition of state machine for bedrock invoke model.",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/core:explicitStackTags": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, stack tags need to be assigned explicitly on a Stack."
          },
          "@aws-cdk/aws-ecs:enableImdsBlockingDeprecatedFeature": {
            "userValue": false,
            "recommendedValue": false,
            "explanation": "When set to true along with canContainersAccessInstanceRole=false in ECS cluster, new updated commands will be added to UserData to block container accessing IMDS. **Applicable to Linux only. IMPORTANT: See [details.](#aws-cdkaws-ecsenableImdsBlockingDeprecatedFeature)**"
          },
          "@aws-cdk/aws-ecs:disableEcsImdsBlocking": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When set to true, CDK synth will throw exception if canContainersAccessInstanceRole is false. **IMPORTANT: See [details.](#aws-cdkaws-ecsdisableEcsImdsBlocking)**"
          },
          "@aws-cdk/aws-ecs:reduceEc2FargateCloudWatchPermissions": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, we will only grant the necessary permissions when users specify cloudwatch log group through logConfiguration"
          },
          "@aws-cdk/aws-dynamodb:resourcePolicyPerReplica": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled will allow you to specify a resource policy per replica, and not copy the source table policy to all replicas"
          },
          "@aws-cdk/aws-ec2:ec2SumTImeoutEnabled": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, initOptions.timeout and resourceSignalTimeout values will be summed together."
          },
          "@aws-cdk/aws-appsync:appSyncGraphQLAPIScopeLambdaPermission": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, a Lambda authorizer Permission created when using GraphqlApi will be properly scoped with a SourceArn."
          },
          "@aws-cdk/aws-rds:setCorrectValueForDatabaseInstanceReadReplicaInstanceResourceId": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, the value of property `instanceResourceId` in construct `DatabaseInstanceReadReplica` will be set to the correct value which is `DbiResourceId` instead of currently `DbInstanceArn`"
          },
          "@aws-cdk/core:cfnIncludeRejectComplexResourceUpdateCreatePolicyIntrinsics": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, CFN templates added with `cfn-include` will error if the template contains Resource Update or Create policies with CFN Intrinsics that include non-primitive values."
          },
          "@aws-cdk/aws-lambda-nodejs:sdkV3ExcludeSmithyPackages": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, both `@aws-sdk` and `@smithy` packages will be excluded from the Lambda Node.js 18.x runtime to prevent version mismatches in bundled applications."
          },
          "@aws-cdk/aws-stepfunctions-tasks:fixRunEcsTaskPolicy": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, the resource of IAM Run Ecs policy generated by SFN EcsRunTask will reference the definition, instead of constructing ARN."
          },
          "@aws-cdk/aws-ec2:bastionHostUseAmazonLinux2023ByDefault": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, the BastionHost construct will use the latest Amazon Linux 2023 AMI, instead of Amazon Linux 2."
          },
          "@aws-cdk/core:aspectStabilization": {
            "recommendedValue": true,
            "explanation": "When enabled, a stabilization loop will be run when invoking Aspects during synthesis.",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/aws-route53-targets:userPoolDomainNameMethodWithoutCustomResource": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, use a new method for DNS Name of user pool domain target without creating a custom resource."
          },
          "@aws-cdk/aws-elasticloadbalancingV2:albDualstackWithoutPublicIpv4SecurityGroupRulesDefault": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, the default security group ingress rules will allow IPv6 ingress from anywhere"
          },
          "@aws-cdk/aws-iam:oidcRejectUnauthorizedConnections": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, the default behaviour of OIDC provider will reject unauthorized connections"
          },
          "@aws-cdk/core:enableAdditionalMetadataCollection": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, CDK will expand the scope of usage data collected to better inform CDK development and improve communication for security concerns and emerging issues."
          },
          "@aws-cdk/aws-lambda:createNewPoliciesWithAddToRolePolicy": {
            "userValue": false,
            "recommendedValue": false,
            "explanation": "[Deprecated] When enabled, Lambda will create new inline policies with AddToRolePolicy instead of adding to the Default Policy Statement"
          },
          "@aws-cdk/aws-s3:setUniqueReplicationRoleName": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, CDK will automatically generate a unique role name that is used for s3 object replication."
          },
          "@aws-cdk/pipelines:reduceStageRoleTrustScope": {
            "recommendedValue": true,
            "explanation": "Remove the root account principal from Stage addActions trust policy",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/aws-events:requireEventBusPolicySid": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, grantPutEventsTo() will use resource policies with Statement IDs for service principals."
          },
          "@aws-cdk/core:aspectPrioritiesMutating": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When set to true, Aspects added by the construct library on your behalf will be given a priority of MUTATING."
          },
          "@aws-cdk/aws-dynamodb:retainTableReplica": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, table replica will be default to the removal policy of source table unless specified otherwise."
          },
          "@aws-cdk/cognito:logUserPoolClientSecretValue": {
            "recommendedValue": false,
            "explanation": "When disabled, the value of the user pool client secret will not be logged in the custom resource lambda function logs."
          },
          "@aws-cdk/pipelines:reduceCrossAccountActionRoleTrustScope": {
            "recommendedValue": true,
            "explanation": "When enabled, scopes down the trust policy for the cross-account action role",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/aws-stepfunctions:useDistributedMapResultWriterV2": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, the resultWriterV2 property of DistributedMap will be used insted of resultWriter"
          },
          "@aws-cdk/s3-notifications:addS3TrustKeyPolicyForSnsSubscriptions": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Add an S3 trust policy to a KMS key resource policy for SNS subscriptions."
          },
          "@aws-cdk/aws-ec2:requirePrivateSubnetsForEgressOnlyInternetGateway": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, the EgressOnlyGateway resource is only created if private subnets are defined in the dual-stack VPC."
          },
          "@aws-cdk/aws-ec2-alpha:useResourceIdForVpcV2Migration": {
            "recommendedValue": false,
            "explanation": "When enabled, use resource IDs for VPC V2 migration"
          },
          "@aws-cdk/aws-s3:publicAccessBlockedByDefault": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, setting any combination of options for BlockPublicAccess will automatically set true for any options not defined."
          },
          "@aws-cdk/aws-lambda:useCdkManagedLogGroup": {
            "userValue": false,
            "recommendedValue": true,
            "explanation": "When enabled, CDK creates and manages loggroup for the lambda function"
          }
        }
      }
    }
  },
  "minimumCliVersion": "2.1027.0"
}