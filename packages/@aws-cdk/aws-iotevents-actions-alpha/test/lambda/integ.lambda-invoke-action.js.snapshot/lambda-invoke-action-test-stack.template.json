{
 "Resources": {
  "MyInput08947B23": {
   "Type": "AWS::IoTEvents::Input",
   "Properties": {
    "InputDefinition": {
     "Attributes": [
      {
       "JsonPath": "payload.deviceId"
      }
     ]
    },
    "InputName": "test_input"
   }
  },
  "MyFunctionServiceRole3C357FF2": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   }
  },
  "MyFunction3BAA72D1": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "ZipFile": "\n        exports.handler = (event) => {\n          console.log(\"It is test for lambda action of AWS IoT Rule.\", event);\n        };"
    },
    "Role": {
     "Fn::GetAtt": [
      "MyFunctionServiceRole3C357FF2",
      "Arn"
     ]
    },
    "Handler": "index.handler",
    "Runtime": "nodejs14.x"
   },
   "DependsOn": [
    "MyFunctionServiceRole3C357FF2"
   ]
  },
  "MyDetectorModelDetectorModelRoleF2FB4D88": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "iotevents.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    }
   }
  },
  "MyDetectorModelDetectorModelRoleDefaultPolicy82887422": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "lambda:InvokeFunction",
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "MyFunction3BAA72D1",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "MyFunction3BAA72D1",
             "Arn"
            ]
           },
           ":*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "MyDetectorModelDetectorModelRoleDefaultPolicy82887422",
    "Roles": [
     {
      "Ref": "MyDetectorModelDetectorModelRoleF2FB4D88"
     }
    ]
   }
  },
  "MyDetectorModel559C0B0E": {
   "Type": "AWS::IoTEvents::DetectorModel",
   "Properties": {
    "DetectorModelDefinition": {
     "InitialStateName": "MyState",
     "States": [
      {
       "OnEnter": {
        "Events": [
         {
          "Actions": [
           {
            "Lambda": {
             "FunctionArn": {
              "Fn::GetAtt": [
               "MyFunction3BAA72D1",
               "Arn"
              ]
             }
            }
           }
          ],
          "Condition": {
           "Fn::Join": [
            "",
            [
             "currentInput(\"",
             {
              "Ref": "MyInput08947B23"
             },
             "\")"
            ]
           ]
          },
          "EventName": "test-event"
         }
        ]
       },
       "StateName": "MyState"
      }
     ]
    },
    "RoleArn": {
     "Fn::GetAtt": [
      "MyDetectorModelDetectorModelRoleF2FB4D88",
      "Arn"
     ]
    },
    "Key": "payload.deviceId"
   }
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}