import { ComparisonOperator, DurationUnit, KeyAttributeType, MetricStatistic, MetricType } from './constants';
import { KeyAttributes } from './KeyAttributes';
import { PeriodBasedMetricProps, RequestBasedMetricProps } from './metric';
import { Goal } from './interval';

/**
 * Interface defining interval behavior
 */
export interface IInterval {
    bind(): any;
}

/**
 * Interface for interval properties
 */
export interface IntervalProps {
    /**
     * Duration value for the interval
     * Must be greater than 0
     *
     * @required
     */
    readonly duration: number;

    /**
     * Unit of duration
     * Can be MINUTE, HOUR, DAY, or MONTH
     *
     * @required
     */
    readonly unit: DurationUnit;
}

/**
 * Interface for calendar interval properties
 */
export interface CalendarIntervalProps {
    /**
     * Duration value for the calendar interval
     * Must be greater than 0
     *
     * @required
     */
    readonly duration: number;

    /**
     * Start time for the calendar interval
     *
     * @default - current timestamp
     */
    readonly startTime?: number;

    /**
     * Unit of duration
     * Default is MONTH
     *
     */
    readonly unit: DurationUnit;
}

/**
 * Interface for goal configuration
 */
export interface GoalConfig {
    /**
     * The target goal percentage
     * Must be between 0 and 100
     *
     * @default 99.9
     */
    readonly attainmentGoal?: number;

    /**
     * Warning threshold percentage
     * Must be between 0 and 100
     *
     * @default 30
     */
    readonly warningThreshold?: number;

    /**
     * Interval configuration for the goal
     *
     * @required
     */
    readonly interval: IInterval;
}

/**
 * Interface for key attributes
 */
export interface KeyAttributesProps {
    /**
     * The type of service
     * Can be SERVICE, AWS_SERVICE, or REMOTE_SERVICE
     *
     * @required
     */
    readonly type: KeyAttributeType;

    /**
     * The name of the service
     *
     * @required
     */
    readonly name: string;

    /**
     * The environment of the service
     *
     * @required
     */
    readonly environment: string;

    /**
     * Optional additional identifier for the service
     *
     * @default - no identifier
     */
    readonly identifier?: string;
}

/**
 * Base interface for all SLO properties
 */
export interface SloBaseProps {
    /**
     * The name of the SLO
     * Must be unique within the account/region
     *
     * @required
     */
    readonly name: string;

    /**
     * A description of the SLO's purpose
     *
     * @default - no description
     */
    readonly description?: string;

    /**
     * The goal configuration for the SLO
     * Includes attainment target and time window
     * Defines what "good" looks like for this SLO
     *
     * @required
     */
    readonly goal: Goal;

    /**
     * The burn rate windows in minutes
     * Used to calculate error budget consumption
     * Maximum of 10 windows
     * Each window cannot exceed 7 days (10080 minutes)
     *
     * @default - no burn rate windows
     */
    readonly burnRateWindows?: number[];
}

/**
 * Interface defining SLO behavior and runtime properties
 */
export interface ISlo {
    /**
     * The ARN (Amazon Resource Name) of the SLO
     * Generated by AWS when the SLO is created
     * Used to reference this SLO in other AWS resources
     *
     * @required
     */
    readonly arn: string;

    /**
     * The name of the SLO
     * Matches the name provided in the properties
     *
     * @required
     */
    readonly name: string;

    /**
     * The goal configuration of the SLO
     * Contains the configured targets and time window
     *
     * @required
     */
    readonly goal: Goal;

    /**
     * Binds the SLO configuration to L1 construct properties
     * Used internally by CDK to generate CloudFormation
     *
     * @returns The L1 construct properties
     */
    _bind(): any;
}

/**
 * Properties for period-based SLO configuration
 */
export interface PeriodBasedSloProps {
    /**
     * The name of the SLO
     *
     * @required
     */
    readonly name: string;

    /**
     * The description of the SLO
     *
     * @default - no description
     */
    readonly description?: string;

    /**
     * The goal configuration
     *
     * @required
     */
    readonly goal: Goal;

    /**
     * The burn rate windows
     *
     * @default - no burn rate windows
     */
    readonly burnRateWindows?: number[];

    /**
     * The metric configuration
     *
     * @required
     */
    readonly metric: PeriodBasedMetricProps;
}

/**
 * Properties for request-based SLO configuration
 */
export interface RequestBasedSloProps {
    readonly name: string;
    readonly description?: string;
    readonly goal: Goal;
    readonly burnRateWindows?: number[];
    readonly metric: RequestBasedMetricProps;
}