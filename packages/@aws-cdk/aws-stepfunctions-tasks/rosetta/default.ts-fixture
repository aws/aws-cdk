// Fixture with packages imported, but nothing else
import * as cdk from '@aws-cdk/core';
import { Construct } from 'constructs';
import * as ddb from '@aws-cdk/aws-dynamodb';
import * as ec2 from '@aws-cdk/aws-ec2';
import * as iam from '@aws-cdk/aws-iam';
import * as lambda from '@aws-cdk/aws-lambda';
import * as s3 from '@aws-cdk/aws-s3';
import * as sfn from '@aws-cdk/aws-stepfunctions';
import * as sns from '@aws-cdk/aws-sns';
import * as sqs from '@aws-cdk/aws-sqs';
import * as tasks from '@aws-cdk/aws-stepfunctions-tasks';

class Fixture extends cdk.Stack {
  constructor(scope: Construct, id: string) {
    super(scope, id);

    const fn = new lambda.Function(this, 'lambdaFunction', {
      code: lambda.Code.fromInline(`exports.handler = async () => {
        return { "hello world"};
      `),
      runtime: lambda.Runtime.NODEJS_12_X,
      handler: 'index.handler',
    });

    const myTable = new ddb.Table(this, 'Messages', {
      tableName: 'my-table',
      partitionKey: {
        name: 'MessageId',
        type: ddb.AttributeType.STRING,
      },
      removalPolicy: cdk.RemovalPolicy.DESTROY,
    });

    /// here
  }
}
