{
 "Resources": {
  "VPCintegtestgateway2BE01D01": {
   "Type": "AWS::EC2::VPC",
   "Properties": {
    "CidrBlock": "10.1.0.0/16",
    "EnableDnsHostnames": true,
    "EnableDnsSupport": true,
    "InstanceTenancy": "default",
    "Tags": [
     {
      "Key": "Name",
      "Value": "CDKintegTestVPC"
     }
    ]
   }
  },
  "VPCintegtestgatewayAmazonProvided7EC73953": {
   "Type": "AWS::EC2::VPCCidrBlock",
   "Properties": {
    "AmazonProvidedIpv6CidrBlock": true,
    "VpcId": {
     "Fn::GetAtt": [
      "VPCintegtestgateway2BE01D01",
      "VpcId"
     ]
    }
   }
  },
  "VPCintegtestgatewayInternetGatewayIGWBF8CBB67": {
   "Type": "AWS::EC2::InternetGateway",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "CDKIntegTestTagIGW"
     }
    ]
   }
  },
  "VPCintegtestgatewayInternetGatewayGWAttachment686DC0B9": {
   "Type": "AWS::EC2::VPCGatewayAttachment",
   "Properties": {
    "InternetGatewayId": {
     "Fn::GetAtt": [
      "VPCintegtestgatewayInternetGatewayIGWBF8CBB67",
      "InternetGatewayId"
     ]
    },
    "VpcId": {
     "Fn::GetAtt": [
      "VPCintegtestgateway2BE01D01",
      "VpcId"
     ]
    }
   }
  },
  "VPCintegtestgatewaytestsubnetDefaultRouteBDD38849": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "192.168.0.0/16",
    "GatewayId": {
     "Fn::GetAtt": [
      "VPCintegtestgatewayInternetGatewayIGWBF8CBB67",
      "InternetGatewayId"
     ]
    },
    "RouteTableId": {
     "Fn::GetAtt": [
      "TestRouteTableC34C2E1C",
      "RouteTableId"
     ]
    }
   },
   "DependsOn": [
    "VPCintegtestgatewayInternetGatewayGWAttachment686DC0B9",
    "VPCintegtestgatewayInternetGatewayIGWBF8CBB67"
   ]
  },
  "VPCintegtestgatewaytestsubnet2DefaultRoute3B414B5A": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "192.168.0.0/16",
    "GatewayId": {
     "Fn::GetAtt": [
      "VPCintegtestgatewayInternetGatewayIGWBF8CBB67",
      "InternetGatewayId"
     ]
    },
    "RouteTableId": {
     "Fn::GetAtt": [
      "TestRouteTable2RouteTableB32AE314",
      "RouteTableId"
     ]
    }
   },
   "DependsOn": [
    "VPCintegtestgatewayInternetGatewayGWAttachment686DC0B9",
    "VPCintegtestgatewayInternetGatewayIGWBF8CBB67"
   ]
  },
  "VPCintegtestgatewayEgressOnlyGWEIGW686FDB04": {
   "Type": "AWS::EC2::EgressOnlyInternetGateway",
   "Properties": {
    "VpcId": {
     "Fn::GetAtt": [
      "VPCintegtestgateway2BE01D01",
      "VpcId"
     ]
    }
   }
  },
  "VPCintegtestgatewaytestsubnetEgressRoute19C29FDA": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationIpv6CidrBlock": "2600:1f00::/24",
    "EgressOnlyInternetGatewayId": {
     "Fn::GetAtt": [
      "VPCintegtestgatewayEgressOnlyGWEIGW686FDB04",
      "Id"
     ]
    },
    "RouteTableId": {
     "Fn::GetAtt": [
      "TestRouteTableC34C2E1C",
      "RouteTableId"
     ]
    }
   },
   "DependsOn": [
    "VPCintegtestgatewayEgressOnlyGWEIGW686FDB04"
   ]
  },
  "VPCintegtestgatewaytestsubnet2EgressRoute54F6A53E": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationIpv6CidrBlock": "2600:1f00::/24",
    "EgressOnlyInternetGatewayId": {
     "Fn::GetAtt": [
      "VPCintegtestgatewayEgressOnlyGWEIGW686FDB04",
      "Id"
     ]
    },
    "RouteTableId": {
     "Fn::GetAtt": [
      "TestRouteTable2RouteTableB32AE314",
      "RouteTableId"
     ]
    }
   },
   "DependsOn": [
    "VPCintegtestgatewayEgressOnlyGWEIGW686FDB04"
   ]
  },
  "TestRouteTableC34C2E1C": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "TestRouteTable"
     }
    ],
    "VpcId": {
     "Fn::GetAtt": [
      "VPCintegtestgateway2BE01D01",
      "VpcId"
     ]
    }
   }
  },
  "testsubnetSubnetDD417829": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AssignIpv6AddressOnCreation": false,
    "AvailabilityZone": "us-west-2b",
    "CidrBlock": "10.1.1.0/28",
    "Tags": [
     {
      "Key": "Name",
      "Value": "CDKIntegTestSubnet"
     },
     {
      "Key": "VpcName",
      "Value": "CDKintegTestVPC"
     }
    ],
    "VpcId": {
     "Fn::GetAtt": [
      "VPCintegtestgateway2BE01D01",
      "VpcId"
     ]
    }
   },
   "DependsOn": [
    "VPCintegtestgatewayAmazonProvided7EC73953"
   ]
  },
  "testsubnetRouteTableAssociationC106676D": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Fn::GetAtt": [
      "TestRouteTableC34C2E1C",
      "RouteTableId"
     ]
    },
    "SubnetId": {
     "Ref": "testsubnetSubnetDD417829"
    }
   },
   "DependsOn": [
    "VPCintegtestgatewayAmazonProvided7EC73953"
   ]
  },
  "TestRouteTable2RouteTableB32AE314": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "TestRouteTable2"
     }
    ],
    "VpcId": {
     "Fn::GetAtt": [
      "VPCintegtestgateway2BE01D01",
      "VpcId"
     ]
    }
   }
  },
  "testsubnet2SubnetDA462F5A": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AssignIpv6AddressOnCreation": false,
    "AvailabilityZone": "us-west-2b",
    "CidrBlock": "10.1.2.0/28",
    "Tags": [
     {
      "Key": "Name",
      "Value": "CDKIntegTestSubnet2"
     },
     {
      "Key": "VpcName",
      "Value": "CDKintegTestVPC"
     }
    ],
    "VpcId": {
     "Fn::GetAtt": [
      "VPCintegtestgateway2BE01D01",
      "VpcId"
     ]
    }
   },
   "DependsOn": [
    "VPCintegtestgatewayAmazonProvided7EC73953"
   ]
  },
  "testsubnet2RouteTableAssociation2ABEB97D": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Fn::GetAtt": [
      "TestRouteTable2RouteTableB32AE314",
      "RouteTableId"
     ]
    },
    "SubnetId": {
     "Ref": "testsubnet2SubnetDA462F5A"
    }
   },
   "DependsOn": [
    "VPCintegtestgatewayAmazonProvided7EC73953"
   ]
  }
 },
 "Outputs": {
  "ExportsOutputFnGetAttVPCintegtestgatewayInternetGatewayIGWBF8CBB67InternetGatewayIdBCA9BCBE": {
   "Value": {
    "Fn::GetAtt": [
     "VPCintegtestgatewayInternetGatewayIGWBF8CBB67",
     "InternetGatewayId"
    ]
   },
   "Export": {
    "Name": "aws-cdk-ec2-alpha-gateways:ExportsOutputFnGetAttVPCintegtestgatewayInternetGatewayIGWBF8CBB67InternetGatewayIdBCA9BCBE"
   }
  },
  "ExportsOutputFnGetAttVPCintegtestgateway2BE01D01VpcId015E985D": {
   "Value": {
    "Fn::GetAtt": [
     "VPCintegtestgateway2BE01D01",
     "VpcId"
    ]
   },
   "Export": {
    "Name": "aws-cdk-ec2-alpha-gateways:ExportsOutputFnGetAttVPCintegtestgateway2BE01D01VpcId015E985D"
   }
  },
  "ExportsOutputFnGetAttVPCintegtestgatewayEgressOnlyGWEIGW686FDB04IdEA72DCCD": {
   "Value": {
    "Fn::GetAtt": [
     "VPCintegtestgatewayEgressOnlyGWEIGW686FDB04",
     "Id"
    ]
   },
   "Export": {
    "Name": "aws-cdk-ec2-alpha-gateways:ExportsOutputFnGetAttVPCintegtestgatewayEgressOnlyGWEIGW686FDB04IdEA72DCCD"
   }
  },
  "ExportsOutputFnGetAttTestRouteTable2RouteTableB32AE314RouteTableId897B0777": {
   "Value": {
    "Fn::GetAtt": [
     "TestRouteTable2RouteTableB32AE314",
     "RouteTableId"
    ]
   },
   "Export": {
    "Name": "aws-cdk-ec2-alpha-gateways:ExportsOutputFnGetAttTestRouteTable2RouteTableB32AE314RouteTableId897B0777"
   }
  },
  "ExportsOutputFnGetAttTestRouteTableC34C2E1CRouteTableId4C8A7F39": {
   "Value": {
    "Fn::GetAtt": [
     "TestRouteTableC34C2E1C",
     "RouteTableId"
    ]
   },
   "Export": {
    "Name": "aws-cdk-ec2-alpha-gateways:ExportsOutputFnGetAttTestRouteTableC34C2E1CRouteTableId4C8A7F39"
   }
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}