{
 "Resources": {
  "logs0B6081B1": {
   "Type": "AWS::Logs::LogGroup",
   "Properties": {
    "RetentionInDays": 731
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  },
  "TopicRuleTopicRuleActionRole246C4F77": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "iot.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    }
   }
  },
  "TopicRuleTopicRuleActionRoleDefaultPolicy99ADD687": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "logs:CreateLogStream",
        "logs:DescribeLogStreams",
        "logs:PutLogEvents"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "logs0B6081B1",
         "Arn"
        ]
       }
      },
      {
       "Action": "iotevents:BatchPutMessage",
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:",
          {
           "Ref": "AWS::Partition"
          },
          ":iotevents:",
          {
           "Ref": "AWS::Region"
          },
          ":",
          {
           "Ref": "AWS::AccountId"
          },
          ":input/",
          {
           "Ref": "MyInput08947B23"
          }
         ]
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "TopicRuleTopicRuleActionRoleDefaultPolicy99ADD687",
    "Roles": [
     {
      "Ref": "TopicRuleTopicRuleActionRole246C4F77"
     }
    ]
   }
  },
  "TopicRule40A4EA44": {
   "Type": "AWS::IoT::TopicRule",
   "Properties": {
    "TopicRulePayload": {
     "Actions": [
      {
       "IotEvents": {
        "BatchMode": true,
        "InputName": {
         "Ref": "MyInput08947B23"
        },
        "RoleArn": {
         "Fn::GetAtt": [
          "TopicRuleTopicRuleActionRole246C4F77",
          "Arn"
         ]
        }
       }
      }
     ],
     "AwsIotSqlVersion": "2016-03-23",
     "ErrorAction": {
      "CloudwatchLogs": {
       "LogGroupName": {
        "Ref": "logs0B6081B1"
       },
       "RoleArn": {
        "Fn::GetAtt": [
         "TopicRuleTopicRuleActionRole246C4F77",
         "Arn"
        ]
       }
      }
     },
     "Sql": "SELECT * FROM 'device/+/data'"
    }
   }
  },
  "MyInput08947B23": {
   "Type": "AWS::IoTEvents::Input",
   "Properties": {
    "InputDefinition": {
     "Attributes": [
      {
       "JsonPath": "payload.deviceId"
      }
     ]
    }
   }
  },
  "MyDetectorModelDetectorModelRoleF2FB4D88": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "iotevents.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    }
   }
  },
  "MyDetectorModel559C0B0E": {
   "Type": "AWS::IoTEvents::DetectorModel",
   "Properties": {
    "DetectorModelDefinition": {
     "InitialStateName": "initialState",
     "States": [
      {
       "OnEnter": {
        "Events": [
         {
          "Condition": {
           "Fn::Join": [
            "",
            [
             "currentInput(\"",
             {
              "Ref": "MyInput08947B23"
             },
             "\")"
            ]
           ]
          },
          "EventName": "enter"
         }
        ]
       },
       "StateName": "initialState"
      }
     ]
    },
    "RoleArn": {
     "Fn::GetAtt": [
      "MyDetectorModelDetectorModelRoleF2FB4D88",
      "Arn"
     ]
    },
    "Key": "payload.deviceId"
   }
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}