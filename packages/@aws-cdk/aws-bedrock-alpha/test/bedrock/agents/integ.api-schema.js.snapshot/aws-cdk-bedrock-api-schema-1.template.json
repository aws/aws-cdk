{
 "Resources": {
  "AssetActionGroupFunctionServiceRoleC53BA920": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   }
  },
  "AssetActionGroupFunction98EC70AB": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "ZipFile": "\n    exports.handler = async (event) => {\n      console.log('Event:', JSON.stringify(event));\n      return {\n        messageVersion: '1.0',\n        response: {\n          actionGroup: event.actionGroup,\n          apiPath: event.apiPath,\n          httpMethod: event.httpMethod,\n          httpStatusCode: 200,\n          responseBody: {\n            application_json: { result: 'Success from asset action group' }\n          }\n        }\n      };\n    };\n  "
    },
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "AssetActionGroupFunctionServiceRoleC53BA920",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x"
   },
   "DependsOn": [
    "AssetActionGroupFunctionServiceRoleC53BA920"
   ]
  },
  "AssetActionGroupFunctionLambdaInvocationPolicyc8dfda1d62217f4203A2E0A7": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "AssetActionGroupFunction98EC70AB",
      "Arn"
     ]
    },
    "Principal": "bedrock.amazonaws.com",
    "SourceAccount": {
     "Ref": "AWS::AccountId"
    }
   }
  },
  "InlineActionGroupFunctionServiceRole5543D9A3": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   }
  },
  "InlineActionGroupFunction566CD00A": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "ZipFile": "\n    exports.handler = async (event) => {\n      console.log('Event:', JSON.stringify(event));\n      return {\n        messageVersion: '1.0',\n        response: {\n          actionGroup: event.actionGroup,\n          apiPath: event.apiPath,\n          httpMethod: event.httpMethod,\n          httpStatusCode: 200,\n          responseBody: {\n            application_json: { result: 'Success from inline action group' }\n          }\n        }\n      };\n    };\n  "
    },
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "InlineActionGroupFunctionServiceRole5543D9A3",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x"
   },
   "DependsOn": [
    "InlineActionGroupFunctionServiceRole5543D9A3"
   ]
  },
  "InlineActionGroupFunctionLambdaInvocationPolicyc8dfda1d62217f42CE4591EF": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "InlineActionGroupFunction566CD00A",
      "Arn"
     ]
    },
    "Principal": "bedrock.amazonaws.com",
    "SourceAccount": {
     "Ref": "AWS::AccountId"
    }
   }
  },
  "S3ActionGroupFunctionServiceRole7E4C5A58": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   }
  },
  "S3ActionGroupFunctionA4648C25": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "ZipFile": "\n    exports.handler = async (event) => {\n      console.log('Event:', JSON.stringify(event));\n      return {\n        messageVersion: '1.0',\n        response: {\n          actionGroup: event.actionGroup,\n          apiPath: event.apiPath,\n          httpMethod: event.httpMethod,\n          httpStatusCode: 200,\n          responseBody: {\n            application_json: { result: 'Success from S3 action group' }\n          }\n        }\n      };\n    };\n  "
    },
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "S3ActionGroupFunctionServiceRole7E4C5A58",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x"
   },
   "DependsOn": [
    "S3ActionGroupFunctionServiceRole7E4C5A58"
   ]
  },
  "S3ActionGroupFunctionLambdaInvocationPolicyc8dfda1d62217f4210E2D0E3": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "S3ActionGroupFunctionA4648C25",
      "Arn"
     ]
    },
    "Principal": "bedrock.amazonaws.com",
    "SourceAccount": {
     "Ref": "AWS::AccountId"
    }
   }
  },
  "SchemaBucket79EE2269": {
   "Type": "AWS::S3::Bucket",
   "Properties": {
    "Tags": [
     {
      "Key": "aws-cdk:auto-delete-objects",
      "Value": "true"
     },
     {
      "Key": "aws-cdk:cr-owned:911f5017",
      "Value": "true"
     }
    ]
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  },
  "SchemaBucketPolicy557840E2": {
   "Type": "AWS::S3::BucketPolicy",
   "Properties": {
    "Bucket": {
     "Ref": "SchemaBucket79EE2269"
    },
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "s3:DeleteObject*",
        "s3:GetBucket*",
        "s3:List*",
        "s3:PutBucketPolicy"
       ],
       "Effect": "Allow",
       "Principal": {
        "AWS": {
         "Fn::GetAtt": [
          "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
          "Arn"
         ]
        }
       },
       "Resource": [
        {
         "Fn::GetAtt": [
          "SchemaBucket79EE2269",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "SchemaBucket79EE2269",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    }
   }
  },
  "SchemaBucketAutoDeleteObjectsCustomResource0F518746": {
   "Type": "Custom::S3AutoDeleteObjects",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
      "Arn"
     ]
    },
    "BucketName": {
     "Ref": "SchemaBucket79EE2269"
    }
   },
   "DependsOn": [
    "SchemaBucketPolicy557840E2"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  },
  "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Version": "2012-10-17",
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ]
    },
    "ManagedPolicyArns": [
     {
      "Fn::Sub": "arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
     }
    ]
   }
  },
  "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "44e9c4d7a5d3fd2d677e1a7e416b2b56f6b0104bd5eff9cac5557b4c65a9dc61.zip"
    },
    "Timeout": 900,
    "MemorySize": 128,
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
      "Arn"
     ]
    },
    "Runtime": {
     "Fn::FindInMap": [
      "LatestNodeRuntimeMap",
      {
       "Ref": "AWS::Region"
      },
      "value"
     ]
    },
    "Description": {
     "Fn::Join": [
      "",
      [
       "Lambda function for auto-deleting objects in ",
       {
        "Ref": "SchemaBucket79EE2269"
       },
       " S3 bucket."
      ]
     ]
    }
   },
   "DependsOn": [
    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092"
   ]
  },
  "DeploySchemaAwsCliLayerD0D0BA6E": {
   "Type": "AWS::Lambda::LayerVersion",
   "Properties": {
    "Content": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "b8ab94266984268614c3fb2824a1c3a55395746c48b28c003b08bc1d08688f3e.zip"
    },
    "Description": "/opt/awscli/aws"
   }
  },
  "DeploySchemaCustomResource277E9836": {
   "Type": "Custom::CDKBucketDeployment",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C81C01536",
      "Arn"
     ]
    },
    "SourceBucketNames": [
     {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     }
    ],
    "SourceObjectKeys": [
     "049f5de90fd9c8b8d2580a7b668c1c5368e67ef5bd0397322e3a90349b740e8f.zip"
    ],
    "SourceMarkers": [
     {}
    ],
    "DestinationBucketName": {
     "Ref": "SchemaBucket79EE2269"
    },
    "Prune": true,
    "OutputObjectKeys": true
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  },
  "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   }
  },
  "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "s3:GetBucket*",
        "s3:GetObject*",
        "s3:List*"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":s3:::",
           {
            "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
           },
           "/*"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":s3:::",
           {
            "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
           }
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "s3:Abort*",
        "s3:DeleteObject*",
        "s3:GetBucket*",
        "s3:GetObject*",
        "s3:List*",
        "s3:PutObject",
        "s3:PutObjectLegalHold",
        "s3:PutObjectRetention",
        "s3:PutObjectTagging",
        "s3:PutObjectVersionTagging"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "SchemaBucket79EE2269",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "SchemaBucket79EE2269",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF",
    "Roles": [
     {
      "Ref": "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265"
     }
    ]
   }
  },
  "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C81C01536": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "9a1fcb4a7ecba81ad70e9d3fb241f6794497da945dae5f25924e4dd002b65f2d.zip"
    },
    "Environment": {
     "Variables": {
      "AWS_CA_BUNDLE": "/etc/pki/ca-trust/extracted/pem/tls-ca-bundle.pem"
     }
    },
    "Handler": "index.handler",
    "Layers": [
     {
      "Ref": "DeploySchemaAwsCliLayerD0D0BA6E"
     }
    ],
    "Role": {
     "Fn::GetAtt": [
      "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265",
      "Arn"
     ]
    },
    "Runtime": "python3.11",
    "Timeout": 900
   },
   "DependsOn": [
    "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF",
    "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265"
   ]
  },
  "ApiSchemaAgentRole636AC572": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Condition": {
        "StringEquals": {
         "aws:SourceAccount": {
          "Ref": "AWS::AccountId"
         }
        },
        "ArnLike": {
         "aws:SourceArn": {
          "Fn::Join": [
           "",
           [
            "arn:",
            {
             "Ref": "AWS::Partition"
            },
            ":bedrock:",
            {
             "Ref": "AWS::Region"
            },
            ":",
            {
             "Ref": "AWS::AccountId"
            },
            ":agent/*"
           ]
          ]
         }
        }
       },
       "Effect": "Allow",
       "Principal": {
        "Service": "bedrock.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "RoleName": "agent-awscdkbedrockapisca1-apischemaagent-b0e9b051-bedrockagent"
   },
   "DependsOn": [
    "DeploySchemaAwsCliLayerD0D0BA6E",
    "DeploySchemaCustomResource277E9836"
   ]
  },
  "ApiSchemaAgentRoleDefaultPolicy343EA6FE": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "lambda:InvokeFunction",
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "AssetActionGroupFunction98EC70AB",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "InlineActionGroupFunction566CD00A",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "S3ActionGroupFunctionA4648C25",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "AssetActionGroupFunction98EC70AB",
             "Arn"
            ]
           },
           ":*"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "InlineActionGroupFunction566CD00A",
             "Arn"
            ]
           },
           ":*"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "S3ActionGroupFunctionA4648C25",
             "Arn"
            ]
           },
           ":*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "s3:GetBucket*",
        "s3:GetObject*",
        "s3:List*"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":s3:::",
           {
            "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
           },
           "/a7172fea4e8cb73c2182ab93fc10509de03c96781054237fcbc52220fed232a0.yaml"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":s3:::",
           {
            "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
           }
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":s3:::",
           {
            "Ref": "SchemaBucket79EE2269"
           },
           "/schema/s3-api-schema.json"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":s3:::",
           {
            "Ref": "SchemaBucket79EE2269"
           }
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "bedrock:GetFoundationModel",
        "bedrock:InvokeModel*"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:",
          {
           "Ref": "AWS::Partition"
          },
          ":bedrock:",
          {
           "Ref": "AWS::Region"
          },
          "::foundation-model/anthropic.claude-3-5-sonnet-20241022-v2:0"
         ]
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "ApiSchemaAgentRoleDefaultPolicy343EA6FE",
    "Roles": [
     {
      "Ref": "ApiSchemaAgentRole636AC572"
     }
    ]
   },
   "DependsOn": [
    "DeploySchemaAwsCliLayerD0D0BA6E",
    "DeploySchemaCustomResource277E9836"
   ]
  },
  "ApiSchemaAgent8E965D9C": {
   "Type": "AWS::Bedrock::Agent",
   "Properties": {
    "ActionGroups": [
     {
      "ActionGroupName": "UserInputAction",
      "ActionGroupState": "DISABLED",
      "ParentActionGroupSignature": "AMAZON.UserInput",
      "SkipResourceInUseCheckOnDelete": false
     },
     {
      "ActionGroupName": "CodeInterpreterAction",
      "ActionGroupState": "DISABLED",
      "ParentActionGroupSignature": "AMAZON.CodeInterpreter",
      "SkipResourceInUseCheckOnDelete": false
     },
     {
      "ActionGroupExecutor": {
       "Lambda": {
        "Fn::GetAtt": [
         "AssetActionGroupFunction98EC70AB",
         "Arn"
        ]
       }
      },
      "ActionGroupName": "AssetApiSchemaActionGroup",
      "ActionGroupState": "ENABLED",
      "ApiSchema": {
       "S3": {
        "S3BucketName": {
         "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
        },
        "S3ObjectKey": "a7172fea4e8cb73c2182ab93fc10509de03c96781054237fcbc52220fed232a0.yaml"
       }
      },
      "Description": "An action group using a local asset API schema",
      "SkipResourceInUseCheckOnDelete": false
     },
     {
      "ActionGroupExecutor": {
       "Lambda": {
        "Fn::GetAtt": [
         "InlineActionGroupFunction566CD00A",
         "Arn"
        ]
       }
      },
      "ActionGroupName": "InlineApiSchemaActionGroup",
      "ActionGroupState": "ENABLED",
      "ApiSchema": {
       "Payload": "\nopenapi: 3.0.3\ninfo:\n  title: Simple API\n  version: 1.0.0\npaths:\n  /hello:\n    get:\n      operationId: helloWorld\n      summary: Say hello\n      description: Returns a greeting message\n      responses:\n        '200':\n          description: Successful response\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  message:\n                    type: string\n"
      },
      "Description": "An action group using an inline API schema",
      "SkipResourceInUseCheckOnDelete": false
     },
     {
      "ActionGroupExecutor": {
       "Lambda": {
        "Fn::GetAtt": [
         "S3ActionGroupFunctionA4648C25",
         "Arn"
        ]
       }
      },
      "ActionGroupName": "S3ApiSchemaActionGroup",
      "ActionGroupState": "ENABLED",
      "ApiSchema": {
       "S3": {
        "S3BucketName": {
         "Ref": "SchemaBucket79EE2269"
        },
        "S3ObjectKey": "schema/s3-api-schema.json"
       }
      },
      "Description": "An action group using an S3-based API schema",
      "SkipResourceInUseCheckOnDelete": false
     }
    ],
    "AgentName": "api-schema-agent",
    "AgentResourceRoleArn": {
     "Fn::GetAtt": [
      "ApiSchemaAgentRole636AC572",
      "Arn"
     ]
    },
    "AutoPrepare": false,
    "FoundationModel": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":bedrock:",
       {
        "Ref": "AWS::Region"
       },
       "::foundation-model/anthropic.claude-3-5-sonnet-20241022-v2:0"
      ]
     ]
    },
    "IdleSessionTTLInSeconds": 600,
    "Instruction": "This is an agent using an API schema with at least 40 characters of instruction",
    "OrchestrationType": "DEFAULT",
    "SkipResourceInUseCheckOnDelete": true
   },
   "DependsOn": [
    "ApiSchemaAgentRoleDefaultPolicy343EA6FE",
    "DeploySchemaAwsCliLayerD0D0BA6E",
    "DeploySchemaCustomResource277E9836"
   ]
  }
 },
 "Mappings": {
  "LatestNodeRuntimeMap": {
   "af-south-1": {
    "value": "nodejs22.x"
   },
   "ap-east-1": {
    "value": "nodejs22.x"
   },
   "ap-east-2": {
    "value": "nodejs22.x"
   },
   "ap-northeast-1": {
    "value": "nodejs22.x"
   },
   "ap-northeast-2": {
    "value": "nodejs22.x"
   },
   "ap-northeast-3": {
    "value": "nodejs22.x"
   },
   "ap-south-1": {
    "value": "nodejs22.x"
   },
   "ap-south-2": {
    "value": "nodejs22.x"
   },
   "ap-southeast-1": {
    "value": "nodejs22.x"
   },
   "ap-southeast-2": {
    "value": "nodejs22.x"
   },
   "ap-southeast-3": {
    "value": "nodejs22.x"
   },
   "ap-southeast-4": {
    "value": "nodejs22.x"
   },
   "ap-southeast-5": {
    "value": "nodejs22.x"
   },
   "ap-southeast-7": {
    "value": "nodejs22.x"
   },
   "ca-central-1": {
    "value": "nodejs22.x"
   },
   "ca-west-1": {
    "value": "nodejs22.x"
   },
   "cn-north-1": {
    "value": "nodejs22.x"
   },
   "cn-northwest-1": {
    "value": "nodejs22.x"
   },
   "eu-central-1": {
    "value": "nodejs22.x"
   },
   "eu-central-2": {
    "value": "nodejs22.x"
   },
   "eu-isoe-west-1": {
    "value": "nodejs18.x"
   },
   "eu-north-1": {
    "value": "nodejs22.x"
   },
   "eu-south-1": {
    "value": "nodejs22.x"
   },
   "eu-south-2": {
    "value": "nodejs22.x"
   },
   "eu-west-1": {
    "value": "nodejs22.x"
   },
   "eu-west-2": {
    "value": "nodejs22.x"
   },
   "eu-west-3": {
    "value": "nodejs22.x"
   },
   "il-central-1": {
    "value": "nodejs22.x"
   },
   "me-central-1": {
    "value": "nodejs22.x"
   },
   "me-south-1": {
    "value": "nodejs22.x"
   },
   "mx-central-1": {
    "value": "nodejs22.x"
   },
   "sa-east-1": {
    "value": "nodejs22.x"
   },
   "us-east-1": {
    "value": "nodejs22.x"
   },
   "us-east-2": {
    "value": "nodejs22.x"
   },
   "us-gov-east-1": {
    "value": "nodejs22.x"
   },
   "us-gov-west-1": {
    "value": "nodejs22.x"
   },
   "us-iso-east-1": {
    "value": "nodejs18.x"
   },
   "us-iso-west-1": {
    "value": "nodejs18.x"
   },
   "us-isob-east-1": {
    "value": "nodejs18.x"
   },
   "us-isob-west-1": {
    "value": "nodejs18.x"
   },
   "us-west-1": {
    "value": "nodejs22.x"
   },
   "us-west-2": {
    "value": "nodejs22.x"
   }
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}