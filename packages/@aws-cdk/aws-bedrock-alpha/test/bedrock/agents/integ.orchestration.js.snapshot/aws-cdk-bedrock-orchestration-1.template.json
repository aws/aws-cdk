{
 "Resources": {
  "OrchestrationFunctionServiceRole12D0673A": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   }
  },
  "OrchestrationFunction2F3851C6": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "ZipFile": "\n    exports.handler = async (event) => {\n      console.log('Orchestration Event:', JSON.stringify(event));\n      \n      // Example orchestration logic\n      const response = {\n        messageVersion: '1.0',\n        response: {\n          actionGroup: event.actionGroup || 'default',\n          apiPath: event.apiPath || '/default',\n          httpMethod: event.httpMethod || 'GET',\n          httpStatusCode: 200,\n          responseBody: {\n            application_json: { \n              result: 'Custom orchestration response',\n              timestamp: new Date().toISOString()\n            }\n          }\n        }\n      };\n      \n      return response;\n    };\n  "
    },
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "OrchestrationFunctionServiceRole12D0673A",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x"
   },
   "DependsOn": [
    "OrchestrationFunctionServiceRole12D0673A"
   ]
  },
  "OrchestrationFunctionOrchestrationLambdaInvocationPolicyc8f49862985034a7EC14F6D5": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "OrchestrationFunction2F3851C6",
      "Arn"
     ]
    },
    "Principal": "bedrock.amazonaws.com",
    "SourceAccount": {
     "Ref": "AWS::AccountId"
    },
    "SourceArn": {
     "Fn::GetAtt": [
      "CustomOrchestrationAgentDC6CC131",
      "AgentArn"
     ]
    }
   }
  },
  "CustomOrchestrationAgentRole85710213": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Condition": {
        "StringEquals": {
         "aws:SourceAccount": {
          "Ref": "AWS::AccountId"
         }
        },
        "ArnLike": {
         "aws:SourceArn": {
          "Fn::Join": [
           "",
           [
            "arn:",
            {
             "Ref": "AWS::Partition"
            },
            ":bedrock:",
            {
             "Ref": "AWS::Region"
            },
            ":",
            {
             "Ref": "AWS::AccountId"
            },
            ":agent/*"
           ]
          ]
         }
        }
       },
       "Effect": "Allow",
       "Principal": {
        "Service": "bedrock.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "RoleName": "agent-awscdkbedrockorcherchestrationagent-e769c494-bedrockagent"
   }
  },
  "CustomOrchestrationAgentRoleDefaultPolicy33EDF7E6": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "lambda:InvokeFunction",
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "OrchestrationFunction2F3851C6",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "OrchestrationFunction2F3851C6",
             "Arn"
            ]
           },
           ":*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "bedrock:GetFoundationModel",
        "bedrock:InvokeModel*"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:",
          {
           "Ref": "AWS::Partition"
          },
          ":bedrock:",
          {
           "Ref": "AWS::Region"
          },
          "::foundation-model/anthropic.claude-3-5-sonnet-20241022-v2:0"
         ]
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "CustomOrchestrationAgentRoleDefaultPolicy33EDF7E6",
    "Roles": [
     {
      "Ref": "CustomOrchestrationAgentRole85710213"
     }
    ]
   }
  },
  "CustomOrchestrationAgentDC6CC131": {
   "Type": "AWS::Bedrock::Agent",
   "Properties": {
    "ActionGroups": [
     {
      "ActionGroupName": "UserInputAction",
      "ActionGroupState": "DISABLED",
      "ParentActionGroupSignature": "AMAZON.UserInput",
      "SkipResourceInUseCheckOnDelete": false
     },
     {
      "ActionGroupName": "CodeInterpreterAction",
      "ActionGroupState": "DISABLED",
      "ParentActionGroupSignature": "AMAZON.CodeInterpreter",
      "SkipResourceInUseCheckOnDelete": false
     }
    ],
    "AgentName": "custom-orchestration-agent",
    "AgentResourceRoleArn": {
     "Fn::GetAtt": [
      "CustomOrchestrationAgentRole85710213",
      "Arn"
     ]
    },
    "AutoPrepare": false,
    "CustomOrchestration": {
     "Executor": {
      "Lambda": {
       "Fn::GetAtt": [
        "OrchestrationFunction2F3851C6",
        "Arn"
       ]
      }
     }
    },
    "FoundationModel": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":bedrock:",
       {
        "Ref": "AWS::Region"
       },
       "::foundation-model/anthropic.claude-3-5-sonnet-20241022-v2:0"
      ]
     ]
    },
    "IdleSessionTTLInSeconds": 600,
    "Instruction": "This is an agent using custom orchestration with at least 40 characters of instruction",
    "OrchestrationType": "CUSTOM_ORCHESTRATION",
    "SkipResourceInUseCheckOnDelete": true
   },
   "DependsOn": [
    "CustomOrchestrationAgentRoleDefaultPolicy33EDF7E6"
   ]
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}