{
 "Resources": {
  "SourceQueue6E809DF0": {
   "Type": "AWS::SQS::Queue",
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  },
  "TargetQueue08AD2B3C": {
   "Type": "AWS::SQS::Queue",
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  },
  "ConnectHandlerServiceRole7E4A9B1F": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   }
  },
  "ConnectHandler2FFD52D8": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "ZipFile": "\n  exports.handler = async function(event, context) {\n    const body = event.body ? JSON.parse(event.body) : {};\n    const paramValue = body['body'] || '';\n\n    console.log(event);\n    return {\n      statusCode: 200,\n      body: JSON.stringify({ message: paramValue + \"-enrichment-test\" }),\n    };\n  };\n  "
    },
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "ConnectHandlerServiceRole7E4A9B1F",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x"
   },
   "DependsOn": [
    "ConnectHandlerServiceRole7E4A9B1F"
   ]
  },
  "HttpApiF5A9A8A7": {
   "Type": "AWS::ApiGatewayV2::Api",
   "Properties": {
    "Name": "HttpApi",
    "ProtocolType": "HTTP"
   }
  },
  "HttpApiDefaultStage3EEB07D6": {
   "Type": "AWS::ApiGatewayV2::Stage",
   "Properties": {
    "ApiId": {
     "Ref": "HttpApiF5A9A8A7"
    },
    "AutoDeploy": true,
    "StageName": "$default"
   }
  },
  "HttpApiPOSTtestLambdaIntegrationE0E30FBE": {
   "Type": "AWS::ApiGatewayV2::Integration",
   "Properties": {
    "ApiId": {
     "Ref": "HttpApiF5A9A8A7"
    },
    "IntegrationType": "AWS_PROXY",
    "IntegrationUri": {
     "Fn::GetAtt": [
      "ConnectHandler2FFD52D8",
      "Arn"
     ]
    },
    "PayloadFormatVersion": "2.0"
   }
  },
  "HttpApiPOSTtestLambdaIntegrationPermission04EC2B3D": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "ConnectHandler2FFD52D8",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "HttpApiF5A9A8A7"
       },
       "/*/*/test"
      ]
     ]
    }
   }
  },
  "HttpApiPOSTtest1B2D0677": {
   "Type": "AWS::ApiGatewayV2::Route",
   "Properties": {
    "ApiId": {
     "Ref": "HttpApiF5A9A8A7"
    },
    "AuthorizationType": "NONE",
    "RouteKey": "POST /test",
    "Target": {
     "Fn::Join": [
      "",
      [
       "integrations/",
       {
        "Ref": "HttpApiPOSTtestLambdaIntegrationE0E30FBE"
       }
      ]
     ]
    }
   }
  },
  "MySecret8FE80B51": {
   "Type": "AWS::SecretsManager::Secret",
   "Properties": {
    "SecretString": "abc123"
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  },
  "MyConnection925E5E94": {
   "Type": "AWS::Events::Connection",
   "Properties": {
    "AuthParameters": {
     "ApiKeyAuthParameters": {
      "ApiKeyName": "x-api-key",
      "ApiKeyValue": {
       "Fn::Join": [
        "",
        [
         "{{resolve:secretsmanager:",
         {
          "Ref": "MySecret8FE80B51"
         },
         ":SecretString:::}}"
        ]
       ]
      }
     }
    },
    "AuthorizationType": "API_KEY",
    "Description": "Connection with API Key x-api-key",
    "Name": "MyConnection"
   }
  },
  "MyDestinationApiDestination78511D9A": {
   "Type": "AWS::Events::ApiDestination",
   "Properties": {
    "ConnectionArn": {
     "Fn::GetAtt": [
      "MyConnection925E5E94",
      "Arn"
     ]
    },
    "HttpMethod": "POST",
    "InvocationEndpoint": {
     "Fn::Join": [
      "",
      [
       {
        "Fn::GetAtt": [
         "HttpApiF5A9A8A7",
         "ApiEndpoint"
        ]
       },
       "/test"
      ]
     ]
    }
   }
  },
  "PipeRole7D4AFC73": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "pipes.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    }
   }
  },
  "PipeRoleDefaultPolicy56E6A74D": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "sqs:ChangeMessageVisibility",
        "sqs:DeleteMessage",
        "sqs:GetQueueAttributes",
        "sqs:GetQueueUrl",
        "sqs:ReceiveMessage"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "SourceQueue6E809DF0",
         "Arn"
        ]
       }
      },
      {
       "Action": "events:InvokeApiDestination",
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "MyDestinationApiDestination78511D9A",
         "Arn"
        ]
       }
      },
      {
       "Action": [
        "sqs:GetQueueAttributes",
        "sqs:GetQueueUrl",
        "sqs:SendMessage"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "TargetQueue08AD2B3C",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "PipeRoleDefaultPolicy56E6A74D",
    "Roles": [
     {
      "Ref": "PipeRole7D4AFC73"
     }
    ]
   }
  },
  "Pipe7793F8A1": {
   "Type": "AWS::Pipes::Pipe",
   "Properties": {
    "Enrichment": {
     "Fn::GetAtt": [
      "MyDestinationApiDestination78511D9A",
      "Arn"
     ]
    },
    "EnrichmentParameters": {},
    "RoleArn": {
     "Fn::GetAtt": [
      "PipeRole7D4AFC73",
      "Arn"
     ]
    },
    "Source": {
     "Fn::GetAtt": [
      "SourceQueue6E809DF0",
      "Arn"
     ]
    },
    "SourceParameters": {},
    "Target": {
     "Fn::GetAtt": [
      "TargetQueue08AD2B3C",
      "Arn"
     ]
    },
    "TargetParameters": {
     "InputTemplate": "<$.message>"
    }
   }
  }
 },
 "Outputs": {
  "ExportsOutputRefSourceQueue6E809DF09604904F": {
   "Value": {
    "Ref": "SourceQueue6E809DF0"
   },
   "Export": {
    "Name": "aws-cdk-pipes-enrichments-lambda:ExportsOutputRefSourceQueue6E809DF09604904F"
   }
  },
  "ExportsOutputRefTargetQueue08AD2B3C0C69AE0E": {
   "Value": {
    "Ref": "TargetQueue08AD2B3C"
   },
   "Export": {
    "Name": "aws-cdk-pipes-enrichments-lambda:ExportsOutputRefTargetQueue08AD2B3C0C69AE0E"
   }
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}