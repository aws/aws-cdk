{
  "Transform": "AWS::Serverless-2016-10-31",
  "Resources": {
    "vpcA2121C38": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": "10.0.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": [
          {
            "Key": "Name",
            "Value": "integ-eks-spot/vpc"
          }
        ]
      }
    },
    "vpcPublicSubnet1Subnet2E65531E": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.0.0/18",
        "VpcId": {
          "Ref": "vpcA2121C38"
        },
        "AvailabilityZone": "test-region-1a",
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public"
          },
          {
            "Key": "kubernetes.io/role/elb",
            "Value": "1"
          },
          {
            "Key": "Name",
            "Value": "integ-eks-spot/vpc/PublicSubnet1"
          }
        ]
      }
    },
    "vpcPublicSubnet1RouteTable48A2DF9B": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "vpcA2121C38"
        },
        "Tags": [
          {
            "Key": "kubernetes.io/role/elb",
            "Value": "1"
          },
          {
            "Key": "Name",
            "Value": "integ-eks-spot/vpc/PublicSubnet1"
          }
        ]
      }
    },
    "vpcPublicSubnet1RouteTableAssociation5D3F4579": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "vpcPublicSubnet1RouteTable48A2DF9B"
        },
        "SubnetId": {
          "Ref": "vpcPublicSubnet1Subnet2E65531E"
        }
      }
    },
    "vpcPublicSubnet1DefaultRoute10708846": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "vpcPublicSubnet1RouteTable48A2DF9B"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "vpcIGWE57CBDCA"
        }
      },
      "DependsOn": [
        "vpcVPCGW7984C166"
      ]
    },
    "vpcPublicSubnet1EIPDA49DCBE": {
      "Type": "AWS::EC2::EIP",
      "Properties": {
        "Domain": "vpc",
        "Tags": [
          {
            "Key": "kubernetes.io/role/elb",
            "Value": "1"
          },
          {
            "Key": "Name",
            "Value": "integ-eks-spot/vpc/PublicSubnet1"
          }
        ]
      }
    },
    "vpcPublicSubnet1NATGateway9C16659E": {
      "Type": "AWS::EC2::NatGateway",
      "Properties": {
        "AllocationId": {
          "Fn::GetAtt": [
            "vpcPublicSubnet1EIPDA49DCBE",
            "AllocationId"
          ]
        },
        "SubnetId": {
          "Ref": "vpcPublicSubnet1Subnet2E65531E"
        },
        "Tags": [
          {
            "Key": "kubernetes.io/role/elb",
            "Value": "1"
          },
          {
            "Key": "Name",
            "Value": "integ-eks-spot/vpc/PublicSubnet1"
          }
        ]
      }
    },
    "vpcPublicSubnet2Subnet009B674F": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.64.0/18",
        "VpcId": {
          "Ref": "vpcA2121C38"
        },
        "AvailabilityZone": "test-region-1b",
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public"
          },
          {
            "Key": "kubernetes.io/role/elb",
            "Value": "1"
          },
          {
            "Key": "Name",
            "Value": "integ-eks-spot/vpc/PublicSubnet2"
          }
        ]
      }
    },
    "vpcPublicSubnet2RouteTableEB40D4CB": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "vpcA2121C38"
        },
        "Tags": [
          {
            "Key": "kubernetes.io/role/elb",
            "Value": "1"
          },
          {
            "Key": "Name",
            "Value": "integ-eks-spot/vpc/PublicSubnet2"
          }
        ]
      }
    },
    "vpcPublicSubnet2RouteTableAssociation21F81B59": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "vpcPublicSubnet2RouteTableEB40D4CB"
        },
        "SubnetId": {
          "Ref": "vpcPublicSubnet2Subnet009B674F"
        }
      }
    },
    "vpcPublicSubnet2DefaultRouteA1EC0F60": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "vpcPublicSubnet2RouteTableEB40D4CB"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "vpcIGWE57CBDCA"
        }
      },
      "DependsOn": [
        "vpcVPCGW7984C166"
      ]
    },
    "vpcPublicSubnet2EIP9B3743B1": {
      "Type": "AWS::EC2::EIP",
      "Properties": {
        "Domain": "vpc",
        "Tags": [
          {
            "Key": "kubernetes.io/role/elb",
            "Value": "1"
          },
          {
            "Key": "Name",
            "Value": "integ-eks-spot/vpc/PublicSubnet2"
          }
        ]
      }
    },
    "vpcPublicSubnet2NATGateway9B8AE11A": {
      "Type": "AWS::EC2::NatGateway",
      "Properties": {
        "AllocationId": {
          "Fn::GetAtt": [
            "vpcPublicSubnet2EIP9B3743B1",
            "AllocationId"
          ]
        },
        "SubnetId": {
          "Ref": "vpcPublicSubnet2Subnet009B674F"
        },
        "Tags": [
          {
            "Key": "kubernetes.io/role/elb",
            "Value": "1"
          },
          {
            "Key": "Name",
            "Value": "integ-eks-spot/vpc/PublicSubnet2"
          }
        ]
      }
    },
    "vpcPrivateSubnet1Subnet934893E8": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.128.0/18",
        "VpcId": {
          "Ref": "vpcA2121C38"
        },
        "AvailabilityZone": "test-region-1a",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private"
          },
          {
            "Key": "kubernetes.io/role/internal-elb",
            "Value": "1"
          },
          {
            "Key": "Name",
            "Value": "integ-eks-spot/vpc/PrivateSubnet1"
          }
        ]
      }
    },
    "vpcPrivateSubnet1RouteTableB41A48CC": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "vpcA2121C38"
        },
        "Tags": [
          {
            "Key": "kubernetes.io/role/internal-elb",
            "Value": "1"
          },
          {
            "Key": "Name",
            "Value": "integ-eks-spot/vpc/PrivateSubnet1"
          }
        ]
      }
    },
    "vpcPrivateSubnet1RouteTableAssociation67945127": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "vpcPrivateSubnet1RouteTableB41A48CC"
        },
        "SubnetId": {
          "Ref": "vpcPrivateSubnet1Subnet934893E8"
        }
      }
    },
    "vpcPrivateSubnet1DefaultRoute1AA8E2E5": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "vpcPrivateSubnet1RouteTableB41A48CC"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "vpcPublicSubnet1NATGateway9C16659E"
        }
      }
    },
    "vpcPrivateSubnet2Subnet7031C2BA": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.192.0/18",
        "VpcId": {
          "Ref": "vpcA2121C38"
        },
        "AvailabilityZone": "test-region-1b",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private"
          },
          {
            "Key": "kubernetes.io/role/internal-elb",
            "Value": "1"
          },
          {
            "Key": "Name",
            "Value": "integ-eks-spot/vpc/PrivateSubnet2"
          }
        ]
      }
    },
    "vpcPrivateSubnet2RouteTable7280F23E": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "vpcA2121C38"
        },
        "Tags": [
          {
            "Key": "kubernetes.io/role/internal-elb",
            "Value": "1"
          },
          {
            "Key": "Name",
            "Value": "integ-eks-spot/vpc/PrivateSubnet2"
          }
        ]
      }
    },
    "vpcPrivateSubnet2RouteTableAssociation007E94D3": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "vpcPrivateSubnet2RouteTable7280F23E"
        },
        "SubnetId": {
          "Ref": "vpcPrivateSubnet2Subnet7031C2BA"
        }
      }
    },
    "vpcPrivateSubnet2DefaultRouteB0E07F99": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "vpcPrivateSubnet2RouteTable7280F23E"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "vpcPublicSubnet2NATGateway9B8AE11A"
        }
      }
    },
    "vpcIGWE57CBDCA": {
      "Type": "AWS::EC2::InternetGateway",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "integ-eks-spot/vpc"
          }
        ]
      }
    },
    "vpcVPCGW7984C166": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "VpcId": {
          "Ref": "vpcA2121C38"
        },
        "InternetGatewayId": {
          "Ref": "vpcIGWE57CBDCA"
        }
      }
    },
    "myClusterClusterRoleF3B08D5F": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "eks.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/AmazonEKSClusterPolicy"
              ]
            ]
          },
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/AmazonEKSServicePolicy"
              ]
            ]
          }
        ]
      }
    },
    "myClusterControlPlaneSecurityGroupD42800D0": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "EKS Control Plane Security Group",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1"
          }
        ],
        "VpcId": {
          "Ref": "vpcA2121C38"
        }
      }
    },
    "myClusterControlPlaneSecurityGroupfromintegeksspotmyClusterDefaultCapacityInstanceSecurityGroup8EBC6D914435857A9D2": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "IpProtocol": "tcp",
        "Description": "from integeksspotmyClusterDefaultCapacityInstanceSecurityGroup8EBC6D91:443",
        "FromPort": 443,
        "GroupId": {
          "Fn::GetAtt": [
            "myClusterControlPlaneSecurityGroupD42800D0",
            "GroupId"
          ]
        },
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "myClusterDefaultCapacityInstanceSecurityGroup22595F6B",
            "GroupId"
          ]
        },
        "ToPort": 443
      }
    },
    "myClusterControlPlaneSecurityGroupfromintegeksspotmyClusterspotInstanceSecurityGroup4D0BAA4D443BF12370D": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "IpProtocol": "tcp",
        "Description": "from integeksspotmyClusterspotInstanceSecurityGroup4D0BAA4D:443",
        "FromPort": 443,
        "GroupId": {
          "Fn::GetAtt": [
            "myClusterControlPlaneSecurityGroupD42800D0",
            "GroupId"
          ]
        },
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "myClusterspotInstanceSecurityGroupE76CC584",
            "GroupId"
          ]
        },
        "ToPort": 443
      }
    },
    "myClusterResourceHandlerServiceRole95F554E2": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      }
    },
    "myClusterResourceHandlerServiceRoleDefaultPolicyB0BF3AD3": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "eks:CreateCluster",
                "eks:DescribeCluster",
                "eks:DeleteCluster",
                "eks:UpdateClusterVersion"
              ],
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "myClusterClusterRoleF3B08D5F",
                  "Arn"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "myClusterResourceHandlerServiceRoleDefaultPolicyB0BF3AD3",
        "Roles": [
          {
            "Ref": "myClusterResourceHandlerServiceRole95F554E2"
          }
        ]
      }
    },
    "myClusterResourceHandler19D131C9": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "AssetParametersea4957b16062595851e7d293ee45835db05c5693669a729cc02944b6ad19a204S3Bucket371D99F8"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParametersea4957b16062595851e7d293ee45835db05c5693669a729cc02944b6ad19a204S3VersionKeyFDCB25DD"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParametersea4957b16062595851e7d293ee45835db05c5693669a729cc02944b6ad19a204S3VersionKeyFDCB25DD"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "myClusterResourceHandlerServiceRole95F554E2",
            "Arn"
          ]
        },
        "Runtime": "python3.7",
        "Layers": [
          {
            "Fn::GetAtt": [
              "kubectllayer8C2542BCBF2B4DFEB765E181FD30A9A0617C4ADA",
              "Outputs.LayerVersionArn"
            ]
          }
        ],
        "MemorySize": 512,
        "Timeout": 900
      },
      "DependsOn": [
        "myClusterResourceHandlerServiceRoleDefaultPolicyB0BF3AD3",
        "myClusterResourceHandlerServiceRole95F554E2"
      ]
    },
    "myClusterE51CD07F": {
      "Type": "Custom::AWSCDK-EKS-Cluster",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "myClusterResourceHandler19D131C9",
            "Arn"
          ]
        },
        "Config": {
          "roleArn": {
            "Fn::GetAtt": [
              "myClusterClusterRoleF3B08D5F",
              "Arn"
            ]
          },
          "resourcesVpcConfig": {
            "securityGroupIds": [
              {
                "Fn::GetAtt": [
                  "myClusterControlPlaneSecurityGroupD42800D0",
                  "GroupId"
                ]
              }
            ],
            "subnetIds": [
              {
                "Ref": "vpcPublicSubnet1Subnet2E65531E"
              },
              {
                "Ref": "vpcPublicSubnet2Subnet009B674F"
              },
              {
                "Ref": "vpcPrivateSubnet1Subnet934893E8"
              },
              {
                "Ref": "vpcPrivateSubnet2Subnet7031C2BA"
              }
            ]
          }
        }
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete"
    },
    "myClusterKubernetesResourceHandler50297E32": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "AssetParameters640847533c8a00b3133aeb128edcac41fb7b60349c9e18764fcf7ea4af14d444S3Bucket919126CB"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters640847533c8a00b3133aeb128edcac41fb7b60349c9e18764fcf7ea4af14d444S3VersionKey529BEF54"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters640847533c8a00b3133aeb128edcac41fb7b60349c9e18764fcf7ea4af14d444S3VersionKey529BEF54"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "myClusterResourceHandlerServiceRole95F554E2",
            "Arn"
          ]
        },
        "Runtime": "python3.7",
        "Environment": {
          "Variables": {
            "CLUSTER_NAME": {
              "Ref": "myClusterE51CD07F"
            }
          }
        },
        "Layers": [
          {
            "Fn::GetAtt": [
              "kubectllayer8C2542BCBF2B4DFEB765E181FD30A9A0617C4ADA",
              "Outputs.LayerVersionArn"
            ]
          }
        ],
        "MemorySize": 256,
        "Timeout": 900
      },
      "DependsOn": [
        "myClusterResourceHandlerServiceRoleDefaultPolicyB0BF3AD3",
        "myClusterResourceHandlerServiceRole95F554E2"
      ]
    },
    "myClusterDefaultCapacityInstanceSecurityGroup22595F6B": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "integ-eks-spot/myCluster/DefaultCapacity/InstanceSecurityGroup",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1"
          }
        ],
        "Tags": [
          {
            "Key": {
              "Fn::Join": [
                "",
                [
                  "kubernetes.io/cluster/",
                  {
                    "Ref": "myClusterE51CD07F"
                  }
                ]
              ]
            },
            "Value": "owned"
          },
          {
            "Key": "Name",
            "Value": "integ-eks-spot/myCluster/DefaultCapacity"
          }
        ],
        "VpcId": {
          "Ref": "vpcA2121C38"
        }
      }
    },
    "myClusterDefaultCapacityInstanceSecurityGroupfromintegeksspotmyClusterDefaultCapacityInstanceSecurityGroup8EBC6D91ALLTRAFFIC50C0DBE7": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "IpProtocol": "-1",
        "Description": "from integeksspotmyClusterDefaultCapacityInstanceSecurityGroup8EBC6D91:ALL TRAFFIC",
        "GroupId": {
          "Fn::GetAtt": [
            "myClusterDefaultCapacityInstanceSecurityGroup22595F6B",
            "GroupId"
          ]
        },
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "myClusterDefaultCapacityInstanceSecurityGroup22595F6B",
            "GroupId"
          ]
        }
      }
    },
    "myClusterDefaultCapacityInstanceSecurityGroupfromintegeksspotmyClusterControlPlaneSecurityGroupC4434A844430734956F": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "IpProtocol": "tcp",
        "Description": "from integeksspotmyClusterControlPlaneSecurityGroupC4434A84:443",
        "FromPort": 443,
        "GroupId": {
          "Fn::GetAtt": [
            "myClusterDefaultCapacityInstanceSecurityGroup22595F6B",
            "GroupId"
          ]
        },
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "myClusterControlPlaneSecurityGroupD42800D0",
            "GroupId"
          ]
        },
        "ToPort": 443
      }
    },
    "myClusterDefaultCapacityInstanceSecurityGroupfromintegeksspotmyClusterControlPlaneSecurityGroupC4434A84102565535234C3C38": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "IpProtocol": "tcp",
        "Description": "from integeksspotmyClusterControlPlaneSecurityGroupC4434A84:1025-65535",
        "FromPort": 1025,
        "GroupId": {
          "Fn::GetAtt": [
            "myClusterDefaultCapacityInstanceSecurityGroup22595F6B",
            "GroupId"
          ]
        },
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "myClusterControlPlaneSecurityGroupD42800D0",
            "GroupId"
          ]
        },
        "ToPort": 65535
      }
    },
    "myClusterDefaultCapacityInstanceRoleA36E0984": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": {
                  "Fn::Join": [
                    "",
                    [
                      "ec2.",
                      {
                        "Ref": "AWS::URLSuffix"
                      }
                    ]
                  ]
                }
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/AmazonEKSWorkerNodePolicy"
              ]
            ]
          },
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/AmazonEKS_CNI_Policy"
              ]
            ]
          },
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/AmazonEC2ContainerRegistryReadOnly"
              ]
            ]
          }
        ],
        "Tags": [
          {
            "Key": {
              "Fn::Join": [
                "",
                [
                  "kubernetes.io/cluster/",
                  {
                    "Ref": "myClusterE51CD07F"
                  }
                ]
              ]
            },
            "Value": "owned"
          },
          {
            "Key": "Name",
            "Value": "integ-eks-spot/myCluster/DefaultCapacity"
          }
        ]
      }
    },
    "myClusterDefaultCapacityInstanceProfileE7E48198": {
      "Type": "AWS::IAM::InstanceProfile",
      "Properties": {
        "Roles": [
          {
            "Ref": "myClusterDefaultCapacityInstanceRoleA36E0984"
          }
        ]
      }
    },
    "myClusterDefaultCapacityLaunchConfigCF6D4B81": {
      "Type": "AWS::AutoScaling::LaunchConfiguration",
      "Properties": {
        "ImageId": {
          "Ref": "SsmParameterValueawsserviceeksoptimizedami114amazonlinux2recommendedimageidC96584B6F00A464EAD1953AFF4B05118Parameter"
        },
        "InstanceType": "m5.large",
        "IamInstanceProfile": {
          "Ref": "myClusterDefaultCapacityInstanceProfileE7E48198"
        },
        "SecurityGroups": [
          {
            "Fn::GetAtt": [
              "myClusterDefaultCapacityInstanceSecurityGroup22595F6B",
              "GroupId"
            ]
          }
        ],
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "",
              [
                "#!/bin/bash\nset -o xtrace\n/etc/eks/bootstrap.sh ",
                {
                  "Ref": "myClusterE51CD07F"
                },
                " --kubelet-extra-args \"--node-labels lifecycle=OnDemand\" --use-max-pods true\n/opt/aws/bin/cfn-signal --exit-code $? --stack integ-eks-spot --resource myClusterDefaultCapacityASGF3FE3A19 --region test-region"
              ]
            ]
          }
        }
      },
      "DependsOn": [
        "myClusterDefaultCapacityInstanceRoleA36E0984"
      ]
    },
    "myClusterDefaultCapacityASGF3FE3A19": {
      "Type": "AWS::AutoScaling::AutoScalingGroup",
      "Properties": {
        "MaxSize": "2",
        "MinSize": "1",
        "DesiredCapacity": "2",
        "LaunchConfigurationName": {
          "Ref": "myClusterDefaultCapacityLaunchConfigCF6D4B81"
        },
        "Tags": [
          {
            "Key": {
              "Fn::Join": [
                "",
                [
                  "kubernetes.io/cluster/",
                  {
                    "Ref": "myClusterE51CD07F"
                  }
                ]
              ]
            },
            "PropagateAtLaunch": true,
            "Value": "owned"
          },
          {
            "Key": "Name",
            "PropagateAtLaunch": true,
            "Value": "integ-eks-spot/myCluster/DefaultCapacity"
          }
        ],
        "VPCZoneIdentifier": [
          {
            "Ref": "vpcPrivateSubnet1Subnet934893E8"
          },
          {
            "Ref": "vpcPrivateSubnet2Subnet7031C2BA"
          }
        ]
      },
      "UpdatePolicy": {
        "AutoScalingRollingUpdate": {
          "WaitOnResourceSignals": false,
          "PauseTime": "PT0S",
          "SuspendProcesses": [
            "HealthCheck",
            "ReplaceUnhealthy",
            "AZRebalance",
            "AlarmNotification",
            "ScheduledActions"
          ]
        },
        "AutoScalingScheduledAction": {
          "IgnoreUnmodifiedGroupSizeProperties": true
        }
      }
    },
    "myClusterAwsAuthmanifest66DDDCBC": {
      "Type": "Custom::AWSCDK-EKS-KubernetesResource",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "myClusterKubernetesResourceHandler50297E32",
            "Arn"
          ]
        },
        "Manifest": {
          "Fn::Join": [
            "",
            [
              "[{\"apiVersion\":\"v1\",\"kind\":\"ConfigMap\",\"metadata\":{\"name\":\"aws-auth\",\"namespace\":\"kube-system\"},\"data\":{\"mapRoles\":\"[{\\\"rolearn\\\":\\\"",
              {
                "Fn::GetAtt": [
                  "myClusterDefaultCapacityInstanceRoleA36E0984",
                  "Arn"
                ]
              },
              "\\\",\\\"username\\\":\\\"system:node:{{EC2PrivateDNSName}}\\\",\\\"groups\\\":[\\\"system:bootstrappers\\\",\\\"system:nodes\\\"]},{\\\"rolearn\\\":\\\"",
              {
                "Fn::GetAtt": [
                  "myClusterspotInstanceRole03AE80B5",
                  "Arn"
                ]
              },
              "\\\",\\\"username\\\":\\\"system:node:{{EC2PrivateDNSName}}\\\",\\\"groups\\\":[\\\"system:bootstrappers\\\",\\\"system:nodes\\\"]}]\",\"mapUsers\":\"[]\",\"mapAccounts\":\"[]\"}}]"
            ]
          ]
        }
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete"
    },
    "myClusterspotInstanceSecurityGroupE76CC584": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "integ-eks-spot/myCluster/spot/InstanceSecurityGroup",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1"
          }
        ],
        "Tags": [
          {
            "Key": {
              "Fn::Join": [
                "",
                [
                  "kubernetes.io/cluster/",
                  {
                    "Ref": "myClusterE51CD07F"
                  }
                ]
              ]
            },
            "Value": "owned"
          },
          {
            "Key": "Name",
            "Value": "integ-eks-spot/myCluster/spot"
          }
        ],
        "VpcId": {
          "Ref": "vpcA2121C38"
        }
      }
    },
    "myClusterspotInstanceSecurityGroupfromintegeksspotmyClusterspotInstanceSecurityGroup4D0BAA4DALLTRAFFIC6AB5F7A7": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "IpProtocol": "-1",
        "Description": "from integeksspotmyClusterspotInstanceSecurityGroup4D0BAA4D:ALL TRAFFIC",
        "GroupId": {
          "Fn::GetAtt": [
            "myClusterspotInstanceSecurityGroupE76CC584",
            "GroupId"
          ]
        },
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "myClusterspotInstanceSecurityGroupE76CC584",
            "GroupId"
          ]
        }
      }
    },
    "myClusterspotInstanceSecurityGroupfromintegeksspotmyClusterControlPlaneSecurityGroupC4434A84443CAF82847": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "IpProtocol": "tcp",
        "Description": "from integeksspotmyClusterControlPlaneSecurityGroupC4434A84:443",
        "FromPort": 443,
        "GroupId": {
          "Fn::GetAtt": [
            "myClusterspotInstanceSecurityGroupE76CC584",
            "GroupId"
          ]
        },
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "myClusterControlPlaneSecurityGroupD42800D0",
            "GroupId"
          ]
        },
        "ToPort": 443
      }
    },
    "myClusterspotInstanceSecurityGroupfromintegeksspotmyClusterControlPlaneSecurityGroupC4434A8410256553577BCEBCC": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "IpProtocol": "tcp",
        "Description": "from integeksspotmyClusterControlPlaneSecurityGroupC4434A84:1025-65535",
        "FromPort": 1025,
        "GroupId": {
          "Fn::GetAtt": [
            "myClusterspotInstanceSecurityGroupE76CC584",
            "GroupId"
          ]
        },
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "myClusterControlPlaneSecurityGroupD42800D0",
            "GroupId"
          ]
        },
        "ToPort": 65535
      }
    },
    "myClusterspotInstanceRole03AE80B5": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": {
                  "Fn::Join": [
                    "",
                    [
                      "ec2.",
                      {
                        "Ref": "AWS::URLSuffix"
                      }
                    ]
                  ]
                }
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/AmazonEKSWorkerNodePolicy"
              ]
            ]
          },
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/AmazonEKS_CNI_Policy"
              ]
            ]
          },
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/AmazonEC2ContainerRegistryReadOnly"
              ]
            ]
          }
        ],
        "Tags": [
          {
            "Key": {
              "Fn::Join": [
                "",
                [
                  "kubernetes.io/cluster/",
                  {
                    "Ref": "myClusterE51CD07F"
                  }
                ]
              ]
            },
            "Value": "owned"
          },
          {
            "Key": "Name",
            "Value": "integ-eks-spot/myCluster/spot"
          }
        ]
      }
    },
    "myClusterspotInstanceProfile93D80EE5": {
      "Type": "AWS::IAM::InstanceProfile",
      "Properties": {
        "Roles": [
          {
            "Ref": "myClusterspotInstanceRole03AE80B5"
          }
        ]
      }
    },
    "myClusterspotLaunchConfig6681F311": {
      "Type": "AWS::AutoScaling::LaunchConfiguration",
      "Properties": {
        "ImageId": {
          "Ref": "SsmParameterValueawsserviceeksoptimizedami114amazonlinux2recommendedimageidC96584B6F00A464EAD1953AFF4B05118Parameter"
        },
        "InstanceType": "t3.large",
        "IamInstanceProfile": {
          "Ref": "myClusterspotInstanceProfile93D80EE5"
        },
        "SecurityGroups": [
          {
            "Fn::GetAtt": [
              "myClusterspotInstanceSecurityGroupE76CC584",
              "GroupId"
            ]
          }
        ],
        "SpotPrice": "0.1094",
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "",
              [
                "#!/bin/bash\nset -o xtrace\n/etc/eks/bootstrap.sh ",
                {
                  "Ref": "myClusterE51CD07F"
                },
                " --kubelet-extra-args \"--node-labels lifecycle=Ec2Spot --register-with-taints=spotInstance=true:PreferNoSchedule --node-labels foo=bar,goo=far\" --use-max-pods true --aws-api-retry-attempts 5\n/opt/aws/bin/cfn-signal --exit-code $? --stack integ-eks-spot --resource myClusterspotASG5D95FD2F --region test-region"
              ]
            ]
          }
        }
      },
      "DependsOn": [
        "myClusterspotInstanceRole03AE80B5"
      ]
    },
    "myClusterspotASG5D95FD2F": {
      "Type": "AWS::AutoScaling::AutoScalingGroup",
      "Properties": {
        "MaxSize": "10",
        "MinSize": "1",
        "LaunchConfigurationName": {
          "Ref": "myClusterspotLaunchConfig6681F311"
        },
        "Tags": [
          {
            "Key": {
              "Fn::Join": [
                "",
                [
                  "kubernetes.io/cluster/",
                  {
                    "Ref": "myClusterE51CD07F"
                  }
                ]
              ]
            },
            "PropagateAtLaunch": true,
            "Value": "owned"
          },
          {
            "Key": "Name",
            "PropagateAtLaunch": true,
            "Value": "integ-eks-spot/myCluster/spot"
          }
        ],
        "VPCZoneIdentifier": [
          {
            "Ref": "vpcPrivateSubnet1Subnet934893E8"
          },
          {
            "Ref": "vpcPrivateSubnet2Subnet7031C2BA"
          }
        ]
      },
      "UpdatePolicy": {
        "AutoScalingRollingUpdate": {
          "WaitOnResourceSignals": false,
          "PauseTime": "PT0S",
          "SuspendProcesses": [
            "HealthCheck",
            "ReplaceUnhealthy",
            "AZRebalance",
            "AlarmNotification",
            "ScheduledActions"
          ]
        },
        "AutoScalingScheduledAction": {
          "IgnoreUnmodifiedGroupSizeProperties": true
        }
      }
    },
    "myClustermanifestspotinterrupthandler0542CCD2": {
      "Type": "Custom::AWSCDK-EKS-KubernetesResource",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "myClusterKubernetesResourceHandler50297E32",
            "Arn"
          ]
        },
        "Manifest": "[{\"kind\":\"ClusterRole\",\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"metadata\":{\"name\":\"node-termination-handler\",\"namespace\":\"default\"},\"rules\":[{\"apiGroups\":[\"apps\"],\"resources\":[\"daemonsets\"],\"verbs\":[\"get\",\"delete\"]},{\"apiGroups\":[\"\"],\"resources\":[\"*\"],\"verbs\":[\"*\"]},{\"apiGroups\":[\"rbac.authorization.k8s.io\"],\"resources\":[\"*\"],\"verbs\":[\"*\"]},{\"apiGroups\":[\"apiextensions.k8s.io\"],\"resources\":[\"customresourcedefinitions\"],\"verbs\":[\"get\",\"list\",\"watch\",\"create\",\"delete\"]}]},{\"apiVersion\":\"v1\",\"kind\":\"ServiceAccount\",\"metadata\":{\"name\":\"node-termination-handler\"}},{\"kind\":\"ClusterRoleBinding\",\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"metadata\":{\"name\":\"node-termination-handler\",\"namespace\":\"default\"},\"subjects\":[{\"kind\":\"ServiceAccount\",\"name\":\"node-termination-handler\",\"namespace\":\"default\"}],\"roleRef\":{\"kind\":\"ClusterRole\",\"name\":\"node-termination-handler\",\"apiGroup\":\"rbac.authorization.k8s.io\"}},{\"apiVersion\":\"apps/v1beta2\",\"kind\":\"DaemonSet\",\"metadata\":{\"name\":\"node-termination-handler\",\"namespace\":\"default\"},\"spec\":{\"selector\":{\"matchLabels\":{\"app\":\"node-termination-handler\"}},\"template\":{\"metadata\":{\"labels\":{\"app\":\"node-termination-handler\"}},\"spec\":{\"serviceAccountName\":\"node-termination-handler\",\"containers\":[{\"name\":\"node-termination-handler\",\"image\":\"amazon/aws-node-termination-handler:v1.0.0\",\"imagePullPolicy\":\"Always\",\"env\":[{\"name\":\"NODE_NAME\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"spec.nodeName\"}}},{\"name\":\"POD_NAME\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"metadata.name\"}}},{\"name\":\"NAMESPACE\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"metadata.namespace\"}}},{\"name\":\"SPOT_POD_IP\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"status.podIP\"}}}],\"resources\":{\"requests\":{\"memory\":\"64Mi\",\"cpu\":\"50m\"},\"limits\":{\"memory\":\"128Mi\",\"cpu\":\"100m\"}}}],\"nodeSelector\":{\"lifecycle\":\"Ec2Spot\"}}}}}]"
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete"
    },
    "kubectllayer8C2542BCBF2B4DFEB765E181FD30A9A0617C4ADA": {
      "Type": "AWS::Serverless::Application",
      "Properties": {
        "Location": {
          "ApplicationId": "arn:aws:serverlessrepo:us-east-1:903779448426:applications/lambda-layer-kubectl",
          "SemanticVersion": "1.13.7"
        },
        "Parameters": {
          "LayerName": "kubectl-e3c1a5897fab23abec558d991fea218c"
        }
      }
    }
  },
  "Outputs": {
    "myClusterConfigCommandAC521B60": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "aws eks update-kubeconfig --name ",
            {
              "Ref": "myClusterE51CD07F"
            },
            " --region test-region"
          ]
        ]
      }
    },
    "myClusterGetTokenCommandF3F07390": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "aws eks get-token --cluster-name ",
            {
              "Ref": "myClusterE51CD07F"
            },
            " --region test-region"
          ]
        ]
      }
    }
  },
  "Parameters": {
    "AssetParametersea4957b16062595851e7d293ee45835db05c5693669a729cc02944b6ad19a204S3Bucket371D99F8": {
      "Type": "String",
      "Description": "S3 bucket for asset \"ea4957b16062595851e7d293ee45835db05c5693669a729cc02944b6ad19a204\""
    },
    "AssetParametersea4957b16062595851e7d293ee45835db05c5693669a729cc02944b6ad19a204S3VersionKeyFDCB25DD": {
      "Type": "String",
      "Description": "S3 key for asset version \"ea4957b16062595851e7d293ee45835db05c5693669a729cc02944b6ad19a204\""
    },
    "AssetParametersea4957b16062595851e7d293ee45835db05c5693669a729cc02944b6ad19a204ArtifactHashB80B497F": {
      "Type": "String",
      "Description": "Artifact hash for asset \"ea4957b16062595851e7d293ee45835db05c5693669a729cc02944b6ad19a204\""
    },
    "AssetParameters640847533c8a00b3133aeb128edcac41fb7b60349c9e18764fcf7ea4af14d444S3Bucket919126CB": {
      "Type": "String",
      "Description": "S3 bucket for asset \"640847533c8a00b3133aeb128edcac41fb7b60349c9e18764fcf7ea4af14d444\""
    },
    "AssetParameters640847533c8a00b3133aeb128edcac41fb7b60349c9e18764fcf7ea4af14d444S3VersionKey529BEF54": {
      "Type": "String",
      "Description": "S3 key for asset version \"640847533c8a00b3133aeb128edcac41fb7b60349c9e18764fcf7ea4af14d444\""
    },
    "AssetParameters640847533c8a00b3133aeb128edcac41fb7b60349c9e18764fcf7ea4af14d444ArtifactHash606C8127": {
      "Type": "String",
      "Description": "Artifact hash for asset \"640847533c8a00b3133aeb128edcac41fb7b60349c9e18764fcf7ea4af14d444\""
    },
    "SsmParameterValueawsserviceeksoptimizedami114amazonlinux2recommendedimageidC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Type": "AWS::SSM::Parameter::Value<String>",
      "Default": "/aws/service/eks/optimized-ami/1.14/amazon-linux-2/recommended/image_id"
    }
  }
}