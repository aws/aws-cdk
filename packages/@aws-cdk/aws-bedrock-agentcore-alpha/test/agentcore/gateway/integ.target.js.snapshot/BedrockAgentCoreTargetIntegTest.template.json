{
 "Resources": {
  "TestGatewayAmazonBedrockAgentCoreGatewayDefaultServiceRole899949B4": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "bedrock-agentcore.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "Policies": [
     {
      "PolicyDocument": {
       "Statement": [
        {
         "Action": [
          "bedrock-agentcore:*",
          "iam:PassRole"
         ],
         "Effect": "Allow",
         "Resource": "*"
        }
       ],
       "Version": "2012-10-17"
      },
      "PolicyName": "GatewayAccessPolicy"
     }
    ]
   }
  },
  "TestGatewayAmazonBedrockAgentCoreGatewayDefaultServiceRoleDefaultPolicy735FDFF2": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "lambda:InvokeFunction",
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "TestLambda2F70C45E",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "TestLambda2F70C45E",
             "Arn"
            ]
           },
           ":*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "TestGatewayAmazonBedrockAgentCoreGatewayDefaultServiceRoleDefaultPolicy735FDFF2",
    "Roles": [
     {
      "Ref": "TestGatewayAmazonBedrockAgentCoreGatewayDefaultServiceRole899949B4"
     }
    ]
   }
  },
  "TestGatewayUserPool545AA49A": {
   "Type": "AWS::Cognito::UserPool",
   "Properties": {
    "AccountRecoverySetting": {
     "RecoveryMechanisms": [
      {
       "Name": "verified_phone_number",
       "Priority": 1
      },
      {
       "Name": "verified_email",
       "Priority": 2
      }
     ]
    },
    "AdminCreateUserConfig": {
     "AllowAdminCreateUserOnly": true
    },
    "EmailVerificationMessage": "The verification code to your new account is {####}",
    "EmailVerificationSubject": "Verify your new account",
    "SmsVerificationMessage": "The verification code to your new account is {####}",
    "UserPoolName": "target-integ-test-gateway-gw-userpool",
    "UsernameConfiguration": {
     "CaseSensitive": false
    },
    "VerificationMessageTemplate": {
     "DefaultEmailOption": "CONFIRM_WITH_CODE",
     "EmailMessage": "The verification code to your new account is {####}",
     "EmailSubject": "Verify your new account",
     "SmsMessage": "The verification code to your new account is {####}"
    }
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain"
  },
  "TestGatewayUserPoolDefaultClient3AC9C728": {
   "Type": "AWS::Cognito::UserPoolClient",
   "Properties": {
    "AllowedOAuthFlows": [
     "implicit",
     "code"
    ],
    "AllowedOAuthFlowsUserPoolClient": true,
    "AllowedOAuthScopes": [
     "profile",
     "phone",
     "email",
     "openid",
     "aws.cognito.signin.user.admin"
    ],
    "CallbackURLs": [
     "https://example.com"
    ],
    "ClientName": "target-integ-test-gateway-gw-client",
    "SupportedIdentityProviders": [
     "COGNITO"
    ],
    "UserPoolId": {
     "Ref": "TestGatewayUserPool545AA49A"
    }
   }
  },
  "TestGateway7394A071": {
   "Type": "AWS::BedrockAgentCore::Gateway",
   "Properties": {
    "AuthorizerConfiguration": {
     "CustomJWTAuthorizer": {
      "AllowedClients": [
       {
        "Ref": "TestGatewayUserPoolDefaultClient3AC9C728"
       }
      ],
      "DiscoveryUrl": {
       "Fn::Join": [
        "",
        [
         {
          "Fn::GetAtt": [
           "TestGatewayUserPool545AA49A",
           "ProviderURL"
          ]
         },
         "/.well-known/openid-configuration"
        ]
       ]
      }
     }
    },
    "AuthorizerType": "CUSTOM_JWT",
    "Description": "Gateway for Lambda target integration test",
    "Name": "target-integ-test-gateway",
    "ProtocolConfiguration": {
     "Mcp": {
      "Instructions": "Default gateway to connect to external MCP tools",
      "SearchType": "SEMANTIC",
      "SupportedVersions": [
       "2025-03-26"
      ]
     }
    },
    "ProtocolType": "MCP",
    "RoleArn": {
     "Fn::GetAtt": [
      "TestGatewayAmazonBedrockAgentCoreGatewayDefaultServiceRole899949B4",
      "Arn"
     ]
    }
   }
  },
  "TestGatewayLambdaTargetBE2E7E0C": {
   "Type": "AWS::BedrockAgentCore::GatewayTarget",
   "Properties": {
    "CredentialProviderConfigurations": [
     {
      "CredentialProviderType": "GATEWAY_IAM_ROLE"
     }
    ],
    "Description": "Lambda target for greeting service",
    "GatewayIdentifier": {
     "Fn::GetAtt": [
      "TestGateway7394A071",
      "GatewayIdentifier"
     ]
    },
    "Name": "lambda-greeting-target",
    "TargetConfiguration": {
     "Mcp": {
      "Lambda": {
       "LambdaArn": {
        "Fn::GetAtt": [
         "TestLambda2F70C45E",
         "Arn"
        ]
       },
       "ToolSchema": {
        "InlinePayload": [
         {
          "Description": "A simple greeting tool",
          "InputSchema": {
           "Properties": {
            "name": {
             "Description": "Name to greet",
             "Type": "string"
            }
           },
           "Required": [
            "name"
           ],
           "Type": "object"
          },
          "Name": "greeting_tool"
         }
        ]
       }
      }
     }
    }
   }
  },
  "TestLambdaServiceRoleC28C2D9C": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   }
  },
  "TestLambda2F70C45E": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "ZipFile": "\n    exports.handler = async (event) => {\n      console.log('Received event:', JSON.stringify(event));\n      return {\n        statusCode: 200,\n        body: JSON.stringify({\n          message: 'Hello from Lambda target!',\n          input: event,\n        }),\n      };\n    };\n  "
    },
    "Description": "Lambda function for Gateway target integration test",
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "TestLambdaServiceRoleC28C2D9C",
      "Arn"
     ]
    },
    "Runtime": "nodejs22.x"
   },
   "DependsOn": [
    "TestLambdaServiceRoleC28C2D9C"
   ]
  },
  "TestLambdaLogGroupB66D2B71": {
   "Type": "AWS::Logs::LogGroup",
   "Properties": {
    "LogGroupName": {
     "Fn::Join": [
      "",
      [
       "/aws/lambda/",
       {
        "Ref": "TestLambda2F70C45E"
       }
      ]
     ]
    },
    "RetentionInDays": 731
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain"
  }
 },
 "Outputs": {
  "GatewayId": {
   "Description": "The ID of the created gateway",
   "Value": {
    "Fn::GetAtt": [
     "TestGateway7394A071",
     "GatewayIdentifier"
    ]
   }
  },
  "TargetId": {
   "Description": "The ID of the created target",
   "Value": {
    "Fn::GetAtt": [
     "TestGatewayLambdaTargetBE2E7E0C",
     "TargetId"
    ]
   }
  },
  "LambdaArn": {
   "Description": "The ARN of the Lambda function",
   "Value": {
    "Fn::GetAtt": [
     "TestLambda2F70C45E",
     "Arn"
    ]
   }
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}