{
 "Resources": {
  "ExistingRuntimeExecutionRole8B00B9CA": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "bedrock-agentcore.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "Description": "Execution role for Bedrock Agent Core Runtime",
    "MaxSessionDuration": 28800
   }
  },
  "ExistingRuntimeExecutionRoleDefaultPolicy6C465EA7": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "logs:CreateLogGroup",
        "logs:DescribeLogStreams"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:",
          {
           "Ref": "AWS::Partition"
          },
          ":logs:",
          {
           "Ref": "AWS::Region"
          },
          ":",
          {
           "Ref": "AWS::AccountId"
          },
          ":log-group:/aws/bedrock-agentcore/runtimes/*"
         ]
        ]
       },
       "Sid": "LogGroupAccess"
      },
      {
       "Action": "logs:DescribeLogGroups",
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:",
          {
           "Ref": "AWS::Partition"
          },
          ":logs:",
          {
           "Ref": "AWS::Region"
          },
          ":",
          {
           "Ref": "AWS::AccountId"
          },
          ":log-group:*"
         ]
        ]
       },
       "Sid": "DescribeLogGroups"
      },
      {
       "Action": [
        "logs:CreateLogStream",
        "logs:PutLogEvents"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:",
          {
           "Ref": "AWS::Partition"
          },
          ":logs:",
          {
           "Ref": "AWS::Region"
          },
          ":",
          {
           "Ref": "AWS::AccountId"
          },
          ":log-group:/aws/bedrock-agentcore/runtimes/*:log-stream:*"
         ]
        ]
       },
       "Sid": "LogStreamAccess"
      },
      {
       "Action": [
        "xray:GetSamplingRules",
        "xray:GetSamplingTargets",
        "xray:PutTelemetryRecords",
        "xray:PutTraceSegments"
       ],
       "Effect": "Allow",
       "Resource": "*",
       "Sid": "XRayAccess"
      },
      {
       "Action": "cloudwatch:PutMetricData",
       "Condition": {
        "StringEquals": {
         "cloudwatch:namespace": "bedrock-agentcore"
        }
       },
       "Effect": "Allow",
       "Resource": "*",
       "Sid": "CloudWatchMetrics"
      },
      {
       "Action": [
        "bedrock-agentcore:GetWorkloadAccessToken",
        "bedrock-agentcore:GetWorkloadAccessTokenForJWT",
        "bedrock-agentcore:GetWorkloadAccessTokenForUserId"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":bedrock-agentcore:",
           {
            "Ref": "AWS::Region"
           },
           ":",
           {
            "Ref": "AWS::AccountId"
           },
           ":workload-identity-directory/default"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":bedrock-agentcore:",
           {
            "Ref": "AWS::Region"
           },
           ":",
           {
            "Ref": "AWS::AccountId"
           },
           ":workload-identity-directory/default/workload-identity/*"
          ]
         ]
        }
       ],
       "Sid": "GetAgentAccessToken"
      },
      {
       "Action": [
        "ecr:BatchCheckLayerAvailability",
        "ecr:BatchGetImage",
        "ecr:GetDownloadUrlForLayer"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:",
          {
           "Ref": "AWS::Partition"
          },
          ":ecr:",
          {
           "Ref": "AWS::Region"
          },
          ":",
          {
           "Ref": "AWS::AccountId"
          },
          ":repository/",
          {
           "Fn::Sub": "cdk-hnb659fds-container-assets-${AWS::AccountId}-${AWS::Region}"
          }
         ]
        ]
       }
      },
      {
       "Action": "ecr:GetAuthorizationToken",
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "ExistingRuntimeExecutionRoleDefaultPolicy6C465EA7",
    "Roles": [
     {
      "Ref": "ExistingRuntimeExecutionRole8B00B9CA"
     }
    ]
   }
  },
  "ExistingRuntimeCC05F9CB": {
   "Type": "AWS::BedrockAgentCore::Runtime",
   "Properties": {
    "AgentRuntimeArtifact": {
     "ContainerConfiguration": {
      "ContainerUri": {
       "Fn::Sub": "${AWS::AccountId}.dkr.ecr.${AWS::Region}.${AWS::URLSuffix}/cdk-hnb659fds-container-assets-${AWS::AccountId}-${AWS::Region}:f06c9f54828243752afd2df4e39ab9d2987b5ccf44e6bdc05621c18d5488f240"
      }
     }
    },
    "AgentRuntimeName": "endpoint_test_runtime",
    "Description": "Runtime for endpoint integration test",
    "NetworkConfiguration": {
     "NetworkMode": "PUBLIC"
    },
    "ProtocolConfiguration": "HTTP",
    "RoleArn": {
     "Fn::GetAtt": [
      "ExistingRuntimeExecutionRole8B00B9CA",
      "Arn"
     ]
    }
   },
   "DependsOn": [
    "ExistingRuntimeExecutionRoleDefaultPolicy6C465EA7",
    "ExistingRuntimeExecutionRole8B00B9CA"
   ]
  },
  "TestEndpoint4E197ABD": {
   "Type": "AWS::BedrockAgentCore::RuntimeEndpoint",
   "Properties": {
    "AgentRuntimeId": {
     "Fn::GetAtt": [
      "ExistingRuntimeCC05F9CB",
      "AgentRuntimeId"
     ]
    },
    "AgentRuntimeVersion": "1",
    "Description": "Simple endpoint for integration testing",
    "Name": "test_endpoint",
    "Tags": {
     "Component": "RuntimeEndpoint",
     "Purpose": "IntegrationTest"
    }
   }
  }
 },
 "Outputs": {
  "RuntimeId": {
   "Description": "The ID of the runtime",
   "Value": {
    "Fn::GetAtt": [
     "ExistingRuntimeCC05F9CB",
     "AgentRuntimeId"
    ]
   }
  },
  "RuntimeArn": {
   "Description": "The ARN of the runtime",
   "Value": {
    "Fn::GetAtt": [
     "ExistingRuntimeCC05F9CB",
     "AgentRuntimeArn"
    ]
   }
  },
  "EndpointId": {
   "Description": "The ID of the endpoint",
   "Value": {
    "Fn::GetAtt": [
     "TestEndpoint4E197ABD",
     "Id"
    ]
   }
  },
  "EndpointArn": {
   "Description": "The ARN of the endpoint",
   "Value": {
    "Fn::GetAtt": [
     "TestEndpoint4E197ABD",
     "AgentRuntimeEndpointArn"
    ]
   }
  },
  "EndpointName": {
   "Description": "The name of the endpoint",
   "Value": "test_endpoint"
  },
  "EndpointLiveVersion": {
   "Description": "The live version of the endpoint",
   "Value": {
    "Fn::GetAtt": [
     "TestEndpoint4E197ABD",
     "LiveVersion"
    ]
   }
  },
  "EndpointTargetVersion": {
   "Description": "The target version of the endpoint",
   "Value": {
    "Fn::GetAtt": [
     "TestEndpoint4E197ABD",
     "TargetVersion"
    ]
   }
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}