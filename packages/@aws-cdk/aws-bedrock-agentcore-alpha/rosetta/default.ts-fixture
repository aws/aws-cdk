import { Construct } from 'constructs';
import * as cdk from 'aws-cdk-lib';
import * as agentcore from '@aws-cdk/aws-bedrock-agentcore-alpha';
import * as lambda from 'aws-cdk-lib/aws-lambda';
import * as s3 from 'aws-cdk-lib/aws-s3';
import * as kms from 'aws-cdk-lib/aws-kms';
import * as ecr from 'aws-cdk-lib/aws-ecr';
import * as iam from 'aws-cdk-lib/aws-iam';
import { Platform } from 'aws-cdk-lib/aws-ecr-assets';
import { Duration, RemovalPolicy, aws_s3_deployment } from 'aws-cdk-lib';



// Define path utilities for examples that use them
const path = {
  join: (...args: string[]) => args.join('/')
};

// Define __dirname for examples that use it
const __dirname = '/example/path';

class MyStack extends cdk.Stack {
  constructor(scope: Construct, id: string) {
    super(scope, id);

    /// here
  }
}
