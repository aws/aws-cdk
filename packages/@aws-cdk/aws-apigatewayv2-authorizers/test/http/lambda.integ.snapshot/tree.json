{
  "version": "tree-0.1",
  "tree": {
    "id": "App",
    "path": "",
    "children": {
      "Tree": {
        "id": "Tree",
        "path": "Tree",
        "constructInfo": {
          "fqn": "constructs.Construct",
          "version": "10.1.85"
        }
      },
      "AuthorizerInteg": {
        "id": "AuthorizerInteg",
        "path": "AuthorizerInteg",
        "children": {
          "MyHttpApi": {
            "id": "MyHttpApi",
            "path": "AuthorizerInteg/MyHttpApi",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "AuthorizerInteg/MyHttpApi/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::ApiGatewayV2::Api",
                  "aws:cdk:cloudformation:props": {
                    "name": "MyHttpApi",
                    "protocolType": "HTTP"
                  }
                },
                "constructInfo": {
                  "fqn": "@aws-cdk/aws-apigatewayv2.CfnApi",
                  "version": "0.0.0"
                }
              },
              "DefaultStage": {
                "id": "DefaultStage",
                "path": "AuthorizerInteg/MyHttpApi/DefaultStage",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "AuthorizerInteg/MyHttpApi/DefaultStage/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::ApiGatewayV2::Stage",
                      "aws:cdk:cloudformation:props": {
                        "apiId": {
                          "Ref": "MyHttpApi8AEAAC21"
                        },
                        "stageName": "$default",
                        "autoDeploy": true
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-apigatewayv2.CfnStage",
                      "version": "0.0.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "@aws-cdk/aws-apigatewayv2.HttpStage",
                  "version": "0.0.0"
                }
              },
              "GET--": {
                "id": "GET--",
                "path": "AuthorizerInteg/MyHttpApi/GET--",
                "children": {
                  "RootIntegration": {
                    "id": "RootIntegration",
                    "path": "AuthorizerInteg/MyHttpApi/GET--/RootIntegration",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "AuthorizerInteg/MyHttpApi/GET--/RootIntegration/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::ApiGatewayV2::Integration",
                          "aws:cdk:cloudformation:props": {
                            "apiId": {
                              "Ref": "MyHttpApi8AEAAC21"
                            },
                            "integrationType": "AWS_PROXY",
                            "integrationUri": {
                              "Fn::GetAtt": [
                                "lambda8B5974B5",
                                "Arn"
                              ]
                            },
                            "payloadFormatVersion": "2.0"
                          }
                        },
                        "constructInfo": {
                          "fqn": "@aws-cdk/aws-apigatewayv2.CfnIntegration",
                          "version": "0.0.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-apigatewayv2.HttpIntegration",
                      "version": "0.0.0"
                    }
                  },
                  "RootIntegration-Permission": {
                    "id": "RootIntegration-Permission",
                    "path": "AuthorizerInteg/MyHttpApi/GET--/RootIntegration-Permission",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                      "aws:cdk:cloudformation:props": {
                        "action": "lambda:InvokeFunction",
                        "functionName": {
                          "Fn::GetAtt": [
                            "lambda8B5974B5",
                            "Arn"
                          ]
                        },
                        "principal": "apigateway.amazonaws.com",
                        "sourceArn": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":execute-api:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":",
                              {
                                "Ref": "AWS::AccountId"
                              },
                              ":",
                              {
                                "Ref": "MyHttpApi8AEAAC21"
                              },
                              "/*/*/"
                            ]
                          ]
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-lambda.CfnPermission",
                      "version": "0.0.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "AuthorizerInteg/MyHttpApi/GET--/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::ApiGatewayV2::Route",
                      "aws:cdk:cloudformation:props": {
                        "apiId": {
                          "Ref": "MyHttpApi8AEAAC21"
                        },
                        "routeKey": "GET /",
                        "authorizationType": "CUSTOM",
                        "authorizerId": {
                          "Ref": "MyHttpApiLambdaAuthorizerB8A0E2A4"
                        },
                        "target": {
                          "Fn::Join": [
                            "",
                            [
                              "integrations/",
                              {
                                "Ref": "MyHttpApiGETRootIntegration5068C5B0"
                              }
                            ]
                          ]
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-apigatewayv2.CfnRoute",
                      "version": "0.0.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "@aws-cdk/aws-apigatewayv2.HttpRoute",
                  "version": "0.0.0"
                }
              },
              "LambdaAuthorizer": {
                "id": "LambdaAuthorizer",
                "path": "AuthorizerInteg/MyHttpApi/LambdaAuthorizer",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "AuthorizerInteg/MyHttpApi/LambdaAuthorizer/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::ApiGatewayV2::Authorizer",
                      "aws:cdk:cloudformation:props": {
                        "apiId": {
                          "Ref": "MyHttpApi8AEAAC21"
                        },
                        "authorizerType": "REQUEST",
                        "name": "my-simple-authorizer",
                        "authorizerPayloadFormatVersion": "2.0",
                        "authorizerResultTtlInSeconds": 300,
                        "authorizerUri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "authfunction96361832",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        },
                        "enableSimpleResponses": true,
                        "identitySource": [
                          "$request.header.X-API-Key"
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-apigatewayv2.CfnAuthorizer",
                      "version": "0.0.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "@aws-cdk/aws-apigatewayv2.HttpAuthorizer",
                  "version": "0.0.0"
                }
              },
              "AuthorizerIntegMyHttpApiLambdaAuthorizerB89228D7-Permission": {
                "id": "AuthorizerIntegMyHttpApiLambdaAuthorizerB89228D7-Permission",
                "path": "AuthorizerInteg/MyHttpApi/AuthorizerIntegMyHttpApiLambdaAuthorizerB89228D7-Permission",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                  "aws:cdk:cloudformation:props": {
                    "action": "lambda:InvokeFunction",
                    "functionName": {
                      "Fn::GetAtt": [
                        "authfunction96361832",
                        "Arn"
                      ]
                    },
                    "principal": "apigateway.amazonaws.com",
                    "sourceArn": {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition"
                          },
                          ":execute-api:",
                          {
                            "Ref": "AWS::Region"
                          },
                          ":",
                          {
                            "Ref": "AWS::AccountId"
                          },
                          ":",
                          {
                            "Ref": "MyHttpApi8AEAAC21"
                          },
                          "/authorizers/",
                          {
                            "Ref": "MyHttpApiLambdaAuthorizerB8A0E2A4"
                          }
                        ]
                      ]
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "@aws-cdk/aws-lambda.CfnPermission",
                  "version": "0.0.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "@aws-cdk/aws-apigatewayv2.HttpApi",
              "version": "0.0.0"
            }
          },
          "auth-function": {
            "id": "auth-function",
            "path": "AuthorizerInteg/auth-function",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "AuthorizerInteg/auth-function/ServiceRole",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "AuthorizerInteg/auth-function/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-iam.CfnRole",
                      "version": "0.0.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "@aws-cdk/aws-iam.Role",
                  "version": "0.0.0"
                }
              },
              "Code": {
                "id": "Code",
                "path": "AuthorizerInteg/auth-function/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "AuthorizerInteg/auth-function/Code/Stage",
                    "constructInfo": {
                      "fqn": "constructs.Construct",
                      "version": "10.1.85"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "AuthorizerInteg/auth-function/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-s3.BucketBase",
                      "version": "0.0.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "@aws-cdk/aws-s3-assets.Asset",
                  "version": "0.0.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "AuthorizerInteg/auth-function/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": {
                        "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
                      },
                      "s3Key": "74589072567ba0ad5a12f277a47a8c3b7b5151e9290901fae0a4ce72fe7e3a3a.zip"
                    },
                    "role": {
                      "Fn::GetAtt": [
                        "authfunctionServiceRoleFCB72198",
                        "Arn"
                      ]
                    },
                    "handler": "index.handler",
                    "runtime": "nodejs14.x"
                  }
                },
                "constructInfo": {
                  "fqn": "@aws-cdk/aws-lambda.CfnFunction",
                  "version": "0.0.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "@aws-cdk/aws-lambda.Function",
              "version": "0.0.0"
            }
          },
          "lambda": {
            "id": "lambda",
            "path": "AuthorizerInteg/lambda",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "AuthorizerInteg/lambda/ServiceRole",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "AuthorizerInteg/lambda/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-iam.CfnRole",
                      "version": "0.0.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "@aws-cdk/aws-iam.Role",
                  "version": "0.0.0"
                }
              },
              "Code": {
                "id": "Code",
                "path": "AuthorizerInteg/lambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "AuthorizerInteg/lambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "constructs.Construct",
                      "version": "10.1.85"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "AuthorizerInteg/lambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-s3.BucketBase",
                      "version": "0.0.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "@aws-cdk/aws-s3-assets.Asset",
                  "version": "0.0.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "AuthorizerInteg/lambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": {
                        "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
                      },
                      "s3Key": "1fd1c15cb7d5e2e36a11745fd10b4b7c3ca8eb30642b41954630413d2b913cda.zip"
                    },
                    "role": {
                      "Fn::GetAtt": [
                        "lambdaServiceRole494E4CA6",
                        "Arn"
                      ]
                    },
                    "handler": "index.handler",
                    "runtime": "nodejs14.x"
                  }
                },
                "constructInfo": {
                  "fqn": "@aws-cdk/aws-lambda.CfnFunction",
                  "version": "0.0.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "@aws-cdk/aws-lambda.Function",
              "version": "0.0.0"
            }
          },
          "URL": {
            "id": "URL",
            "path": "AuthorizerInteg/URL",
            "constructInfo": {
              "fqn": "constructs.Construct",
              "version": "10.1.85"
            }
          }
        },
        "constructInfo": {
          "fqn": "constructs.Construct",
          "version": "10.1.85"
        }
      }
    },
    "constructInfo": {
      "fqn": "constructs.Construct",
      "version": "10.1.85"
    }
  }
}