{
 "Resources": {
  "AwsApiCallSQSsendMessagea6c71cd409e72c5fe7a0d53455c5a1a9": {
   "Type": "Custom::DeployAssert@SdkCallSQSsendMessage",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "SingletonFunction1488541a7b23466481b69b4408076b81HandlerCD40AE9F",
      "Arn"
     ]
    },
    "service": "SQS",
    "api": "sendMessage",
    "parameters": {
     "QueueUrl": {
      "Fn::Join": [
       "",
       [
        "\"",
        {
         "Fn::ImportValue": "aws-cdk-pipes-sfn-target:ExportsOutputRefSourceQueue6E809DF09604904F"
        },
        "\""
       ]
      ]
     },
     "MessageBody": "\"ðŸŒˆ\""
    },
    "flattenResponse": "false",
    "salt": "1714319990924"
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  },
  "SingletonFunction1488541a7b23466481b69b4408076b81Role37ABCE73": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Version": "2012-10-17",
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ]
    },
    "ManagedPolicyArns": [
     {
      "Fn::Sub": "arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
     }
    ],
    "Policies": [
     {
      "PolicyName": "Inline",
      "PolicyDocument": {
       "Version": "2012-10-17",
       "Statement": [
        {
         "Action": [
          "sqs:SendMessage"
         ],
         "Effect": "Allow",
         "Resource": [
          "*"
         ]
        },
        {
         "Action": [
          "ssm:GetParameter"
         ],
         "Effect": "Allow",
         "Resource": [
          "*"
         ]
        },
        {
         "Action": [
          "states:StartExecution"
         ],
         "Effect": "Allow",
         "Resource": [
          "*"
         ]
        }
       ]
      }
     }
    ]
   }
  },
  "SingletonFunction1488541a7b23466481b69b4408076b81HandlerCD40AE9F": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Runtime": "nodejs18.x",
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "cfdb46b4f2c6702b4a1cc8e23ca426e8de43d13567e73a8453d01c1176393814.zip"
    },
    "Timeout": 120,
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "SingletonFunction1488541a7b23466481b69b4408076b81Role37ABCE73",
      "Arn"
     ]
    }
   }
  },
  "AwsApiCallSSMgetParametere0a98b11fdce90ebc623abceb1840d50": {
   "Type": "Custom::DeployAssert@SdkCallSSMgetParameter",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "SingletonFunction1488541a7b23466481b69b4408076b81HandlerCD40AE9F",
      "Arn"
     ]
    },
    "service": "SSM",
    "api": "getParameter",
    "expected": "{\"$ObjectLike\":{\"Parameter\":{\"Name\":\"MyPipeParameter\",\"Value\":\"ðŸŒˆ\"}}}",
    "stateMachineArn": {
     "Ref": "AwsApiCallSSMgetParametere0a98b11fdce90ebc623abceb1840d50WaitFor3043EDE3"
    },
    "parameters": {
     "Name": "\"MyPipeParameter\""
    },
    "flattenResponse": "false",
    "salt": "1714319990924"
   },
   "DependsOn": [
    "AwsApiCallSQSsendMessagea6c71cd409e72c5fe7a0d53455c5a1a9"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  },
  "AwsApiCallSSMgetParametere0a98b11fdce90ebc623abceb1840d50WaitForIsCompleteProviderInvoke7F9B963A": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "SingletonFunction76b3e830a873425f8453eddd85c86925Handler81461ECE",
      "Arn"
     ]
    },
    "Principal": {
     "Fn::GetAtt": [
      "AwsApiCallSSMgetParametere0a98b11fdce90ebc623abceb1840d50WaitForRoleF47C2026",
      "Arn"
     ]
    }
   },
   "DependsOn": [
    "AwsApiCallSQSsendMessagea6c71cd409e72c5fe7a0d53455c5a1a9"
   ]
  },
  "AwsApiCallSSMgetParametere0a98b11fdce90ebc623abceb1840d50WaitForTimeoutProviderInvokeE70FB784": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "SingletonFunction5c1898e096fb4e3e95d5f6c67f3ce41aHandlerADF3E6EA",
      "Arn"
     ]
    },
    "Principal": {
     "Fn::GetAtt": [
      "AwsApiCallSSMgetParametere0a98b11fdce90ebc623abceb1840d50WaitForRoleF47C2026",
      "Arn"
     ]
    }
   },
   "DependsOn": [
    "AwsApiCallSQSsendMessagea6c71cd409e72c5fe7a0d53455c5a1a9"
   ]
  },
  "AwsApiCallSSMgetParametere0a98b11fdce90ebc623abceb1840d50WaitForRoleF47C2026": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Version": "2012-10-17",
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "states.amazonaws.com"
       }
      }
     ]
    },
    "Policies": [
     {
      "PolicyName": "InlineInvokeFunctions",
      "PolicyDocument": {
       "Version": "2012-10-17",
       "Statement": [
        {
         "Action": "lambda:InvokeFunction",
         "Effect": "Allow",
         "Resource": [
          {
           "Fn::GetAtt": [
            "SingletonFunction76b3e830a873425f8453eddd85c86925Handler81461ECE",
            "Arn"
           ]
          },
          {
           "Fn::GetAtt": [
            "SingletonFunction5c1898e096fb4e3e95d5f6c67f3ce41aHandlerADF3E6EA",
            "Arn"
           ]
          }
         ]
        }
       ]
      }
     }
    ]
   },
   "DependsOn": [
    "AwsApiCallSQSsendMessagea6c71cd409e72c5fe7a0d53455c5a1a9"
   ]
  },
  "AwsApiCallSSMgetParametere0a98b11fdce90ebc623abceb1840d50WaitFor3043EDE3": {
   "Type": "AWS::StepFunctions::StateMachine",
   "Properties": {
    "DefinitionString": {
     "Fn::Join": [
      "",
      [
       "{\"StartAt\":\"framework-isComplete-task\",\"States\":{\"framework-isComplete-task\":{\"End\":true,\"Retry\":[{\"ErrorEquals\":[\"States.ALL\"],\"IntervalSeconds\":5,\"MaxAttempts\":2,\"BackoffRate\":1}],\"Catch\":[{\"ErrorEquals\":[\"States.ALL\"],\"Next\":\"framework-onTimeout-task\"}],\"Type\":\"Task\",\"Resource\":\"",
       {
        "Fn::GetAtt": [
         "SingletonFunction76b3e830a873425f8453eddd85c86925Handler81461ECE",
         "Arn"
        ]
       },
       "\"},\"framework-onTimeout-task\":{\"End\":true,\"Type\":\"Task\",\"Resource\":\"",
       {
        "Fn::GetAtt": [
         "SingletonFunction5c1898e096fb4e3e95d5f6c67f3ce41aHandlerADF3E6EA",
         "Arn"
        ]
       },
       "\"}}}"
      ]
     ]
    },
    "RoleArn": {
     "Fn::GetAtt": [
      "AwsApiCallSSMgetParametere0a98b11fdce90ebc623abceb1840d50WaitForRoleF47C2026",
      "Arn"
     ]
    }
   },
   "DependsOn": [
    "AwsApiCallSQSsendMessagea6c71cd409e72c5fe7a0d53455c5a1a9",
    "AwsApiCallSSMgetParametere0a98b11fdce90ebc623abceb1840d50WaitForRoleF47C2026"
   ]
  },
  "SingletonFunction76b3e830a873425f8453eddd85c86925Role918961BB": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Version": "2012-10-17",
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ]
    },
    "ManagedPolicyArns": [
     {
      "Fn::Sub": "arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
     }
    ],
    "Policies": [
     {
      "PolicyName": "Inline",
      "PolicyDocument": {
       "Version": "2012-10-17",
       "Statement": [
        {
         "Action": [
          "ssm:GetParameter"
         ],
         "Effect": "Allow",
         "Resource": [
          "*"
         ]
        }
       ]
      }
     }
    ]
   }
  },
  "SingletonFunction76b3e830a873425f8453eddd85c86925Handler81461ECE": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Runtime": "nodejs18.x",
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "cfdb46b4f2c6702b4a1cc8e23ca426e8de43d13567e73a8453d01c1176393814.zip"
    },
    "Timeout": 120,
    "Handler": "index.isComplete",
    "Role": {
     "Fn::GetAtt": [
      "SingletonFunction76b3e830a873425f8453eddd85c86925Role918961BB",
      "Arn"
     ]
    }
   }
  },
  "SingletonFunction5c1898e096fb4e3e95d5f6c67f3ce41aRoleB84BD8CE": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Version": "2012-10-17",
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ]
    },
    "ManagedPolicyArns": [
     {
      "Fn::Sub": "arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
     }
    ]
   }
  },
  "SingletonFunction5c1898e096fb4e3e95d5f6c67f3ce41aHandlerADF3E6EA": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Runtime": "nodejs18.x",
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "cfdb46b4f2c6702b4a1cc8e23ca426e8de43d13567e73a8453d01c1176393814.zip"
    },
    "Timeout": 120,
    "Handler": "index.onTimeout",
    "Role": {
     "Fn::GetAtt": [
      "SingletonFunction5c1898e096fb4e3e95d5f6c67f3ce41aRoleB84BD8CE",
      "Arn"
     ]
    }
   }
  }
 },
 "Outputs": {
  "AssertionResultsAwsApiCallSSMgetParametere0a98b11fdce90ebc623abceb1840d50": {
   "Value": {
    "Fn::GetAtt": [
     "AwsApiCallSSMgetParametere0a98b11fdce90ebc623abceb1840d50",
     "assertion"
    ]
   }
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}