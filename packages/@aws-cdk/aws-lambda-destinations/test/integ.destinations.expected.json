{
  "Resources": {
    "TopicBFC7AF6E": {
      "Type": "AWS::SNS::Topic"
    },
    "Queue4A7E3555": {
      "Type": "AWS::SQS::Queue"
    },
    "SnsSqsServiceRole869866F7": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      }
    },
    "SnsSqsServiceRoleDefaultPolicy82E7B09F": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "sns:Publish",
              "Effect": "Allow",
              "Resource": {
                "Ref": "TopicBFC7AF6E"
              }
            },
            {
              "Action": [
                "sqs:SendMessage",
                "sqs:GetQueueAttributes",
                "sqs:GetQueueUrl"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "Queue4A7E3555",
                  "Arn"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "SnsSqsServiceRoleDefaultPolicy82E7B09F",
        "Roles": [
          {
            "Ref": "SnsSqsServiceRole869866F7"
          }
        ]
      }
    },
    "SnsSqsC4810B27": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "ZipFile": "exports.handler = async (event) => {\n        if (event === 'OK') return 'success';\n        throw new Error('failure');\n      };"
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "SnsSqsServiceRole869866F7",
            "Arn"
          ]
        },
        "Runtime": "nodejs10.x"
      },
      "DependsOn": [
        "SnsSqsServiceRoleDefaultPolicy82E7B09F",
        "SnsSqsServiceRole869866F7"
      ]
    },
    "SnsSqsEventInvokeConfigDC664368": {
      "Type": "AWS::Lambda::EventInvokeConfig",
      "Properties": {
        "FunctionName": {
          "Ref": "SnsSqsC4810B27"
        },
        "Qualifier": "$LATEST",
        "DestinationConfig": {
          "OnFailure": {
            "Destination": {
              "Ref": "TopicBFC7AF6E"
            }
          },
          "OnSuccess": {
            "Destination": {
              "Fn::GetAtt": [
                "Queue4A7E3555",
                "Arn"
              ]
            }
          }
        },
        "MaximumEventAgeInSeconds": 10800,
        "MaximumRetryAttempts": 1
      }
    },
    "SnsSqsVersionMySpecialVersion08136BD6": {
      "Type": "AWS::Lambda::Version",
      "Properties": {
        "FunctionName": {
          "Ref": "SnsSqsC4810B27"
        }
      }
    },
    "OnSuccesServiceRole75E399CF": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      }
    },
    "OnSucces8F9C946B": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "ZipFile": "exports.handler = async (event) => {\n        console.log(event);\n      };"
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "OnSuccesServiceRole75E399CF",
            "Arn"
          ]
        },
        "Runtime": "nodejs10.x"
      },
      "DependsOn": [
        "OnSuccesServiceRole75E399CF"
      ]
    },
    "EventBusLambdaServiceRole9BC8901F": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      }
    },
    "EventBusLambdaServiceRoleDefaultPolicy5BB7FEB6": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "events:PutEvents",
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "OnSucces8F9C946B",
                  "Arn"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "EventBusLambdaServiceRoleDefaultPolicy5BB7FEB6",
        "Roles": [
          {
            "Ref": "EventBusLambdaServiceRole9BC8901F"
          }
        ]
      }
    },
    "EventBusLambda4AA26499": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "ZipFile": "exports.handler = async (event) => {\n        if (event === 'OK') return 'success';\n        throw new Error('failure');\n      };"
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "EventBusLambdaServiceRole9BC8901F",
            "Arn"
          ]
        },
        "Runtime": "nodejs10.x"
      },
      "DependsOn": [
        "EventBusLambdaServiceRoleDefaultPolicy5BB7FEB6",
        "EventBusLambdaServiceRole9BC8901F"
      ]
    },
    "EventBusLambdaEventInvokeConfig52CF8B9B": {
      "Type": "AWS::Lambda::EventInvokeConfig",
      "Properties": {
        "FunctionName": {
          "Ref": "EventBusLambda4AA26499"
        },
        "Qualifier": "$LATEST",
        "DestinationConfig": {
          "OnFailure": {
            "Destination": {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition"
                  },
                  ":events:",
                  {
                    "Ref": "AWS::Region"
                  },
                  ":",
                  {
                    "Ref": "AWS::AccountId"
                  },
                  ":event-bus/default"
                ]
              ]
            }
          },
          "OnSuccess": {
            "Destination": {
              "Fn::GetAtt": [
                "OnSucces8F9C946B",
                "Arn"
              ]
            }
          }
        }
      }
    },
    "MySpecialAliasC0F04207": {
      "Type": "AWS::Lambda::Alias",
      "Properties": {
        "FunctionName": {
          "Ref": "SnsSqsC4810B27"
        },
        "FunctionVersion": {
          "Fn::GetAtt": [
            "SnsSqsVersionMySpecialVersion08136BD6",
            "Version"
          ]
        },
        "Name": "MySpecialAlias"
      }
    },
    "MySpecialAliasEventInvokeConfig05FF4E2F": {
      "Type": "AWS::Lambda::EventInvokeConfig",
      "Properties": {
        "FunctionName": {
          "Ref": "SnsSqsC4810B27"
        },
        "Qualifier": {
          "Fn::Select": [
            7,
            {
              "Fn::Split": [
                ":",
                {
                  "Ref": "MySpecialAliasC0F04207"
                }
              ]
            }
          ]
        },
        "DestinationConfig": {
          "OnFailure": {
            "Destination": {
              "Ref": "TopicBFC7AF6E"
            }
          },
          "OnSuccess": {
            "Destination": {
              "Fn::GetAtt": [
                "Queue4A7E3555",
                "Arn"
              ]
            }
          }
        },
        "MaximumEventAgeInSeconds": 7200,
        "MaximumRetryAttempts": 0
      }
    }
  }
}