{
 "Resources": {
  "TopicBFC7AF6E": {
   "Type": "AWS::SNS::Topic"
  },
  "Queue4A7E3555": {
   "Type": "AWS::SQS::Queue",
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  },
  "SnsSqsServiceRole869866F7": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   }
  },
  "SnsSqsServiceRoleDefaultPolicy82E7B09F": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "sns:Publish",
       "Effect": "Allow",
       "Resource": {
        "Ref": "TopicBFC7AF6E"
       }
      },
      {
       "Action": [
        "sqs:GetQueueAttributes",
        "sqs:GetQueueUrl",
        "sqs:SendMessage"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "Queue4A7E3555",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "SnsSqsServiceRoleDefaultPolicy82E7B09F",
    "Roles": [
     {
      "Ref": "SnsSqsServiceRole869866F7"
     }
    ]
   }
  },
  "SnsSqsC4810B27": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "ZipFile": "exports.handler = async (event) => {\n        if (event.status === 'OK') return 'success';\n        throw new Error('failure');\n      };"
    },
    "Role": {
     "Fn::GetAtt": [
      "SnsSqsServiceRole869866F7",
      "Arn"
     ]
    },
    "Handler": "index.handler",
    "Runtime": "nodejs14.x"
   },
   "DependsOn": [
    "SnsSqsServiceRoleDefaultPolicy82E7B09F",
    "SnsSqsServiceRole869866F7"
   ]
  },
  "SnsSqsEventInvokeConfigDC664368": {
   "Type": "AWS::Lambda::EventInvokeConfig",
   "Properties": {
    "FunctionName": {
     "Ref": "SnsSqsC4810B27"
    },
    "Qualifier": "$LATEST",
    "DestinationConfig": {
     "OnFailure": {
      "Destination": {
       "Ref": "TopicBFC7AF6E"
      }
     },
     "OnSuccess": {
      "Destination": {
       "Fn::GetAtt": [
        "Queue4A7E3555",
        "Arn"
       ]
      }
     }
    },
    "MaximumEventAgeInSeconds": 10800,
    "MaximumRetryAttempts": 1
   }
  },
  "SnsSqsVersionMySpecialVersion08136BD6": {
   "Type": "AWS::Lambda::Version",
   "Properties": {
    "FunctionName": {
     "Ref": "SnsSqsC4810B27"
    }
   }
  },
  "OnSuccesServiceRole75E399CF": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   }
  },
  "OnSucces8F9C946B": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "ZipFile": "exports.handler = async (event) => {\n        console.log(event);\n      };"
    },
    "Role": {
     "Fn::GetAtt": [
      "OnSuccesServiceRole75E399CF",
      "Arn"
     ]
    },
    "Handler": "index.handler",
    "Runtime": "nodejs14.x"
   },
   "DependsOn": [
    "OnSuccesServiceRole75E399CF"
   ]
  },
  "EventBusLambdaServiceRole9BC8901F": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   }
  },
  "EventBusLambdaServiceRoleDefaultPolicy5BB7FEB6": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "events:PutEvents",
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:",
          {
           "Ref": "AWS::Partition"
          },
          ":events:",
          {
           "Ref": "AWS::Region"
          },
          ":",
          {
           "Ref": "AWS::AccountId"
          },
          ":event-bus/default"
         ]
        ]
       }
      },
      {
       "Action": "lambda:InvokeFunction",
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "OnSucces8F9C946B",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "OnSucces8F9C946B",
             "Arn"
            ]
           },
           ":*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "EventBusLambdaServiceRoleDefaultPolicy5BB7FEB6",
    "Roles": [
     {
      "Ref": "EventBusLambdaServiceRole9BC8901F"
     }
    ]
   }
  },
  "EventBusLambda4AA26499": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "ZipFile": "exports.handler = async (event) => {\n        if (event.status === 'OK') return 'success';\n        throw new Error('failure');\n      };"
    },
    "Role": {
     "Fn::GetAtt": [
      "EventBusLambdaServiceRole9BC8901F",
      "Arn"
     ]
    },
    "Handler": "index.handler",
    "Runtime": "nodejs14.x"
   },
   "DependsOn": [
    "EventBusLambdaServiceRoleDefaultPolicy5BB7FEB6",
    "EventBusLambdaServiceRole9BC8901F"
   ]
  },
  "EventBusLambdaEventInvokeConfig52CF8B9B": {
   "Type": "AWS::Lambda::EventInvokeConfig",
   "Properties": {
    "FunctionName": {
     "Ref": "EventBusLambda4AA26499"
    },
    "Qualifier": "$LATEST",
    "DestinationConfig": {
     "OnFailure": {
      "Destination": {
       "Fn::Join": [
        "",
        [
         "arn:",
         {
          "Ref": "AWS::Partition"
         },
         ":events:",
         {
          "Ref": "AWS::Region"
         },
         ":",
         {
          "Ref": "AWS::AccountId"
         },
         ":event-bus/default"
        ]
       ]
      }
     },
     "OnSuccess": {
      "Destination": {
       "Fn::GetAtt": [
        "OnSucces8F9C946B",
        "Arn"
       ]
      }
     }
    }
   }
  },
  "MySpecialAliasC0F04207": {
   "Type": "AWS::Lambda::Alias",
   "Properties": {
    "FunctionName": {
     "Ref": "SnsSqsC4810B27"
    },
    "FunctionVersion": {
     "Fn::GetAtt": [
      "SnsSqsVersionMySpecialVersion08136BD6",
      "Version"
     ]
    },
    "Name": "MySpecialAlias"
   }
  },
  "MySpecialAliasEventInvokeConfig05FF4E2F": {
   "Type": "AWS::Lambda::EventInvokeConfig",
   "Properties": {
    "FunctionName": {
     "Ref": "SnsSqsC4810B27"
    },
    "Qualifier": {
     "Fn::Select": [
      7,
      {
       "Fn::Split": [
        ":",
        {
         "Ref": "MySpecialAliasC0F04207"
        }
       ]
      }
     ]
    },
    "DestinationConfig": {
     "OnFailure": {
      "Destination": {
       "Ref": "TopicBFC7AF6E"
      }
     },
     "OnSuccess": {
      "Destination": {
       "Fn::GetAtt": [
        "Queue4A7E3555",
        "Arn"
       ]
      }
     }
    },
    "MaximumEventAgeInSeconds": 7200,
    "MaximumRetryAttempts": 0
   }
  }
 },
 "Outputs": {
  "ExportsOutputRefSnsSqsC4810B27404A5AFF": {
   "Value": {
    "Ref": "SnsSqsC4810B27"
   },
   "Export": {
    "Name": "aws-cdk-lambda-destinations:ExportsOutputRefSnsSqsC4810B27404A5AFF"
   }
  },
  "ExportsOutputRefQueue4A7E3555425E8BD3": {
   "Value": {
    "Ref": "Queue4A7E3555"
   },
   "Export": {
    "Name": "aws-cdk-lambda-destinations:ExportsOutputRefQueue4A7E3555425E8BD3"
   }
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}