{
  "Resources": {
    "Vpc8378EB38": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": "10.0.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": [
          {
            "Key": "Name",
            "Value": "aws-cdk-lambda-1/Vpc"
          }
        ]
      }
    },
    "VpcPublicSubnet1Subnet5C2D37C4": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.0.0/19",
        "VpcId": {
          "Ref": "Vpc8378EB38"
        },
        "AvailabilityZone": "test-region-1a",
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public"
          },
          {
            "Key": "Name",
            "Value": "aws-cdk-lambda-1/Vpc/PublicSubnet1"
          }
        ]
      }
    },
    "VpcPublicSubnet1RouteTable6C95E38E": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "Vpc8378EB38"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "aws-cdk-lambda-1/Vpc/PublicSubnet1"
          }
        ]
      }
    },
    "VpcPublicSubnet1RouteTableAssociation97140677": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcPublicSubnet1RouteTable6C95E38E"
        },
        "SubnetId": {
          "Ref": "VpcPublicSubnet1Subnet5C2D37C4"
        }
      }
    },
    "VpcPublicSubnet1DefaultRoute3DA9E72A": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcPublicSubnet1RouteTable6C95E38E"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "VpcIGWD7BA715C"
        }
      },
      "DependsOn": [
        "VpcVPCGWBF912B6E"
      ]
    },
    "VpcPublicSubnet1EIPD7E02669": {
      "Type": "AWS::EC2::EIP",
      "Properties": {
        "Domain": "vpc",
        "Tags": [
          {
            "Key": "Name",
            "Value": "aws-cdk-lambda-1/Vpc/PublicSubnet1"
          }
        ]
      }
    },
    "VpcPublicSubnet1NATGateway4D7517AA": {
      "Type": "AWS::EC2::NatGateway",
      "Properties": {
        "AllocationId": {
          "Fn::GetAtt": [
            "VpcPublicSubnet1EIPD7E02669",
            "AllocationId"
          ]
        },
        "SubnetId": {
          "Ref": "VpcPublicSubnet1Subnet5C2D37C4"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "aws-cdk-lambda-1/Vpc/PublicSubnet1"
          }
        ]
      }
    },
    "VpcPublicSubnet2Subnet691E08A3": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.32.0/19",
        "VpcId": {
          "Ref": "Vpc8378EB38"
        },
        "AvailabilityZone": "test-region-1b",
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public"
          },
          {
            "Key": "Name",
            "Value": "aws-cdk-lambda-1/Vpc/PublicSubnet2"
          }
        ]
      }
    },
    "VpcPublicSubnet2RouteTable94F7E489": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "Vpc8378EB38"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "aws-cdk-lambda-1/Vpc/PublicSubnet2"
          }
        ]
      }
    },
    "VpcPublicSubnet2RouteTableAssociationDD5762D8": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcPublicSubnet2RouteTable94F7E489"
        },
        "SubnetId": {
          "Ref": "VpcPublicSubnet2Subnet691E08A3"
        }
      }
    },
    "VpcPublicSubnet2DefaultRoute97F91067": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcPublicSubnet2RouteTable94F7E489"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "VpcIGWD7BA715C"
        }
      },
      "DependsOn": [
        "VpcVPCGWBF912B6E"
      ]
    },
    "VpcPublicSubnet3SubnetBE12F0B6": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.64.0/19",
        "VpcId": {
          "Ref": "Vpc8378EB38"
        },
        "AvailabilityZone": "test-region-1c",
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public"
          },
          {
            "Key": "Name",
            "Value": "aws-cdk-lambda-1/Vpc/PublicSubnet3"
          }
        ]
      }
    },
    "VpcPublicSubnet3RouteTable93458DBB": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "Vpc8378EB38"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "aws-cdk-lambda-1/Vpc/PublicSubnet3"
          }
        ]
      }
    },
    "VpcPublicSubnet3RouteTableAssociation1F1EDF02": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcPublicSubnet3RouteTable93458DBB"
        },
        "SubnetId": {
          "Ref": "VpcPublicSubnet3SubnetBE12F0B6"
        }
      }
    },
    "VpcPublicSubnet3DefaultRoute4697774F": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcPublicSubnet3RouteTable93458DBB"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "VpcIGWD7BA715C"
        }
      },
      "DependsOn": [
        "VpcVPCGWBF912B6E"
      ]
    },
    "VpcPrivateSubnet1Subnet536B997A": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.96.0/19",
        "VpcId": {
          "Ref": "Vpc8378EB38"
        },
        "AvailabilityZone": "test-region-1a",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private"
          },
          {
            "Key": "Name",
            "Value": "aws-cdk-lambda-1/Vpc/PrivateSubnet1"
          }
        ]
      }
    },
    "VpcPrivateSubnet1RouteTableB2C5B500": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "Vpc8378EB38"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "aws-cdk-lambda-1/Vpc/PrivateSubnet1"
          }
        ]
      }
    },
    "VpcPrivateSubnet1RouteTableAssociation70C59FA6": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcPrivateSubnet1RouteTableB2C5B500"
        },
        "SubnetId": {
          "Ref": "VpcPrivateSubnet1Subnet536B997A"
        }
      }
    },
    "VpcPrivateSubnet1DefaultRouteBE02A9ED": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcPrivateSubnet1RouteTableB2C5B500"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "VpcPublicSubnet1NATGateway4D7517AA"
        }
      }
    },
    "VpcPrivateSubnet2Subnet3788AAA1": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.128.0/19",
        "VpcId": {
          "Ref": "Vpc8378EB38"
        },
        "AvailabilityZone": "test-region-1b",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private"
          },
          {
            "Key": "Name",
            "Value": "aws-cdk-lambda-1/Vpc/PrivateSubnet2"
          }
        ]
      }
    },
    "VpcPrivateSubnet2RouteTableA678073B": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "Vpc8378EB38"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "aws-cdk-lambda-1/Vpc/PrivateSubnet2"
          }
        ]
      }
    },
    "VpcPrivateSubnet2RouteTableAssociationA89CAD56": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcPrivateSubnet2RouteTableA678073B"
        },
        "SubnetId": {
          "Ref": "VpcPrivateSubnet2Subnet3788AAA1"
        }
      }
    },
    "VpcPrivateSubnet2DefaultRoute060D2087": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcPrivateSubnet2RouteTableA678073B"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "VpcPublicSubnet1NATGateway4D7517AA"
        }
      }
    },
    "VpcPrivateSubnet3SubnetF258B56E": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.160.0/19",
        "VpcId": {
          "Ref": "Vpc8378EB38"
        },
        "AvailabilityZone": "test-region-1c",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private"
          },
          {
            "Key": "Name",
            "Value": "aws-cdk-lambda-1/Vpc/PrivateSubnet3"
          }
        ]
      }
    },
    "VpcPrivateSubnet3RouteTableD98824C7": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "Vpc8378EB38"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "aws-cdk-lambda-1/Vpc/PrivateSubnet3"
          }
        ]
      }
    },
    "VpcPrivateSubnet3RouteTableAssociation16BDDC43": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcPrivateSubnet3RouteTableD98824C7"
        },
        "SubnetId": {
          "Ref": "VpcPrivateSubnet3SubnetF258B56E"
        }
      }
    },
    "VpcPrivateSubnet3DefaultRoute94B74F0D": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcPrivateSubnet3RouteTableD98824C7"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "VpcPublicSubnet1NATGateway4D7517AA"
        }
      }
    },
    "VpcIGWD7BA715C": {
      "Type": "AWS::EC2::InternetGateway",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "aws-cdk-lambda-1/Vpc"
          }
        ]
      }
    },
    "VpcVPCGWBF912B6E": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "VpcId": {
          "Ref": "Vpc8378EB38"
        },
        "InternetGatewayId": {
          "Ref": "VpcIGWD7BA715C"
        }
      }
    },
    "Efs9E8BF36B": {
      "Type": "AWS::EFS::FileSystem",
      "Properties": {
        "FileSystemTags": [
          {
            "Key": "Name",
            "Value": "aws-cdk-lambda-1/Efs"
          }
        ]
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete"
    },
    "EfsEfsSecurityGroup6F40EA3B": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "aws-cdk-lambda-1/Efs/EfsSecurityGroup",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1"
          }
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "aws-cdk-lambda-1/Efs"
          }
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38"
        }
      }
    },
    "EfsEfsSecurityGroupfromawscdklambda1MyLambdaSecurityGroup86B085EE20490D9864A8": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "IpProtocol": "tcp",
        "Description": "from awscdklambda1MyLambdaSecurityGroup86B085EE:2049",
        "FromPort": 2049,
        "GroupId": {
          "Fn::GetAtt": [
            "EfsEfsSecurityGroup6F40EA3B",
            "GroupId"
          ]
        },
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "MyLambdaSecurityGroup1E71A818",
            "GroupId"
          ]
        },
        "ToPort": 2049
      }
    },
    "EfsEfsMountTarget195B2DD2E": {
      "Type": "AWS::EFS::MountTarget",
      "Properties": {
        "FileSystemId": {
          "Ref": "Efs9E8BF36B"
        },
        "SecurityGroups": [
          {
            "Fn::GetAtt": [
              "EfsEfsSecurityGroup6F40EA3B",
              "GroupId"
            ]
          }
        ],
        "SubnetId": {
          "Ref": "VpcPrivateSubnet1Subnet536B997A"
        }
      }
    },
    "EfsEfsMountTarget2315C927F": {
      "Type": "AWS::EFS::MountTarget",
      "Properties": {
        "FileSystemId": {
          "Ref": "Efs9E8BF36B"
        },
        "SecurityGroups": [
          {
            "Fn::GetAtt": [
              "EfsEfsSecurityGroup6F40EA3B",
              "GroupId"
            ]
          }
        ],
        "SubnetId": {
          "Ref": "VpcPrivateSubnet2Subnet3788AAA1"
        }
      }
    },
    "EfsEfsMountTarget36646B9A0": {
      "Type": "AWS::EFS::MountTarget",
      "Properties": {
        "FileSystemId": {
          "Ref": "Efs9E8BF36B"
        },
        "SecurityGroups": [
          {
            "Fn::GetAtt": [
              "EfsEfsSecurityGroup6F40EA3B",
              "GroupId"
            ]
          }
        ],
        "SubnetId": {
          "Ref": "VpcPrivateSubnet3SubnetF258B56E"
        }
      }
    },
    "EfsAccessPointE419FED9": {
      "Type": "AWS::EFS::AccessPoint",
      "Properties": {
        "FileSystemId": {
          "Ref": "Efs9E8BF36B"
        },
        "PosixUser": {
          "Gid": "1001",
          "Uid": "1001"
        },
        "RootDirectory": {
          "CreationInfo": {
            "OwnerGid": "1001",
            "OwnerUid": "1001",
            "Permissions": "750"
          },
          "Path": "/export/lambda"
        }
      }
    },
    "MyLambdaServiceRole4539ECB6": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          },
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole"
              ]
            ]
          }
        ]
      },
      "DependsOn": [
        "EfsEfsMountTarget195B2DD2E",
        "EfsEfsMountTarget2315C927F",
        "EfsEfsMountTarget36646B9A0"
      ]
    },
    "MyLambdaServiceRoleDefaultPolicy5BBC6F68": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "elasticfilesystem:ClientMount",
              "Condition": {
                "StringEquals": {
                  "elasticfilesystem:AccessPointArn": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":elasticfilesystem:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId"
                        },
                        ":access-point/",
                        {
                          "Ref": "EfsAccessPointE419FED9"
                        }
                      ]
                    ]
                  }
                }
              },
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": "elasticfilesystem:ClientWrite",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":elasticfilesystem:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":file-system/",
                    {
                      "Ref": "Efs9E8BF36B"
                    }
                  ]
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "MyLambdaServiceRoleDefaultPolicy5BBC6F68",
        "Roles": [
          {
            "Ref": "MyLambdaServiceRole4539ECB6"
          }
        ]
      },
      "DependsOn": [
        "EfsEfsMountTarget195B2DD2E",
        "EfsEfsMountTarget2315C927F",
        "EfsEfsMountTarget36646B9A0"
      ]
    },
    "MyLambdaSecurityGroup1E71A818": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Automatic security group for Lambda Function awscdklambda1MyLambda82056696",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1"
          }
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38"
        }
      },
      "DependsOn": [
        "EfsEfsMountTarget195B2DD2E",
        "EfsEfsMountTarget2315C927F",
        "EfsEfsMountTarget36646B9A0"
      ]
    },
    "MyLambdaCCE802FB": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "ZipFile": "\nimport json\nimport os\nimport string\nimport random\nimport datetime\n\nMSG_FILE_PATH = '/mnt/msg/content'\n\ndef randomString(stringLength=10):\n  letters = string.ascii_lowercase\n  return ''.join(random.choice(letters) for i in range(stringLength))\n\ndef lambda_handler(event, context):\n  with open(MSG_FILE_PATH, 'a') as f:\n      f.write(f\"{datetime.datetime.utcnow():%Y-%m-%d-%H:%M:%S} \" + randomString(5) + ' ')\n\n  file = open(MSG_FILE_PATH, \"r\")\n  file_content = file.read()\n  file.close()\n\n  return {\n    'statusCode': 200,\n    'body': str(file_content)\n  }\n"
        },
        "Handler": "index.lambda_handler",
        "Role": {
          "Fn::GetAtt": [
            "MyLambdaServiceRole4539ECB6",
            "Arn"
          ]
        },
        "Runtime": "python3.7",
        "FileSystemConfigs": [
          {
            "LocalMountPath": "/mnt/msg",
            "Arn": {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition"
                  },
                  ":elasticfilesystem:",
                  {
                    "Ref": "AWS::Region"
                  },
                  ":",
                  {
                    "Ref": "AWS::AccountId"
                  },
                  ":access-point/",
                  {
                    "Ref": "EfsAccessPointE419FED9"
                  }
                ]
              ]
            }
          }
        ],
        "VpcConfig": {
          "SecurityGroupIds": [
            {
              "Fn::GetAtt": [
                "MyLambdaSecurityGroup1E71A818",
                "GroupId"
              ]
            }
          ],
          "SubnetIds": [
            {
              "Ref": "VpcPrivateSubnet1Subnet536B997A"
            },
            {
              "Ref": "VpcPrivateSubnet2Subnet3788AAA1"
            },
            {
              "Ref": "VpcPrivateSubnet3SubnetF258B56E"
            }
          ]
        }
      },
      "DependsOn": [
        "EfsEfsMountTarget195B2DD2E",
        "EfsEfsMountTarget2315C927F",
        "EfsEfsMountTarget36646B9A0",
        "MyLambdaServiceRoleDefaultPolicy5BBC6F68",
        "MyLambdaServiceRole4539ECB6"
      ]
    },
    "securityGroupfromawscdklambda1MyLambda2SecurityGroup7492F70D20498301D9D2": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "IpProtocol": "tcp",
        "Description": "from awscdklambda1MyLambda2SecurityGroup7492F70D:2049",
        "FromPort": 2049,
        "GroupId": {
          "Fn::GetAtt": [
            "EfsEfsSecurityGroup6F40EA3B",
            "GroupId"
          ]
        },
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "MyLambda2SecurityGroup3C507954",
            "GroupId"
          ]
        },
        "ToPort": 2049
      }
    },
    "MyLambda2ServiceRoleD09B370C": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          },
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole"
              ]
            ]
          }
        ]
      },
      "DependsOn": [
        "MyLambdaCCE802FB",
        "MyLambdaSecurityGroup1E71A818",
        "MyLambdaServiceRoleDefaultPolicy5BBC6F68",
        "MyLambdaServiceRole4539ECB6"
      ]
    },
    "MyLambda2ServiceRoleDefaultPolicy2BECE79D": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "elasticfilesystem:ClientMount",
              "Condition": {
                "StringEquals": {
                  "elasticfilesystem:AccessPointArn": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":elasticfilesystem:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId"
                        },
                        ":access-point/",
                        {
                          "Ref": "EfsAccessPointE419FED9"
                        }
                      ]
                    ]
                  }
                }
              },
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": "elasticfilesystem:ClientWrite",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":elasticfilesystem:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":file-system/",
                    {
                      "Ref": "Efs9E8BF36B"
                    }
                  ]
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "MyLambda2ServiceRoleDefaultPolicy2BECE79D",
        "Roles": [
          {
            "Ref": "MyLambda2ServiceRoleD09B370C"
          }
        ]
      },
      "DependsOn": [
        "MyLambdaCCE802FB",
        "MyLambdaSecurityGroup1E71A818",
        "MyLambdaServiceRoleDefaultPolicy5BBC6F68",
        "MyLambdaServiceRole4539ECB6"
      ]
    },
    "MyLambda2SecurityGroup3C507954": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Automatic security group for Lambda Function awscdklambda1MyLambda232FB7CD2",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1"
          }
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38"
        }
      },
      "DependsOn": [
        "MyLambdaCCE802FB",
        "MyLambdaSecurityGroup1E71A818",
        "MyLambdaServiceRoleDefaultPolicy5BBC6F68",
        "MyLambdaServiceRole4539ECB6"
      ]
    },
    "MyLambda2254B54D5": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "ZipFile": "\nimport json\nimport os\nimport string\nimport random\nimport datetime\n\nMSG_FILE_PATH = '/mnt/msg/content'\n\ndef randomString(stringLength=10):\n  letters = string.ascii_lowercase\n  return ''.join(random.choice(letters) for i in range(stringLength))\n\ndef lambda_handler(event, context):\n  with open(MSG_FILE_PATH, 'a') as f:\n      f.write(f\"{datetime.datetime.utcnow():%Y-%m-%d-%H:%M:%S} \" + randomString(5) + ' ')\n\n  file = open(MSG_FILE_PATH, \"r\")\n  file_content = file.read()\n  file.close()\n\n  return {\n    'statusCode': 200,\n    'body': str(file_content)\n  }\n"
        },
        "Handler": "index.lambda_handler",
        "Role": {
          "Fn::GetAtt": [
            "MyLambda2ServiceRoleD09B370C",
            "Arn"
          ]
        },
        "Runtime": "python3.7",
        "FileSystemConfigs": [
          {
            "LocalMountPath": "/mnt/msg",
            "Arn": {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition"
                  },
                  ":elasticfilesystem:",
                  {
                    "Ref": "AWS::Region"
                  },
                  ":",
                  {
                    "Ref": "AWS::AccountId"
                  },
                  ":access-point/",
                  {
                    "Ref": "EfsAccessPointE419FED9"
                  }
                ]
              ]
            }
          }
        ],
        "VpcConfig": {
          "SecurityGroupIds": [
            {
              "Fn::GetAtt": [
                "MyLambda2SecurityGroup3C507954",
                "GroupId"
              ]
            }
          ],
          "SubnetIds": [
            {
              "Ref": "VpcPrivateSubnet1Subnet536B997A"
            },
            {
              "Ref": "VpcPrivateSubnet2Subnet3788AAA1"
            },
            {
              "Ref": "VpcPrivateSubnet3SubnetF258B56E"
            }
          ]
        }
      },
      "DependsOn": [
        "MyLambdaCCE802FB",
        "MyLambdaSecurityGroup1E71A818",
        "MyLambdaServiceRoleDefaultPolicy5BBC6F68",
        "MyLambdaServiceRole4539ECB6",
        "MyLambda2ServiceRoleDefaultPolicy2BECE79D",
        "MyLambda2ServiceRoleD09B370C"
      ]
    }
  }
}