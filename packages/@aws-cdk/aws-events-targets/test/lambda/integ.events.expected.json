{
  "Resources": {
    "MyFuncServiceRole54065130": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      }
    },
    "MyFunc8A243A2C": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "ZipFile": "exports.handler = function handler(event, _context, callback) {\n    console.log(JSON.stringify(event, undefined, 2));\n    return callback();\n}"
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "MyFuncServiceRole54065130",
            "Arn"
          ]
        },
        "Runtime": "nodejs10.x"
      },
      "DependsOn": [
        "MyFuncServiceRole54065130"
      ]
    },
    "TimerBF6F831F": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "ScheduleExpression": "rate(1 minute)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "MyFunc8A243A2C",
                "Arn"
              ]
            },
            "Id": "Target0"
          }
        ]
      }
    },
    "TimerAllowEventRulelambdaeventsTimer0E6AB6D890F582F4": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "MyFunc8A243A2C",
            "Arn"
          ]
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Fn::GetAtt": [
            "TimerBF6F831F",
            "Arn"
          ]
        }
      }
    },
    "Timer2B6F162E9": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "ScheduleExpression": "rate(2 minutes)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "MyFunc8A243A2C",
                "Arn"
              ]
            },
            "Id": "Target0"
          }
        ]
      }
    },
    "Timer2AllowEventRulelambdaeventsTimer27F866A1E50659689": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "MyFunc8A243A2C",
            "Arn"
          ]
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Fn::GetAtt": [
            "Timer2B6F162E9",
            "Arn"
          ]
        }
      }
    }
  }
}