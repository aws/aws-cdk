{
  "Resources": {
    "MyFuncServiceRole54065130": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      }
    },
    "MyFunc8A243A2C": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "ZipFile": "exports.handler = function handler(event, _context, callback) {\n    console.log(JSON.stringify(event, undefined, 2));\n    return callback();\n}"
        },
        "Role": {
          "Fn::GetAtt": [
            "MyFuncServiceRole54065130",
            "Arn"
          ]
        },
        "Handler": "index.handler",
        "Runtime": "nodejs10.x"
      },
      "DependsOn": [
        "MyFuncServiceRole54065130"
      ]
    },
    "TimerBF6F831F": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "ScheduleExpression": "rate(1 minute)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "MyFunc8A243A2C",
                "Arn"
              ]
            },
            "Id": "Target0"
          }
        ]
      }
    },
    "TimerAllowEventRulelambdaeventsMyFunc910E580F793D7BBB": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "MyFunc8A243A2C",
            "Arn"
          ]
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Fn::GetAtt": [
            "TimerBF6F831F",
            "Arn"
          ]
        }
      }
    },
    "Timer2B6F162E9": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "ScheduleExpression": "rate(2 minutes)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "MyFunc8A243A2C",
                "Arn"
              ]
            },
            "Id": "Target0"
          }
        ]
      }
    },
    "Timer2AllowEventRulelambdaeventsMyFunc910E580FCCD9CDCE": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "MyFunc8A243A2C",
            "Arn"
          ]
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Fn::GetAtt": [
            "Timer2B6F162E9",
            "Arn"
          ]
        }
      }
    },
    "Timer30894E3BB": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "ScheduleExpression": "rate(2 minutes)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "MyFunc8A243A2C",
                "Arn"
              ]
            },
            "DeadLetterConfig": {
              "Arn": {
                "Fn::GetAtt": [
                  "Queue4A7E3555",
                  "Arn"
                ]
              }
            },
            "Id": "Target0",
            "RetryPolicy": {
              "MaximumEventAgeInSeconds": 7200,
              "MaximumRetryAttempts": 2
            }
          }
        ]
      }
    },
    "Timer3AllowEventRulelambdaeventsMyFunc910E580F79317F73": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "MyFunc8A243A2C",
            "Arn"
          ]
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Fn::GetAtt": [
            "Timer30894E3BB",
            "Arn"
          ]
        }
      }
    },
    "Queue4A7E3555": {
      "Type": "AWS::SQS::Queue",
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete"
    },
    "QueuePolicy25439813": {
      "Type": "AWS::SQS::QueuePolicy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "sqs:SendMessage",
              "Condition": {
                "ArnEquals": {
                  "aws:SourceArn": {
                    "Fn::GetAtt": [
                      "Timer30894E3BB",
                      "Arn"
                    ]
                  }
                }
              },
              "Effect": "Allow",
              "Principal": {
                "Service": "events.amazonaws.com"
              },
              "Resource": {
                "Fn::GetAtt": [
                  "Queue4A7E3555",
                  "Arn"
                ]
              },
              "Sid": "AllowEventRulelambdaeventsTimer3107B9373"
            }
          ],
          "Version": "2012-10-17"
        },
        "Queues": [
          {
            "Ref": "Queue4A7E3555"
          }
        ]
      }
    }
  }
}