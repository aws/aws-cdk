{
 "Resources": {
  "ConnectFunctionServiceRoleDD1EAA8C": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   }
  },
  "ConnectFunctionServiceRoleDefaultPolicy9C1FE0B3": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:PutItem",
        "dynamodb:Query",
        "dynamodb:Scan",
        "dynamodb:UpdateItem"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "WebSocketLogTable7F74AAC5",
          "Arn"
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "ConnectFunctionServiceRoleDefaultPolicy9C1FE0B3",
    "Roles": [
     {
      "Ref": "ConnectFunctionServiceRoleDD1EAA8C"
     }
    ]
   }
  },
  "ConnectFunction4D4B4BB5": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "2748a200bf25c8ee2c2898271226a9f7bdc386b8ce9669528731eb36c5ed9e28.zip"
    },
    "Environment": {
     "Variables": {
      "TABLE_NAME": "WebSocketConnections"
     }
    },
    "FunctionName": "process_connect_requests",
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "ConnectFunctionServiceRoleDD1EAA8C",
      "Arn"
     ]
    },
    "Runtime": "nodejs14.x",
    "Timeout": 5
   },
   "DependsOn": [
    "ConnectFunctionServiceRoleDefaultPolicy9C1FE0B3",
    "ConnectFunctionServiceRoleDD1EAA8C"
   ]
  },
  "DisconnectFunctionServiceRole49DB60AC": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   }
  },
  "DisconnectFunctionServiceRoleDefaultPolicyF5348EC3": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:PutItem",
        "dynamodb:Query",
        "dynamodb:Scan",
        "dynamodb:UpdateItem"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "WebSocketLogTable7F74AAC5",
          "Arn"
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "DisconnectFunctionServiceRoleDefaultPolicyF5348EC3",
    "Roles": [
     {
      "Ref": "DisconnectFunctionServiceRole49DB60AC"
     }
    ]
   }
  },
  "DisconnectFunction620A9610": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "e593848af17fee558eece2cd2719347804c0c141cff4f8ea1fb8556cf986b5a0.zip"
    },
    "Environment": {
     "Variables": {
      "TABLE_NAME": "WebSocketConnections"
     }
    },
    "FunctionName": "process_disconnect_requests",
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "DisconnectFunctionServiceRole49DB60AC",
      "Arn"
     ]
    },
    "Runtime": "nodejs14.x",
    "Timeout": 5
   },
   "DependsOn": [
    "DisconnectFunctionServiceRoleDefaultPolicyF5348EC3",
    "DisconnectFunctionServiceRole49DB60AC"
   ]
  },
  "WebSocketLogTable7F74AAC5": {
   "Type": "AWS::DynamoDB::Table",
   "Properties": {
    "AttributeDefinitions": [
     {
      "AttributeName": "ConnectionId",
      "AttributeType": "S"
     }
    ],
    "KeySchema": [
     {
      "AttributeName": "ConnectionId",
      "KeyType": "HASH"
     }
    ],
    "ProvisionedThroughput": {
     "ReadCapacityUnits": 5,
     "WriteCapacityUnits": 5
    },
    "TableName": "WebSocketConnections"
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  },
  "WebSocketAPIDA75128A": {
   "Type": "AWS::ApiGatewayV2::Api",
   "Properties": {
    "Name": "webSocket",
    "ProtocolType": "WEBSOCKET",
    "RouteSelectionExpression": "$request.body.action"
   }
  },
  "WebSocketAPIconnectRouteConnectIntegrationPermission1FECDE58": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "ConnectFunction4D4B4BB5",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "WebSocketAPIDA75128A"
       },
       "/*$connect"
      ]
     ]
    }
   }
  },
  "WebSocketAPIconnectRouteConnectIntegration2725692A": {
   "Type": "AWS::ApiGatewayV2::Integration",
   "Properties": {
    "ApiId": {
     "Ref": "WebSocketAPIDA75128A"
    },
    "IntegrationType": "AWS_PROXY",
    "IntegrationUri": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":apigateway:",
       {
        "Ref": "AWS::Region"
       },
       ":lambda:path/2015-03-31/functions/",
       {
        "Fn::GetAtt": [
         "ConnectFunction4D4B4BB5",
         "Arn"
        ]
       },
       "/invocations"
      ]
     ]
    }
   }
  },
  "WebSocketAPIconnectRoute4BD84FCF": {
   "Type": "AWS::ApiGatewayV2::Route",
   "Properties": {
    "ApiId": {
     "Ref": "WebSocketAPIDA75128A"
    },
    "AuthorizationType": "NONE",
    "RouteKey": "$connect",
    "Target": {
     "Fn::Join": [
      "",
      [
       "integrations/",
       {
        "Ref": "WebSocketAPIconnectRouteConnectIntegration2725692A"
       }
      ]
     ]
    }
   }
  },
  "WebSocketAPIdisconnectRouteDisconnectIntegrationPermission909CCDD8": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "DisconnectFunction620A9610",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "WebSocketAPIDA75128A"
       },
       "/*$disconnect"
      ]
     ]
    }
   }
  },
  "WebSocketAPIdisconnectRouteDisconnectIntegration317B9227": {
   "Type": "AWS::ApiGatewayV2::Integration",
   "Properties": {
    "ApiId": {
     "Ref": "WebSocketAPIDA75128A"
    },
    "IntegrationType": "AWS_PROXY",
    "IntegrationUri": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":apigateway:",
       {
        "Ref": "AWS::Region"
       },
       ":lambda:path/2015-03-31/functions/",
       {
        "Fn::GetAtt": [
         "DisconnectFunction620A9610",
         "Arn"
        ]
       },
       "/invocations"
      ]
     ]
    }
   }
  },
  "WebSocketAPIdisconnectRouteBC1A3C36": {
   "Type": "AWS::ApiGatewayV2::Route",
   "Properties": {
    "ApiId": {
     "Ref": "WebSocketAPIDA75128A"
    },
    "AuthorizationType": "NONE",
    "RouteKey": "$disconnect",
    "Target": {
     "Fn::Join": [
      "",
      [
       "integrations/",
       {
        "Ref": "WebSocketAPIdisconnectRouteDisconnectIntegration317B9227"
       }
      ]
     ]
    }
   }
  },
  "ProductionStage7933AAB2": {
   "Type": "AWS::ApiGatewayV2::Stage",
   "Properties": {
    "ApiId": {
     "Ref": "WebSocketAPIDA75128A"
    },
    "AutoDeploy": true,
    "StageName": "prod"
   }
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}