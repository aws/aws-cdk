{
 "Resources": {
  "testapigwv2addsubrouteintegration74634536": {
   "Type": "AWS::ApiGatewayV2::Api",
   "Properties": {
    "Name": "test-apigwv2-add-subroute-integration",
    "ProtocolType": "HTTP"
   }
  },
  "testapigwv2addsubrouteintegrationDefaultStage95CBB85F": {
   "Type": "AWS::ApiGatewayV2::Stage",
   "Properties": {
    "ApiId": {
     "Ref": "testapigwv2addsubrouteintegration74634536"
    },
    "AutoDeploy": true,
    "StageName": "$default"
   }
  },
  "testapigwv2addsubrouteintegrationGETfirstroutemylambdaintegration9AC16429": {
   "Type": "AWS::ApiGatewayV2::Integration",
   "Properties": {
    "ApiId": {
     "Ref": "testapigwv2addsubrouteintegration74634536"
    },
    "IntegrationType": "AWS_PROXY",
    "IntegrationUri": {
     "Fn::GetAtt": [
      "firstlambdafunction507195EE",
      "Arn"
     ]
    },
    "PayloadFormatVersion": "2.0"
   }
  },
  "testapigwv2addsubrouteintegrationGETfirstroutemylambdaintegrationPermissionA652DC1D": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "firstlambdafunction507195EE",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "testapigwv2addsubrouteintegration74634536"
       },
       "/*/*/firstroute"
      ]
     ]
    }
   }
  },
  "testapigwv2addsubrouteintegrationGETfirstrouteA8B45A0F": {
   "Type": "AWS::ApiGatewayV2::Route",
   "Properties": {
    "ApiId": {
     "Ref": "testapigwv2addsubrouteintegration74634536"
    },
    "AuthorizationType": "NONE",
    "RouteKey": "GET /firstroute",
    "Target": {
     "Fn::Join": [
      "",
      [
       "integrations/",
       {
        "Ref": "testapigwv2addsubrouteintegrationGETfirstroutemylambdaintegration9AC16429"
       }
      ]
     ]
    }
   }
  },
  "testapigwv2addsubrouteintegrationGETfirstroutesubroutemylambdaintegrationPermissionCCC6B203": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "firstlambdafunction507195EE",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "testapigwv2addsubrouteintegration74634536"
       },
       "/*/*/firstroute/subroute"
      ]
     ]
    }
   }
  },
  "testapigwv2addsubrouteintegrationGETfirstroutesubroute1247B83F": {
   "Type": "AWS::ApiGatewayV2::Route",
   "Properties": {
    "ApiId": {
     "Ref": "testapigwv2addsubrouteintegration74634536"
    },
    "AuthorizationType": "NONE",
    "RouteKey": "GET /firstroute/subroute",
    "Target": {
     "Fn::Join": [
      "",
      [
       "integrations/",
       {
        "Ref": "testapigwv2addsubrouteintegrationGETfirstroutemylambdaintegration9AC16429"
       }
      ]
     ]
    }
   }
  },
  "testapigwv2addsubrouteintegrationGETsecondroutemyreferencedlambdaintegration6C087A72": {
   "Type": "AWS::ApiGatewayV2::Integration",
   "Properties": {
    "ApiId": {
     "Ref": "testapigwv2addsubrouteintegration74634536"
    },
    "IntegrationType": "AWS_PROXY",
    "IntegrationUri": {
     "Fn::GetAtt": [
      "secondlambdafunction075D9D2B",
      "Arn"
     ]
    },
    "PayloadFormatVersion": "2.0"
   }
  },
  "testapigwv2addsubrouteintegrationGETsecondroutemyreferencedlambdaintegrationPermissionC21831D2": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "secondlambdafunction075D9D2B",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "testapigwv2addsubrouteintegration74634536"
       },
       "/*/*/secondroute"
      ]
     ]
    }
   }
  },
  "testapigwv2addsubrouteintegrationGETsecondroute4AF1E609": {
   "Type": "AWS::ApiGatewayV2::Route",
   "Properties": {
    "ApiId": {
     "Ref": "testapigwv2addsubrouteintegration74634536"
    },
    "AuthorizationType": "NONE",
    "RouteKey": "GET /secondroute",
    "Target": {
     "Fn::Join": [
      "",
      [
       "integrations/",
       {
        "Ref": "testapigwv2addsubrouteintegrationGETsecondroutemyreferencedlambdaintegration6C087A72"
       }
      ]
     ]
    }
   }
  },
  "testapigwv2addsubrouteintegrationGETsecondroutesubroutemyreferencedlambdaintegrationPermissionBC2FB67A": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "secondlambdafunction075D9D2B",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "testapigwv2addsubrouteintegration74634536"
       },
       "/*/*/secondroute/subroute"
      ]
     ]
    }
   }
  },
  "testapigwv2addsubrouteintegrationGETsecondroutesubrouteB60A5707": {
   "Type": "AWS::ApiGatewayV2::Route",
   "Properties": {
    "ApiId": {
     "Ref": "testapigwv2addsubrouteintegration74634536"
    },
    "AuthorizationType": "NONE",
    "RouteKey": "GET /secondroute/subroute",
    "Target": {
     "Fn::Join": [
      "",
      [
       "integrations/",
       {
        "Ref": "testapigwv2addsubrouteintegrationGETsecondroutemyreferencedlambdaintegration6C087A72"
       }
      ]
     ]
    }
   }
  },
  "testapigwv2addsubrouteintegrationGETthirdroutemyreferencedlambdaintegrationD0FF024E": {
   "Type": "AWS::ApiGatewayV2::Integration",
   "Properties": {
    "ApiId": {
     "Ref": "testapigwv2addsubrouteintegration74634536"
    },
    "IntegrationType": "AWS_PROXY",
    "IntegrationUri": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":lambda:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":function:third-lambda-function"
      ]
     ]
    },
    "PayloadFormatVersion": "2.0"
   }
  },
  "testapigwv2addsubrouteintegrationGETthirdroutemyreferencedlambdaintegrationPermission020AA386": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":lambda:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":function:third-lambda-function"
      ]
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "testapigwv2addsubrouteintegration74634536"
       },
       "/*/*/thirdroute"
      ]
     ]
    }
   }
  },
  "testapigwv2addsubrouteintegrationGETthirdroute55217764": {
   "Type": "AWS::ApiGatewayV2::Route",
   "Properties": {
    "ApiId": {
     "Ref": "testapigwv2addsubrouteintegration74634536"
    },
    "AuthorizationType": "NONE",
    "RouteKey": "GET /thirdroute",
    "Target": {
     "Fn::Join": [
      "",
      [
       "integrations/",
       {
        "Ref": "testapigwv2addsubrouteintegrationGETthirdroutemyreferencedlambdaintegrationD0FF024E"
       }
      ]
     ]
    }
   }
  },
  "testapigwv2addsubrouteintegrationGETthirdroutesubroutemyreferencedlambdaintegrationPermissionDE3E4E26": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":lambda:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":function:third-lambda-function"
      ]
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "testapigwv2addsubrouteintegration74634536"
       },
       "/*/*/thirdroute/subroute"
      ]
     ]
    }
   }
  },
  "testapigwv2addsubrouteintegrationGETthirdroutesubroute4E0397C0": {
   "Type": "AWS::ApiGatewayV2::Route",
   "Properties": {
    "ApiId": {
     "Ref": "testapigwv2addsubrouteintegration74634536"
    },
    "AuthorizationType": "NONE",
    "RouteKey": "GET /thirdroute/subroute",
    "Target": {
     "Fn::Join": [
      "",
      [
       "integrations/",
       {
        "Ref": "testapigwv2addsubrouteintegrationGETthirdroutemyreferencedlambdaintegrationD0FF024E"
       }
      ]
     ]
    }
   }
  },
  "firstlambdafunctionServiceRoleC4FD6C93": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   }
  },
  "firstlambdafunction507195EE": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "ZipFile": "exports.handler = async function(event, context) { return { statusCode: 200, body: 'success-hit-first-lambda' }; };"
    },
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "firstlambdafunctionServiceRoleC4FD6C93",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x"
   },
   "DependsOn": [
    "firstlambdafunctionServiceRoleC4FD6C93"
   ]
  },
  "secondlambdafunctionServiceRole23FEE383": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   }
  },
  "secondlambdafunction075D9D2B": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "ZipFile": "exports.handler = async function(event, context) { return { statusCode: 200, body: 'success-hit-second-lambda' }; };"
    },
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "secondlambdafunctionServiceRole23FEE383",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x"
   },
   "DependsOn": [
    "secondlambdafunctionServiceRole23FEE383"
   ]
  },
  "thirdlambdafunctionServiceRole1CA82110": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   }
  },
  "thirdlambdafunctionF08420CD": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "ZipFile": "exports.handler = async function(event, context) { return { statusCode: 200, body: 'success-hit-third-lambda' }; };"
    },
    "FunctionName": "third-lambda-function",
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "thirdlambdafunctionServiceRole1CA82110",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x"
   },
   "DependsOn": [
    "thirdlambdafunctionServiceRole1CA82110"
   ]
  }
 },
 "Outputs": {
  "ExportsOutputFnGetAtttestapigwv2addsubrouteintegration74634536ApiEndpoint0B440CAD": {
   "Value": {
    "Fn::GetAtt": [
     "testapigwv2addsubrouteintegration74634536",
     "ApiEndpoint"
    ]
   },
   "Export": {
    "Name": "integ-lambda-add-subroute-integration:ExportsOutputFnGetAtttestapigwv2addsubrouteintegration74634536ApiEndpoint0B440CAD"
   }
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}