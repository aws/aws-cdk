{
 "Resources": {
  "PoolD3F588B8": {
   "Type": "AWS::Cognito::UserPool",
   "Properties": {
    "AccountRecoverySetting": {
     "RecoveryMechanisms": [
      {
       "Name": "verified_phone_number",
       "Priority": 1
      },
      {
       "Name": "verified_email",
       "Priority": 2
      }
     ]
    },
    "AdminCreateUserConfig": {
     "AllowAdminCreateUserOnly": true
    },
    "EmailVerificationMessage": "The verification code to your new account is {####}",
    "EmailVerificationSubject": "Verify your new account",
    "SmsVerificationMessage": "The verification code to your new account is {####}",
    "UserPoolName": "myPool",
    "VerificationMessageTemplate": {
     "DefaultEmailOption": "CONFIRM_WITH_CODE",
     "EmailMessage": "The verification code to your new account is {####}",
     "EmailSubject": "Verify your new account",
     "SmsMessage": "The verification code to your new account is {####}"
    }
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain"
  },
  "ApiF70053CD": {
   "Type": "AWS::AppSync::GraphQLApi",
   "Properties": {
    "AuthenticationType": "AMAZON_COGNITO_USER_POOLS",
    "Name": "demoapi",
    "AdditionalAuthenticationProviders": [
     {
      "AuthenticationType": "API_KEY"
     }
    ],
    "UserPoolConfig": {
     "AwsRegion": {
      "Ref": "AWS::Region"
     },
     "DefaultAction": "ALLOW",
     "UserPoolId": {
      "Ref": "PoolD3F588B8"
     }
    }
   }
  },
  "ApiSchema510EECD7": {
   "Type": "AWS::AppSync::GraphQLSchema",
   "Properties": {
    "ApiId": {
     "Fn::GetAtt": [
      "ApiF70053CD",
      "ApiId"
     ]
    },
    "Definition": "type ServiceVersion @aws_api_key {\n  version: String!\n}\n\ntype Customer @aws_api_key {\n  id: String!\n  name: String!\n}\n\ninput SaveCustomerInput {\n  name: String!\n}\n\ntype Order @aws_api_key {\n  customer: String!\n  order: String!\n}\n\ntype Payment @aws_api_key {\n  id: String!\n  amount: String!\n}\n\ninput PaymentInput {\n  amount: String!\n}\n\ntype Query @aws_api_key {\n  getServiceVersion: ServiceVersion\n  getCustomers: [Customer]\n  getCustomersNotConsistent: [Customer]\n  getCustomersConsistent: [Customer]\n  getCustomer(id: String): Customer\n  getCustomerNotConsistent(id: String): Customer\n  getCustomerConsistent(id: String): Customer\n  getCustomerOrdersEq(customer: String): Order\n  getCustomerOrdersLt(customer: String): Order\n  getCustomerOrdersLe(customer: String): Order\n  getCustomerOrdersGt(customer: String): Order\n  getCustomerOrdersGe(customer: String): Order\n  getCustomerOrdersNotConsistentEq(customer: String): Order\n  getCustomerOrdersNotConsistentLt(customer: String): Order\n  getCustomerOrdersNotConsistentLe(customer: String): Order\n  getCustomerOrdersNotConsistentGt(customer: String): Order\n  getCustomerOrdersNotConsistentGe(customer: String): Order\n  getCustomerOrdersConsistentEq(customer: String): Order\n  getCustomerOrdersConsistentLt(customer: String): Order\n  getCustomerOrdersConsistentLe(customer: String): Order\n  getCustomerOrdersConsistentGt(customer: String): Order\n  getCustomerOrdersConsistentGe(customer: String): Order\n  getCustomerOrdersFilter(customer: String, order: String): Order\n  getCustomerOrdersBetween(customer: String, order1: String, order2: String): Order\n  getOrderCustomersEq(order: String): [Customer]\n  getOrderCustomersLt(order: String): [Customer]\n  getOrderCustomersLe(order: String): [Customer]\n  getOrderCustomersGt(order: String): [Customer]\n  getOrderCustomersGe(order: String): [Customer]\n  getOrderCustomersNotConsistentEq(order: String): [Customer]\n  getOrderCustomersNotConsistentLt(order: String): [Customer]\n  getOrderCustomersNotConsistentLe(order: String): [Customer]\n  getOrderCustomersNotConsistentGt(order: String): [Customer]\n  getOrderCustomersNotConsistentGe(order: String): [Customer]\n  getOrderCustomersConsistentEq(order: String): [Customer]\n  getOrderCustomersConsistentLt(order: String): [Customer]\n  getOrderCustomersConsistentLe(order: String): [Customer]\n  getOrderCustomersConsistentGt(order: String): [Customer]\n  getOrderCustomersConsistentGe(order: String): [Customer]\n  getOrderCustomersFilter(order: String, customer: String): [Customer]\n  getOrderCustomersBetween(order: String, customer1: String, customer2: String): [Customer]\n  getPayment(id: String): Payment\n  getPaymentConsistent(id: String): Payment\n}\n\ninput FirstOrderInput {\n  product: String!\n  quantity: Int!\n}\n\ntype Mutation @aws_api_key {\n  addCustomer(customer: SaveCustomerInput!): Customer\n  saveCustomer(id: String!, customer: SaveCustomerInput!): Customer\n  removeCustomer(id: String!): Customer\n  saveCustomerWithFirstOrder(customer: SaveCustomerInput!, order: FirstOrderInput!, referral: String): Order\n  savePayment(payment: PaymentInput!): Payment\n  doPostOnAws: String!\n}\n"
   }
  },
  "ApiDefaultApiKeyF991C37B": {
   "Type": "AWS::AppSync::ApiKey",
   "Properties": {
    "ApiId": {
     "Fn::GetAtt": [
      "ApiF70053CD",
      "ApiId"
     ]
    }
   },
   "DependsOn": [
    "ApiSchema510EECD7"
   ]
  },
  "Apinone1F55F3F3": {
   "Type": "AWS::AppSync::DataSource",
   "Properties": {
    "ApiId": {
     "Fn::GetAtt": [
      "ApiF70053CD",
      "ApiId"
     ]
    },
    "Name": "None",
    "Type": "NONE"
   }
  },
  "ApiQuerygetServiceVersionDA048589": {
   "Type": "AWS::AppSync::Resolver",
   "Properties": {
    "ApiId": {
     "Fn::GetAtt": [
      "ApiF70053CD",
      "ApiId"
     ]
    },
    "FieldName": "getServiceVersion",
    "TypeName": "Query",
    "DataSourceName": "None",
    "Kind": "UNIT",
    "RequestMappingTemplate": "{\"version\":\"2017-02-28\"}",
    "ResponseMappingTemplate": "{\"version\":\"v1\"}"
   },
   "DependsOn": [
    "Apinone1F55F3F3",
    "ApiSchema510EECD7"
   ]
  },
  "ApicustomerDsServiceRole76CAD539": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "appsync.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    }
   }
  },
  "ApicustomerDsServiceRoleDefaultPolicyF8E72AE7": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:PutItem",
        "dynamodb:Query",
        "dynamodb:Scan",
        "dynamodb:UpdateItem"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "CustomerTable260DCC08",
          "Arn"
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "ApicustomerDsServiceRoleDefaultPolicyF8E72AE7",
    "Roles": [
     {
      "Ref": "ApicustomerDsServiceRole76CAD539"
     }
    ]
   }
  },
  "ApicustomerDsFE73DAC5": {
   "Type": "AWS::AppSync::DataSource",
   "Properties": {
    "ApiId": {
     "Fn::GetAtt": [
      "ApiF70053CD",
      "ApiId"
     ]
    },
    "Name": "Customer",
    "Type": "AMAZON_DYNAMODB",
    "DynamoDBConfig": {
     "AwsRegion": {
      "Ref": "AWS::Region"
     },
     "TableName": {
      "Ref": "CustomerTable260DCC08"
     }
    },
    "ServiceRoleArn": {
     "Fn::GetAtt": [
      "ApicustomerDsServiceRole76CAD539",
      "Arn"
     ]
    }
   }
  },
  "ApiorderDsServiceRoleCC2040C0": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "appsync.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    }
   }
  },
  "ApiorderDsServiceRoleDefaultPolicy3315FCF4": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:PutItem",
        "dynamodb:Query",
        "dynamodb:Scan",
        "dynamodb:UpdateItem"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "OrderTable416EB896",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "OrderTable416EB896",
             "Arn"
            ]
           },
           "/index/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "ApiorderDsServiceRoleDefaultPolicy3315FCF4",
    "Roles": [
     {
      "Ref": "ApiorderDsServiceRoleCC2040C0"
     }
    ]
   }
  },
  "ApiorderDsB50C8AAD": {
   "Type": "AWS::AppSync::DataSource",
   "Properties": {
    "ApiId": {
     "Fn::GetAtt": [
      "ApiF70053CD",
      "ApiId"
     ]
    },
    "Name": "Order",
    "Type": "AMAZON_DYNAMODB",
    "DynamoDBConfig": {
     "AwsRegion": {
      "Ref": "AWS::Region"
     },
     "TableName": {
      "Ref": "OrderTable416EB896"
     }
    },
    "ServiceRoleArn": {
     "Fn::GetAtt": [
      "ApiorderDsServiceRoleCC2040C0",
      "Arn"
     ]
    }
   }
  },
  "ApipaymentDsServiceRole0DAC58D6": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "appsync.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    }
   }
  },
  "ApipaymentDsServiceRoleDefaultPolicy528E42B0": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:PutItem",
        "dynamodb:Query",
        "dynamodb:Scan",
        "dynamodb:UpdateItem"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":dynamodb:",
           {
            "Ref": "AWS::Region"
           },
           ":",
           {
            "Ref": "AWS::AccountId"
           },
           ":table/PaymentTable"
          ]
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "ApipaymentDsServiceRoleDefaultPolicy528E42B0",
    "Roles": [
     {
      "Ref": "ApipaymentDsServiceRole0DAC58D6"
     }
    ]
   }
  },
  "ApipaymentDs95C7AC36": {
   "Type": "AWS::AppSync::DataSource",
   "Properties": {
    "ApiId": {
     "Fn::GetAtt": [
      "ApiF70053CD",
      "ApiId"
     ]
    },
    "Name": "Payment",
    "Type": "AMAZON_DYNAMODB",
    "DynamoDBConfig": {
     "AwsRegion": {
      "Ref": "AWS::Region"
     },
     "TableName": "PaymentTable"
    },
    "ServiceRoleArn": {
     "Fn::GetAtt": [
      "ApipaymentDsServiceRole0DAC58D6",
      "Arn"
     ]
    }
   }
  },
  "ApiQueryGetCustomersAD7B06C3": {
   "Type": "AWS::AppSync::Resolver",
   "Properties": {
    "ApiId": {
     "Fn::GetAtt": [
      "ApiF70053CD",
      "ApiId"
     ]
    },
    "FieldName": "getCustomers",
    "TypeName": "Query",
    "DataSourceName": "Customer",
    "Kind": "UNIT",
    "RequestMappingTemplate": "{\"version\" : \"2017-02-28\", \"operation\" : \"Scan\", \"consistentRead\": false}",
    "ResponseMappingTemplate": "$util.toJson($ctx.result.items)"
   },
   "DependsOn": [
    "ApicustomerDsFE73DAC5",
    "ApiSchema510EECD7"
   ]
  },
  "ApiQueryGetCustomer5EC5BDE8": {
   "Type": "AWS::AppSync::Resolver",
   "Properties": {
    "ApiId": {
     "Fn::GetAtt": [
      "ApiF70053CD",
      "ApiId"
     ]
    },
    "FieldName": "getCustomer",
    "TypeName": "Query",
    "DataSourceName": "Customer",
    "Kind": "UNIT",
    "RequestMappingTemplate": "{\"version\": \"2017-02-28\", \"operation\": \"GetItem\", \"consistentRead\": false, \"key\": {\"id\": $util.dynamodb.toDynamoDBJson($ctx.args.id)}}",
    "ResponseMappingTemplate": "$util.toJson($ctx.result)"
   },
   "DependsOn": [
    "ApicustomerDsFE73DAC5",
    "ApiSchema510EECD7"
   ]
  },
  "ApiQueryGetCusomtersNotConsistent851627D3": {
   "Type": "AWS::AppSync::Resolver",
   "Properties": {
    "ApiId": {
     "Fn::GetAtt": [
      "ApiF70053CD",
      "ApiId"
     ]
    },
    "FieldName": "getCustomersNotConsistent",
    "TypeName": "Query",
    "DataSourceName": "Customer",
    "Kind": "UNIT",
    "RequestMappingTemplate": "{\"version\" : \"2017-02-28\", \"operation\" : \"Scan\", \"consistentRead\": false}",
    "ResponseMappingTemplate": "$util.toJson($ctx.result.items)"
   },
   "DependsOn": [
    "ApicustomerDsFE73DAC5",
    "ApiSchema510EECD7"
   ]
  },
  "ApiQueryGetCustomerNotConsistent090667B1": {
   "Type": "AWS::AppSync::Resolver",
   "Properties": {
    "ApiId": {
     "Fn::GetAtt": [
      "ApiF70053CD",
      "ApiId"
     ]
    },
    "FieldName": "getCustomerNotConsistent",
    "TypeName": "Query",
    "DataSourceName": "Customer",
    "Kind": "UNIT",
    "RequestMappingTemplate": "{\"version\": \"2017-02-28\", \"operation\": \"GetItem\", \"consistentRead\": false, \"key\": {\"id\": $util.dynamodb.toDynamoDBJson($ctx.args.id)}}",
    "ResponseMappingTemplate": "$util.toJson($ctx.result)"
   },
   "DependsOn": [
    "ApicustomerDsFE73DAC5",
    "ApiSchema510EECD7"
   ]
  },
  "ApiQueryGetCustomersConsistentCBD09D98": {
   "Type": "AWS::AppSync::Resolver",
   "Properties": {
    "ApiId": {
     "Fn::GetAtt": [
      "ApiF70053CD",
      "ApiId"
     ]
    },
    "FieldName": "getCustomersConsistent",
    "TypeName": "Query",
    "DataSourceName": "Customer",
    "Kind": "UNIT",
    "RequestMappingTemplate": "{\"version\" : \"2017-02-28\", \"operation\" : \"Scan\", \"consistentRead\": true}",
    "ResponseMappingTemplate": "$util.toJson($ctx.result.items)"
   },
   "DependsOn": [
    "ApicustomerDsFE73DAC5",
    "ApiSchema510EECD7"
   ]
  },
  "ApiQueryGetCustomerConsistentAE365D03": {
   "Type": "AWS::AppSync::Resolver",
   "Properties": {
    "ApiId": {
     "Fn::GetAtt": [
      "ApiF70053CD",
      "ApiId"
     ]
    },
    "FieldName": "getCustomerConsistent",
    "TypeName": "Query",
    "DataSourceName": "Customer",
    "Kind": "UNIT",
    "RequestMappingTemplate": "{\"version\": \"2017-02-28\", \"operation\": \"GetItem\", \"consistentRead\": true, \"key\": {\"id\": $util.dynamodb.toDynamoDBJson($ctx.args.id)}}",
    "ResponseMappingTemplate": "$util.toJson($ctx.result)"
   },
   "DependsOn": [
    "ApicustomerDsFE73DAC5",
    "ApiSchema510EECD7"
   ]
  },
  "ApiMutationAddCustomer4E43DA9D": {
   "Type": "AWS::AppSync::Resolver",
   "Properties": {
    "ApiId": {
     "Fn::GetAtt": [
      "ApiF70053CD",
      "ApiId"
     ]
    },
    "FieldName": "addCustomer",
    "TypeName": "Mutation",
    "DataSourceName": "Customer",
    "Kind": "UNIT",
    "RequestMappingTemplate": "\n      #set($input = $ctx.args.customer)\n      \n      {\n        \"version\": \"2017-02-28\",\n        \"operation\": \"PutItem\",\n        \"key\" : {\n      \"id\" : $util.dynamodb.toDynamoDBJson($util.autoId())\n    },\n        \"attributeValues\": $util.dynamodb.toMapValuesJson($input)\n      }",
    "ResponseMappingTemplate": "$util.toJson($ctx.result)"
   },
   "DependsOn": [
    "ApicustomerDsFE73DAC5",
    "ApiSchema510EECD7"
   ]
  },
  "ApiMutationSaveCustomer9E1B960E": {
   "Type": "AWS::AppSync::Resolver",
   "Properties": {
    "ApiId": {
     "Fn::GetAtt": [
      "ApiF70053CD",
      "ApiId"
     ]
    },
    "FieldName": "saveCustomer",
    "TypeName": "Mutation",
    "DataSourceName": "Customer",
    "Kind": "UNIT",
    "RequestMappingTemplate": "\n      #set($input = $ctx.args.customer)\n      \n      {\n        \"version\": \"2017-02-28\",\n        \"operation\": \"PutItem\",\n        \"key\" : {\n      \"id\" : $util.dynamodb.toDynamoDBJson($ctx.args.id)\n    },\n        \"attributeValues\": $util.dynamodb.toMapValuesJson($input)\n      }",
    "ResponseMappingTemplate": "$util.toJson($ctx.result)"
   },
   "DependsOn": [
    "ApicustomerDsFE73DAC5",
    "ApiSchema510EECD7"
   ]
  },
  "ApiMutationSaveCustomerWithFirstOrder9E0E3BDE": {
   "Type": "AWS::AppSync::Resolver",
   "Properties": {
    "ApiId": {
     "Fn::GetAtt": [
      "ApiF70053CD",
      "ApiId"
     ]
    },
    "FieldName": "saveCustomerWithFirstOrder",
    "TypeName": "Mutation",
    "DataSourceName": "Customer",
    "Kind": "UNIT",
    "RequestMappingTemplate": "\n      #set($input = $ctx.args.order)\n      $util.qr($input.put(\"referral\", referral))\n      {\n        \"version\": \"2017-02-28\",\n        \"operation\": \"PutItem\",\n        \"key\" : {\n      \"order\" : $util.dynamodb.toDynamoDBJson($util.autoId()),\"customer\" : $util.dynamodb.toDynamoDBJson($ctx.args.customer.id)\n    },\n        \"attributeValues\": $util.dynamodb.toMapValuesJson($input)\n      }",
    "ResponseMappingTemplate": "$util.toJson($ctx.result)"
   },
   "DependsOn": [
    "ApicustomerDsFE73DAC5",
    "ApiSchema510EECD7"
   ]
  },
  "ApiMutationRemoveCustomer9CB404E8": {
   "Type": "AWS::AppSync::Resolver",
   "Properties": {
    "ApiId": {
     "Fn::GetAtt": [
      "ApiF70053CD",
      "ApiId"
     ]
    },
    "FieldName": "removeCustomer",
    "TypeName": "Mutation",
    "DataSourceName": "Customer",
    "Kind": "UNIT",
    "RequestMappingTemplate": "{\"version\": \"2017-02-28\", \"operation\": \"DeleteItem\", \"key\": {\"id\": $util.dynamodb.toDynamoDBJson($ctx.args.id)}}",
    "ResponseMappingTemplate": "$util.toJson($ctx.result)"
   },
   "DependsOn": [
    "ApicustomerDsFE73DAC5",
    "ApiSchema510EECD7"
   ]
  },
  "ApiQueryGetCustomerOrdersEq8D77201B": {
   "Type": "AWS::AppSync::Resolver",
   "Properties": {
    "ApiId": {
     "Fn::GetAtt": [
      "ApiF70053CD",
      "ApiId"
     ]
    },
    "FieldName": "getCustomerOrdersEq",
    "TypeName": "Query",
    "DataSourceName": "Order",
    "Kind": "UNIT",
    "RequestMappingTemplate": "{\"version\" : \"2017-02-28\", \"operation\" : \"Query\",  \"consistentRead\": false, \"query\" : {\n              \"expression\" : \"#customer = :customer\",\n              \"expressionNames\" : {\n                \"#customer\" : \"customer\"\n              },\n              \"expressionValues\" : {\n                \":customer\" : $util.dynamodb.toDynamoDBJson($ctx.args.customer)\n              }\n            }}",
    "ResponseMappingTemplate": "$util.toJson($ctx.result.items)"
   },
   "DependsOn": [
    "ApiorderDsB50C8AAD",
    "ApiSchema510EECD7"
   ]
  },
  "ApiQueryGetOrderCustomersEq37D9DEE0": {
   "Type": "AWS::AppSync::Resolver",
   "Properties": {
    "ApiId": {
     "Fn::GetAtt": [
      "ApiF70053CD",
      "ApiId"
     ]
    },
    "FieldName": "getOrderCustomersEq",
    "TypeName": "Query",
    "DataSourceName": "Order",
    "Kind": "UNIT",
    "RequestMappingTemplate": "{\"version\" : \"2017-02-28\", \"operation\" : \"Query\",  \"consistentRead\": false, \"index\" : \"orderIndex\", \"query\" : {\n              \"expression\" : \"#order = :order\",\n              \"expressionNames\" : {\n                \"#order\" : \"order\"\n              },\n              \"expressionValues\" : {\n                \":order\" : $util.dynamodb.toDynamoDBJson($ctx.args.order)\n              }\n            }}",
    "ResponseMappingTemplate": "$util.toJson($ctx.result.items)"
   },
   "DependsOn": [
    "ApiorderDsB50C8AAD",
    "ApiSchema510EECD7"
   ]
  },
  "ApiQueryGetCustomerOrdersLt0C55634C": {
   "Type": "AWS::AppSync::Resolver",
   "Properties": {
    "ApiId": {
     "Fn::GetAtt": [
      "ApiF70053CD",
      "ApiId"
     ]
    },
    "FieldName": "getCustomerOrdersLt",
    "TypeName": "Query",
    "DataSourceName": "Order",
    "Kind": "UNIT",
    "RequestMappingTemplate": "{\"version\" : \"2017-02-28\", \"operation\" : \"Query\",  \"consistentRead\": false, \"query\" : {\n              \"expression\" : \"#customer < :customer\",\n              \"expressionNames\" : {\n                \"#customer\" : \"customer\"\n              },\n              \"expressionValues\" : {\n                \":customer\" : $util.dynamodb.toDynamoDBJson($ctx.args.customer)\n              }\n            }}",
    "ResponseMappingTemplate": "$util.toJson($ctx.result.items)"
   },
   "DependsOn": [
    "ApiorderDsB50C8AAD",
    "ApiSchema510EECD7"
   ]
  },
  "ApiQueryGetOrderCustomersLt4AB5E0F8": {
   "Type": "AWS::AppSync::Resolver",
   "Properties": {
    "ApiId": {
     "Fn::GetAtt": [
      "ApiF70053CD",
      "ApiId"
     ]
    },
    "FieldName": "getOrderCustomersLt",
    "TypeName": "Query",
    "DataSourceName": "Order",
    "Kind": "UNIT",
    "RequestMappingTemplate": "{\"version\" : \"2017-02-28\", \"operation\" : \"Query\",  \"consistentRead\": false, \"index\" : \"orderIndex\", \"query\" : {\n              \"expression\" : \"#order < :order\",\n              \"expressionNames\" : {\n                \"#order\" : \"order\"\n              },\n              \"expressionValues\" : {\n                \":order\" : $util.dynamodb.toDynamoDBJson($ctx.args.order)\n              }\n            }}",
    "ResponseMappingTemplate": "$util.toJson($ctx.result.items)"
   },
   "DependsOn": [
    "ApiorderDsB50C8AAD",
    "ApiSchema510EECD7"
   ]
  },
  "ApiQueryGetCustomerOrdersLe15936B5B": {
   "Type": "AWS::AppSync::Resolver",
   "Properties": {
    "ApiId": {
     "Fn::GetAtt": [
      "ApiF70053CD",
      "ApiId"
     ]
    },
    "FieldName": "getCustomerOrdersLe",
    "TypeName": "Query",
    "DataSourceName": "Order",
    "Kind": "UNIT",
    "RequestMappingTemplate": "{\"version\" : \"2017-02-28\", \"operation\" : \"Query\",  \"consistentRead\": false, \"query\" : {\n              \"expression\" : \"#customer <= :customer\",\n              \"expressionNames\" : {\n                \"#customer\" : \"customer\"\n              },\n              \"expressionValues\" : {\n                \":customer\" : $util.dynamodb.toDynamoDBJson($ctx.args.customer)\n              }\n            }}",
    "ResponseMappingTemplate": "$util.toJson($ctx.result.items)"
   },
   "DependsOn": [
    "ApiorderDsB50C8AAD",
    "ApiSchema510EECD7"
   ]
  },
  "ApiQueryGetOrderCustomersLeE726F374": {
   "Type": "AWS::AppSync::Resolver",
   "Properties": {
    "ApiId": {
     "Fn::GetAtt": [
      "ApiF70053CD",
      "ApiId"
     ]
    },
    "FieldName": "getOrderCustomersLe",
    "TypeName": "Query",
    "DataSourceName": "Order",
    "Kind": "UNIT",
    "RequestMappingTemplate": "{\"version\" : \"2017-02-28\", \"operation\" : \"Query\",  \"consistentRead\": false, \"index\" : \"orderIndex\", \"query\" : {\n              \"expression\" : \"#order <= :order\",\n              \"expressionNames\" : {\n                \"#order\" : \"order\"\n              },\n              \"expressionValues\" : {\n                \":order\" : $util.dynamodb.toDynamoDBJson($ctx.args.order)\n              }\n            }}",
    "ResponseMappingTemplate": "$util.toJson($ctx.result.items)"
   },
   "DependsOn": [
    "ApiorderDsB50C8AAD",
    "ApiSchema510EECD7"
   ]
  },
  "ApiQueryGetCustomerOrdersGtAABE2A40": {
   "Type": "AWS::AppSync::Resolver",
   "Properties": {
    "ApiId": {
     "Fn::GetAtt": [
      "ApiF70053CD",
      "ApiId"
     ]
    },
    "FieldName": "getCustomerOrdersGt",
    "TypeName": "Query",
    "DataSourceName": "Order",
    "Kind": "UNIT",
    "RequestMappingTemplate": "{\"version\" : \"2017-02-28\", \"operation\" : \"Query\",  \"consistentRead\": false, \"query\" : {\n              \"expression\" : \"#customer > :customer\",\n              \"expressionNames\" : {\n                \"#customer\" : \"customer\"\n              },\n              \"expressionValues\" : {\n                \":customer\" : $util.dynamodb.toDynamoDBJson($ctx.args.customer)\n              }\n            }}",
    "ResponseMappingTemplate": "$util.toJson($ctx.result.items)"
   },
   "DependsOn": [
    "ApiorderDsB50C8AAD",
    "ApiSchema510EECD7"
   ]
  },
  "ApiQueryGetOrderCustomersGtB37E8428": {
   "Type": "AWS::AppSync::Resolver",
   "Properties": {
    "ApiId": {
     "Fn::GetAtt": [
      "ApiF70053CD",
      "ApiId"
     ]
    },
    "FieldName": "getOrderCustomersGt",
    "TypeName": "Query",
    "DataSourceName": "Order",
    "Kind": "UNIT",
    "RequestMappingTemplate": "{\"version\" : \"2017-02-28\", \"operation\" : \"Query\",  \"consistentRead\": false, \"index\" : \"orderIndex\", \"query\" : {\n              \"expression\" : \"#order > :order\",\n              \"expressionNames\" : {\n                \"#order\" : \"order\"\n              },\n              \"expressionValues\" : {\n                \":order\" : $util.dynamodb.toDynamoDBJson($ctx.args.order)\n              }\n            }}",
    "ResponseMappingTemplate": "$util.toJson($ctx.result.items)"
   },
   "DependsOn": [
    "ApiorderDsB50C8AAD",
    "ApiSchema510EECD7"
   ]
  },
  "ApiQueryGetCustomerOrdersGeD1854D76": {
   "Type": "AWS::AppSync::Resolver",
   "Properties": {
    "ApiId": {
     "Fn::GetAtt": [
      "ApiF70053CD",
      "ApiId"
     ]
    },
    "FieldName": "getCustomerOrdersGe",
    "TypeName": "Query",
    "DataSourceName": "Order",
    "Kind": "UNIT",
    "RequestMappingTemplate": "{\"version\" : \"2017-02-28\", \"operation\" : \"Query\",  \"consistentRead\": false, \"query\" : {\n              \"expression\" : \"#customer >= :customer\",\n              \"expressionNames\" : {\n                \"#customer\" : \"customer\"\n              },\n              \"expressionValues\" : {\n                \":customer\" : $util.dynamodb.toDynamoDBJson($ctx.args.customer)\n              }\n            }}",
    "ResponseMappingTemplate": "$util.toJson($ctx.result.items)"
   },
   "DependsOn": [
    "ApiorderDsB50C8AAD",
    "ApiSchema510EECD7"
   ]
  },
  "ApiQueryGetOrderCustomersGe1790C495": {
   "Type": "AWS::AppSync::Resolver",
   "Properties": {
    "ApiId": {
     "Fn::GetAtt": [
      "ApiF70053CD",
      "ApiId"
     ]
    },
    "FieldName": "getOrderCustomersGe",
    "TypeName": "Query",
    "DataSourceName": "Order",
    "Kind": "UNIT",
    "RequestMappingTemplate": "{\"version\" : \"2017-02-28\", \"operation\" : \"Query\",  \"consistentRead\": false, \"index\" : \"orderIndex\", \"query\" : {\n              \"expression\" : \"#order >= :order\",\n              \"expressionNames\" : {\n                \"#order\" : \"order\"\n              },\n              \"expressionValues\" : {\n                \":order\" : $util.dynamodb.toDynamoDBJson($ctx.args.order)\n              }\n            }}",
    "ResponseMappingTemplate": "$util.toJson($ctx.result.items)"
   },
   "DependsOn": [
    "ApiorderDsB50C8AAD",
    "ApiSchema510EECD7"
   ]
  },
  "ApiQueryGetCustomerOrdersNotConsistentEqD733058C": {
   "Type": "AWS::AppSync::Resolver",
   "Properties": {
    "ApiId": {
     "Fn::GetAtt": [
      "ApiF70053CD",
      "ApiId"
     ]
    },
    "FieldName": "getCustomerOrdersNotConsistentEq",
    "TypeName": "Query",
    "DataSourceName": "Order",
    "Kind": "UNIT",
    "RequestMappingTemplate": "{\"version\" : \"2017-02-28\", \"operation\" : \"Query\",  \"consistentRead\": false, \"query\" : {\n              \"expression\" : \"#customer = :customer\",\n              \"expressionNames\" : {\n                \"#customer\" : \"customer\"\n              },\n              \"expressionValues\" : {\n                \":customer\" : $util.dynamodb.toDynamoDBJson($ctx.args.customer)\n              }\n            }}",
    "ResponseMappingTemplate": "$util.toJson($ctx.result.items)"
   },
   "DependsOn": [
    "ApiorderDsB50C8AAD",
    "ApiSchema510EECD7"
   ]
  },
  "ApiQueryGetOrderCustomersNotConsistentEq3BE248FE": {
   "Type": "AWS::AppSync::Resolver",
   "Properties": {
    "ApiId": {
     "Fn::GetAtt": [
      "ApiF70053CD",
      "ApiId"
     ]
    },
    "FieldName": "getOrderCustomersNotConsistentEq",
    "TypeName": "Query",
    "DataSourceName": "Order",
    "Kind": "UNIT",
    "RequestMappingTemplate": "{\"version\" : \"2017-02-28\", \"operation\" : \"Query\",  \"consistentRead\": false, \"index\" : \"orderIndex\", \"query\" : {\n              \"expression\" : \"#order = :order\",\n              \"expressionNames\" : {\n                \"#order\" : \"order\"\n              },\n              \"expressionValues\" : {\n                \":order\" : $util.dynamodb.toDynamoDBJson($ctx.args.order)\n              }\n            }}",
    "ResponseMappingTemplate": "$util.toJson($ctx.result.items)"
   },
   "DependsOn": [
    "ApiorderDsB50C8AAD",
    "ApiSchema510EECD7"
   ]
  },
  "ApiQueryGetCustomerOrdersNotConsistentLt7B43587C": {
   "Type": "AWS::AppSync::Resolver",
   "Properties": {
    "ApiId": {
     "Fn::GetAtt": [
      "ApiF70053CD",
      "ApiId"
     ]
    },
    "FieldName": "getCustomerOrdersNotConsistentLt",
    "TypeName": "Query",
    "DataSourceName": "Order",
    "Kind": "UNIT",
    "RequestMappingTemplate": "{\"version\" : \"2017-02-28\", \"operation\" : \"Query\",  \"consistentRead\": false, \"query\" : {\n              \"expression\" : \"#customer < :customer\",\n              \"expressionNames\" : {\n                \"#customer\" : \"customer\"\n              },\n              \"expressionValues\" : {\n                \":customer\" : $util.dynamodb.toDynamoDBJson($ctx.args.customer)\n              }\n            }}",
    "ResponseMappingTemplate": "$util.toJson($ctx.result.items)"
   },
   "DependsOn": [
    "ApiorderDsB50C8AAD",
    "ApiSchema510EECD7"
   ]
  },
  "ApiQueryGetOrderCustomersNotConsistentLt3B88F412": {
   "Type": "AWS::AppSync::Resolver",
   "Properties": {
    "ApiId": {
     "Fn::GetAtt": [
      "ApiF70053CD",
      "ApiId"
     ]
    },
    "FieldName": "getOrderCustomersNotConsistentLt",
    "TypeName": "Query",
    "DataSourceName": "Order",
    "Kind": "UNIT",
    "RequestMappingTemplate": "{\"version\" : \"2017-02-28\", \"operation\" : \"Query\",  \"consistentRead\": false, \"index\" : \"orderIndex\", \"query\" : {\n              \"expression\" : \"#order < :order\",\n              \"expressionNames\" : {\n                \"#order\" : \"order\"\n              },\n              \"expressionValues\" : {\n                \":order\" : $util.dynamodb.toDynamoDBJson($ctx.args.order)\n              }\n            }}",
    "ResponseMappingTemplate": "$util.toJson($ctx.result.items)"
   },
   "DependsOn": [
    "ApiorderDsB50C8AAD",
    "ApiSchema510EECD7"
   ]
  },
  "ApiQueryGetCustomerOrdersNotConsistentLe8817EDDB": {
   "Type": "AWS::AppSync::Resolver",
   "Properties": {
    "ApiId": {
     "Fn::GetAtt": [
      "ApiF70053CD",
      "ApiId"
     ]
    },
    "FieldName": "getCustomerOrdersNotConsistentLe",
    "TypeName": "Query",
    "DataSourceName": "Order",
    "Kind": "UNIT",
    "RequestMappingTemplate": "{\"version\" : \"2017-02-28\", \"operation\" : \"Query\",  \"consistentRead\": false, \"query\" : {\n              \"expression\" : \"#customer <= :customer\",\n              \"expressionNames\" : {\n                \"#customer\" : \"customer\"\n              },\n              \"expressionValues\" : {\n                \":customer\" : $util.dynamodb.toDynamoDBJson($ctx.args.customer)\n              }\n            }}",
    "ResponseMappingTemplate": "$util.toJson($ctx.result.items)"
   },
   "DependsOn": [
    "ApiorderDsB50C8AAD",
    "ApiSchema510EECD7"
   ]
  },
  "ApiQueryGetOrderCustomersNotConsistentLe09B90BC1": {
   "Type": "AWS::AppSync::Resolver",
   "Properties": {
    "ApiId": {
     "Fn::GetAtt": [
      "ApiF70053CD",
      "ApiId"
     ]
    },
    "FieldName": "getOrderCustomersNotConsistentLe",
    "TypeName": "Query",
    "DataSourceName": "Order",
    "Kind": "UNIT",
    "RequestMappingTemplate": "{\"version\" : \"2017-02-28\", \"operation\" : \"Query\",  \"consistentRead\": false, \"index\" : \"orderIndex\", \"query\" : {\n              \"expression\" : \"#order <= :order\",\n              \"expressionNames\" : {\n                \"#order\" : \"order\"\n              },\n              \"expressionValues\" : {\n                \":order\" : $util.dynamodb.toDynamoDBJson($ctx.args.order)\n              }\n            }}",
    "ResponseMappingTemplate": "$util.toJson($ctx.result.items)"
   },
   "DependsOn": [
    "ApiorderDsB50C8AAD",
    "ApiSchema510EECD7"
   ]
  },
  "ApiQueryGetCustomerOrdersNotConsistentGt92879DB9": {
   "Type": "AWS::AppSync::Resolver",
   "Properties": {
    "ApiId": {
     "Fn::GetAtt": [
      "ApiF70053CD",
      "ApiId"
     ]
    },
    "FieldName": "getCustomerOrdersNotConsistentGt",
    "TypeName": "Query",
    "DataSourceName": "Order",
    "Kind": "UNIT",
    "RequestMappingTemplate": "{\"version\" : \"2017-02-28\", \"operation\" : \"Query\",  \"consistentRead\": false, \"query\" : {\n              \"expression\" : \"#customer > :customer\",\n              \"expressionNames\" : {\n                \"#customer\" : \"customer\"\n              },\n              \"expressionValues\" : {\n                \":customer\" : $util.dynamodb.toDynamoDBJson($ctx.args.customer)\n              }\n            }}",
    "ResponseMappingTemplate": "$util.toJson($ctx.result.items)"
   },
   "DependsOn": [
    "ApiorderDsB50C8AAD",
    "ApiSchema510EECD7"
   ]
  },
  "ApiQueryGetOrderCustomersNotConsistentGt6C9F2F8F": {
   "Type": "AWS::AppSync::Resolver",
   "Properties": {
    "ApiId": {
     "Fn::GetAtt": [
      "ApiF70053CD",
      "ApiId"
     ]
    },
    "FieldName": "getOrderCustomersNotConsistentGt",
    "TypeName": "Query",
    "DataSourceName": "Order",
    "Kind": "UNIT",
    "RequestMappingTemplate": "{\"version\" : \"2017-02-28\", \"operation\" : \"Query\",  \"consistentRead\": false, \"index\" : \"orderIndex\", \"query\" : {\n              \"expression\" : \"#order > :order\",\n              \"expressionNames\" : {\n                \"#order\" : \"order\"\n              },\n              \"expressionValues\" : {\n                \":order\" : $util.dynamodb.toDynamoDBJson($ctx.args.order)\n              }\n            }}",
    "ResponseMappingTemplate": "$util.toJson($ctx.result.items)"
   },
   "DependsOn": [
    "ApiorderDsB50C8AAD",
    "ApiSchema510EECD7"
   ]
  },
  "ApiQueryGetCustomerOrdersNotConsistentGe8F8AA1E1": {
   "Type": "AWS::AppSync::Resolver",
   "Properties": {
    "ApiId": {
     "Fn::GetAtt": [
      "ApiF70053CD",
      "ApiId"
     ]
    },
    "FieldName": "getCustomerOrdersNotConsistentGe",
    "TypeName": "Query",
    "DataSourceName": "Order",
    "Kind": "UNIT",
    "RequestMappingTemplate": "{\"version\" : \"2017-02-28\", \"operation\" : \"Query\",  \"consistentRead\": false, \"query\" : {\n              \"expression\" : \"#customer >= :customer\",\n              \"expressionNames\" : {\n                \"#customer\" : \"customer\"\n              },\n              \"expressionValues\" : {\n                \":customer\" : $util.dynamodb.toDynamoDBJson($ctx.args.customer)\n              }\n            }}",
    "ResponseMappingTemplate": "$util.toJson($ctx.result.items)"
   },
   "DependsOn": [
    "ApiorderDsB50C8AAD",
    "ApiSchema510EECD7"
   ]
  },
  "ApiQueryGetOrderCustomersNotConsistentGe76FFC40E": {
   "Type": "AWS::AppSync::Resolver",
   "Properties": {
    "ApiId": {
     "Fn::GetAtt": [
      "ApiF70053CD",
      "ApiId"
     ]
    },
    "FieldName": "getOrderCustomersNotConsistentGe",
    "TypeName": "Query",
    "DataSourceName": "Order",
    "Kind": "UNIT",
    "RequestMappingTemplate": "{\"version\" : \"2017-02-28\", \"operation\" : \"Query\",  \"consistentRead\": false, \"index\" : \"orderIndex\", \"query\" : {\n              \"expression\" : \"#order >= :order\",\n              \"expressionNames\" : {\n                \"#order\" : \"order\"\n              },\n              \"expressionValues\" : {\n                \":order\" : $util.dynamodb.toDynamoDBJson($ctx.args.order)\n              }\n            }}",
    "ResponseMappingTemplate": "$util.toJson($ctx.result.items)"
   },
   "DependsOn": [
    "ApiorderDsB50C8AAD",
    "ApiSchema510EECD7"
   ]
  },
  "ApiQueryGetCustomerOrdersConsistentEq653D75B6": {
   "Type": "AWS::AppSync::Resolver",
   "Properties": {
    "ApiId": {
     "Fn::GetAtt": [
      "ApiF70053CD",
      "ApiId"
     ]
    },
    "FieldName": "getCustomerOrdersConsistentEq",
    "TypeName": "Query",
    "DataSourceName": "Order",
    "Kind": "UNIT",
    "RequestMappingTemplate": "{\"version\" : \"2017-02-28\", \"operation\" : \"Query\",  \"consistentRead\": true, \"query\" : {\n              \"expression\" : \"#customer = :customer\",\n              \"expressionNames\" : {\n                \"#customer\" : \"customer\"\n              },\n              \"expressionValues\" : {\n                \":customer\" : $util.dynamodb.toDynamoDBJson($ctx.args.customer)\n              }\n            }}",
    "ResponseMappingTemplate": "$util.toJson($ctx.result.items)"
   },
   "DependsOn": [
    "ApiorderDsB50C8AAD",
    "ApiSchema510EECD7"
   ]
  },
  "ApiQueryGetOrderCustomersConsistentEq6C9CAA47": {
   "Type": "AWS::AppSync::Resolver",
   "Properties": {
    "ApiId": {
     "Fn::GetAtt": [
      "ApiF70053CD",
      "ApiId"
     ]
    },
    "FieldName": "getOrderCustomersConsistentEq",
    "TypeName": "Query",
    "DataSourceName": "Order",
    "Kind": "UNIT",
    "RequestMappingTemplate": "{\"version\" : \"2017-02-28\", \"operation\" : \"Query\",  \"consistentRead\": true, \"index\" : \"orderIndex\", \"query\" : {\n              \"expression\" : \"#order = :order\",\n              \"expressionNames\" : {\n                \"#order\" : \"order\"\n              },\n              \"expressionValues\" : {\n                \":order\" : $util.dynamodb.toDynamoDBJson($ctx.args.order)\n              }\n            }}",
    "ResponseMappingTemplate": "$util.toJson($ctx.result.items)"
   },
   "DependsOn": [
    "ApiorderDsB50C8AAD",
    "ApiSchema510EECD7"
   ]
  },
  "ApiQueryGetCustomerOrdersConsistentLt250BF7EC": {
   "Type": "AWS::AppSync::Resolver",
   "Properties": {
    "ApiId": {
     "Fn::GetAtt": [
      "ApiF70053CD",
      "ApiId"
     ]
    },
    "FieldName": "getCustomerOrdersConsistentLt",
    "TypeName": "Query",
    "DataSourceName": "Order",
    "Kind": "UNIT",
    "RequestMappingTemplate": "{\"version\" : \"2017-02-28\", \"operation\" : \"Query\",  \"consistentRead\": true, \"query\" : {\n              \"expression\" : \"#customer < :customer\",\n              \"expressionNames\" : {\n                \"#customer\" : \"customer\"\n              },\n              \"expressionValues\" : {\n                \":customer\" : $util.dynamodb.toDynamoDBJson($ctx.args.customer)\n              }\n            }}",
    "ResponseMappingTemplate": "$util.toJson($ctx.result.items)"
   },
   "DependsOn": [
    "ApiorderDsB50C8AAD",
    "ApiSchema510EECD7"
   ]
  },
  "ApiQueryGetOrderCustomersConsistentLtB4B34793": {
   "Type": "AWS::AppSync::Resolver",
   "Properties": {
    "ApiId": {
     "Fn::GetAtt": [
      "ApiF70053CD",
      "ApiId"
     ]
    },
    "FieldName": "getOrderCustomersConsistentLt",
    "TypeName": "Query",
    "DataSourceName": "Order",
    "Kind": "UNIT",
    "RequestMappingTemplate": "{\"version\" : \"2017-02-28\", \"operation\" : \"Query\",  \"consistentRead\": true, \"index\" : \"orderIndex\", \"query\" : {\n              \"expression\" : \"#order < :order\",\n              \"expressionNames\" : {\n                \"#order\" : \"order\"\n              },\n              \"expressionValues\" : {\n                \":order\" : $util.dynamodb.toDynamoDBJson($ctx.args.order)\n              }\n            }}",
    "ResponseMappingTemplate": "$util.toJson($ctx.result.items)"
   },
   "DependsOn": [
    "ApiorderDsB50C8AAD",
    "ApiSchema510EECD7"
   ]
  },
  "ApiQueryGetCustomerOrdersConsistentLeECDEAB1B": {
   "Type": "AWS::AppSync::Resolver",
   "Properties": {
    "ApiId": {
     "Fn::GetAtt": [
      "ApiF70053CD",
      "ApiId"
     ]
    },
    "FieldName": "getCustomerOrdersConsistentLe",
    "TypeName": "Query",
    "DataSourceName": "Order",
    "Kind": "UNIT",
    "RequestMappingTemplate": "{\"version\" : \"2017-02-28\", \"operation\" : \"Query\",  \"consistentRead\": true, \"query\" : {\n              \"expression\" : \"#customer <= :customer\",\n              \"expressionNames\" : {\n                \"#customer\" : \"customer\"\n              },\n              \"expressionValues\" : {\n                \":customer\" : $util.dynamodb.toDynamoDBJson($ctx.args.customer)\n              }\n            }}",
    "ResponseMappingTemplate": "$util.toJson($ctx.result.items)"
   },
   "DependsOn": [
    "ApiorderDsB50C8AAD",
    "ApiSchema510EECD7"
   ]
  },
  "ApiQueryGetOrderCustomersConsistentLeA46A454C": {
   "Type": "AWS::AppSync::Resolver",
   "Properties": {
    "ApiId": {
     "Fn::GetAtt": [
      "ApiF70053CD",
      "ApiId"
     ]
    },
    "FieldName": "getOrderCustomersConsistentLe",
    "TypeName": "Query",
    "DataSourceName": "Order",
    "Kind": "UNIT",
    "RequestMappingTemplate": "{\"version\" : \"2017-02-28\", \"operation\" : \"Query\",  \"consistentRead\": true, \"index\" : \"orderIndex\", \"query\" : {\n              \"expression\" : \"#order <= :order\",\n              \"expressionNames\" : {\n                \"#order\" : \"order\"\n              },\n              \"expressionValues\" : {\n                \":order\" : $util.dynamodb.toDynamoDBJson($ctx.args.order)\n              }\n            }}",
    "ResponseMappingTemplate": "$util.toJson($ctx.result.items)"
   },
   "DependsOn": [
    "ApiorderDsB50C8AAD",
    "ApiSchema510EECD7"
   ]
  },
  "ApiQueryGetCustomerOrdersConsistentGtBC4B2EDF": {
   "Type": "AWS::AppSync::Resolver",
   "Properties": {
    "ApiId": {
     "Fn::GetAtt": [
      "ApiF70053CD",
      "ApiId"
     ]
    },
    "FieldName": "getCustomerOrdersConsistentGt",
    "TypeName": "Query",
    "DataSourceName": "Order",
    "Kind": "UNIT",
    "RequestMappingTemplate": "{\"version\" : \"2017-02-28\", \"operation\" : \"Query\",  \"consistentRead\": true, \"query\" : {\n              \"expression\" : \"#customer > :customer\",\n              \"expressionNames\" : {\n                \"#customer\" : \"customer\"\n              },\n              \"expressionValues\" : {\n                \":customer\" : $util.dynamodb.toDynamoDBJson($ctx.args.customer)\n              }\n            }}",
    "ResponseMappingTemplate": "$util.toJson($ctx.result.items)"
   },
   "DependsOn": [
    "ApiorderDsB50C8AAD",
    "ApiSchema510EECD7"
   ]
  },
  "ApiQueryGetOrderCustomersConsistentGt8185C8F7": {
   "Type": "AWS::AppSync::Resolver",
   "Properties": {
    "ApiId": {
     "Fn::GetAtt": [
      "ApiF70053CD",
      "ApiId"
     ]
    },
    "FieldName": "getOrderCustomersConsistentGt",
    "TypeName": "Query",
    "DataSourceName": "Order",
    "Kind": "UNIT",
    "RequestMappingTemplate": "{\"version\" : \"2017-02-28\", \"operation\" : \"Query\",  \"consistentRead\": true, \"index\" : \"orderIndex\", \"query\" : {\n              \"expression\" : \"#order > :order\",\n              \"expressionNames\" : {\n                \"#order\" : \"order\"\n              },\n              \"expressionValues\" : {\n                \":order\" : $util.dynamodb.toDynamoDBJson($ctx.args.order)\n              }\n            }}",
    "ResponseMappingTemplate": "$util.toJson($ctx.result.items)"
   },
   "DependsOn": [
    "ApiorderDsB50C8AAD",
    "ApiSchema510EECD7"
   ]
  },
  "ApiQueryGetCustomerOrdersConsistentGeB76BCC43": {
   "Type": "AWS::AppSync::Resolver",
   "Properties": {
    "ApiId": {
     "Fn::GetAtt": [
      "ApiF70053CD",
      "ApiId"
     ]
    },
    "FieldName": "getCustomerOrdersConsistentGe",
    "TypeName": "Query",
    "DataSourceName": "Order",
    "Kind": "UNIT",
    "RequestMappingTemplate": "{\"version\" : \"2017-02-28\", \"operation\" : \"Query\",  \"consistentRead\": true, \"query\" : {\n              \"expression\" : \"#customer >= :customer\",\n              \"expressionNames\" : {\n                \"#customer\" : \"customer\"\n              },\n              \"expressionValues\" : {\n                \":customer\" : $util.dynamodb.toDynamoDBJson($ctx.args.customer)\n              }\n            }}",
    "ResponseMappingTemplate": "$util.toJson($ctx.result.items)"
   },
   "DependsOn": [
    "ApiorderDsB50C8AAD",
    "ApiSchema510EECD7"
   ]
  },
  "ApiQueryGetOrderCustomersConsistentGeCE4A2D21": {
   "Type": "AWS::AppSync::Resolver",
   "Properties": {
    "ApiId": {
     "Fn::GetAtt": [
      "ApiF70053CD",
      "ApiId"
     ]
    },
    "FieldName": "getOrderCustomersConsistentGe",
    "TypeName": "Query",
    "DataSourceName": "Order",
    "Kind": "UNIT",
    "RequestMappingTemplate": "{\"version\" : \"2017-02-28\", \"operation\" : \"Query\",  \"consistentRead\": true, \"index\" : \"orderIndex\", \"query\" : {\n              \"expression\" : \"#order >= :order\",\n              \"expressionNames\" : {\n                \"#order\" : \"order\"\n              },\n              \"expressionValues\" : {\n                \":order\" : $util.dynamodb.toDynamoDBJson($ctx.args.order)\n              }\n            }}",
    "ResponseMappingTemplate": "$util.toJson($ctx.result.items)"
   },
   "DependsOn": [
    "ApiorderDsB50C8AAD",
    "ApiSchema510EECD7"
   ]
  },
  "ApiQueryGetCustomerOrdersFilter854FF70B": {
   "Type": "AWS::AppSync::Resolver",
   "Properties": {
    "ApiId": {
     "Fn::GetAtt": [
      "ApiF70053CD",
      "ApiId"
     ]
    },
    "FieldName": "getCustomerOrdersFilter",
    "TypeName": "Query",
    "DataSourceName": "Order",
    "Kind": "UNIT",
    "RequestMappingTemplate": "{\"version\" : \"2017-02-28\", \"operation\" : \"Query\",  \"consistentRead\": false, \"query\" : {\n              \"expression\" : \"#customer = :customer AND begins_with(#order, :order)\",\n              \"expressionNames\" : {\n                \"#customer\" : \"customer\", \"#order\" : \"order\"\n              },\n              \"expressionValues\" : {\n                \":customer\" : $util.dynamodb.toDynamoDBJson($ctx.args.customer), \":order\" : $util.dynamodb.toDynamoDBJson($ctx.args.order)\n              }\n            }}",
    "ResponseMappingTemplate": "$util.toJson($ctx.result.items)"
   },
   "DependsOn": [
    "ApiorderDsB50C8AAD",
    "ApiSchema510EECD7"
   ]
  },
  "ApiQueryGetCustomerOrdersBetween40B365B9": {
   "Type": "AWS::AppSync::Resolver",
   "Properties": {
    "ApiId": {
     "Fn::GetAtt": [
      "ApiF70053CD",
      "ApiId"
     ]
    },
    "FieldName": "getCustomerOrdersBetween",
    "TypeName": "Query",
    "DataSourceName": "Order",
    "Kind": "UNIT",
    "RequestMappingTemplate": "{\"version\" : \"2017-02-28\", \"operation\" : \"Query\",  \"consistentRead\": false, \"query\" : {\n              \"expression\" : \"#customer = :customer AND #order BETWEEN :order1 AND :order2\",\n              \"expressionNames\" : {\n                \"#customer\" : \"customer\", \"#order\" : \"order\"\n              },\n              \"expressionValues\" : {\n                \":customer\" : $util.dynamodb.toDynamoDBJson($ctx.args.customer), \":order1\" : $util.dynamodb.toDynamoDBJson($ctx.args.order1), \":order2\" : $util.dynamodb.toDynamoDBJson($ctx.args.order2)\n              }\n            }}",
    "ResponseMappingTemplate": "$util.toJson($ctx.result.items)"
   },
   "DependsOn": [
    "ApiorderDsB50C8AAD",
    "ApiSchema510EECD7"
   ]
  },
  "ApiQueryGetOrderCustomersFilter4E08981B": {
   "Type": "AWS::AppSync::Resolver",
   "Properties": {
    "ApiId": {
     "Fn::GetAtt": [
      "ApiF70053CD",
      "ApiId"
     ]
    },
    "FieldName": "getOrderCustomersFilter",
    "TypeName": "Query",
    "DataSourceName": "Order",
    "Kind": "UNIT",
    "RequestMappingTemplate": "{\"version\" : \"2017-02-28\", \"operation\" : \"Query\",  \"consistentRead\": false, \"query\" : {\n              \"expression\" : \"#order = :order AND begins_with(#customer, :customer)\",\n              \"expressionNames\" : {\n                \"#order\" : \"order\", \"#customer\" : \"customer\"\n              },\n              \"expressionValues\" : {\n                \":order\" : $util.dynamodb.toDynamoDBJson($ctx.args.order), \":customer\" : $util.dynamodb.toDynamoDBJson($ctx.args.customer)\n              }\n            }}",
    "ResponseMappingTemplate": "$util.toJson($ctx.result.items)"
   },
   "DependsOn": [
    "ApiorderDsB50C8AAD",
    "ApiSchema510EECD7"
   ]
  },
  "ApiQueryGetOrderCustomersBetween7C2EFCFE": {
   "Type": "AWS::AppSync::Resolver",
   "Properties": {
    "ApiId": {
     "Fn::GetAtt": [
      "ApiF70053CD",
      "ApiId"
     ]
    },
    "FieldName": "getOrderCustomersBetween",
    "TypeName": "Query",
    "DataSourceName": "Order",
    "Kind": "UNIT",
    "RequestMappingTemplate": "{\"version\" : \"2017-02-28\", \"operation\" : \"Query\",  \"consistentRead\": false, \"index\" : \"orderIndex\", \"query\" : {\n              \"expression\" : \"#order = :order AND #customer BETWEEN :customer1 AND :customer2\",\n              \"expressionNames\" : {\n                \"#order\" : \"order\", \"#customer\" : \"customer\"\n              },\n              \"expressionValues\" : {\n                \":order\" : $util.dynamodb.toDynamoDBJson($ctx.args.order), \":customer1\" : $util.dynamodb.toDynamoDBJson($ctx.args.customer1), \":customer2\" : $util.dynamodb.toDynamoDBJson($ctx.args.customer2)\n              }\n            }}",
    "ResponseMappingTemplate": "$util.toJson($ctx.result.items)"
   },
   "DependsOn": [
    "ApiorderDsB50C8AAD",
    "ApiSchema510EECD7"
   ]
  },
  "ApiQueryGetPayment26F71513": {
   "Type": "AWS::AppSync::Resolver",
   "Properties": {
    "ApiId": {
     "Fn::GetAtt": [
      "ApiF70053CD",
      "ApiId"
     ]
    },
    "FieldName": "getPayment",
    "TypeName": "Query",
    "DataSourceName": "Payment",
    "Kind": "UNIT",
    "RequestMappingTemplate": "{\"version\": \"2017-02-28\", \"operation\": \"GetItem\", \"consistentRead\": false, \"key\": {\"id\": $util.dynamodb.toDynamoDBJson($ctx.args.id)}}",
    "ResponseMappingTemplate": "$util.toJson($ctx.result)"
   },
   "DependsOn": [
    "ApipaymentDs95C7AC36",
    "ApiSchema510EECD7"
   ]
  },
  "ApiQueryGetPaymentConsistent0440A8CE": {
   "Type": "AWS::AppSync::Resolver",
   "Properties": {
    "ApiId": {
     "Fn::GetAtt": [
      "ApiF70053CD",
      "ApiId"
     ]
    },
    "FieldName": "getPaymentConsistent",
    "TypeName": "Query",
    "DataSourceName": "Payment",
    "Kind": "UNIT",
    "RequestMappingTemplate": "{\"version\": \"2017-02-28\", \"operation\": \"GetItem\", \"consistentRead\": true, \"key\": {\"id\": $util.dynamodb.toDynamoDBJson($ctx.args.id)}}",
    "ResponseMappingTemplate": "$util.toJson($ctx.result)"
   },
   "DependsOn": [
    "ApipaymentDs95C7AC36",
    "ApiSchema510EECD7"
   ]
  },
  "ApiMutationSavePayment63C236F7": {
   "Type": "AWS::AppSync::Resolver",
   "Properties": {
    "ApiId": {
     "Fn::GetAtt": [
      "ApiF70053CD",
      "ApiId"
     ]
    },
    "FieldName": "savePayment",
    "TypeName": "Mutation",
    "DataSourceName": "Payment",
    "Kind": "UNIT",
    "RequestMappingTemplate": "\n      #set($input = $ctx.args.payment)\n      \n      {\n        \"version\": \"2017-02-28\",\n        \"operation\": \"PutItem\",\n        \"key\" : {\n      \"id\" : $util.dynamodb.toDynamoDBJson($util.autoId())\n    },\n        \"attributeValues\": $util.dynamodb.toMapValuesJson($input)\n      }",
    "ResponseMappingTemplate": "$util.toJson($ctx.result)"
   },
   "DependsOn": [
    "ApipaymentDs95C7AC36",
    "ApiSchema510EECD7"
   ]
  },
  "ApidsServiceRoleADC7D124": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "appsync.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    }
   }
  },
  "Apids0DB53FEA": {
   "Type": "AWS::AppSync::DataSource",
   "Properties": {
    "ApiId": {
     "Fn::GetAtt": [
      "ApiF70053CD",
      "ApiId"
     ]
    },
    "Name": "http",
    "Type": "HTTP",
    "HttpConfig": {
     "Endpoint": "https://aws.amazon.com/"
    },
    "ServiceRoleArn": {
     "Fn::GetAtt": [
      "ApidsServiceRoleADC7D124",
      "Arn"
     ]
    }
   }
  },
  "ApiMutationDoPostOnAws6DBBF12B": {
   "Type": "AWS::AppSync::Resolver",
   "Properties": {
    "ApiId": {
     "Fn::GetAtt": [
      "ApiF70053CD",
      "ApiId"
     ]
    },
    "FieldName": "doPostOnAws",
    "TypeName": "Mutation",
    "DataSourceName": "http",
    "Kind": "UNIT",
    "RequestMappingTemplate": "{\n    \"version\": \"2018-05-29\",\n    \"method\": \"POST\",\n    # if full path is https://api.xxxxxxxxx.com/posts then resourcePath would be /posts\n    \"resourcePath\": \"/path/123\",\n    \"params\":{\n        \"body\": $util.toJson($ctx.args),\n        \"headers\":{\n            \"Content-Type\": \"application/json\",\n            \"Authorization\": \"$ctx.request.headers.Authorization\"\n        }\n    }\n  }",
    "ResponseMappingTemplate": "\n    ## Raise a GraphQL field error in case of a datasource invocation error\n    #if($ctx.error)\n      $util.error($ctx.error.message, $ctx.error.type)\n    #end\n    ## if the response status code is not 200, then return an error. Else return the body **\n    #if($ctx.result.statusCode == 200)\n        ## If response is 200, return the body.\n        $ctx.result.body\n    #else\n        ## If response is not 200, append the response to error block.\n        $utils.appendError($ctx.result.body, \"$ctx.result.statusCode\")\n    #end\n  "
   },
   "DependsOn": [
    "Apids0DB53FEA",
    "ApiSchema510EECD7"
   ]
  },
  "CustomerTable260DCC08": {
   "Type": "AWS::DynamoDB::Table",
   "Properties": {
    "KeySchema": [
     {
      "AttributeName": "id",
      "KeyType": "HASH"
     }
    ],
    "AttributeDefinitions": [
     {
      "AttributeName": "id",
      "AttributeType": "S"
     }
    ],
    "BillingMode": "PAY_PER_REQUEST"
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  },
  "OrderTable416EB896": {
   "Type": "AWS::DynamoDB::Table",
   "Properties": {
    "KeySchema": [
     {
      "AttributeName": "customer",
      "KeyType": "HASH"
     },
     {
      "AttributeName": "order",
      "KeyType": "RANGE"
     }
    ],
    "AttributeDefinitions": [
     {
      "AttributeName": "customer",
      "AttributeType": "S"
     },
     {
      "AttributeName": "order",
      "AttributeType": "S"
     }
    ],
    "BillingMode": "PAY_PER_REQUEST",
    "GlobalSecondaryIndexes": [
     {
      "IndexName": "orderIndex",
      "KeySchema": [
       {
        "AttributeName": "order",
        "KeyType": "HASH"
       },
       {
        "AttributeName": "customer",
        "KeyType": "RANGE"
       }
      ],
      "Projection": {
       "ProjectionType": "ALL"
      }
     }
    ]
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  },
  "PaymentTableE140D25E": {
   "Type": "AWS::DynamoDB::Table",
   "Properties": {
    "KeySchema": [
     {
      "AttributeName": "id",
      "KeyType": "HASH"
     }
    ],
    "AttributeDefinitions": [
     {
      "AttributeName": "id",
      "AttributeType": "S"
     }
    ],
    "BillingMode": "PAY_PER_REQUEST"
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}