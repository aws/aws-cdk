{
  "Resources": {
    "AdminRole38563C57": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":iam::12345678:root"
                    ]
                  ]
                }
              }
            }
          ],
          "Version": "2012-10-17"
        }
      }
    },
    "Vpc8378EB38": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": "10.0.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": [
          {
            "Key": "Name",
            "Value": "aws-cdk-eks-cluster-test/Vpc"
          }
        ]
      }
    },
    "VpcPublicSubnet1Subnet5C2D37C4": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.0.0/19",
        "VpcId": {
          "Ref": "Vpc8378EB38"
        },
        "AvailabilityZone": "test-region-1a",
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public"
          },
          {
            "Key": "kubernetes.io/role/elb",
            "Value": "1"
          },
          {
            "Key": "Name",
            "Value": "aws-cdk-eks-cluster-test/Vpc/PublicSubnet1"
          }
        ]
      }
    },
    "VpcPublicSubnet1RouteTable6C95E38E": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "Vpc8378EB38"
        },
        "Tags": [
          {
            "Key": "kubernetes.io/role/elb",
            "Value": "1"
          },
          {
            "Key": "Name",
            "Value": "aws-cdk-eks-cluster-test/Vpc/PublicSubnet1"
          }
        ]
      }
    },
    "VpcPublicSubnet1RouteTableAssociation97140677": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcPublicSubnet1RouteTable6C95E38E"
        },
        "SubnetId": {
          "Ref": "VpcPublicSubnet1Subnet5C2D37C4"
        }
      }
    },
    "VpcPublicSubnet1DefaultRoute3DA9E72A": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcPublicSubnet1RouteTable6C95E38E"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "VpcIGWD7BA715C"
        }
      },
      "DependsOn": [
        "VpcVPCGWBF912B6E"
      ]
    },
    "VpcPublicSubnet1EIPD7E02669": {
      "Type": "AWS::EC2::EIP",
      "Properties": {
        "Domain": "vpc",
        "Tags": [
          {
            "Key": "kubernetes.io/role/elb",
            "Value": "1"
          },
          {
            "Key": "Name",
            "Value": "aws-cdk-eks-cluster-test/Vpc/PublicSubnet1"
          }
        ]
      }
    },
    "VpcPublicSubnet1NATGateway4D7517AA": {
      "Type": "AWS::EC2::NatGateway",
      "Properties": {
        "AllocationId": {
          "Fn::GetAtt": [
            "VpcPublicSubnet1EIPD7E02669",
            "AllocationId"
          ]
        },
        "SubnetId": {
          "Ref": "VpcPublicSubnet1Subnet5C2D37C4"
        },
        "Tags": [
          {
            "Key": "kubernetes.io/role/elb",
            "Value": "1"
          },
          {
            "Key": "Name",
            "Value": "aws-cdk-eks-cluster-test/Vpc/PublicSubnet1"
          }
        ]
      }
    },
    "VpcPublicSubnet2Subnet691E08A3": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.32.0/19",
        "VpcId": {
          "Ref": "Vpc8378EB38"
        },
        "AvailabilityZone": "test-region-1b",
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public"
          },
          {
            "Key": "kubernetes.io/role/elb",
            "Value": "1"
          },
          {
            "Key": "Name",
            "Value": "aws-cdk-eks-cluster-test/Vpc/PublicSubnet2"
          }
        ]
      }
    },
    "VpcPublicSubnet2RouteTable94F7E489": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "Vpc8378EB38"
        },
        "Tags": [
          {
            "Key": "kubernetes.io/role/elb",
            "Value": "1"
          },
          {
            "Key": "Name",
            "Value": "aws-cdk-eks-cluster-test/Vpc/PublicSubnet2"
          }
        ]
      }
    },
    "VpcPublicSubnet2RouteTableAssociationDD5762D8": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcPublicSubnet2RouteTable94F7E489"
        },
        "SubnetId": {
          "Ref": "VpcPublicSubnet2Subnet691E08A3"
        }
      }
    },
    "VpcPublicSubnet2DefaultRoute97F91067": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcPublicSubnet2RouteTable94F7E489"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "VpcIGWD7BA715C"
        }
      },
      "DependsOn": [
        "VpcVPCGWBF912B6E"
      ]
    },
    "VpcPublicSubnet3SubnetBE12F0B6": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.64.0/19",
        "VpcId": {
          "Ref": "Vpc8378EB38"
        },
        "AvailabilityZone": "test-region-1c",
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public"
          },
          {
            "Key": "kubernetes.io/role/elb",
            "Value": "1"
          },
          {
            "Key": "Name",
            "Value": "aws-cdk-eks-cluster-test/Vpc/PublicSubnet3"
          }
        ]
      }
    },
    "VpcPublicSubnet3RouteTable93458DBB": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "Vpc8378EB38"
        },
        "Tags": [
          {
            "Key": "kubernetes.io/role/elb",
            "Value": "1"
          },
          {
            "Key": "Name",
            "Value": "aws-cdk-eks-cluster-test/Vpc/PublicSubnet3"
          }
        ]
      }
    },
    "VpcPublicSubnet3RouteTableAssociation1F1EDF02": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcPublicSubnet3RouteTable93458DBB"
        },
        "SubnetId": {
          "Ref": "VpcPublicSubnet3SubnetBE12F0B6"
        }
      }
    },
    "VpcPublicSubnet3DefaultRoute4697774F": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcPublicSubnet3RouteTable93458DBB"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "VpcIGWD7BA715C"
        }
      },
      "DependsOn": [
        "VpcVPCGWBF912B6E"
      ]
    },
    "VpcPrivateSubnet1Subnet536B997A": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.96.0/19",
        "VpcId": {
          "Ref": "Vpc8378EB38"
        },
        "AvailabilityZone": "test-region-1a",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private"
          },
          {
            "Key": "kubernetes.io/role/internal-elb",
            "Value": "1"
          },
          {
            "Key": "Name",
            "Value": "aws-cdk-eks-cluster-test/Vpc/PrivateSubnet1"
          }
        ]
      }
    },
    "VpcPrivateSubnet1RouteTableB2C5B500": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "Vpc8378EB38"
        },
        "Tags": [
          {
            "Key": "kubernetes.io/role/internal-elb",
            "Value": "1"
          },
          {
            "Key": "Name",
            "Value": "aws-cdk-eks-cluster-test/Vpc/PrivateSubnet1"
          }
        ]
      }
    },
    "VpcPrivateSubnet1RouteTableAssociation70C59FA6": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcPrivateSubnet1RouteTableB2C5B500"
        },
        "SubnetId": {
          "Ref": "VpcPrivateSubnet1Subnet536B997A"
        }
      }
    },
    "VpcPrivateSubnet1DefaultRouteBE02A9ED": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcPrivateSubnet1RouteTableB2C5B500"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "VpcPublicSubnet1NATGateway4D7517AA"
        }
      }
    },
    "VpcPrivateSubnet2Subnet3788AAA1": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.128.0/19",
        "VpcId": {
          "Ref": "Vpc8378EB38"
        },
        "AvailabilityZone": "test-region-1b",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private"
          },
          {
            "Key": "kubernetes.io/role/internal-elb",
            "Value": "1"
          },
          {
            "Key": "Name",
            "Value": "aws-cdk-eks-cluster-test/Vpc/PrivateSubnet2"
          }
        ]
      }
    },
    "VpcPrivateSubnet2RouteTableA678073B": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "Vpc8378EB38"
        },
        "Tags": [
          {
            "Key": "kubernetes.io/role/internal-elb",
            "Value": "1"
          },
          {
            "Key": "Name",
            "Value": "aws-cdk-eks-cluster-test/Vpc/PrivateSubnet2"
          }
        ]
      }
    },
    "VpcPrivateSubnet2RouteTableAssociationA89CAD56": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcPrivateSubnet2RouteTableA678073B"
        },
        "SubnetId": {
          "Ref": "VpcPrivateSubnet2Subnet3788AAA1"
        }
      }
    },
    "VpcPrivateSubnet2DefaultRoute060D2087": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcPrivateSubnet2RouteTableA678073B"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "VpcPublicSubnet1NATGateway4D7517AA"
        }
      }
    },
    "VpcPrivateSubnet3SubnetF258B56E": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.160.0/19",
        "VpcId": {
          "Ref": "Vpc8378EB38"
        },
        "AvailabilityZone": "test-region-1c",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private"
          },
          {
            "Key": "kubernetes.io/role/internal-elb",
            "Value": "1"
          },
          {
            "Key": "Name",
            "Value": "aws-cdk-eks-cluster-test/Vpc/PrivateSubnet3"
          }
        ]
      }
    },
    "VpcPrivateSubnet3RouteTableD98824C7": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "Vpc8378EB38"
        },
        "Tags": [
          {
            "Key": "kubernetes.io/role/internal-elb",
            "Value": "1"
          },
          {
            "Key": "Name",
            "Value": "aws-cdk-eks-cluster-test/Vpc/PrivateSubnet3"
          }
        ]
      }
    },
    "VpcPrivateSubnet3RouteTableAssociation16BDDC43": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcPrivateSubnet3RouteTableD98824C7"
        },
        "SubnetId": {
          "Ref": "VpcPrivateSubnet3SubnetF258B56E"
        }
      }
    },
    "VpcPrivateSubnet3DefaultRoute94B74F0D": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcPrivateSubnet3RouteTableD98824C7"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "VpcPublicSubnet1NATGateway4D7517AA"
        }
      }
    },
    "VpcIGWD7BA715C": {
      "Type": "AWS::EC2::InternetGateway",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "aws-cdk-eks-cluster-test/Vpc"
          }
        ]
      }
    },
    "VpcVPCGWBF912B6E": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "VpcId": {
          "Ref": "Vpc8378EB38"
        },
        "InternetGatewayId": {
          "Ref": "VpcIGWD7BA715C"
        }
      }
    },
    "ClusterRoleFA261979": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "eks.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/AmazonEKSClusterPolicy"
              ]
            ]
          }
        ]
      }
    },
    "ClusterControlPlaneSecurityGroupD274242C": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "EKS Control Plane Security Group",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1"
          }
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38"
        }
      }
    },
    "ClusterControlPlaneSecurityGroupfromawscdkeksclustertestClusterNodesInstanceSecurityGroupD0B64C54443795AF111": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "IpProtocol": "tcp",
        "Description": "from awscdkeksclustertestClusterNodesInstanceSecurityGroupD0B64C54:443",
        "FromPort": 443,
        "GroupId": {
          "Fn::GetAtt": [
            "ClusterControlPlaneSecurityGroupD274242C",
            "GroupId"
          ]
        },
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "ClusterNodesInstanceSecurityGroup899246BD",
            "GroupId"
          ]
        },
        "ToPort": 443
      }
    },
    "ClusterControlPlaneSecurityGroupfromawscdkeksclustertestClusterBottlerocketNodesInstanceSecurityGroup83FE7914443ECEF3F30": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "IpProtocol": "tcp",
        "Description": "from awscdkeksclustertestClusterBottlerocketNodesInstanceSecurityGroup83FE7914:443",
        "FromPort": 443,
        "GroupId": {
          "Fn::GetAtt": [
            "ClusterControlPlaneSecurityGroupD274242C",
            "GroupId"
          ]
        },
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "ClusterBottlerocketNodesInstanceSecurityGroup3794A94B",
            "GroupId"
          ]
        },
        "ToPort": 443
      }
    },
    "ClusterControlPlaneSecurityGroupfromawscdkeksclustertestClusterspotInstanceSecurityGroupF50F5D474431DE5485F": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "IpProtocol": "tcp",
        "Description": "from awscdkeksclustertestClusterspotInstanceSecurityGroupF50F5D47:443",
        "FromPort": 443,
        "GroupId": {
          "Fn::GetAtt": [
            "ClusterControlPlaneSecurityGroupD274242C",
            "GroupId"
          ]
        },
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "ClusterspotInstanceSecurityGroup01F7B1CE",
            "GroupId"
          ]
        },
        "ToPort": 443
      }
    },
    "ClusterControlPlaneSecurityGroupfromawscdkeksclustertestClusterInferenceInstancesInstanceSecurityGroup42C57C51443E3176F85": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "IpProtocol": "tcp",
        "Description": "from awscdkeksclustertestClusterInferenceInstancesInstanceSecurityGroup42C57C51:443",
        "FromPort": 443,
        "GroupId": {
          "Fn::GetAtt": [
            "ClusterControlPlaneSecurityGroupD274242C",
            "GroupId"
          ]
        },
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "ClusterInferenceInstancesInstanceSecurityGroupECB3FC45",
            "GroupId"
          ]
        },
        "ToPort": 443
      }
    },
    "ClusterCreationRole360249B6": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "AWS": [
                  {
                    "Fn::GetAtt": [
                      "awscdkawseksClusterResourceProviderNestedStackawscdkawseksClusterResourceProviderNestedStackResource9827C454",
                      "Outputs.awscdkeksclustertestawscdkawseksClusterResourceProviderOnEventHandlerServiceRole5B783C71Arn"
                    ]
                  },
                  {
                    "Fn::GetAtt": [
                      "awscdkawseksClusterResourceProviderNestedStackawscdkawseksClusterResourceProviderNestedStackResource9827C454",
                      "Outputs.awscdkeksclustertestawscdkawseksClusterResourceProviderIsCompleteHandlerServiceRole970DAC30Arn"
                    ]
                  }
                ]
              }
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::GetAtt": [
                    "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B",
                    "Outputs.awscdkeksclustertestawscdkawseksKubectlProviderHandlerServiceRoleA9A610CBArn"
                  ]
                }
              }
            }
          ],
          "Version": "2012-10-17"
        }
      }
    },
    "ClusterCreationRoleDefaultPolicyE8BDFC7B": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "ClusterRoleFA261979",
                  "Arn"
                ]
              }
            },
            {
              "Action": [
                "ec2:DescribeSubnets",
                "ec2:DescribeRouteTables"
              ],
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": [
                "eks:CreateCluster",
                "eks:DescribeCluster",
                "eks:DescribeUpdate",
                "eks:DeleteCluster",
                "eks:UpdateClusterVersion",
                "eks:UpdateClusterConfig",
                "eks:CreateFargateProfile",
                "eks:TagResource",
                "eks:UntagResource"
              ],
              "Effect": "Allow",
              "Resource": [
                "*"
              ]
            },
            {
              "Action": [
                "eks:DescribeFargateProfile",
                "eks:DeleteFargateProfile"
              ],
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": "iam:GetRole",
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": "iam:CreateServiceLinkedRole",
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "ClusterfargateprofiledefaultPodExecutionRole09952CFF",
                  "Arn"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "ClusterCreationRoleDefaultPolicyE8BDFC7B",
        "Roles": [
          {
            "Ref": "ClusterCreationRole360249B6"
          }
        ]
      }
    },
    "Cluster9EE0221C": {
      "Type": "Custom::AWSCDK-EKS-Cluster",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "awscdkawseksClusterResourceProviderNestedStackawscdkawseksClusterResourceProviderNestedStackResource9827C454",
            "Outputs.awscdkeksclustertestawscdkawseksClusterResourceProviderframeworkonEvent503C1667Arn"
          ]
        },
        "Config": {
          "roleArn": {
            "Fn::GetAtt": [
              "ClusterRoleFA261979",
              "Arn"
            ]
          },
          "version": "1.16",
          "resourcesVpcConfig": {
            "securityGroupIds": [
              {
                "Fn::GetAtt": [
                  "ClusterControlPlaneSecurityGroupD274242C",
                  "GroupId"
                ]
              }
            ],
            "subnetIds": [
              {
                "Ref": "VpcPublicSubnet1Subnet5C2D37C4"
              },
              {
                "Ref": "VpcPublicSubnet2Subnet691E08A3"
              },
              {
                "Ref": "VpcPublicSubnet3SubnetBE12F0B6"
              },
              {
                "Ref": "VpcPrivateSubnet1Subnet536B997A"
              },
              {
                "Ref": "VpcPrivateSubnet2Subnet3788AAA1"
              },
              {
                "Ref": "VpcPrivateSubnet3SubnetF258B56E"
              }
            ]
          }
        },
        "AssumeRoleArn": {
          "Fn::GetAtt": [
            "ClusterCreationRole360249B6",
            "Arn"
          ]
        },
        "AttributesRevision": 2
      },
      "DependsOn": [
        "ClusterCreationRoleDefaultPolicyE8BDFC7B",
        "ClusterCreationRole360249B6"
      ],
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete"
    },
    "ClusterAwsAuthmanifestFE51F8AE": {
      "Type": "Custom::AWSCDK-EKS-KubernetesResource",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B",
            "Outputs.awscdkeksclustertestawscdkawseksKubectlProviderframeworkonEventC681B49AArn"
          ]
        },
        "Manifest": {
          "Fn::Join": [
            "",
            [
              "[{\"apiVersion\":\"v1\",\"kind\":\"ConfigMap\",\"metadata\":{\"name\":\"aws-auth\",\"namespace\":\"kube-system\"},\"data\":{\"mapRoles\":\"[{\\\"rolearn\\\":\\\"",
              {
                "Fn::GetAtt": [
                  "AdminRole38563C57",
                  "Arn"
                ]
              },
              "\\\",\\\"username\\\":\\\"",
              {
                "Fn::GetAtt": [
                  "AdminRole38563C57",
                  "Arn"
                ]
              },
              "\\\",\\\"groups\\\":[\\\"system:masters\\\"]},{\\\"rolearn\\\":\\\"",
              {
                "Fn::GetAtt": [
                  "ClusterfargateprofiledefaultPodExecutionRole09952CFF",
                  "Arn"
                ]
              },
              "\\\",\\\"username\\\":\\\"system:node:{{SessionName}}\\\",\\\"groups\\\":[\\\"system:bootstrappers\\\",\\\"system:nodes\\\",\\\"system:node-proxier\\\"]},{\\\"rolearn\\\":\\\"",
              {
                "Fn::GetAtt": [
                  "ClusterNodesInstanceRoleC3C01328",
                  "Arn"
                ]
              },
              "\\\",\\\"username\\\":\\\"system:node:{{EC2PrivateDNSName}}\\\",\\\"groups\\\":[\\\"system:bootstrappers\\\",\\\"system:nodes\\\"]},{\\\"rolearn\\\":\\\"",
              {
                "Fn::GetAtt": [
                  "ClusterBottlerocketNodesInstanceRole68E4BCFB",
                  "Arn"
                ]
              },
              "\\\",\\\"username\\\":\\\"system:node:{{EC2PrivateDNSName}}\\\",\\\"groups\\\":[\\\"system:bootstrappers\\\",\\\"system:nodes\\\"]},{\\\"rolearn\\\":\\\"",
              {
                "Fn::GetAtt": [
                  "ClusterspotInstanceRole39043830",
                  "Arn"
                ]
              },
              "\\\",\\\"username\\\":\\\"system:node:{{EC2PrivateDNSName}}\\\",\\\"groups\\\":[\\\"system:bootstrappers\\\",\\\"system:nodes\\\"]},{\\\"rolearn\\\":\\\"",
              {
                "Fn::GetAtt": [
                  "ClusterInferenceInstancesInstanceRole59AC6F56",
                  "Arn"
                ]
              },
              "\\\",\\\"username\\\":\\\"system:node:{{EC2PrivateDNSName}}\\\",\\\"groups\\\":[\\\"system:bootstrappers\\\",\\\"system:nodes\\\"]}]\",\"mapUsers\":\"[]\",\"mapAccounts\":\"[]\"}}]"
            ]
          ]
        },
        "ClusterName": {
          "Ref": "Cluster9EE0221C"
        },
        "RoleArn": {
          "Fn::GetAtt": [
            "ClusterCreationRole360249B6",
            "Arn"
          ]
        }
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete"
    },
    "ClusterNodegroupDefaultCapacityNodeGroupRole55953B04": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": {
                  "Fn::Join": [
                    "",
                    [
                      "ec2.",
                      {
                        "Ref": "AWS::URLSuffix"
                      }
                    ]
                  ]
                }
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/AmazonEKSWorkerNodePolicy"
              ]
            ]
          },
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/AmazonEKS_CNI_Policy"
              ]
            ]
          },
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/AmazonEC2ContainerRegistryReadOnly"
              ]
            ]
          }
        ]
      }
    },
    "ClusterNodegroupDefaultCapacityDA0920A3": {
      "Type": "AWS::EKS::Nodegroup",
      "Properties": {
        "ClusterName": {
          "Ref": "Cluster9EE0221C"
        },
        "NodeRole": {
          "Fn::GetAtt": [
            "ClusterNodegroupDefaultCapacityNodeGroupRole55953B04",
            "Arn"
          ]
        },
        "Subnets": [
          {
            "Ref": "VpcPrivateSubnet1Subnet536B997A"
          },
          {
            "Ref": "VpcPrivateSubnet2Subnet3788AAA1"
          },
          {
            "Ref": "VpcPrivateSubnet3SubnetF258B56E"
          }
        ],
        "ForceUpdateEnabled": true,
        "InstanceTypes": [
          "m5.large"
        ],
        "ScalingConfig": {
          "DesiredSize": 2,
          "MaxSize": 2,
          "MinSize": 2
        }
      }
    },
    "ClusterfargateprofiledefaultPodExecutionRole09952CFF": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "eks-fargate-pods.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/AmazonEKSFargatePodExecutionRolePolicy"
              ]
            ]
          }
        ]
      }
    },
    "ClusterfargateprofiledefaultEFC59F14": {
      "Type": "Custom::AWSCDK-EKS-FargateProfile",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "awscdkawseksClusterResourceProviderNestedStackawscdkawseksClusterResourceProviderNestedStackResource9827C454",
            "Outputs.awscdkeksclustertestawscdkawseksClusterResourceProviderframeworkonEvent503C1667Arn"
          ]
        },
        "AssumeRoleArn": {
          "Fn::GetAtt": [
            "ClusterCreationRole360249B6",
            "Arn"
          ]
        },
        "Config": {
          "clusterName": {
            "Ref": "Cluster9EE0221C"
          },
          "podExecutionRoleArn": {
            "Fn::GetAtt": [
              "ClusterfargateprofiledefaultPodExecutionRole09952CFF",
              "Arn"
            ]
          },
          "selectors": [
            {
              "namespace": "default"
            }
          ]
        }
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete"
    },
    "ClusterNodesInstanceSecurityGroup899246BD": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "aws-cdk-eks-cluster-test/Cluster/Nodes/InstanceSecurityGroup",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1"
          }
        ],
        "Tags": [
          {
            "Key": {
              "Fn::Join": [
                "",
                [
                  "kubernetes.io/cluster/",
                  {
                    "Ref": "Cluster9EE0221C"
                  }
                ]
              ]
            },
            "Value": "owned"
          },
          {
            "Key": "Name",
            "Value": "aws-cdk-eks-cluster-test/Cluster/Nodes"
          }
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38"
        }
      }
    },
    "ClusterNodesInstanceSecurityGroupfromawscdkeksclustertestClusterNodesInstanceSecurityGroupD0B64C54ALLTRAFFICBC5FBE2E": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "IpProtocol": "-1",
        "Description": "from awscdkeksclustertestClusterNodesInstanceSecurityGroupD0B64C54:ALL TRAFFIC",
        "GroupId": {
          "Fn::GetAtt": [
            "ClusterNodesInstanceSecurityGroup899246BD",
            "GroupId"
          ]
        },
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "ClusterNodesInstanceSecurityGroup899246BD",
            "GroupId"
          ]
        }
      }
    },
    "ClusterNodesInstanceSecurityGroupfromawscdkeksclustertestClusterControlPlaneSecurityGroup2F130134443AE10EB12": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "IpProtocol": "tcp",
        "Description": "from awscdkeksclustertestClusterControlPlaneSecurityGroup2F130134:443",
        "FromPort": 443,
        "GroupId": {
          "Fn::GetAtt": [
            "ClusterNodesInstanceSecurityGroup899246BD",
            "GroupId"
          ]
        },
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "ClusterControlPlaneSecurityGroupD274242C",
            "GroupId"
          ]
        },
        "ToPort": 443
      }
    },
    "ClusterNodesInstanceSecurityGroupfromawscdkeksclustertestClusterControlPlaneSecurityGroup2F1301341025655359F401D0D": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "IpProtocol": "tcp",
        "Description": "from awscdkeksclustertestClusterControlPlaneSecurityGroup2F130134:1025-65535",
        "FromPort": 1025,
        "GroupId": {
          "Fn::GetAtt": [
            "ClusterNodesInstanceSecurityGroup899246BD",
            "GroupId"
          ]
        },
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "ClusterControlPlaneSecurityGroupD274242C",
            "GroupId"
          ]
        },
        "ToPort": 65535
      }
    },
    "ClusterNodesInstanceRoleC3C01328": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": {
                  "Fn::Join": [
                    "",
                    [
                      "ec2.",
                      {
                        "Ref": "AWS::URLSuffix"
                      }
                    ]
                  ]
                }
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/AmazonEKSWorkerNodePolicy"
              ]
            ]
          },
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/AmazonEKS_CNI_Policy"
              ]
            ]
          },
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/AmazonEC2ContainerRegistryReadOnly"
              ]
            ]
          }
        ],
        "Tags": [
          {
            "Key": {
              "Fn::Join": [
                "",
                [
                  "kubernetes.io/cluster/",
                  {
                    "Ref": "Cluster9EE0221C"
                  }
                ]
              ]
            },
            "Value": "owned"
          },
          {
            "Key": "Name",
            "Value": "aws-cdk-eks-cluster-test/Cluster/Nodes"
          }
        ]
      }
    },
    "ClusterNodesInstanceProfileF2DD0E21": {
      "Type": "AWS::IAM::InstanceProfile",
      "Properties": {
        "Roles": [
          {
            "Ref": "ClusterNodesInstanceRoleC3C01328"
          }
        ]
      }
    },
    "ClusterNodesLaunchConfig7C420A27": {
      "Type": "AWS::AutoScaling::LaunchConfiguration",
      "Properties": {
        "ImageId": {
          "Ref": "SsmParameterValueawsserviceeksoptimizedami116amazonlinux2recommendedimageidC96584B6F00A464EAD1953AFF4B05118Parameter"
        },
        "InstanceType": "t2.medium",
        "IamInstanceProfile": {
          "Ref": "ClusterNodesInstanceProfileF2DD0E21"
        },
        "SecurityGroups": [
          {
            "Fn::GetAtt": [
              "ClusterNodesInstanceSecurityGroup899246BD",
              "GroupId"
            ]
          }
        ],
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "",
              [
                "#!/bin/bash\nset -o xtrace\n/etc/eks/bootstrap.sh ",
                {
                  "Ref": "Cluster9EE0221C"
                },
                " --kubelet-extra-args \"--node-labels lifecycle=OnDemand\" --use-max-pods true\n/opt/aws/bin/cfn-signal --exit-code $? --stack aws-cdk-eks-cluster-test --resource ClusterNodesASGF172BD19 --region test-region"
              ]
            ]
          }
        }
      },
      "DependsOn": [
        "ClusterNodesInstanceRoleC3C01328"
      ]
    },
    "ClusterNodesASGF172BD19": {
      "Type": "AWS::AutoScaling::AutoScalingGroup",
      "Properties": {
        "MaxSize": "3",
        "MinSize": "3",
        "LaunchConfigurationName": {
          "Ref": "ClusterNodesLaunchConfig7C420A27"
        },
        "Tags": [
          {
            "Key": {
              "Fn::Join": [
                "",
                [
                  "kubernetes.io/cluster/",
                  {
                    "Ref": "Cluster9EE0221C"
                  }
                ]
              ]
            },
            "PropagateAtLaunch": true,
            "Value": "owned"
          },
          {
            "Key": "Name",
            "PropagateAtLaunch": true,
            "Value": "aws-cdk-eks-cluster-test/Cluster/Nodes"
          }
        ],
        "VPCZoneIdentifier": [
          {
            "Ref": "VpcPrivateSubnet1Subnet536B997A"
          },
          {
            "Ref": "VpcPrivateSubnet2Subnet3788AAA1"
          },
          {
            "Ref": "VpcPrivateSubnet3SubnetF258B56E"
          }
        ]
      },
      "UpdatePolicy": {
        "AutoScalingRollingUpdate": {
          "WaitOnResourceSignals": false,
          "PauseTime": "PT0S",
          "SuspendProcesses": [
            "HealthCheck",
            "ReplaceUnhealthy",
            "AZRebalance",
            "AlarmNotification",
            "ScheduledActions"
          ]
        },
        "AutoScalingScheduledAction": {
          "IgnoreUnmodifiedGroupSizeProperties": true
        }
      }
    },
    "ClusterBottlerocketNodesInstanceSecurityGroup3794A94B": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "aws-cdk-eks-cluster-test/Cluster/BottlerocketNodes/InstanceSecurityGroup",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1"
          }
        ],
        "Tags": [
          {
            "Key": {
              "Fn::Join": [
                "",
                [
                  "kubernetes.io/cluster/",
                  {
                    "Ref": "Cluster9EE0221C"
                  }
                ]
              ]
            },
            "Value": "owned"
          },
          {
            "Key": "Name",
            "Value": "aws-cdk-eks-cluster-test/Cluster/BottlerocketNodes"
          }
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38"
        }
      }
    },
    "ClusterBottlerocketNodesInstanceSecurityGroupfromawscdkeksclustertestClusterBottlerocketNodesInstanceSecurityGroup83FE7914ALLTRAFFIC7B6353A7": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "IpProtocol": "-1",
        "Description": "from awscdkeksclustertestClusterBottlerocketNodesInstanceSecurityGroup83FE7914:ALL TRAFFIC",
        "GroupId": {
          "Fn::GetAtt": [
            "ClusterBottlerocketNodesInstanceSecurityGroup3794A94B",
            "GroupId"
          ]
        },
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "ClusterBottlerocketNodesInstanceSecurityGroup3794A94B",
            "GroupId"
          ]
        }
      }
    },
    "ClusterBottlerocketNodesInstanceSecurityGroupfromawscdkeksclustertestClusterControlPlaneSecurityGroup2F130134443A6D43789": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "IpProtocol": "tcp",
        "Description": "from awscdkeksclustertestClusterControlPlaneSecurityGroup2F130134:443",
        "FromPort": 443,
        "GroupId": {
          "Fn::GetAtt": [
            "ClusterBottlerocketNodesInstanceSecurityGroup3794A94B",
            "GroupId"
          ]
        },
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "ClusterControlPlaneSecurityGroupD274242C",
            "GroupId"
          ]
        },
        "ToPort": 443
      }
    },
    "ClusterBottlerocketNodesInstanceSecurityGroupfromawscdkeksclustertestClusterControlPlaneSecurityGroup2F1301341025655352CE8AD9A": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "IpProtocol": "tcp",
        "Description": "from awscdkeksclustertestClusterControlPlaneSecurityGroup2F130134:1025-65535",
        "FromPort": 1025,
        "GroupId": {
          "Fn::GetAtt": [
            "ClusterBottlerocketNodesInstanceSecurityGroup3794A94B",
            "GroupId"
          ]
        },
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "ClusterControlPlaneSecurityGroupD274242C",
            "GroupId"
          ]
        },
        "ToPort": 65535
      }
    },
    "ClusterBottlerocketNodesInstanceRole68E4BCFB": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": {
                  "Fn::Join": [
                    "",
                    [
                      "ec2.",
                      {
                        "Ref": "AWS::URLSuffix"
                      }
                    ]
                  ]
                }
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/AmazonEKSWorkerNodePolicy"
              ]
            ]
          },
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/AmazonEKS_CNI_Policy"
              ]
            ]
          },
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/AmazonEC2ContainerRegistryReadOnly"
              ]
            ]
          }
        ],
        "Tags": [
          {
            "Key": {
              "Fn::Join": [
                "",
                [
                  "kubernetes.io/cluster/",
                  {
                    "Ref": "Cluster9EE0221C"
                  }
                ]
              ]
            },
            "Value": "owned"
          },
          {
            "Key": "Name",
            "Value": "aws-cdk-eks-cluster-test/Cluster/BottlerocketNodes"
          }
        ]
      }
    },
    "ClusterBottlerocketNodesInstanceProfileB6E2F25A": {
      "Type": "AWS::IAM::InstanceProfile",
      "Properties": {
        "Roles": [
          {
            "Ref": "ClusterBottlerocketNodesInstanceRole68E4BCFB"
          }
        ]
      }
    },
    "ClusterBottlerocketNodesLaunchConfig76D7BEBE": {
      "Type": "AWS::AutoScaling::LaunchConfiguration",
      "Properties": {
        "ImageId": {
          "Ref": "SsmParameterValueawsservicebottlerocketawsk8s115x8664latestimageidC96584B6F00A464EAD1953AFF4B05118Parameter"
        },
        "InstanceType": "t3.small",
        "IamInstanceProfile": {
          "Ref": "ClusterBottlerocketNodesInstanceProfileB6E2F25A"
        },
        "SecurityGroups": [
          {
            "Fn::GetAtt": [
              "ClusterBottlerocketNodesInstanceSecurityGroup3794A94B",
              "GroupId"
            ]
          }
        ],
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "",
              [
                "\n[settings.kubernetes]\napi-server=\"",
                {
                  "Fn::GetAtt": [
                    "Cluster9EE0221C",
                    "Endpoint"
                  ]
                },
                "\"\ncluster-certificate=\"",
                {
                  "Fn::GetAtt": [
                    "Cluster9EE0221C",
                    "CertificateAuthorityData"
                  ]
                },
                "\"\ncluster-name=\"",
                {
                  "Ref": "Cluster9EE0221C"
                },
                "\""
              ]
            ]
          }
        }
      },
      "DependsOn": [
        "ClusterBottlerocketNodesInstanceRole68E4BCFB"
      ]
    },
    "ClusterBottlerocketNodesASGA27A9B70": {
      "Type": "AWS::AutoScaling::AutoScalingGroup",
      "Properties": {
        "MaxSize": "2",
        "MinSize": "2",
        "LaunchConfigurationName": {
          "Ref": "ClusterBottlerocketNodesLaunchConfig76D7BEBE"
        },
        "Tags": [
          {
            "Key": {
              "Fn::Join": [
                "",
                [
                  "kubernetes.io/cluster/",
                  {
                    "Ref": "Cluster9EE0221C"
                  }
                ]
              ]
            },
            "PropagateAtLaunch": true,
            "Value": "owned"
          },
          {
            "Key": "Name",
            "PropagateAtLaunch": true,
            "Value": "aws-cdk-eks-cluster-test/Cluster/BottlerocketNodes"
          }
        ],
        "VPCZoneIdentifier": [
          {
            "Ref": "VpcPrivateSubnet1Subnet536B997A"
          },
          {
            "Ref": "VpcPrivateSubnet2Subnet3788AAA1"
          },
          {
            "Ref": "VpcPrivateSubnet3SubnetF258B56E"
          }
        ]
      },
      "UpdatePolicy": {
        "AutoScalingRollingUpdate": {
          "WaitOnResourceSignals": false,
          "PauseTime": "PT0S",
          "SuspendProcesses": [
            "HealthCheck",
            "ReplaceUnhealthy",
            "AZRebalance",
            "AlarmNotification",
            "ScheduledActions"
          ]
        },
        "AutoScalingScheduledAction": {
          "IgnoreUnmodifiedGroupSizeProperties": true
        }
      }
    },
    "ClusterspotInstanceSecurityGroup01F7B1CE": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "aws-cdk-eks-cluster-test/Cluster/spot/InstanceSecurityGroup",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1"
          }
        ],
        "Tags": [
          {
            "Key": {
              "Fn::Join": [
                "",
                [
                  "kubernetes.io/cluster/",
                  {
                    "Ref": "Cluster9EE0221C"
                  }
                ]
              ]
            },
            "Value": "owned"
          },
          {
            "Key": "Name",
            "Value": "aws-cdk-eks-cluster-test/Cluster/spot"
          }
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38"
        }
      }
    },
    "ClusterspotInstanceSecurityGroupfromawscdkeksclustertestClusterspotInstanceSecurityGroupF50F5D47ALLTRAFFIC2B1A12D9": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "IpProtocol": "-1",
        "Description": "from awscdkeksclustertestClusterspotInstanceSecurityGroupF50F5D47:ALL TRAFFIC",
        "GroupId": {
          "Fn::GetAtt": [
            "ClusterspotInstanceSecurityGroup01F7B1CE",
            "GroupId"
          ]
        },
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "ClusterspotInstanceSecurityGroup01F7B1CE",
            "GroupId"
          ]
        }
      }
    },
    "ClusterspotInstanceSecurityGroupfromawscdkeksclustertestClusterControlPlaneSecurityGroup2F1301344430650F325": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "IpProtocol": "tcp",
        "Description": "from awscdkeksclustertestClusterControlPlaneSecurityGroup2F130134:443",
        "FromPort": 443,
        "GroupId": {
          "Fn::GetAtt": [
            "ClusterspotInstanceSecurityGroup01F7B1CE",
            "GroupId"
          ]
        },
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "ClusterControlPlaneSecurityGroupD274242C",
            "GroupId"
          ]
        },
        "ToPort": 443
      }
    },
    "ClusterspotInstanceSecurityGroupfromawscdkeksclustertestClusterControlPlaneSecurityGroup2F130134102565535C7203235": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "IpProtocol": "tcp",
        "Description": "from awscdkeksclustertestClusterControlPlaneSecurityGroup2F130134:1025-65535",
        "FromPort": 1025,
        "GroupId": {
          "Fn::GetAtt": [
            "ClusterspotInstanceSecurityGroup01F7B1CE",
            "GroupId"
          ]
        },
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "ClusterControlPlaneSecurityGroupD274242C",
            "GroupId"
          ]
        },
        "ToPort": 65535
      }
    },
    "ClusterspotInstanceRole39043830": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": {
                  "Fn::Join": [
                    "",
                    [
                      "ec2.",
                      {
                        "Ref": "AWS::URLSuffix"
                      }
                    ]
                  ]
                }
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/AmazonEKSWorkerNodePolicy"
              ]
            ]
          },
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/AmazonEKS_CNI_Policy"
              ]
            ]
          },
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/AmazonEC2ContainerRegistryReadOnly"
              ]
            ]
          }
        ],
        "Tags": [
          {
            "Key": {
              "Fn::Join": [
                "",
                [
                  "kubernetes.io/cluster/",
                  {
                    "Ref": "Cluster9EE0221C"
                  }
                ]
              ]
            },
            "Value": "owned"
          },
          {
            "Key": "Name",
            "Value": "aws-cdk-eks-cluster-test/Cluster/spot"
          }
        ]
      }
    },
    "ClusterspotInstanceProfileAB88D077": {
      "Type": "AWS::IAM::InstanceProfile",
      "Properties": {
        "Roles": [
          {
            "Ref": "ClusterspotInstanceRole39043830"
          }
        ]
      }
    },
    "ClusterspotLaunchConfigCC19F2E6": {
      "Type": "AWS::AutoScaling::LaunchConfiguration",
      "Properties": {
        "ImageId": {
          "Ref": "SsmParameterValueawsserviceeksoptimizedami116amazonlinux2recommendedimageidC96584B6F00A464EAD1953AFF4B05118Parameter"
        },
        "InstanceType": "t3.large",
        "IamInstanceProfile": {
          "Ref": "ClusterspotInstanceProfileAB88D077"
        },
        "SecurityGroups": [
          {
            "Fn::GetAtt": [
              "ClusterspotInstanceSecurityGroup01F7B1CE",
              "GroupId"
            ]
          }
        ],
        "SpotPrice": "0.1094",
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "",
              [
                "#!/bin/bash\nset -o xtrace\n/etc/eks/bootstrap.sh ",
                {
                  "Ref": "Cluster9EE0221C"
                },
                " --kubelet-extra-args \"--node-labels lifecycle=Ec2Spot --register-with-taints=spotInstance=true:PreferNoSchedule --node-labels foo=bar,goo=far\" --use-max-pods true --aws-api-retry-attempts 5\n/opt/aws/bin/cfn-signal --exit-code $? --stack aws-cdk-eks-cluster-test --resource ClusterspotASG857494B6 --region test-region"
              ]
            ]
          }
        }
      },
      "DependsOn": [
        "ClusterspotInstanceRole39043830"
      ]
    },
    "ClusterspotASG857494B6": {
      "Type": "AWS::AutoScaling::AutoScalingGroup",
      "Properties": {
        "MaxSize": "10",
        "MinSize": "1",
        "LaunchConfigurationName": {
          "Ref": "ClusterspotLaunchConfigCC19F2E6"
        },
        "Tags": [
          {
            "Key": {
              "Fn::Join": [
                "",
                [
                  "kubernetes.io/cluster/",
                  {
                    "Ref": "Cluster9EE0221C"
                  }
                ]
              ]
            },
            "PropagateAtLaunch": true,
            "Value": "owned"
          },
          {
            "Key": "Name",
            "PropagateAtLaunch": true,
            "Value": "aws-cdk-eks-cluster-test/Cluster/spot"
          }
        ],
        "VPCZoneIdentifier": [
          {
            "Ref": "VpcPrivateSubnet1Subnet536B997A"
          },
          {
            "Ref": "VpcPrivateSubnet2Subnet3788AAA1"
          },
          {
            "Ref": "VpcPrivateSubnet3SubnetF258B56E"
          }
        ]
      },
      "UpdatePolicy": {
        "AutoScalingRollingUpdate": {
          "WaitOnResourceSignals": false,
          "PauseTime": "PT0S",
          "SuspendProcesses": [
            "HealthCheck",
            "ReplaceUnhealthy",
            "AZRebalance",
            "AlarmNotification",
            "ScheduledActions"
          ]
        },
        "AutoScalingScheduledAction": {
          "IgnoreUnmodifiedGroupSizeProperties": true
        }
      }
    },
    "Clusterchartspotinterrupthandler79E2D768": {
      "Type": "Custom::AWSCDK-EKS-HelmChart",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B",
            "Outputs.awscdkeksclustertestawscdkawseksKubectlProviderframeworkonEventC681B49AArn"
          ]
        },
        "ClusterName": {
          "Ref": "Cluster9EE0221C"
        },
        "RoleArn": {
          "Fn::GetAtt": [
            "ClusterCreationRole360249B6",
            "Arn"
          ]
        },
        "Release": "ksclustertestclusterchartspotinterrupthandlerf41ba997",
        "Chart": "aws-node-termination-handler",
        "Version": "0.7.3",
        "Wait": false,
        "Values": "{\"nodeSelector.lifecycle\":\"Ec2Spot\"}",
        "Namespace": "kube-system",
        "Repository": "https://aws.github.io/eks-charts"
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete"
    },
    "ClusterInferenceInstancesInstanceSecurityGroupECB3FC45": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "aws-cdk-eks-cluster-test/Cluster/InferenceInstances/InstanceSecurityGroup",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1"
          }
        ],
        "Tags": [
          {
            "Key": {
              "Fn::Join": [
                "",
                [
                  "kubernetes.io/cluster/",
                  {
                    "Ref": "Cluster9EE0221C"
                  }
                ]
              ]
            },
            "Value": "owned"
          },
          {
            "Key": "Name",
            "Value": "aws-cdk-eks-cluster-test/Cluster/InferenceInstances"
          }
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38"
        }
      }
    },
    "ClusterInferenceInstancesInstanceSecurityGroupfromawscdkeksclustertestClusterInferenceInstancesInstanceSecurityGroup42C57C51ALLTRAFFICB6138869": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "IpProtocol": "-1",
        "Description": "from awscdkeksclustertestClusterInferenceInstancesInstanceSecurityGroup42C57C51:ALL TRAFFIC",
        "GroupId": {
          "Fn::GetAtt": [
            "ClusterInferenceInstancesInstanceSecurityGroupECB3FC45",
            "GroupId"
          ]
        },
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "ClusterInferenceInstancesInstanceSecurityGroupECB3FC45",
            "GroupId"
          ]
        }
      }
    },
    "ClusterInferenceInstancesInstanceSecurityGroupfromawscdkeksclustertestClusterControlPlaneSecurityGroup2F1301344437B48FD33": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "IpProtocol": "tcp",
        "Description": "from awscdkeksclustertestClusterControlPlaneSecurityGroup2F130134:443",
        "FromPort": 443,
        "GroupId": {
          "Fn::GetAtt": [
            "ClusterInferenceInstancesInstanceSecurityGroupECB3FC45",
            "GroupId"
          ]
        },
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "ClusterControlPlaneSecurityGroupD274242C",
            "GroupId"
          ]
        },
        "ToPort": 443
      }
    },
    "ClusterInferenceInstancesInstanceSecurityGroupfromawscdkeksclustertestClusterControlPlaneSecurityGroup2F130134102565535A460F673": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "IpProtocol": "tcp",
        "Description": "from awscdkeksclustertestClusterControlPlaneSecurityGroup2F130134:1025-65535",
        "FromPort": 1025,
        "GroupId": {
          "Fn::GetAtt": [
            "ClusterInferenceInstancesInstanceSecurityGroupECB3FC45",
            "GroupId"
          ]
        },
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "ClusterControlPlaneSecurityGroupD274242C",
            "GroupId"
          ]
        },
        "ToPort": 65535
      }
    },
    "ClusterInferenceInstancesInstanceRole59AC6F56": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": {
                  "Fn::Join": [
                    "",
                    [
                      "ec2.",
                      {
                        "Ref": "AWS::URLSuffix"
                      }
                    ]
                  ]
                }
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/AmazonEKSWorkerNodePolicy"
              ]
            ]
          },
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/AmazonEKS_CNI_Policy"
              ]
            ]
          },
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/AmazonEC2ContainerRegistryReadOnly"
              ]
            ]
          }
        ],
        "Tags": [
          {
            "Key": {
              "Fn::Join": [
                "",
                [
                  "kubernetes.io/cluster/",
                  {
                    "Ref": "Cluster9EE0221C"
                  }
                ]
              ]
            },
            "Value": "owned"
          },
          {
            "Key": "Name",
            "Value": "aws-cdk-eks-cluster-test/Cluster/InferenceInstances"
          }
        ]
      }
    },
    "ClusterInferenceInstancesInstanceProfile5A1209B4": {
      "Type": "AWS::IAM::InstanceProfile",
      "Properties": {
        "Roles": [
          {
            "Ref": "ClusterInferenceInstancesInstanceRole59AC6F56"
          }
        ]
      }
    },
    "ClusterInferenceInstancesLaunchConfig03BF48FE": {
      "Type": "AWS::AutoScaling::LaunchConfiguration",
      "Properties": {
        "ImageId": {
          "Ref": "SsmParameterValueawsserviceeksoptimizedami116amazonlinux2gpurecommendedimageidC96584B6F00A464EAD1953AFF4B05118Parameter"
        },
        "InstanceType": "inf1.2xlarge",
        "IamInstanceProfile": {
          "Ref": "ClusterInferenceInstancesInstanceProfile5A1209B4"
        },
        "SecurityGroups": [
          {
            "Fn::GetAtt": [
              "ClusterInferenceInstancesInstanceSecurityGroupECB3FC45",
              "GroupId"
            ]
          }
        ],
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "",
              [
                "#!/bin/bash\nset -o xtrace\n/etc/eks/bootstrap.sh ",
                {
                  "Ref": "Cluster9EE0221C"
                },
                " --kubelet-extra-args \"--node-labels lifecycle=OnDemand\" --use-max-pods true\n/opt/aws/bin/cfn-signal --exit-code $? --stack aws-cdk-eks-cluster-test --resource ClusterInferenceInstancesASGE90717C7 --region test-region"
              ]
            ]
          }
        }
      },
      "DependsOn": [
        "ClusterInferenceInstancesInstanceRole59AC6F56"
      ]
    },
    "ClusterInferenceInstancesASGE90717C7": {
      "Type": "AWS::AutoScaling::AutoScalingGroup",
      "Properties": {
        "MaxSize": "1",
        "MinSize": "1",
        "LaunchConfigurationName": {
          "Ref": "ClusterInferenceInstancesLaunchConfig03BF48FE"
        },
        "Tags": [
          {
            "Key": {
              "Fn::Join": [
                "",
                [
                  "kubernetes.io/cluster/",
                  {
                    "Ref": "Cluster9EE0221C"
                  }
                ]
              ]
            },
            "PropagateAtLaunch": true,
            "Value": "owned"
          },
          {
            "Key": "Name",
            "PropagateAtLaunch": true,
            "Value": "aws-cdk-eks-cluster-test/Cluster/InferenceInstances"
          }
        ],
        "VPCZoneIdentifier": [
          {
            "Ref": "VpcPrivateSubnet1Subnet536B997A"
          },
          {
            "Ref": "VpcPrivateSubnet2Subnet3788AAA1"
          },
          {
            "Ref": "VpcPrivateSubnet3SubnetF258B56E"
          }
        ]
      },
      "UpdatePolicy": {
        "AutoScalingRollingUpdate": {
          "WaitOnResourceSignals": false,
          "PauseTime": "PT0S",
          "SuspendProcesses": [
            "HealthCheck",
            "ReplaceUnhealthy",
            "AZRebalance",
            "AlarmNotification",
            "ScheduledActions"
          ]
        },
        "AutoScalingScheduledAction": {
          "IgnoreUnmodifiedGroupSizeProperties": true
        }
      }
    },
    "ClustermanifestNeuronDevicePlugin0B3E0D17": {
      "Type": "Custom::AWSCDK-EKS-KubernetesResource",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B",
            "Outputs.awscdkeksclustertestawscdkawseksKubectlProviderframeworkonEventC681B49AArn"
          ]
        },
        "Manifest": "[{\"apiVersion\":\"apps/v1\",\"kind\":\"DaemonSet\",\"metadata\":{\"name\":\"neuron-device-plugin-daemonset\",\"namespace\":\"kube-system\"},\"spec\":{\"selector\":{\"matchLabels\":{\"name\":\"neuron-device-plugin-ds\"}},\"updateStrategy\":{\"type\":\"RollingUpdate\"},\"template\":{\"metadata\":{\"annotations\":{\"scheduler.alpha.kubernetes.io/critical-pod\":\"\"},\"labels\":{\"name\":\"neuron-device-plugin-ds\"}},\"spec\":{\"tolerations\":[{\"key\":\"CriticalAddonsOnly\",\"operator\":\"Exists\"},{\"key\":\"aws.amazon.com/neuron\",\"operator\":\"Exists\",\"effect\":\"NoSchedule\"}],\"priorityClassName\":\"system-node-critical\",\"affinity\":{\"nodeAffinity\":{\"requiredDuringSchedulingIgnoredDuringExecution\":{\"nodeSelectorTerms\":[{\"matchExpressions\":[{\"key\":\"beta.kubernetes.io/instance-type\",\"operator\":\"In\",\"values\":[\"inf1.xlarge\",\"inf1.2xlarge\",\"inf1.6xlarge\",\"inf1.4xlarge\"]}]},{\"matchExpressions\":[{\"key\":\"node.kubernetes.io/instance-type\",\"operator\":\"In\",\"values\":[\"inf1.xlarge\",\"inf1.2xlarge\",\"inf1.6xlarge\",\"inf1.24xlarge\"]}]}]}}},\"containers\":[{\"image\":\"790709498068.dkr.ecr.us-west-2.amazonaws.com/neuron-device-plugin:1.0.9043.0\",\"imagePullPolicy\":\"Always\",\"name\":\"k8s-neuron-device-plugin-ctr\",\"securityContext\":{\"allowPrivilegeEscalation\":false,\"capabilities\":{\"drop\":[\"ALL\"]}},\"volumeMounts\":[{\"name\":\"device-plugin\",\"mountPath\":\"/var/lib/kubelet/device-plugins\"}]}],\"volumes\":[{\"name\":\"device-plugin\",\"hostPath\":{\"path\":\"/var/lib/kubelet/device-plugins\"}}]}}}}]",
        "ClusterName": {
          "Ref": "Cluster9EE0221C"
        },
        "RoleArn": {
          "Fn::GetAtt": [
            "ClusterCreationRole360249B6",
            "Arn"
          ]
        }
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete"
    },
    "ClusterNodegroupextrangNodeGroupRole23AE23D0": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": {
                  "Fn::Join": [
                    "",
                    [
                      "ec2.",
                      {
                        "Ref": "AWS::URLSuffix"
                      }
                    ]
                  ]
                }
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/AmazonEKSWorkerNodePolicy"
              ]
            ]
          },
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/AmazonEKS_CNI_Policy"
              ]
            ]
          },
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/AmazonEC2ContainerRegistryReadOnly"
              ]
            ]
          }
        ]
      }
    },
    "ClusterNodegroupextrangF9406A09": {
      "Type": "AWS::EKS::Nodegroup",
      "Properties": {
        "ClusterName": {
          "Ref": "Cluster9EE0221C"
        },
        "NodeRole": {
          "Fn::GetAtt": [
            "ClusterNodegroupextrangNodeGroupRole23AE23D0",
            "Arn"
          ]
        },
        "Subnets": [
          {
            "Ref": "VpcPrivateSubnet1Subnet536B997A"
          },
          {
            "Ref": "VpcPrivateSubnet2Subnet3788AAA1"
          },
          {
            "Ref": "VpcPrivateSubnet3SubnetF258B56E"
          }
        ],
        "ForceUpdateEnabled": true,
        "InstanceTypes": [
          "t3.small"
        ],
        "ScalingConfig": {
          "DesiredSize": 1,
          "MaxSize": 1,
          "MinSize": 1
        }
      }
    },
    "ClustermanifestHelloApp078A45D8": {
      "Type": "Custom::AWSCDK-EKS-KubernetesResource",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B",
            "Outputs.awscdkeksclustertestawscdkawseksKubectlProviderframeworkonEventC681B49AArn"
          ]
        },
        "Manifest": "[{\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"name\":\"hello-kubernetes\"},\"spec\":{\"type\":\"LoadBalancer\",\"ports\":[{\"port\":80,\"targetPort\":8080}],\"selector\":{\"app\":\"hello-kubernetes\"}}},{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"name\":\"hello-kubernetes\"},\"spec\":{\"replicas\":1,\"selector\":{\"matchLabels\":{\"app\":\"hello-kubernetes\"}},\"template\":{\"metadata\":{\"labels\":{\"app\":\"hello-kubernetes\"}},\"spec\":{\"containers\":[{\"name\":\"hello-kubernetes\",\"image\":\"paulbouwer/hello-kubernetes:1.5\",\"ports\":[{\"containerPort\":8080}]}]}}}}]",
        "ClusterName": {
          "Ref": "Cluster9EE0221C"
        },
        "RoleArn": {
          "Fn::GetAtt": [
            "ClusterCreationRole360249B6",
            "Arn"
          ]
        }
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete"
    },
    "Clusterchartdashboard4AA45F3F": {
      "Type": "Custom::AWSCDK-EKS-HelmChart",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B",
            "Outputs.awscdkeksclustertestawscdkawseksKubectlProviderframeworkonEventC681B49AArn"
          ]
        },
        "ClusterName": {
          "Ref": "Cluster9EE0221C"
        },
        "RoleArn": {
          "Fn::GetAtt": [
            "ClusterCreationRole360249B6",
            "Arn"
          ]
        },
        "Release": "awscdkeksclustertestclusterchartdashboard1f3d83fe",
        "Chart": "kubernetes-dashboard",
        "Wait": false,
        "Namespace": "default",
        "Repository": "https://kubernetes.github.io/dashboard/"
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete"
    },
    "Clusterchartnginxingress1193EC3F": {
      "Type": "Custom::AWSCDK-EKS-HelmChart",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B",
            "Outputs.awscdkeksclustertestawscdkawseksKubectlProviderframeworkonEventC681B49AArn"
          ]
        },
        "ClusterName": {
          "Ref": "Cluster9EE0221C"
        },
        "RoleArn": {
          "Fn::GetAtt": [
            "ClusterCreationRole360249B6",
            "Arn"
          ]
        },
        "Release": "awscdkeksclustertestclusterchartnginxingressa7f70129",
        "Chart": "nginx-ingress",
        "Wait": true,
        "Timeout": "900s",
        "Namespace": "kube-system",
        "Repository": "https://helm.nginx.com/stable"
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete"
    },
    "ClusterMyServiceAccountConditionJson671C0633": {
      "Type": "Custom::AWSCDKCfnJson",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "AWSCDKCfnUtilsProviderCustomResourceProviderHandlerCF82AA57",
            "Arn"
          ]
        },
        "Value": {
          "Fn::Join": [
            "",
            [
              "{\"",
              {
                "Fn::GetAtt": [
                  "Cluster9EE0221C",
                  "OpenIdConnectIssuer"
                ]
              },
              ":aud\":\"sts.amazonaws.com\",\"",
              {
                "Fn::GetAtt": [
                  "Cluster9EE0221C",
                  "OpenIdConnectIssuer"
                ]
              },
              ":sub\":\"system:serviceaccount:default:awscdkeksclustertestclustermyserviceaccount4080bcdd\"}"
            ]
          ]
        }
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete"
    },
    "ClusterMyServiceAccountRole85337B29": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRoleWithWebIdentity",
              "Condition": {
                "StringEquals": {
                  "Fn::GetAtt": [
                    "ClusterMyServiceAccountConditionJson671C0633",
                    "Value"
                  ]
                }
              },
              "Effect": "Allow",
              "Principal": {
                "Federated": {
                  "Ref": "ClusterOpenIdConnectProviderE7EB0530"
                }
              }
            }
          ],
          "Version": "2012-10-17"
        }
      }
    },
    "ClusterOpenIdConnectProviderE7EB0530": {
      "Type": "Custom::AWSCDKOpenIdConnectProvider",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomAWSCDKOpenIdConnectProviderCustomResourceProviderHandlerF2C543E0",
            "Arn"
          ]
        },
        "ClientIDList": [
          "sts.amazonaws.com"
        ],
        "ThumbprintList": [
          "9e99a48a9960b14926bb7f3b02e22da2b0ab7280"
        ],
        "Url": {
          "Fn::GetAtt": [
            "Cluster9EE0221C",
            "OpenIdConnectIssuerUrl"
          ]
        }
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete"
    },
    "ClustermanifestMyServiceAccountServiceAccountResource0EC03615": {
      "Type": "Custom::AWSCDK-EKS-KubernetesResource",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B",
            "Outputs.awscdkeksclustertestawscdkawseksKubectlProviderframeworkonEventC681B49AArn"
          ]
        },
        "Manifest": {
          "Fn::Join": [
            "",
            [
              "[{\"apiVersion\":\"v1\",\"kind\":\"ServiceAccount\",\"metadata\":{\"name\":\"awscdkeksclustertestclustermyserviceaccount4080bcdd\",\"namespace\":\"default\",\"labels\":{\"app.kubernetes.io/name\":\"awscdkeksclustertestclustermyserviceaccount4080bcdd\"},\"annotations\":{\"eks.amazonaws.com/role-arn\":\"",
              {
                "Fn::GetAtt": [
                  "ClusterMyServiceAccountRole85337B29",
                  "Arn"
                ]
              },
              "\"}}}]"
            ]
          ]
        },
        "ClusterName": {
          "Ref": "Cluster9EE0221C"
        },
        "RoleArn": {
          "Fn::GetAtt": [
            "ClusterCreationRole360249B6",
            "Arn"
          ]
        }
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete"
    },
    "awscdkawseksClusterResourceProviderNestedStackawscdkawseksClusterResourceProviderNestedStackResource9827C454": {
      "Type": "AWS::CloudFormation::Stack",
      "Properties": {
        "TemplateURL": {
          "Fn::Join": [
            "",
            [
              "https://s3.test-region.",
              {
                "Ref": "AWS::URLSuffix"
              },
              "/",
              {
                "Ref": "AssetParameters7255958d303a278986617e8d7ce027c96cd00a70fb8f1ca02c1e0da94a571896S3BucketA0BEF119"
              },
              "/",
              {
                "Fn::Select": [
                  0,
                  {
                    "Fn::Split": [
                      "||",
                      {
                        "Ref": "AssetParameters7255958d303a278986617e8d7ce027c96cd00a70fb8f1ca02c1e0da94a571896S3VersionKey639A5314"
                      }
                    ]
                  }
                ]
              },
              {
                "Fn::Select": [
                  1,
                  {
                    "Fn::Split": [
                      "||",
                      {
                        "Ref": "AssetParameters7255958d303a278986617e8d7ce027c96cd00a70fb8f1ca02c1e0da94a571896S3VersionKey639A5314"
                      }
                    ]
                  }
                ]
              }
            ]
          ]
        },
        "Parameters": {
          "referencetoawscdkeksclustertestAssetParametersc23ce59a47ffb1e28812148fb83f7dcb0d94f1f0286e122a2f1aa189c0b35d03S3BucketD5010C93Ref": {
            "Ref": "AssetParametersc23ce59a47ffb1e28812148fb83f7dcb0d94f1f0286e122a2f1aa189c0b35d03S3Bucket2F8CA18B"
          },
          "referencetoawscdkeksclustertestAssetParametersc23ce59a47ffb1e28812148fb83f7dcb0d94f1f0286e122a2f1aa189c0b35d03S3VersionKeyAC8DDB71Ref": {
            "Ref": "AssetParametersc23ce59a47ffb1e28812148fb83f7dcb0d94f1f0286e122a2f1aa189c0b35d03S3VersionKeyEFEE8BE5"
          },
          "referencetoawscdkeksclustertestAssetParameters5d5280180ad87e8a1c2a08423cb5b2dae41281832799cd51db5eff913091ade6S3Bucket8FECC379Ref": {
            "Ref": "AssetParameters5d5280180ad87e8a1c2a08423cb5b2dae41281832799cd51db5eff913091ade6S3Bucket03CDDE18"
          },
          "referencetoawscdkeksclustertestAssetParameters5d5280180ad87e8a1c2a08423cb5b2dae41281832799cd51db5eff913091ade6S3VersionKey0555F20FRef": {
            "Ref": "AssetParameters5d5280180ad87e8a1c2a08423cb5b2dae41281832799cd51db5eff913091ade6S3VersionKey68B2E471"
          }
        }
      }
    },
    "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B": {
      "Type": "AWS::CloudFormation::Stack",
      "Properties": {
        "TemplateURL": {
          "Fn::Join": [
            "",
            [
              "https://s3.test-region.",
              {
                "Ref": "AWS::URLSuffix"
              },
              "/",
              {
                "Ref": "AssetParameters5b580ce3f53b1ee1551ac2e759433f10ef9a6a312bf7a501a0753fddcc8a3042S3BucketAE64A22C"
              },
              "/",
              {
                "Fn::Select": [
                  0,
                  {
                    "Fn::Split": [
                      "||",
                      {
                        "Ref": "AssetParameters5b580ce3f53b1ee1551ac2e759433f10ef9a6a312bf7a501a0753fddcc8a3042S3VersionKeyAFF70CF1"
                      }
                    ]
                  }
                ]
              },
              {
                "Fn::Select": [
                  1,
                  {
                    "Fn::Split": [
                      "||",
                      {
                        "Ref": "AssetParameters5b580ce3f53b1ee1551ac2e759433f10ef9a6a312bf7a501a0753fddcc8a3042S3VersionKeyAFF70CF1"
                      }
                    ]
                  }
                ]
              }
            ]
          ]
        },
        "Parameters": {
          "referencetoawscdkeksclustertestAssetParametersca6f286e0d135e22cfefc133659e2f2fe139a4b46b8eef5b8e197606625c9af9S3Bucket973804E9Ref": {
            "Ref": "AssetParametersca6f286e0d135e22cfefc133659e2f2fe139a4b46b8eef5b8e197606625c9af9S3BucketC1533EC8"
          },
          "referencetoawscdkeksclustertestAssetParametersca6f286e0d135e22cfefc133659e2f2fe139a4b46b8eef5b8e197606625c9af9S3VersionKey2F733777Ref": {
            "Ref": "AssetParametersca6f286e0d135e22cfefc133659e2f2fe139a4b46b8eef5b8e197606625c9af9S3VersionKey2C834492"
          },
          "referencetoawscdkeksclustertestAssetParameters5d5280180ad87e8a1c2a08423cb5b2dae41281832799cd51db5eff913091ade6S3Bucket8FECC379Ref": {
            "Ref": "AssetParameters5d5280180ad87e8a1c2a08423cb5b2dae41281832799cd51db5eff913091ade6S3Bucket03CDDE18"
          },
          "referencetoawscdkeksclustertestAssetParameters5d5280180ad87e8a1c2a08423cb5b2dae41281832799cd51db5eff913091ade6S3VersionKey0555F20FRef": {
            "Ref": "AssetParameters5d5280180ad87e8a1c2a08423cb5b2dae41281832799cd51db5eff913091ade6S3VersionKey68B2E471"
          }
        }
      }
    },
    "AWSCDKCfnUtilsProviderCustomResourceProviderRoleFE0EE867": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ]
        },
        "ManagedPolicyArns": [
          {
            "Fn::Sub": "arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
          }
        ]
      }
    },
    "AWSCDKCfnUtilsProviderCustomResourceProviderHandlerCF82AA57": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "AssetParameters3b28f4ee261986c158a160900e3042a61238f644fe502199d60bcea592128086S3Bucket57C0655B"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters3b28f4ee261986c158a160900e3042a61238f644fe502199d60bcea592128086S3VersionKey4BC65AD6"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters3b28f4ee261986c158a160900e3042a61238f644fe502199d60bcea592128086S3VersionKey4BC65AD6"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Timeout": 900,
        "MemorySize": 128,
        "Handler": "__entrypoint__.handler",
        "Role": {
          "Fn::GetAtt": [
            "AWSCDKCfnUtilsProviderCustomResourceProviderRoleFE0EE867",
            "Arn"
          ]
        },
        "Runtime": "nodejs12.x"
      },
      "DependsOn": [
        "AWSCDKCfnUtilsProviderCustomResourceProviderRoleFE0EE867"
      ]
    },
    "CustomAWSCDKOpenIdConnectProviderCustomResourceProviderRole517FED65": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ]
        },
        "ManagedPolicyArns": [
          {
            "Fn::Sub": "arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
          }
        ],
        "Policies": [
          {
            "PolicyName": "Inline",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Resource": "*",
                  "Action": [
                    "iam:CreateOpenIDConnectProvider",
                    "iam:DeleteOpenIDConnectProvider",
                    "iam:UpdateOpenIDConnectProviderThumbprint",
                    "iam:AddClientIDToOpenIDConnectProvider",
                    "iam:RemoveClientIDFromOpenIDConnectProvider"
                  ]
                }
              ]
            }
          }
        ]
      }
    },
    "CustomAWSCDKOpenIdConnectProviderCustomResourceProviderHandlerF2C543E0": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "AssetParametersea46702e1c05b2735e48e826d630f7bf6acdf7e55d6fa8d9fa8df858d5542161S3Bucket0C424907"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParametersea46702e1c05b2735e48e826d630f7bf6acdf7e55d6fa8d9fa8df858d5542161S3VersionKey6841F1F8"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParametersea46702e1c05b2735e48e826d630f7bf6acdf7e55d6fa8d9fa8df858d5542161S3VersionKey6841F1F8"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Timeout": 900,
        "MemorySize": 128,
        "Handler": "__entrypoint__.handler",
        "Role": {
          "Fn::GetAtt": [
            "CustomAWSCDKOpenIdConnectProviderCustomResourceProviderRole517FED65",
            "Arn"
          ]
        },
        "Runtime": "nodejs12.x"
      },
      "DependsOn": [
        "CustomAWSCDKOpenIdConnectProviderCustomResourceProviderRole517FED65"
      ]
    }
  },
  "Outputs": {
    "ClusterConfigCommand43AAE40F": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "aws eks update-kubeconfig --name ",
            {
              "Ref": "Cluster9EE0221C"
            },
            " --region test-region --role-arn ",
            {
              "Fn::GetAtt": [
                "AdminRole38563C57",
                "Arn"
              ]
            }
          ]
        ]
      }
    },
    "ClusterGetTokenCommand06AE992E": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "aws eks get-token --cluster-name ",
            {
              "Ref": "Cluster9EE0221C"
            },
            " --region test-region --role-arn ",
            {
              "Fn::GetAtt": [
                "AdminRole38563C57",
                "Arn"
              ]
            }
          ]
        ]
      }
    },
    "ClusterEndpoint": {
      "Value": {
        "Fn::GetAtt": [
          "Cluster9EE0221C",
          "Endpoint"
        ]
      }
    },
    "ClusterArn": {
      "Value": {
        "Fn::GetAtt": [
          "Cluster9EE0221C",
          "Arn"
        ]
      }
    },
    "ClusterCertificateAuthorityData": {
      "Value": {
        "Fn::GetAtt": [
          "Cluster9EE0221C",
          "CertificateAuthorityData"
        ]
      }
    },
    "ClusterSecurityGroupId": {
      "Value": {
        "Fn::GetAtt": [
          "Cluster9EE0221C",
          "ClusterSecurityGroupId"
        ]
      }
    },
    "ClusterEncryptionConfigKeyArn": {
      "Value": {
        "Fn::GetAtt": [
          "Cluster9EE0221C",
          "EncryptionConfigKeyArn"
        ]
      }
    },
    "ClusterName": {
      "Value": {
        "Ref": "Cluster9EE0221C"
      }
    }
  },
  "Parameters": {
    "AssetParametersc23ce59a47ffb1e28812148fb83f7dcb0d94f1f0286e122a2f1aa189c0b35d03S3Bucket2F8CA18B": {
      "Type": "String",
      "Description": "S3 bucket for asset \"c23ce59a47ffb1e28812148fb83f7dcb0d94f1f0286e122a2f1aa189c0b35d03\""
    },
    "AssetParametersc23ce59a47ffb1e28812148fb83f7dcb0d94f1f0286e122a2f1aa189c0b35d03S3VersionKeyEFEE8BE5": {
      "Type": "String",
      "Description": "S3 key for asset version \"c23ce59a47ffb1e28812148fb83f7dcb0d94f1f0286e122a2f1aa189c0b35d03\""
    },
    "AssetParametersc23ce59a47ffb1e28812148fb83f7dcb0d94f1f0286e122a2f1aa189c0b35d03ArtifactHashC187523A": {
      "Type": "String",
      "Description": "Artifact hash for asset \"c23ce59a47ffb1e28812148fb83f7dcb0d94f1f0286e122a2f1aa189c0b35d03\""
    },
    "AssetParameters5d5280180ad87e8a1c2a08423cb5b2dae41281832799cd51db5eff913091ade6S3Bucket03CDDE18": {
      "Type": "String",
      "Description": "S3 bucket for asset \"5d5280180ad87e8a1c2a08423cb5b2dae41281832799cd51db5eff913091ade6\""
    },
    "AssetParameters5d5280180ad87e8a1c2a08423cb5b2dae41281832799cd51db5eff913091ade6S3VersionKey68B2E471": {
      "Type": "String",
      "Description": "S3 key for asset version \"5d5280180ad87e8a1c2a08423cb5b2dae41281832799cd51db5eff913091ade6\""
    },
    "AssetParameters5d5280180ad87e8a1c2a08423cb5b2dae41281832799cd51db5eff913091ade6ArtifactHash3651BF53": {
      "Type": "String",
      "Description": "Artifact hash for asset \"5d5280180ad87e8a1c2a08423cb5b2dae41281832799cd51db5eff913091ade6\""
    },
    "AssetParametersca6f286e0d135e22cfefc133659e2f2fe139a4b46b8eef5b8e197606625c9af9S3BucketC1533EC8": {
      "Type": "String",
      "Description": "S3 bucket for asset \"ca6f286e0d135e22cfefc133659e2f2fe139a4b46b8eef5b8e197606625c9af9\""
    },
    "AssetParametersca6f286e0d135e22cfefc133659e2f2fe139a4b46b8eef5b8e197606625c9af9S3VersionKey2C834492": {
      "Type": "String",
      "Description": "S3 key for asset version \"ca6f286e0d135e22cfefc133659e2f2fe139a4b46b8eef5b8e197606625c9af9\""
    },
    "AssetParametersca6f286e0d135e22cfefc133659e2f2fe139a4b46b8eef5b8e197606625c9af9ArtifactHash51A7CDC3": {
      "Type": "String",
      "Description": "Artifact hash for asset \"ca6f286e0d135e22cfefc133659e2f2fe139a4b46b8eef5b8e197606625c9af9\""
    },
    "AssetParameters3b28f4ee261986c158a160900e3042a61238f644fe502199d60bcea592128086S3Bucket57C0655B": {
      "Type": "String",
      "Description": "S3 bucket for asset \"3b28f4ee261986c158a160900e3042a61238f644fe502199d60bcea592128086\""
    },
    "AssetParameters3b28f4ee261986c158a160900e3042a61238f644fe502199d60bcea592128086S3VersionKey4BC65AD6": {
      "Type": "String",
      "Description": "S3 key for asset version \"3b28f4ee261986c158a160900e3042a61238f644fe502199d60bcea592128086\""
    },
    "AssetParameters3b28f4ee261986c158a160900e3042a61238f644fe502199d60bcea592128086ArtifactHashD8D99435": {
      "Type": "String",
      "Description": "Artifact hash for asset \"3b28f4ee261986c158a160900e3042a61238f644fe502199d60bcea592128086\""
    },
    "AssetParametersea46702e1c05b2735e48e826d630f7bf6acdf7e55d6fa8d9fa8df858d5542161S3Bucket0C424907": {
      "Type": "String",
      "Description": "S3 bucket for asset \"ea46702e1c05b2735e48e826d630f7bf6acdf7e55d6fa8d9fa8df858d5542161\""
    },
    "AssetParametersea46702e1c05b2735e48e826d630f7bf6acdf7e55d6fa8d9fa8df858d5542161S3VersionKey6841F1F8": {
      "Type": "String",
      "Description": "S3 key for asset version \"ea46702e1c05b2735e48e826d630f7bf6acdf7e55d6fa8d9fa8df858d5542161\""
    },
    "AssetParametersea46702e1c05b2735e48e826d630f7bf6acdf7e55d6fa8d9fa8df858d5542161ArtifactHash67B22EF2": {
      "Type": "String",
      "Description": "Artifact hash for asset \"ea46702e1c05b2735e48e826d630f7bf6acdf7e55d6fa8d9fa8df858d5542161\""
    },
    "AssetParameters7255958d303a278986617e8d7ce027c96cd00a70fb8f1ca02c1e0da94a571896S3BucketA0BEF119": {
      "Type": "String",
      "Description": "S3 bucket for asset \"7255958d303a278986617e8d7ce027c96cd00a70fb8f1ca02c1e0da94a571896\""
    },
    "AssetParameters7255958d303a278986617e8d7ce027c96cd00a70fb8f1ca02c1e0da94a571896S3VersionKey639A5314": {
      "Type": "String",
      "Description": "S3 key for asset version \"7255958d303a278986617e8d7ce027c96cd00a70fb8f1ca02c1e0da94a571896\""
    },
    "AssetParameters7255958d303a278986617e8d7ce027c96cd00a70fb8f1ca02c1e0da94a571896ArtifactHash8FB2ECC5": {
      "Type": "String",
      "Description": "Artifact hash for asset \"7255958d303a278986617e8d7ce027c96cd00a70fb8f1ca02c1e0da94a571896\""
    },
    "AssetParameters5b580ce3f53b1ee1551ac2e759433f10ef9a6a312bf7a501a0753fddcc8a3042S3BucketAE64A22C": {
      "Type": "String",
      "Description": "S3 bucket for asset \"5b580ce3f53b1ee1551ac2e759433f10ef9a6a312bf7a501a0753fddcc8a3042\""
    },
    "AssetParameters5b580ce3f53b1ee1551ac2e759433f10ef9a6a312bf7a501a0753fddcc8a3042S3VersionKeyAFF70CF1": {
      "Type": "String",
      "Description": "S3 key for asset version \"5b580ce3f53b1ee1551ac2e759433f10ef9a6a312bf7a501a0753fddcc8a3042\""
    },
    "AssetParameters5b580ce3f53b1ee1551ac2e759433f10ef9a6a312bf7a501a0753fddcc8a3042ArtifactHashD8735DDD": {
      "Type": "String",
      "Description": "Artifact hash for asset \"5b580ce3f53b1ee1551ac2e759433f10ef9a6a312bf7a501a0753fddcc8a3042\""
    },
    "SsmParameterValueawsserviceeksoptimizedami116amazonlinux2recommendedimageidC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Type": "AWS::SSM::Parameter::Value<String>",
      "Default": "/aws/service/eks/optimized-ami/1.16/amazon-linux-2/recommended/image_id"
    },
    "SsmParameterValueawsservicebottlerocketawsk8s115x8664latestimageidC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Type": "AWS::SSM::Parameter::Value<String>",
      "Default": "/aws/service/bottlerocket/aws-k8s-1.15/x86_64/latest/image_id"
    },
    "SsmParameterValueawsserviceeksoptimizedami116amazonlinux2gpurecommendedimageidC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Type": "AWS::SSM::Parameter::Value<String>",
      "Default": "/aws/service/eks/optimized-ami/1.16/amazon-linux-2-gpu/recommended/image_id"
    }
  }
}