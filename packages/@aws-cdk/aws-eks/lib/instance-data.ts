import ec2 = require('@aws-cdk/aws-ec2');

/**
 * Used internally to bootstrap the worker nodes
 * This sets the max pods based on the instanceType created
 * ref: https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-eni.html#AvailableIpPerENI
 */
const MAX_PODS = Object.freeze(
  new Map([
    ['a1.medium', 8],
    ['a1.large', 29],
    ['a1.xlarge', 58],
    ['a1.2xlarge', 58],
    ['a1.4xlarge', 234],
    ['c1.medium', 12],
    ['c1.xlarge', 58],
    ['c3.large', 29],
    ['c3.xlarge', 58],
    ['c3.2xlarge', 58],
    ['c3.4xlarge', 234],
    ['c3.8xlarge', 234],
    ['c4.large', 29],
    ['c4.xlarge', 58],
    ['c4.2xlarge', 58],
    ['c4.4xlarge', 234],
    ['c4.8xlarge', 234],
    ['c5.large', 29],
    ['c5.xlarge', 58],
    ['c5.2xlarge', 58],
    ['c5.4xlarge', 234],
    ['c5.9xlarge', 234],
    ['c5.18xlarge', 737],
    ['c5d.large', 29],
    ['c5d.xlarge', 58],
    ['c5d.2xlarge', 58],
    ['c5d.4xlarge', 234],
    ['c5d.9xlarge', 234],
    ['c5d.18xlarge', 737],
    ['c5n.large', 29],
    ['c5n.xlarge', 58],
    ['c5n.2xlarge', 58],
    ['c5n.4xlarge', 234],
    ['c5n.9xlarge', 234],
    ['c5n.18xlarge', 737],
    ['cc2.8xlarge', 234],
    ['cr1.8xlarge', 234],
    ['d2.xlarge', 58],
    ['d2.2xlarge', 58],
    ['d2.4xlarge', 234],
    ['d2.8xlarge', 234],
    ['f1.2xlarge', 58],
    ['f1.4xlarge', 234],
    ['f1.16xlarge', 242],
    ['g2.2xlarge', 58],
    ['g2.8xlarge', 234],
    ['g3s.xlarge', 58],
    ['g3.4xlarge', 234],
    ['g3.8xlarge', 234],
    ['g3.16xlarge', 452],
    ['h1.2xlarge', 58],
    ['h1.4xlarge', 234],
    ['h1.8xlarge', 234],
    ['h1.16xlarge', 452],
    ['hs1.8xlarge', 234],
    ['i2.xlarge', 58],
    ['i2.2xlarge', 58],
    ['i2.4xlarge', 234],
    ['i2.8xlarge', 234],
    ['i3.large', 29],
    ['i3.xlarge', 58],
    ['i3.2xlarge', 58],
    ['i3.4xlarge', 234],
    ['i3.8xlarge', 234],
    ['i3.16xlarge', 452],
    ['i3.metal', 737],
    ['i3en.large', 29],
    ['i3en.xlarge', 58],
    ['i3en.2xlarge', 58],
    ['i3en.3xlarge', 58],
    ['i3en.6xlarge', 234],
    ['i3en.12xlarge', 234],
    ['i3en.24xlarge', 737],
    ['m1.small', 8],
    ['m1.medium', 12],
    ['m1.large', 29],
    ['m1.xlarge', 58],
    ['m2.xlarge', 58],
    ['m2.2xlarge', 118],
    ['m2.4xlarge', 234],
    ['m3.medium', 12],
    ['m3.large', 29],
    ['m3.xlarge', 58],
    ['m3.2xlarge', 118],
    ['m4.large', 20],
    ['m4.xlarge', 58],
    ['m4.2xlarge', 58],
    ['m4.4xlarge', 234],
    ['m4.10xlarge', 234],
    ['m4.16xlarge', 234],
    ['m5.large', 29],
    ['m5.xlarge', 58],
    ['m5.2xlarge', 58],
    ['m5.4xlarge', 234],
    ['m5.12xlarge', 234],
    ['m5.24xlarge', 737],
    ['m5a.large', 29],
    ['m5a.xlarge', 58],
    ['m5a.2xlarge', 58],
    ['m5a.4xlarge', 234],
    ['m5a.12xlarge', 234],
    ['m5a.24xlarge', 737],
    ['m5ad.large', 29],
    ['m5ad.xlarge', 58],
    ['m5ad.2xlarge', 58],
    ['m5ad.4xlarge', 234],
    ['m5ad.12xlarge', 234],
    ['m5ad.24xlarge', 737],
    ['m5d.large', 29],
    ['m5d.xlarge', 58],
    ['m5d.2xlarge', 58],
    ['m5d.4xlarge', 234],
    ['m5d.12xlarge', 234],
    ['m5d.24xlarge', 737],
    ['p2.xlarge', 58],
    ['p2.8xlarge', 234],
    ['p2.16xlarge', 234],
    ['p3.2xlarge', 58],
    ['p3.8xlarge', 234],
    ['p3.16xlarge', 234],
    ['p3dn.24xlarge', 737],
    ['r3.large', 29],
    ['r3.xlarge', 58],
    ['r3.2xlarge', 58],
    ['r3.4xlarge', 234],
    ['r3.8xlarge', 234],
    ['r4.large', 29],
    ['r4.xlarge', 58],
    ['r4.2xlarge', 58],
    ['r4.4xlarge', 234],
    ['r4.8xlarge', 234],
    ['r4.16xlarge', 452],
    ['r5.large', 29],
    ['r5.xlarge', 58],
    ['r5.2xlarge', 58],
    ['r5.4xlarge', 234],
    ['r5.12xlarge', 234],
    ['r5.24xlarge', 737],
    ['r5a.large', 29],
    ['r5a.xlarge', 58],
    ['r5a.2xlarge', 58],
    ['r5a.4xlarge', 234],
    ['r5a.12xlarge', 234],
    ['r5a.24xlarge', 737],
    ['r5ad.large', 29],
    ['r5ad.xlarge', 58],
    ['r5ad.2xlarge', 58],
    ['r5ad.4xlarge', 234],
    ['r5ad.12xlarge', 234],
    ['r5ad.24xlarge', 737],
    ['r5d.large', 29],
    ['r5d.xlarge', 58],
    ['r5d.2xlarge', 58],
    ['r5d.4xlarge', 234],
    ['r5d.12xlarge', 234],
    ['r5d.24xlarge', 737],
    ['t1.micro', 4],
    ['t2.nano', 4],
    ['t2.micro', 4],
    ['t2.small', 11],
    ['t2.medium', 17],
    ['t2.large', 35],
    ['t2.xlarge', 44],
    ['t2.2xlarge', 44],
    ['t3.nano', 4],
    ['t3.micro', 4],
    ['t3.small', 11],
    ['t3.medium', 17],
    ['t3.large', 35],
    ['t3.xlarge', 58],
    ['t3.2xlarge', 58],
    ['t3a.nano', 4],
    ['t3a.micro', 4],
    ['t3a.small', 11],
    ['t3a.medium', 17],
    ['t3a.large', 35],
    ['t3a.xlarge', 58],
    ['t3a.2xlarge', 58],
    ['x1.16xlarge', 234],
    ['x1.32xlarge', 234],
    ['x1e.xlarge', 29],
    ['x1e.2xlarge', 58],
    ['x1e.4xlarge', 58],
    ['x1e.8xlarge', 58],
    ['x1e.16xlarge', 234],
    ['x1e.32xlarge', 234],
    ['z1d.large', 29],
    ['z1d.xlarge', 58],
    ['z1d.2xlarge', 58],
    ['z1d.3xlarge', 234],
    ['z1d.6xlarge', 234],
    ['z1d.12xlarge', 737],
  ]),
);

export function maxPodsForInstanceType(instanceType: ec2.InstanceType) {
  const num = MAX_PODS.get(instanceType.toString());
  if (num === undefined) {
    throw new Error(`Instance type not supported for EKS: ${instanceType.toString()}. Please pick a different instance type.`);
  }
  return num;
}