"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const aws_cdk_lib_1 = require("aws-cdk-lib");
const integ = require("@aws-cdk/integ-tests-alpha");
const ec2 = require("aws-cdk-lib/aws-ec2");
const app = new aws_cdk_lib_1.App();
const stack = new aws_cdk_lib_1.Stack(app, 'stack');
new ec2.PlacementGroup(stack, 'placementGroupNoProps');
new ec2.PlacementGroup(stack, 'PlacementGroupOnlyPartition', {
    partitions: 5,
});
new ec2.PlacementGroup(stack, 'PlacementGroupOnlySpreadLevel', {
    spreadLevel: ec2.PlacementGroupSpreadLevel.HOST,
});
new ec2.PlacementGroup(stack, 'PlacementGroupOnlyStrategyPartition', {
    strategy: ec2.PlacementGroupStrategy.PARTITION,
});
new ec2.PlacementGroup(stack, 'PlacementGroupOnlyStrategyCluster', {
    strategy: ec2.PlacementGroupStrategy.CLUSTER,
});
new ec2.PlacementGroup(stack, 'PlacementSpreadOnly', {
    strategy: ec2.PlacementGroupStrategy.SPREAD,
});
new ec2.PlacementGroup(stack, 'PlacementSpreadHost', {
    strategy: ec2.PlacementGroupStrategy.SPREAD,
    spreadLevel: ec2.PlacementGroupSpreadLevel.HOST,
});
new ec2.PlacementGroup(stack, 'PlacementSpreadRack', {
    strategy: ec2.PlacementGroupStrategy.SPREAD,
    spreadLevel: ec2.PlacementGroupSpreadLevel.RACK,
});
new integ.IntegTest(app, 'BatchEcsJobDefinitionTest', {
    testCases: [stack],
});
app.synth();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW50ZWcucGxhY2VtZW50LWdyb3VwLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiaW50ZWcucGxhY2VtZW50LWdyb3VwLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsNkNBQXlDO0FBQ3pDLG9EQUFvRDtBQUNwRCwyQ0FBMkM7QUFFM0MsTUFBTSxHQUFHLEdBQUcsSUFBSSxpQkFBRyxFQUFFLENBQUM7QUFDdEIsTUFBTSxLQUFLLEdBQUcsSUFBSSxtQkFBSyxDQUFDLEdBQUcsRUFBRSxPQUFPLENBQUMsQ0FBQztBQUV0QyxJQUFJLEdBQUcsQ0FBQyxjQUFjLENBQUMsS0FBSyxFQUFFLHVCQUF1QixDQUFDLENBQUM7QUFFdkQsSUFBSSxHQUFHLENBQUMsY0FBYyxDQUFDLEtBQUssRUFBRSw2QkFBNkIsRUFBRTtJQUMzRCxVQUFVLEVBQUUsQ0FBQztDQUNkLENBQUMsQ0FBQztBQUVILElBQUksR0FBRyxDQUFDLGNBQWMsQ0FBQyxLQUFLLEVBQUUsK0JBQStCLEVBQUU7SUFDN0QsV0FBVyxFQUFFLEdBQUcsQ0FBQyx5QkFBeUIsQ0FBQyxJQUFJO0NBQ2hELENBQUMsQ0FBQztBQUVILElBQUksR0FBRyxDQUFDLGNBQWMsQ0FBQyxLQUFLLEVBQUUscUNBQXFDLEVBQUU7SUFDbkUsUUFBUSxFQUFFLEdBQUcsQ0FBQyxzQkFBc0IsQ0FBQyxTQUFTO0NBQy9DLENBQUMsQ0FBQztBQUVILElBQUksR0FBRyxDQUFDLGNBQWMsQ0FBQyxLQUFLLEVBQUUsbUNBQW1DLEVBQUU7SUFDakUsUUFBUSxFQUFFLEdBQUcsQ0FBQyxzQkFBc0IsQ0FBQyxPQUFPO0NBQzdDLENBQUMsQ0FBQztBQUVILElBQUksR0FBRyxDQUFDLGNBQWMsQ0FBQyxLQUFLLEVBQUUscUJBQXFCLEVBQUU7SUFDbkQsUUFBUSxFQUFFLEdBQUcsQ0FBQyxzQkFBc0IsQ0FBQyxNQUFNO0NBQzVDLENBQUMsQ0FBQztBQUVILElBQUksR0FBRyxDQUFDLGNBQWMsQ0FBQyxLQUFLLEVBQUUscUJBQXFCLEVBQUU7SUFDbkQsUUFBUSxFQUFFLEdBQUcsQ0FBQyxzQkFBc0IsQ0FBQyxNQUFNO0lBQzNDLFdBQVcsRUFBRSxHQUFHLENBQUMseUJBQXlCLENBQUMsSUFBSTtDQUNoRCxDQUFDLENBQUM7QUFFSCxJQUFJLEdBQUcsQ0FBQyxjQUFjLENBQUMsS0FBSyxFQUFFLHFCQUFxQixFQUFFO0lBQ25ELFFBQVEsRUFBRSxHQUFHLENBQUMsc0JBQXNCLENBQUMsTUFBTTtJQUMzQyxXQUFXLEVBQUUsR0FBRyxDQUFDLHlCQUF5QixDQUFDLElBQUk7Q0FDaEQsQ0FBQyxDQUFDO0FBRUgsSUFBSSxLQUFLLENBQUMsU0FBUyxDQUFDLEdBQUcsRUFBRSwyQkFBMkIsRUFBRTtJQUNwRCxTQUFTLEVBQUUsQ0FBQyxLQUFLLENBQUM7Q0FDbkIsQ0FBQyxDQUFDO0FBRUgsR0FBRyxDQUFDLEtBQUssRUFBRSxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQXBwLCBTdGFjayB9IGZyb20gJ2F3cy1jZGstbGliJztcbmltcG9ydCAqIGFzIGludGVnIGZyb20gJ0Bhd3MtY2RrL2ludGVnLXRlc3RzLWFscGhhJztcbmltcG9ydCAqIGFzIGVjMiBmcm9tICdhd3MtY2RrLWxpYi9hd3MtZWMyJztcblxuY29uc3QgYXBwID0gbmV3IEFwcCgpO1xuY29uc3Qgc3RhY2sgPSBuZXcgU3RhY2soYXBwLCAnc3RhY2snKTtcblxubmV3IGVjMi5QbGFjZW1lbnRHcm91cChzdGFjaywgJ3BsYWNlbWVudEdyb3VwTm9Qcm9wcycpO1xuXG5uZXcgZWMyLlBsYWNlbWVudEdyb3VwKHN0YWNrLCAnUGxhY2VtZW50R3JvdXBPbmx5UGFydGl0aW9uJywge1xuICBwYXJ0aXRpb25zOiA1LFxufSk7XG5cbm5ldyBlYzIuUGxhY2VtZW50R3JvdXAoc3RhY2ssICdQbGFjZW1lbnRHcm91cE9ubHlTcHJlYWRMZXZlbCcsIHtcbiAgc3ByZWFkTGV2ZWw6IGVjMi5QbGFjZW1lbnRHcm91cFNwcmVhZExldmVsLkhPU1QsXG59KTtcblxubmV3IGVjMi5QbGFjZW1lbnRHcm91cChzdGFjaywgJ1BsYWNlbWVudEdyb3VwT25seVN0cmF0ZWd5UGFydGl0aW9uJywge1xuICBzdHJhdGVneTogZWMyLlBsYWNlbWVudEdyb3VwU3RyYXRlZ3kuUEFSVElUSU9OLFxufSk7XG5cbm5ldyBlYzIuUGxhY2VtZW50R3JvdXAoc3RhY2ssICdQbGFjZW1lbnRHcm91cE9ubHlTdHJhdGVneUNsdXN0ZXInLCB7XG4gIHN0cmF0ZWd5OiBlYzIuUGxhY2VtZW50R3JvdXBTdHJhdGVneS5DTFVTVEVSLFxufSk7XG5cbm5ldyBlYzIuUGxhY2VtZW50R3JvdXAoc3RhY2ssICdQbGFjZW1lbnRTcHJlYWRPbmx5Jywge1xuICBzdHJhdGVneTogZWMyLlBsYWNlbWVudEdyb3VwU3RyYXRlZ3kuU1BSRUFELFxufSk7XG5cbm5ldyBlYzIuUGxhY2VtZW50R3JvdXAoc3RhY2ssICdQbGFjZW1lbnRTcHJlYWRIb3N0Jywge1xuICBzdHJhdGVneTogZWMyLlBsYWNlbWVudEdyb3VwU3RyYXRlZ3kuU1BSRUFELFxuICBzcHJlYWRMZXZlbDogZWMyLlBsYWNlbWVudEdyb3VwU3ByZWFkTGV2ZWwuSE9TVCxcbn0pO1xuXG5uZXcgZWMyLlBsYWNlbWVudEdyb3VwKHN0YWNrLCAnUGxhY2VtZW50U3ByZWFkUmFjaycsIHtcbiAgc3RyYXRlZ3k6IGVjMi5QbGFjZW1lbnRHcm91cFN0cmF0ZWd5LlNQUkVBRCxcbiAgc3ByZWFkTGV2ZWw6IGVjMi5QbGFjZW1lbnRHcm91cFNwcmVhZExldmVsLlJBQ0ssXG59KTtcblxubmV3IGludGVnLkludGVnVGVzdChhcHAsICdCYXRjaEVjc0pvYkRlZmluaXRpb25UZXN0Jywge1xuICB0ZXN0Q2FzZXM6IFtzdGFja10sXG59KTtcblxuYXBwLnN5bnRoKCk7XG4iXX0=