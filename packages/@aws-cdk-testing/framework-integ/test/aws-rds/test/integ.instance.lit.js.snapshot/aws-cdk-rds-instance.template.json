{
 "Transform": "AWS::Serverless-2016-10-31",
 "Resources": {
  "VPCB9E5F0B4": {
   "Type": "AWS::EC2::VPC",
   "Properties": {
    "CidrBlock": "10.0.0.0/16",
    "EnableDnsHostnames": true,
    "EnableDnsSupport": true,
    "InstanceTenancy": "default",
    "Tags": [
     {
      "Key": "Name",
      "Value": "aws-cdk-rds-instance/VPC"
     }
    ]
   }
  },
  "VPCPublicSubnet1SubnetB4246D30": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": {
     "Fn::Select": [
      0,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.0.0.0/18",
    "MapPublicIpOnLaunch": true,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Public"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Public"
     },
     {
      "Key": "Name",
      "Value": "aws-cdk-rds-instance/VPC/PublicSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "VPCB9E5F0B4"
    }
   }
  },
  "VPCPublicSubnet1RouteTableFEE4B781": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "aws-cdk-rds-instance/VPC/PublicSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "VPCB9E5F0B4"
    }
   }
  },
  "VPCPublicSubnet1RouteTableAssociation0B0896DC": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "VPCPublicSubnet1RouteTableFEE4B781"
    },
    "SubnetId": {
     "Ref": "VPCPublicSubnet1SubnetB4246D30"
    }
   }
  },
  "VPCPublicSubnet1DefaultRoute91CEF279": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "GatewayId": {
     "Ref": "VPCIGWB7E252D3"
    },
    "RouteTableId": {
     "Ref": "VPCPublicSubnet1RouteTableFEE4B781"
    }
   },
   "DependsOn": [
    "VPCVPCGW99B986DC"
   ]
  },
  "VPCPublicSubnet1EIP6AD938E8": {
   "Type": "AWS::EC2::EIP",
   "Properties": {
    "Domain": "vpc",
    "Tags": [
     {
      "Key": "Name",
      "Value": "aws-cdk-rds-instance/VPC/PublicSubnet1"
     }
    ]
   }
  },
  "VPCPublicSubnet1NATGatewayE0556630": {
   "Type": "AWS::EC2::NatGateway",
   "Properties": {
    "AllocationId": {
     "Fn::GetAtt": [
      "VPCPublicSubnet1EIP6AD938E8",
      "AllocationId"
     ]
    },
    "SubnetId": {
     "Ref": "VPCPublicSubnet1SubnetB4246D30"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "aws-cdk-rds-instance/VPC/PublicSubnet1"
     }
    ]
   },
   "DependsOn": [
    "VPCPublicSubnet1DefaultRoute91CEF279",
    "VPCPublicSubnet1RouteTableAssociation0B0896DC"
   ]
  },
  "VPCPublicSubnet2Subnet74179F39": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": {
     "Fn::Select": [
      1,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.0.64.0/18",
    "MapPublicIpOnLaunch": true,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Public"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Public"
     },
     {
      "Key": "Name",
      "Value": "aws-cdk-rds-instance/VPC/PublicSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "VPCB9E5F0B4"
    }
   }
  },
  "VPCPublicSubnet2RouteTable6F1A15F1": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "aws-cdk-rds-instance/VPC/PublicSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "VPCB9E5F0B4"
    }
   }
  },
  "VPCPublicSubnet2RouteTableAssociation5A808732": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "VPCPublicSubnet2RouteTable6F1A15F1"
    },
    "SubnetId": {
     "Ref": "VPCPublicSubnet2Subnet74179F39"
    }
   }
  },
  "VPCPublicSubnet2DefaultRouteB7481BBA": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "GatewayId": {
     "Ref": "VPCIGWB7E252D3"
    },
    "RouteTableId": {
     "Ref": "VPCPublicSubnet2RouteTable6F1A15F1"
    }
   },
   "DependsOn": [
    "VPCVPCGW99B986DC"
   ]
  },
  "VPCPublicSubnet2EIP4947BC00": {
   "Type": "AWS::EC2::EIP",
   "Properties": {
    "Domain": "vpc",
    "Tags": [
     {
      "Key": "Name",
      "Value": "aws-cdk-rds-instance/VPC/PublicSubnet2"
     }
    ]
   }
  },
  "VPCPublicSubnet2NATGateway3C070193": {
   "Type": "AWS::EC2::NatGateway",
   "Properties": {
    "AllocationId": {
     "Fn::GetAtt": [
      "VPCPublicSubnet2EIP4947BC00",
      "AllocationId"
     ]
    },
    "SubnetId": {
     "Ref": "VPCPublicSubnet2Subnet74179F39"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "aws-cdk-rds-instance/VPC/PublicSubnet2"
     }
    ]
   },
   "DependsOn": [
    "VPCPublicSubnet2DefaultRouteB7481BBA",
    "VPCPublicSubnet2RouteTableAssociation5A808732"
   ]
  },
  "VPCPrivateSubnet1Subnet8BCA10E0": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": {
     "Fn::Select": [
      0,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.0.128.0/18",
    "MapPublicIpOnLaunch": false,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Private"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Private"
     },
     {
      "Key": "Name",
      "Value": "aws-cdk-rds-instance/VPC/PrivateSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "VPCB9E5F0B4"
    }
   }
  },
  "VPCPrivateSubnet1RouteTableBE8A6027": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "aws-cdk-rds-instance/VPC/PrivateSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "VPCB9E5F0B4"
    }
   }
  },
  "VPCPrivateSubnet1RouteTableAssociation347902D1": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "VPCPrivateSubnet1RouteTableBE8A6027"
    },
    "SubnetId": {
     "Ref": "VPCPrivateSubnet1Subnet8BCA10E0"
    }
   }
  },
  "VPCPrivateSubnet1DefaultRouteAE1D6490": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "NatGatewayId": {
     "Ref": "VPCPublicSubnet1NATGatewayE0556630"
    },
    "RouteTableId": {
     "Ref": "VPCPrivateSubnet1RouteTableBE8A6027"
    }
   }
  },
  "VPCPrivateSubnet2SubnetCFCDAA7A": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": {
     "Fn::Select": [
      1,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.0.192.0/18",
    "MapPublicIpOnLaunch": false,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Private"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Private"
     },
     {
      "Key": "Name",
      "Value": "aws-cdk-rds-instance/VPC/PrivateSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "VPCB9E5F0B4"
    }
   }
  },
  "VPCPrivateSubnet2RouteTable0A19E10E": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "aws-cdk-rds-instance/VPC/PrivateSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "VPCB9E5F0B4"
    }
   }
  },
  "VPCPrivateSubnet2RouteTableAssociation0C73D413": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "VPCPrivateSubnet2RouteTable0A19E10E"
    },
    "SubnetId": {
     "Ref": "VPCPrivateSubnet2SubnetCFCDAA7A"
    }
   }
  },
  "VPCPrivateSubnet2DefaultRouteF4F5CFD2": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "NatGatewayId": {
     "Ref": "VPCPublicSubnet2NATGateway3C070193"
    },
    "RouteTableId": {
     "Ref": "VPCPrivateSubnet2RouteTable0A19E10E"
    }
   }
  },
  "VPCIGWB7E252D3": {
   "Type": "AWS::EC2::InternetGateway",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "aws-cdk-rds-instance/VPC"
     }
    ]
   }
  },
  "VPCVPCGW99B986DC": {
   "Type": "AWS::EC2::VPCGatewayAttachment",
   "Properties": {
    "InternetGatewayId": {
     "Ref": "VPCIGWB7E252D3"
    },
    "VpcId": {
     "Ref": "VPCB9E5F0B4"
    }
   }
  },
  "ParameterGroup5E32DECB": {
   "Type": "AWS::RDS::DBParameterGroup",
   "Properties": {
    "Description": "Parameter group for oracle-se2-19",
    "Family": "oracle-se2-19",
    "Parameters": {
     "open_cursors": "2500"
    }
   }
  },
  "OptionGroupSecurityGroupOEM7E39FD8C": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "Security group for OEM option",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "SecurityGroupIngress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "from 0.0.0.0/0:1158",
      "FromPort": 1158,
      "IpProtocol": "tcp",
      "ToPort": 1158
     }
    ],
    "VpcId": {
     "Ref": "VPCB9E5F0B4"
    }
   }
  },
  "OptionGroupACA43DC1": {
   "Type": "AWS::RDS::OptionGroup",
   "Properties": {
    "EngineName": "oracle-se2",
    "MajorEngineVersion": "19",
    "OptionConfigurations": [
     {
      "OptionName": "LOCATOR"
     },
     {
      "OptionName": "OEM",
      "Port": 1158,
      "VpcSecurityGroupMemberships": [
       {
        "Fn::GetAtt": [
         "OptionGroupSecurityGroupOEM7E39FD8C",
         "GroupId"
        ]
       }
      ]
     }
    ],
    "OptionGroupDescription": "Option group for oracle-se2 19"
   }
  },
  "InstanceSubnetGroupF2CBA54F": {
   "Type": "AWS::RDS::DBSubnetGroup",
   "Properties": {
    "DBSubnetGroupDescription": "Subnet group for Instance database",
    "SubnetIds": [
     {
      "Ref": "VPCPrivateSubnet1Subnet8BCA10E0"
     },
     {
      "Ref": "VPCPrivateSubnet2SubnetCFCDAA7A"
     }
    ]
   }
  },
  "InstanceSecurityGroupB4E5FA83": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "Security group for Instance database",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "VpcId": {
     "Ref": "VPCB9E5F0B4"
    }
   }
  },
  "InstanceSecurityGroupfrom00000IndirectPort7D6BC055": {
   "Type": "AWS::EC2::SecurityGroupIngress",
   "Properties": {
    "CidrIp": "0.0.0.0/0",
    "Description": "from 0.0.0.0/0:{IndirectPort}",
    "FromPort": {
     "Fn::GetAtt": [
      "InstanceC1063A87",
      "Endpoint.Port"
     ]
    },
    "GroupId": {
     "Fn::GetAtt": [
      "InstanceSecurityGroupB4E5FA83",
      "GroupId"
     ]
    },
    "IpProtocol": "tcp",
    "ToPort": {
     "Fn::GetAtt": [
      "InstanceC1063A87",
      "Endpoint.Port"
     ]
    }
   }
  },
  "InstanceSecurityGroupfromawscdkrdsinstanceInstanceRotationSingleUserSecurityGroupE959D912IndirectPortFF39F421": {
   "Type": "AWS::EC2::SecurityGroupIngress",
   "Properties": {
    "Description": "from awscdkrdsinstanceInstanceRotationSingleUserSecurityGroupE959D912:{IndirectPort}",
    "FromPort": {
     "Fn::GetAtt": [
      "InstanceC1063A87",
      "Endpoint.Port"
     ]
    },
    "GroupId": {
     "Fn::GetAtt": [
      "InstanceSecurityGroupB4E5FA83",
      "GroupId"
     ]
    },
    "IpProtocol": "tcp",
    "SourceSecurityGroupId": {
     "Fn::GetAtt": [
      "InstanceRotationSingleUserSecurityGroupF3FB5C25",
      "GroupId"
     ]
    },
    "ToPort": {
     "Fn::GetAtt": [
      "InstanceC1063A87",
      "Endpoint.Port"
     ]
    }
   }
  },
  "InstanceMonitoringRole3E2B4286": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "monitoring.rds.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AmazonRDSEnhancedMonitoringRole"
       ]
      ]
     }
    ]
   }
  },
  "InstanceSecret478E0A47": {
   "Type": "AWS::SecretsManager::Secret",
   "Properties": {
    "Description": {
     "Fn::Join": [
      "",
      [
       "Generated by the CDK for stack: ",
       {
        "Ref": "AWS::StackName"
       }
      ]
     ]
    },
    "GenerateSecretString": {
     "ExcludeCharacters": " %+~`#$&*()|[]{}:;<>?!'/@\"\\",
     "GenerateStringKey": "password",
     "PasswordLength": 30,
     "SecretStringTemplate": "{\"username\":\"syscdk\"}"
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  },
  "InstanceSecretAttachment83BEE581": {
   "Type": "AWS::SecretsManager::SecretTargetAttachment",
   "Properties": {
    "SecretId": {
     "Ref": "InstanceSecret478E0A47"
    },
    "TargetId": {
     "Ref": "InstanceC1063A87"
    },
    "TargetType": "AWS::RDS::DBInstance"
   }
  },
  "InstanceSecretAttachmentRotationScheduleCC555119": {
   "Type": "AWS::SecretsManager::RotationSchedule",
   "Properties": {
    "RotationLambdaARN": {
     "Fn::GetAtt": [
      "InstanceRotationSingleUser90E8AB49",
      "Outputs.RotationLambdaARN"
     ]
    },
    "RotationRules": {
     "AutomaticallyAfterDays": 30
    },
    "SecretId": {
     "Ref": "InstanceSecretAttachment83BEE581"
    }
   }
  },
  "InstanceSecretPolicy87F03D0F": {
   "Type": "AWS::SecretsManager::ResourcePolicy",
   "Properties": {
    "ResourcePolicy": {
     "Statement": [
      {
       "Action": "secretsmanager:DeleteSecret",
       "Effect": "Deny",
       "Principal": {
        "AWS": {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":iam::",
           {
            "Ref": "AWS::AccountId"
           },
           ":root"
          ]
         ]
        }
       },
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "SecretId": {
     "Ref": "InstanceSecret478E0A47"
    }
   }
  },
  "InstanceC1063A87": {
   "Type": "AWS::RDS::DBInstance",
   "Properties": {
    "AllocatedStorage": "100",
    "AutoMinorVersionUpgrade": true,
    "BackupRetentionPeriod": 7,
    "CopyTagsToSnapshot": true,
    "DBInstanceClass": "db.t3.medium",
    "DBName": "ORCL",
    "DBParameterGroupName": {
     "Ref": "ParameterGroup5E32DECB"
    },
    "DBSubnetGroupName": {
     "Ref": "InstanceSubnetGroupF2CBA54F"
    },
    "EnableCloudwatchLogsExports": [
     "trace",
     "audit",
     "alert",
     "listener"
    ],
    "EnablePerformanceInsights": true,
    "Engine": "oracle-se2",
    "EngineVersion": "19.0.0.0.ru-2020-04.rur-2020-04.r1",
    "Iops": 1000,
    "LicenseModel": "bring-your-own-license",
    "MasterUserPassword": {
     "Fn::Join": [
      "",
      [
       "{{resolve:secretsmanager:",
       {
        "Ref": "InstanceSecret478E0A47"
       },
       ":SecretString:password::}}"
      ]
     ]
    },
    "MasterUsername": {
     "Fn::Join": [
      "",
      [
       "{{resolve:secretsmanager:",
       {
        "Ref": "InstanceSecret478E0A47"
       },
       ":SecretString:username::}}"
      ]
     ]
    },
    "MonitoringInterval": 60,
    "MonitoringRoleArn": {
     "Fn::GetAtt": [
      "InstanceMonitoringRole3E2B4286",
      "Arn"
     ]
    },
    "MultiAZ": true,
    "OptionGroupName": {
     "Ref": "OptionGroupACA43DC1"
    },
    "PerformanceInsightsRetentionPeriod": 7,
    "StorageEncrypted": true,
    "StorageType": "io1",
    "VPCSecurityGroups": [
     {
      "Fn::GetAtt": [
       "InstanceSecurityGroupB4E5FA83",
       "GroupId"
      ]
     }
    ]
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  },
  "InstanceLogRetentiontrace487771C8": {
   "Type": "Custom::LogRetention",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
      "Arn"
     ]
    },
    "LogGroupName": {
     "Fn::Join": [
      "",
      [
       "/aws/rds/instance/",
       {
        "Ref": "InstanceC1063A87"
       },
       "/trace"
      ]
     ]
    },
    "RetentionInDays": 30
   }
  },
  "InstanceLogRetentionaudit55C07CF6": {
   "Type": "Custom::LogRetention",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
      "Arn"
     ]
    },
    "LogGroupName": {
     "Fn::Join": [
      "",
      [
       "/aws/rds/instance/",
       {
        "Ref": "InstanceC1063A87"
       },
       "/audit"
      ]
     ]
    },
    "RetentionInDays": 30
   }
  },
  "InstanceLogRetentionalert2B4B024B": {
   "Type": "Custom::LogRetention",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
      "Arn"
     ]
    },
    "LogGroupName": {
     "Fn::Join": [
      "",
      [
       "/aws/rds/instance/",
       {
        "Ref": "InstanceC1063A87"
       },
       "/alert"
      ]
     ]
    },
    "RetentionInDays": 30
   }
  },
  "InstanceLogRetentionlistener232E8C3C": {
   "Type": "Custom::LogRetention",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
      "Arn"
     ]
    },
    "LogGroupName": {
     "Fn::Join": [
      "",
      [
       "/aws/rds/instance/",
       {
        "Ref": "InstanceC1063A87"
       },
       "/listener"
      ]
     ]
    },
    "RetentionInDays": 30
   }
  },
  "InstanceRotationSingleUserSecurityGroupF3FB5C25": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "aws-cdk-rds-instance/Instance/RotationSingleUser/SecurityGroup",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "VpcId": {
     "Ref": "VPCB9E5F0B4"
    }
   }
  },
  "InstanceRotationSingleUser90E8AB49": {
   "Type": "AWS::Serverless::Application",
   "Properties": {
    "Location": {
     "ApplicationId": {
      "Fn::FindInMap": [
       "InstanceRotationSingleUserSARMappingFEA0C86E",
       {
        "Ref": "AWS::Partition"
       },
       "applicationId"
      ]
     },
     "SemanticVersion": {
      "Fn::FindInMap": [
       "InstanceRotationSingleUserSARMappingFEA0C86E",
       {
        "Ref": "AWS::Partition"
       },
       "semanticVersion"
      ]
     }
    },
    "Parameters": {
     "endpoint": {
      "Fn::Join": [
       "",
       [
        "https://secretsmanager.",
        {
         "Ref": "AWS::Region"
        },
        ".",
        {
         "Ref": "AWS::URLSuffix"
        }
       ]
      ]
     },
     "functionName": "awscdkrdsinstanceInstanceRotationSingleUserAFE3C214",
     "vpcSubnetIds": {
      "Fn::Join": [
       "",
       [
        {
         "Ref": "VPCPrivateSubnet1Subnet8BCA10E0"
        },
        ",",
        {
         "Ref": "VPCPrivateSubnet2SubnetCFCDAA7A"
        }
       ]
      ]
     },
     "vpcSecurityGroupIds": {
      "Fn::GetAtt": [
       "InstanceRotationSingleUserSecurityGroupF3FB5C25",
       "GroupId"
      ]
     },
     "excludeCharacters": " %+~`#$&*()|[]{}:;<>?!'/@\"\\"
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  },
  "InstanceAvailabilityAD5D452C": {
   "Type": "AWS::Events::Rule",
   "Properties": {
    "EventPattern": {
     "source": [
      "aws.rds"
     ],
     "resources": [
      {
       "Fn::Join": [
        "",
        [
         "arn:",
         {
          "Ref": "AWS::Partition"
         },
         ":rds:",
         {
          "Ref": "AWS::Region"
         },
         ":",
         {
          "Ref": "AWS::AccountId"
         },
         ":db:",
         {
          "Ref": "InstanceC1063A87"
         }
        ]
       ]
      }
     ],
     "detail": {
      "EventCategories": [
       "availability"
      ]
     }
    },
    "State": "ENABLED",
    "Targets": [
     {
      "Arn": {
       "Fn::GetAtt": [
        "Function76856677",
        "Arn"
       ]
      },
      "Id": "Target0"
     }
    ]
   }
  },
  "InstanceAvailabilityAllowEventRuleawscdkrdsinstanceFunctionD515EE1969208105": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "Function76856677",
      "Arn"
     ]
    },
    "Principal": "events.amazonaws.com",
    "SourceArn": {
     "Fn::GetAtt": [
      "InstanceAvailabilityAD5D452C",
      "Arn"
     ]
    }
   }
  },
  "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   }
  },
  "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "logs:DeleteRetentionPolicy",
        "logs:PutRetentionPolicy"
       ],
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
    "Roles": [
     {
      "Ref": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB"
     }
    ]
   }
  },
  "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Handler": "index.handler",
    "Runtime": "nodejs18.x",
    "Timeout": 900,
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "06e556630dea1544fb71a394cf744fc6471c533769911adb44a84d795729c1f5.zip"
    },
    "Role": {
     "Fn::GetAtt": [
      "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
      "Arn"
     ]
    }
   },
   "DependsOn": [
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB"
   ]
  },
  "HighCPU94686517": {
   "Type": "AWS::CloudWatch::Alarm",
   "Properties": {
    "ComparisonOperator": "GreaterThanOrEqualToThreshold",
    "Dimensions": [
     {
      "Name": "DBInstanceIdentifier",
      "Value": {
       "Ref": "InstanceC1063A87"
      }
     }
    ],
    "EvaluationPeriods": 1,
    "MetricName": "CPUUtilization",
    "Namespace": "AWS/RDS",
    "Period": 300,
    "Statistic": "Average",
    "Threshold": 90
   }
  },
  "FunctionServiceRole675BB04A": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   }
  },
  "Function76856677": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "ZipFile": "exports.handler = (event) => console.log(event);"
    },
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "FunctionServiceRole675BB04A",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x"
   },
   "DependsOn": [
    "FunctionServiceRole675BB04A"
   ]
  }
 },
 "Mappings": {
  "InstanceRotationSingleUserSARMappingFEA0C86E": {
   "aws": {
    "applicationId": "arn:aws:serverlessrepo:us-east-1:297356227824:applications/SecretsManagerRDSOracleRotationSingleUser",
    "semanticVersion": "1.1.367"
   },
   "aws-cn": {
    "applicationId": "arn:aws-cn:serverlessrepo:cn-north-1:193023089310:applications/SecretsManagerRDSOracleRotationSingleUser",
    "semanticVersion": "1.1.37"
   },
   "aws-us-gov": {
    "applicationId": "arn:aws-us-gov:serverlessrepo:us-gov-west-1:023102451235:applications/SecretsManagerRDSOracleRotationSingleUser",
    "semanticVersion": "1.1.93"
   }
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}