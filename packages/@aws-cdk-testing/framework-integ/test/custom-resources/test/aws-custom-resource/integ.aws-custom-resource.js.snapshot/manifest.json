{
  "version": "34.0.0",
  "artifacts": {
    "aws-cdk-sdk-js.assets": {
      "type": "cdk:asset-manifest",
      "properties": {
        "file": "aws-cdk-sdk-js.assets.json",
        "requiresBootstrapStackVersion": 6,
        "bootstrapStackVersionSsmParameter": "/cdk-bootstrap/hnb659fds/version"
      }
    },
    "aws-cdk-sdk-js": {
      "type": "aws:cloudformation:stack",
      "environment": "aws://unknown-account/unknown-region",
      "properties": {
        "templateFile": "aws-cdk-sdk-js.template.json",
        "terminationProtection": false,
        "validateOnSynth": false,
        "assumeRoleArn": "arn:${AWS::Partition}:iam::${AWS::AccountId}:role/cdk-hnb659fds-deploy-role-${AWS::AccountId}-${AWS::Region}",
        "cloudFormationExecutionRoleArn": "arn:${AWS::Partition}:iam::${AWS::AccountId}:role/cdk-hnb659fds-cfn-exec-role-${AWS::AccountId}-${AWS::Region}",
        "stackTemplateAssetObjectUrl": "s3://cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}/15662836d74a439048bb3b0273bdd616f5b7c06a75c95235fe8679b946be760f.json",
        "requiresBootstrapStackVersion": 6,
        "bootstrapStackVersionSsmParameter": "/cdk-bootstrap/hnb659fds/version",
        "additionalDependencies": [
          "aws-cdk-sdk-js.assets"
        ],
        "lookupRole": {
          "arn": "arn:${AWS::Partition}:iam::${AWS::AccountId}:role/cdk-hnb659fds-lookup-role-${AWS::AccountId}-${AWS::Region}",
          "requiresBootstrapStackVersion": 8,
          "bootstrapStackVersionSsmParameter": "/cdk-bootstrap/hnb659fds/version"
        }
      },
      "dependencies": [
        "aws-cdk-sdk-js.assets"
      ],
      "metadata": {
        "/aws-cdk-sdk-js/Topic/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "TopicBFC7AF6E"
          }
        ],
        "/aws-cdk-sdk-js/Publish": [
          {
            "type": "aws:cdk:warning",
            "data": "installLatestAwsSdk was not specified, and defaults to true. You probably do not want this. Set the global context flag '@aws-cdk/customresources:installLatestAwsSdkDefault' to false to switch this behavior off project-wide, or set the property explicitly to true if you know you need to call APIs that are not in Lambda's built-in SDK version. [ack: @aws-cdk/custom-resources:installLatestAwsSdkNotSpecified]"
          }
        ],
        "/aws-cdk-sdk-js/Publish/Resource/Default": [
          {
            "type": "aws:cdk:logicalId",
            "data": "Publish2E9BDF73"
          }
        ],
        "/aws-cdk-sdk-js/Publish/CustomResourcePolicy/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "PublishCustomResourcePolicyDF696FCA"
          }
        ],
        "/aws-cdk-sdk-js/AWS679f53fac002430cb0da5b7982bd2287/ServiceRole/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2"
          }
        ],
        "/aws-cdk-sdk-js/AWS679f53fac002430cb0da5b7982bd2287/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "AWS679f53fac002430cb0da5b7982bd22872D164C4C"
          }
        ],
        "/aws-cdk-sdk-js/ListTopics": [
          {
            "type": "aws:cdk:warning",
            "data": "installLatestAwsSdk was not specified, and defaults to true. You probably do not want this. Set the global context flag '@aws-cdk/customresources:installLatestAwsSdkDefault' to false to switch this behavior off project-wide, or set the property explicitly to true if you know you need to call APIs that are not in Lambda's built-in SDK version. [ack: @aws-cdk/custom-resources:installLatestAwsSdkNotSpecified]"
          }
        ],
        "/aws-cdk-sdk-js/ListTopics/Resource/Default": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ListTopicsCE1E0341"
          }
        ],
        "/aws-cdk-sdk-js/ListTopics/CustomResourcePolicy/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ListTopicsCustomResourcePolicy31A8396A"
          }
        ],
        "/aws-cdk-sdk-js/Utf8Parameter/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "Utf8Parameter6C885A19"
          }
        ],
        "/aws-cdk-sdk-js/GetParameter": [
          {
            "type": "aws:cdk:warning",
            "data": "installLatestAwsSdk was not specified, and defaults to true. You probably do not want this. Set the global context flag '@aws-cdk/customresources:installLatestAwsSdkDefault' to false to switch this behavior off project-wide, or set the property explicitly to true if you know you need to call APIs that are not in Lambda's built-in SDK version. [ack: @aws-cdk/custom-resources:installLatestAwsSdkNotSpecified]"
          }
        ],
        "/aws-cdk-sdk-js/GetParameter/Resource/Default": [
          {
            "type": "aws:cdk:logicalId",
            "data": "GetParameter42B0A00E"
          }
        ],
        "/aws-cdk-sdk-js/GetParameter/CustomResourcePolicy/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "GetParameterCustomResourcePolicyD8E5D455"
          }
        ],
        "/aws-cdk-sdk-js/CustomRole/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CustomRole6D8E6809"
          }
        ],
        "/aws-cdk-sdk-js/CustomRole/DefaultPolicy/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CustomRoleDefaultPolicyC5C189DF"
          }
        ],
        "/aws-cdk-sdk-js/GetParameterNoPolicy": [
          {
            "type": "aws:cdk:warning",
            "data": "installLatestAwsSdk was not specified, and defaults to true. You probably do not want this. Set the global context flag '@aws-cdk/customresources:installLatestAwsSdkDefault' to false to switch this behavior off project-wide, or set the property explicitly to true if you know you need to call APIs that are not in Lambda's built-in SDK version. [ack: @aws-cdk/custom-resources:installLatestAwsSdkNotSpecified]"
          }
        ],
        "/aws-cdk-sdk-js/GetParameterNoPolicy/Resource/Default": [
          {
            "type": "aws:cdk:logicalId",
            "data": "GetParameterNoPolicyFCF7AA3B"
          }
        ],
        "/aws-cdk-sdk-js/DescribeCluster": [
          {
            "type": "aws:cdk:warning",
            "data": "installLatestAwsSdk was not specified, and defaults to true. You probably do not want this. Set the global context flag '@aws-cdk/customresources:installLatestAwsSdkDefault' to false to switch this behavior off project-wide, or set the property explicitly to true if you know you need to call APIs that are not in Lambda's built-in SDK version. [ack: @aws-cdk/custom-resources:installLatestAwsSdkNotSpecified]"
          }
        ],
        "/aws-cdk-sdk-js/DescribeCluster/Resource/Default": [
          {
            "type": "aws:cdk:logicalId",
            "data": "DescribeCluster6ADE1BC3"
          }
        ],
        "/aws-cdk-sdk-js/DescribeCluster/CustomResourcePolicy/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "DescribeClusterCustomResourcePolicyD7730CF4"
          }
        ],
        "/aws-cdk-sdk-js/MessageId": [
          {
            "type": "aws:cdk:logicalId",
            "data": "MessageId"
          }
        ],
        "/aws-cdk-sdk-js/TopicArn": [
          {
            "type": "aws:cdk:logicalId",
            "data": "TopicArn"
          }
        ],
        "/aws-cdk-sdk-js/ParameterValue": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ParameterValue"
          }
        ],
        "/aws-cdk-sdk-js/ParameterValueNoPolicy": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ParameterValueNoPolicy"
          }
        ],
        "/aws-cdk-sdk-js/BootstrapVersion": [
          {
            "type": "aws:cdk:logicalId",
            "data": "BootstrapVersion"
          }
        ],
        "/aws-cdk-sdk-js/CheckBootstrapVersion": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CheckBootstrapVersion"
          }
        ]
      },
      "displayName": "aws-cdk-sdk-js"
    },
    "aws-cdk-sdk-js-v3.assets": {
      "type": "cdk:asset-manifest",
      "properties": {
        "file": "aws-cdk-sdk-js-v3.assets.json",
        "requiresBootstrapStackVersion": 6,
        "bootstrapStackVersionSsmParameter": "/cdk-bootstrap/hnb659fds/version"
      }
    },
    "aws-cdk-sdk-js-v3": {
      "type": "aws:cloudformation:stack",
      "environment": "aws://unknown-account/unknown-region",
      "properties": {
        "templateFile": "aws-cdk-sdk-js-v3.template.json",
        "terminationProtection": false,
        "validateOnSynth": false,
        "assumeRoleArn": "arn:${AWS::Partition}:iam::${AWS::AccountId}:role/cdk-hnb659fds-deploy-role-${AWS::AccountId}-${AWS::Region}",
        "cloudFormationExecutionRoleArn": "arn:${AWS::Partition}:iam::${AWS::AccountId}:role/cdk-hnb659fds-cfn-exec-role-${AWS::AccountId}-${AWS::Region}",
        "stackTemplateAssetObjectUrl": "s3://cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}/15662836d74a439048bb3b0273bdd616f5b7c06a75c95235fe8679b946be760f.json",
        "requiresBootstrapStackVersion": 6,
        "bootstrapStackVersionSsmParameter": "/cdk-bootstrap/hnb659fds/version",
        "additionalDependencies": [
          "aws-cdk-sdk-js-v3.assets"
        ],
        "lookupRole": {
          "arn": "arn:${AWS::Partition}:iam::${AWS::AccountId}:role/cdk-hnb659fds-lookup-role-${AWS::AccountId}-${AWS::Region}",
          "requiresBootstrapStackVersion": 8,
          "bootstrapStackVersionSsmParameter": "/cdk-bootstrap/hnb659fds/version"
        }
      },
      "dependencies": [
        "aws-cdk-sdk-js-v3.assets"
      ],
      "metadata": {
        "/aws-cdk-sdk-js-v3/Topic/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "TopicBFC7AF6E"
          }
        ],
        "/aws-cdk-sdk-js-v3/Publish": [
          {
            "type": "aws:cdk:warning",
            "data": "installLatestAwsSdk was not specified, and defaults to true. You probably do not want this. Set the global context flag '@aws-cdk/customresources:installLatestAwsSdkDefault' to false to switch this behavior off project-wide, or set the property explicitly to true if you know you need to call APIs that are not in Lambda's built-in SDK version. [ack: @aws-cdk/custom-resources:installLatestAwsSdkNotSpecified]"
          }
        ],
        "/aws-cdk-sdk-js-v3/Publish/Resource/Default": [
          {
            "type": "aws:cdk:logicalId",
            "data": "Publish2E9BDF73"
          }
        ],
        "/aws-cdk-sdk-js-v3/Publish/CustomResourcePolicy/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "PublishCustomResourcePolicyDF696FCA"
          }
        ],
        "/aws-cdk-sdk-js-v3/AWS679f53fac002430cb0da5b7982bd2287/ServiceRole/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2"
          }
        ],
        "/aws-cdk-sdk-js-v3/AWS679f53fac002430cb0da5b7982bd2287/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "AWS679f53fac002430cb0da5b7982bd22872D164C4C"
          }
        ],
        "/aws-cdk-sdk-js-v3/ListTopics": [
          {
            "type": "aws:cdk:warning",
            "data": "installLatestAwsSdk was not specified, and defaults to true. You probably do not want this. Set the global context flag '@aws-cdk/customresources:installLatestAwsSdkDefault' to false to switch this behavior off project-wide, or set the property explicitly to true if you know you need to call APIs that are not in Lambda's built-in SDK version. [ack: @aws-cdk/custom-resources:installLatestAwsSdkNotSpecified]"
          }
        ],
        "/aws-cdk-sdk-js-v3/ListTopics/Resource/Default": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ListTopicsCE1E0341"
          }
        ],
        "/aws-cdk-sdk-js-v3/ListTopics/CustomResourcePolicy/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ListTopicsCustomResourcePolicy31A8396A"
          }
        ],
        "/aws-cdk-sdk-js-v3/Utf8Parameter/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "Utf8Parameter6C885A19"
          }
        ],
        "/aws-cdk-sdk-js-v3/GetParameter": [
          {
            "type": "aws:cdk:warning",
            "data": "installLatestAwsSdk was not specified, and defaults to true. You probably do not want this. Set the global context flag '@aws-cdk/customresources:installLatestAwsSdkDefault' to false to switch this behavior off project-wide, or set the property explicitly to true if you know you need to call APIs that are not in Lambda's built-in SDK version. [ack: @aws-cdk/custom-resources:installLatestAwsSdkNotSpecified]"
          }
        ],
        "/aws-cdk-sdk-js-v3/GetParameter/Resource/Default": [
          {
            "type": "aws:cdk:logicalId",
            "data": "GetParameter42B0A00E"
          }
        ],
        "/aws-cdk-sdk-js-v3/GetParameter/CustomResourcePolicy/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "GetParameterCustomResourcePolicyD8E5D455"
          }
        ],
        "/aws-cdk-sdk-js-v3/CustomRole/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CustomRole6D8E6809"
          }
        ],
        "/aws-cdk-sdk-js-v3/CustomRole/DefaultPolicy/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CustomRoleDefaultPolicyC5C189DF"
          }
        ],
        "/aws-cdk-sdk-js-v3/GetParameterNoPolicy": [
          {
            "type": "aws:cdk:warning",
            "data": "installLatestAwsSdk was not specified, and defaults to true. You probably do not want this. Set the global context flag '@aws-cdk/customresources:installLatestAwsSdkDefault' to false to switch this behavior off project-wide, or set the property explicitly to true if you know you need to call APIs that are not in Lambda's built-in SDK version. [ack: @aws-cdk/custom-resources:installLatestAwsSdkNotSpecified]"
          }
        ],
        "/aws-cdk-sdk-js-v3/GetParameterNoPolicy/Resource/Default": [
          {
            "type": "aws:cdk:logicalId",
            "data": "GetParameterNoPolicyFCF7AA3B"
          }
        ],
        "/aws-cdk-sdk-js-v3/DescribeCluster": [
          {
            "type": "aws:cdk:warning",
            "data": "installLatestAwsSdk was not specified, and defaults to true. You probably do not want this. Set the global context flag '@aws-cdk/customresources:installLatestAwsSdkDefault' to false to switch this behavior off project-wide, or set the property explicitly to true if you know you need to call APIs that are not in Lambda's built-in SDK version. [ack: @aws-cdk/custom-resources:installLatestAwsSdkNotSpecified]"
          }
        ],
        "/aws-cdk-sdk-js-v3/DescribeCluster/Resource/Default": [
          {
            "type": "aws:cdk:logicalId",
            "data": "DescribeCluster6ADE1BC3"
          }
        ],
        "/aws-cdk-sdk-js-v3/DescribeCluster/CustomResourcePolicy/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "DescribeClusterCustomResourcePolicyD7730CF4"
          }
        ],
        "/aws-cdk-sdk-js-v3/MessageId": [
          {
            "type": "aws:cdk:logicalId",
            "data": "MessageId"
          }
        ],
        "/aws-cdk-sdk-js-v3/TopicArn": [
          {
            "type": "aws:cdk:logicalId",
            "data": "TopicArn"
          }
        ],
        "/aws-cdk-sdk-js-v3/ParameterValue": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ParameterValue"
          }
        ],
        "/aws-cdk-sdk-js-v3/ParameterValueNoPolicy": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ParameterValueNoPolicy"
          }
        ],
        "/aws-cdk-sdk-js-v3/BootstrapVersion": [
          {
            "type": "aws:cdk:logicalId",
            "data": "BootstrapVersion"
          }
        ],
        "/aws-cdk-sdk-js-v3/CheckBootstrapVersion": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CheckBootstrapVersion"
          }
        ]
      },
      "displayName": "aws-cdk-sdk-js-v3"
    },
    "AwsCustomResourceTestDefaultTestDeployAssert289A7DC5.assets": {
      "type": "cdk:asset-manifest",
      "properties": {
        "file": "AwsCustomResourceTestDefaultTestDeployAssert289A7DC5.assets.json",
        "requiresBootstrapStackVersion": 6,
        "bootstrapStackVersionSsmParameter": "/cdk-bootstrap/hnb659fds/version"
      }
    },
    "AwsCustomResourceTestDefaultTestDeployAssert289A7DC5": {
      "type": "aws:cloudformation:stack",
      "environment": "aws://unknown-account/unknown-region",
      "properties": {
        "templateFile": "AwsCustomResourceTestDefaultTestDeployAssert289A7DC5.template.json",
        "terminationProtection": false,
        "validateOnSynth": false,
        "assumeRoleArn": "arn:${AWS::Partition}:iam::${AWS::AccountId}:role/cdk-hnb659fds-deploy-role-${AWS::AccountId}-${AWS::Region}",
        "cloudFormationExecutionRoleArn": "arn:${AWS::Partition}:iam::${AWS::AccountId}:role/cdk-hnb659fds-cfn-exec-role-${AWS::AccountId}-${AWS::Region}",
        "stackTemplateAssetObjectUrl": "s3://cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}/21fbb51d7b23f6a6c262b46a9caee79d744a3ac019fd45422d988b96d44b2a22.json",
        "requiresBootstrapStackVersion": 6,
        "bootstrapStackVersionSsmParameter": "/cdk-bootstrap/hnb659fds/version",
        "additionalDependencies": [
          "AwsCustomResourceTestDefaultTestDeployAssert289A7DC5.assets"
        ],
        "lookupRole": {
          "arn": "arn:${AWS::Partition}:iam::${AWS::AccountId}:role/cdk-hnb659fds-lookup-role-${AWS::AccountId}-${AWS::Region}",
          "requiresBootstrapStackVersion": 8,
          "bootstrapStackVersionSsmParameter": "/cdk-bootstrap/hnb659fds/version"
        }
      },
      "dependencies": [
        "AwsCustomResourceTestDefaultTestDeployAssert289A7DC5.assets"
      ],
      "metadata": {
        "/AwsCustomResourceTest/DefaultTest/DeployAssert/BootstrapVersion": [
          {
            "type": "aws:cdk:logicalId",
            "data": "BootstrapVersion"
          }
        ],
        "/AwsCustomResourceTest/DefaultTest/DeployAssert/CheckBootstrapVersion": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CheckBootstrapVersion"
          }
        ]
      },
      "displayName": "AwsCustomResourceTest/DefaultTest/DeployAssert"
    },
    "Tree": {
      "type": "cdk:tree",
      "properties": {
        "file": "tree.json"
      }
    }
  }
}