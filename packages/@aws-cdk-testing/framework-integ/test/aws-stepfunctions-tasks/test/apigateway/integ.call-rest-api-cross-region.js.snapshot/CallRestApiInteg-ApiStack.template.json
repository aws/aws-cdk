{
 "Resources": {
  "MyRestApi2D1F47A9": {
   "Type": "AWS::ApiGateway::RestApi",
   "Properties": {
    "Name": "MyRestApi"
   }
  },
  "MyRestApiCloudWatchRoleD4042E8E": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "apigateway.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs"
       ]
      ]
     }
    ]
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain"
  },
  "MyRestApiAccount2FB6DB7A": {
   "Type": "AWS::ApiGateway::Account",
   "Properties": {
    "CloudWatchRoleArn": {
     "Fn::GetAtt": [
      "MyRestApiCloudWatchRoleD4042E8E",
      "Arn"
     ]
    }
   },
   "DependsOn": [
    "MyRestApi2D1F47A9"
   ],
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain"
  },
  "MyRestApiDeploymentB555B5824a2dace0b77d6e14d0cc32d4d28422f3": {
   "Type": "AWS::ApiGateway::Deployment",
   "Properties": {
    "Description": "Automatically created by the RestApi construct",
    "RestApiId": {
     "Ref": "MyRestApi2D1F47A9"
    }
   },
   "DependsOn": [
    "MyRestApiANY05143F93"
   ]
  },
  "MyRestApiDeploymentStageprodC33B8E5F": {
   "Type": "AWS::ApiGateway::Stage",
   "Properties": {
    "DeploymentId": {
     "Ref": "MyRestApiDeploymentB555B5824a2dace0b77d6e14d0cc32d4d28422f3"
    },
    "RestApiId": {
     "Ref": "MyRestApi2D1F47A9"
    },
    "StageName": "prod"
   },
   "DependsOn": [
    "MyRestApiAccount2FB6DB7A"
   ]
  },
  "MyRestApiANYApiPermissionCallRestApiIntegApiStackMyRestApiC2593C7AANY7E91F016": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "Hello4A628BD4",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-west-2:",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "MyRestApi2D1F47A9"
       },
       "/",
       {
        "Ref": "MyRestApiDeploymentStageprodC33B8E5F"
       },
       "/*/"
      ]
     ]
    }
   }
  },
  "MyRestApiANYApiPermissionTestCallRestApiIntegApiStackMyRestApiC2593C7AANY4B5F396C": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "Hello4A628BD4",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-west-2:",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "MyRestApi2D1F47A9"
       },
       "/test-invoke-stage/*/"
      ]
     ]
    }
   }
  },
  "MyRestApiANY05143F93": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "ANY",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "Hello4A628BD4",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Fn::GetAtt": [
      "MyRestApi2D1F47A9",
      "RootResourceId"
     ]
    },
    "RestApiId": {
     "Ref": "MyRestApi2D1F47A9"
    }
   }
  },
  "HelloServiceRole1E55EA16": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   }
  },
  "Hello4A628BD4": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "ZipFile": "exports.handler = async function(event, context) { return { statusCode: 200, body: \"hello, world!\" }; };"
    },
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "HelloServiceRole1E55EA16",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x"
   },
   "DependsOn": [
    "HelloServiceRole1E55EA16"
   ]
  },
  "ExportsWriteruseast10F67B507DDE2E818": {
   "Type": "Custom::CrossRegionExportWriter",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "CustomCrossRegionExportWriterCustomResourceProviderHandlerD8786E8A",
      "Arn"
     ]
    },
    "WriterProps": {
     "region": "us-east-1",
     "exports": {
      "/cdk/exports/CallRestApiInteg-SfnStack/CallRestApiIntegApiStackuswest2RefMyRestApi2D1F47A94BF96318": {
       "Ref": "MyRestApi2D1F47A9"
      }
     }
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  },
  "CustomCrossRegionExportWriterCustomResourceProviderRoleC951B1E1": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Version": "2012-10-17",
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ]
    },
    "ManagedPolicyArns": [
     {
      "Fn::Sub": "arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
     }
    ],
    "Policies": [
     {
      "PolicyName": "Inline",
      "PolicyDocument": {
       "Version": "2012-10-17",
       "Statement": [
        {
         "Effect": "Allow",
         "Resource": [
          {
           "Fn::Join": [
            "",
            [
             "arn:aws:ssm:us-east-1:",
             {
              "Ref": "AWS::AccountId"
             },
             ":parameter/cdk/exports/*"
            ]
           ]
          }
         ],
         "Action": [
          "ssm:DeleteParameters",
          "ssm:ListTagsForResource",
          "ssm:GetParameters",
          "ssm:PutParameter"
         ]
        }
       ]
      }
     }
    ]
   }
  },
  "CustomCrossRegionExportWriterCustomResourceProviderHandlerD8786E8A": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-us-west-2"
     },
     "S3Key": "bbfb567dc956ce71e67ac1f96589821990e2ca48307b93a577bbb345d2de441b.zip"
    },
    "Timeout": 900,
    "MemorySize": 128,
    "Handler": "__entrypoint__.handler",
    "Role": {
     "Fn::GetAtt": [
      "CustomCrossRegionExportWriterCustomResourceProviderRoleC951B1E1",
      "Arn"
     ]
    },
    "Runtime": "nodejs20.x"
   },
   "DependsOn": [
    "CustomCrossRegionExportWriterCustomResourceProviderRoleC951B1E1"
   ]
  }
 },
 "Outputs": {
  "MyRestApiEndpoint4C55E4CB": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "https://",
      {
       "Ref": "MyRestApi2D1F47A9"
      },
      ".execute-api.us-west-2.",
      {
       "Ref": "AWS::URLSuffix"
      },
      "/",
      {
       "Ref": "MyRestApiDeploymentStageprodC33B8E5F"
      },
      "/"
     ]
    ]
   }
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}