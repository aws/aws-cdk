{
 "Resources": {
  "submitJobLambdaServiceRole4D897ABD": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   }
  },
  "submitJobLambdaEFB00F3C": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "ZipFile": "exports.handler = async (event, context) => {\n        return {\n          statusCode: '200',\n          body: 'hello, world!',\n          ...event,\n        };\n      };"
    },
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "submitJobLambdaServiceRole4D897ABD",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x"
   },
   "DependsOn": [
    "submitJobLambdaServiceRole4D897ABD"
   ]
  },
  "checkJobStateLambdaServiceRoleB8B57B65": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   }
  },
  "checkJobStateLambda4618B7B7": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "ZipFile": "exports.handler = async function(event, context) {\n        const expectedFields = [\n          'execId', 'execInput', 'execName', 'execRoleArn',\n          'execStartTime', 'stateEnteredTime', 'stateName',\n          'stateRetryCount', 'stateMachineId', 'stateMachineName',\n        ];\n        const fieldsAreSet = expectedFields.every(field => event[field] !== undefined);\n        return {\n          status: event.statusCode === '200' && fieldsAreSet ? 'SUCCEEDED' : 'FAILED'\n        };\n  };"
    },
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "checkJobStateLambdaServiceRoleB8B57B65",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x"
   },
   "DependsOn": [
    "checkJobStateLambdaServiceRoleB8B57B65"
   ]
  },
  "StateMachineRoleB840431D": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "states.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    }
   }
  },
  "StateMachineRoleDefaultPolicyDF1E6607": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "lambda:InvokeFunction",
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "checkJobStateLambda4618B7B7",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "submitJobLambdaEFB00F3C",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "checkJobStateLambda4618B7B7",
             "Arn"
            ]
           },
           ":*"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "submitJobLambdaEFB00F3C",
             "Arn"
            ]
           },
           ":*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "StateMachineRoleDefaultPolicyDF1E6607",
    "Roles": [
     {
      "Ref": "StateMachineRoleB840431D"
     }
    ]
   }
  },
  "StateMachine2E01A3A5": {
   "Type": "AWS::StepFunctions::StateMachine",
   "Properties": {
    "DefinitionString": {
     "Fn::Join": [
      "",
      [
       "{\"StartAt\":\"Invoke Handler\",\"States\":{\"Invoke Handler\":{\"QueryLanguage\":\"JSONata\",\"Next\":\"Check the job state\",\"Retry\":[{\"ErrorEquals\":[\"Lambda.ClientExecutionTimeoutException\",\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2}],\"Type\":\"Task\",\"Arguments\":{\"FunctionName\":\"",
       {
        "Fn::GetAtt": [
         "submitJobLambdaEFB00F3C",
         "Arn"
        ]
       },
       "\",\"Payload\":{\"execId\":\"{% $states.context.Execution.Id %}\",\"execInput\":\"{% $states.context.Execution.Input %}\",\"execName\":\"{% $states.context.Execution.Name %}\",\"execRoleArn\":\"{% $states.context.Execution.RoleArn %}\",\"execStartTime\":\"{% $states.context.Execution.StartTime %}\",\"stateEnteredTime\":\"{% $states.context.State.EnteredTime %}\",\"stateName\":\"{% $states.context.State.Name %}\",\"stateRetryCount\":\"{% $states.context.State.RetryCount %}\",\"stateMachineId\":\"{% $states.context.StateMachine.Id %}\",\"stateMachineName\":\"{% $states.context.StateMachine.Name %}\"}},\"Output\":\"{% $states.result.Payload %}\",\"Resource\":\"arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":states:::lambda:invoke\"},\"Check the job state\":{\"QueryLanguage\":\"JSONata\",\"Next\":\"Job Complete?\",\"Retry\":[{\"ErrorEquals\":[\"Lambda.ClientExecutionTimeoutException\",\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2}],\"Type\":\"Task\",\"Arguments\":{\"FunctionName\":\"",
       {
        "Fn::GetAtt": [
         "checkJobStateLambda4618B7B7",
         "Arn"
        ]
       },
       "\",\"Payload\":\"{% $states.input %}\"},\"Output\":{\"status\":\"{% $states.result.Payload.status %}\"},\"Resource\":\"arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":states:::lambda:invoke\"},\"Job Complete?\":{\"Type\":\"Choice\",\"QueryLanguage\":\"JSONata\",\"Choices\":[{\"Condition\":\"{% $states.input.status = 'FAILED' %}\",\"Next\":\"Job Failed\"},{\"Condition\":\"{% $states.input.status = 'SUCCEEDED' %}\",\"Next\":\"Final step\"}]},\"Job Failed\":{\"Type\":\"Fail\",\"QueryLanguage\":\"JSONata\",\"Error\":\"Received a status that was not 200\",\"Cause\":\"Job Failed\"},\"Final step\":{\"Type\":\"Pass\",\"QueryLanguage\":\"JSONata\",\"End\":true}},\"TimeoutSeconds\":30}"
      ]
     ]
    },
    "RoleArn": {
     "Fn::GetAtt": [
      "StateMachineRoleB840431D",
      "Arn"
     ]
    }
   },
   "DependsOn": [
    "StateMachineRoleDefaultPolicyDF1E6607",
    "StateMachineRoleB840431D"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  }
 },
 "Outputs": {
  "stateMachineArn": {
   "Value": {
    "Ref": "StateMachine2E01A3A5"
   }
  },
  "ExportsOutputRefStateMachine2E01A3A5BA46F753": {
   "Value": {
    "Ref": "StateMachine2E01A3A5"
   },
   "Export": {
    "Name": "aws-stepfunctions-tasks-lambda-invoke-jsonata-integ:ExportsOutputRefStateMachine2E01A3A5BA46F753"
   }
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}