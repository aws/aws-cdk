"use strict";var c=Object.defineProperty;var w=Object.getOwnPropertyDescriptor;var g=Object.getOwnPropertyNames;var C=Object.prototype.hasOwnProperty;var p=(n,e)=>{for(var o in e)c(n,o,{get:e[o],enumerable:!0})},u=(n,e,o,t)=>{if(e&&typeof e=="object"||typeof e=="function")for(let r of g(e))!C.call(n,r)&&r!==o&&c(n,r,{get:()=>e[r],enumerable:!(t=w(e,r))||t.enumerable});return n};var h=n=>u(c({},"__esModule",{value:!0}),n);var E={};p(E,{handler:()=>k});module.exports=h(E);var i=require("@aws-sdk/client-sts");function A(n){let e=Object.entries(n).filter(([o])=>o.endsWith("Client")&&o!=="__Client");if(e.length==0)throw new Error("There is no *Client class in the package.");if(e.length>1)throw new Error(`There are more than one *Client classes in the package: ${e.map(o=>o[0]).join(",")}`);return e[0][1]}function P(n){return n.charAt(0).toUpperCase()+n.slice(1)}function S(n,e){let o=`${P(e)}Command`,t=Object.entries(n).find(([r])=>r.toLowerCase()===o.toLowerCase())?.[1];if(!t)throw new Error(`Unable to find command named: ${o} for action: ${e} in service package`);return t}var k=async n=>{console.log("Event: ",n);try{let e;if(n.assumeRoleArn){let a=new i.STSClient({}),f=new i.AssumeRoleCommand({RoleArn:n.assumeRoleArn,RoleSessionName:`cross-region-aws-sdk-${Date.now()}`}),d=await a.send(f);if(d.Credentials)e=d.Credentials;else throw new Error("Failed to assume role, no credentials returned")}let o=require(`@aws-sdk/client-${n.service}`),t=A(o),r=S(o,n.action),l=new t({region:n.region,endpoint:n.endpoint,...e&&{credentials:{accessKeyId:e.AccessKeyId,secretAccessKey:e.SecretAccessKey,sessionToken:e.SessionToken}}}),m=new r(n.parameters??{}),s=await l.send(m);if(s.Payload&&(s.Payload instanceof Uint8Array||s.Payload instanceof Buffer))try{let a=new TextDecoder().decode(s.Payload);s.Payload=JSON.parse(a)}catch{s.Payload=new TextDecoder().decode(s.Payload)}let y=JSON.stringify(s);return JSON.parse(y)}catch(e){throw console.error("Error: ",e),e}};0&&(module.exports={handler});
