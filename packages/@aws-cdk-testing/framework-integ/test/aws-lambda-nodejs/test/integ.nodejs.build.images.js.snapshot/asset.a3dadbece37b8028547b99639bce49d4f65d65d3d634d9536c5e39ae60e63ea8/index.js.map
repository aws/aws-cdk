{
  "version": 3,
  "sources": ["../../../../../../../../node_modules/delay/index.js", "../../integ-handlers/dependencies.ts"],
  "sourcesContent": ["'use strict';\n\n// From https://github.com/sindresorhus/random-int/blob/c37741b56f76b9160b0b63dae4e9c64875128146/index.js#L13-L15\nconst randomInteger = (minimum, maximum) => Math.floor((Math.random() * (maximum - minimum + 1)) + minimum);\n\nconst createAbortError = () => {\n\tconst error = new Error('Delay aborted');\n\terror.name = 'AbortError';\n\treturn error;\n};\n\nconst createDelay = ({clearTimeout: defaultClear, setTimeout: set, willResolve}) => (ms, {value, signal} = {}) => {\n\tif (signal && signal.aborted) {\n\t\treturn Promise.reject(createAbortError());\n\t}\n\n\tlet timeoutId;\n\tlet settle;\n\tlet rejectFn;\n\tconst clear = defaultClear || clearTimeout;\n\n\tconst signalListener = () => {\n\t\tclear(timeoutId);\n\t\trejectFn(createAbortError());\n\t};\n\n\tconst cleanup = () => {\n\t\tif (signal) {\n\t\t\tsignal.removeEventListener('abort', signalListener);\n\t\t}\n\t};\n\n\tconst delayPromise = new Promise((resolve, reject) => {\n\t\tsettle = () => {\n\t\t\tcleanup();\n\t\t\tif (willResolve) {\n\t\t\t\tresolve(value);\n\t\t\t} else {\n\t\t\t\treject(value);\n\t\t\t}\n\t\t};\n\n\t\trejectFn = reject;\n\t\ttimeoutId = (set || setTimeout)(settle, ms);\n\t});\n\n\tif (signal) {\n\t\tsignal.addEventListener('abort', signalListener, {once: true});\n\t}\n\n\tdelayPromise.clear = () => {\n\t\tclear(timeoutId);\n\t\ttimeoutId = null;\n\t\tsettle();\n\t};\n\n\treturn delayPromise;\n};\n\nconst createWithTimers = clearAndSet => {\n\tconst delay = createDelay({...clearAndSet, willResolve: true});\n\tdelay.reject = createDelay({...clearAndSet, willResolve: false});\n\tdelay.range = (minimum, maximum, options) => delay(randomInteger(minimum, maximum), options);\n\treturn delay;\n};\n\nconst delay = createWithTimers();\ndelay.createWithTimers = createWithTimers;\n\nmodule.exports = delay;\n// TODO: Remove this for the next major release\nmodule.exports.default = delay;\n", "/* eslint-disable no-console */\n// @ts-ignore\nimport delay from 'delay';\n\nexport async function handler() {\n  await delay(5);\n  console.log('log after delay');\n}"],
  "mappings": "onBAAA,IAAAA,EAAAC,EAAA,CAAAC,EAAAC,IAAA,cAGA,IAAMC,EAAgB,CAACC,EAASC,IAAY,KAAK,MAAO,KAAK,OAAO,GAAKA,EAAUD,EAAU,GAAMA,CAAO,EAEpGE,EAAmB,IAAM,CAC9B,IAAMC,EAAQ,IAAI,MAAM,eAAe,EACvC,OAAAA,EAAM,KAAO,aACNA,CACR,EAEMC,EAAc,CAAC,CAAC,aAAcC,EAAc,WAAYC,EAAK,YAAAC,CAAW,IAAM,CAACC,EAAI,CAAC,MAAAC,EAAO,OAAAC,CAAM,EAAI,CAAC,IAAM,CACjH,GAAIA,GAAUA,EAAO,QACpB,OAAO,QAAQ,OAAOR,EAAiB,CAAC,EAGzC,IAAIS,EACAC,EACAC,EACEC,EAAQT,GAAgB,aAExBU,EAAiB,IAAM,CAC5BD,EAAMH,CAAS,EACfE,EAASX,EAAiB,CAAC,CAC5B,EAEMc,EAAU,IAAM,CACjBN,GACHA,EAAO,oBAAoB,QAASK,CAAc,CAEpD,EAEME,EAAe,IAAI,QAAQ,CAACC,EAASC,IAAW,CACrDP,EAAS,IAAM,CACdI,EAAQ,EACJT,EACHW,EAAQT,CAAK,EAEbU,EAAOV,CAAK,CAEd,EAEAI,EAAWM,EACXR,GAAaL,GAAO,YAAYM,EAAQJ,CAAE,CAC3C,CAAC,EAED,OAAIE,GACHA,EAAO,iBAAiB,QAASK,EAAgB,CAAC,KAAM,EAAI,CAAC,EAG9DE,EAAa,MAAQ,IAAM,CAC1BH,EAAMH,CAAS,EACfA,EAAY,KACZC,EAAO,CACR,EAEOK,CACR,EAEMG,EAAmBC,GAAe,CACvC,IAAMC,EAAQlB,EAAY,CAAC,GAAGiB,EAAa,YAAa,EAAI,CAAC,EAC7D,OAAAC,EAAM,OAASlB,EAAY,CAAC,GAAGiB,EAAa,YAAa,EAAK,CAAC,EAC/DC,EAAM,MAAQ,CAACtB,EAASC,EAASsB,IAAYD,EAAMvB,EAAcC,EAASC,CAAO,EAAGsB,CAAO,EACpFD,CACR,EAEMA,EAAQF,EAAiB,EAC/BE,EAAM,iBAAmBF,EAEzBtB,EAAO,QAAUwB,EAEjBxB,EAAO,QAAQ,QAAUwB,ICvEzB,IAAAE,EAAA,GAAAC,EAAAD,EAAA,aAAAE,IAAA,eAAAC,EAAAH,GAEA,IAAAI,EAAkB,OAElB,eAAsBF,GAAU,CAC9B,QAAM,EAAAG,SAAM,CAAC,EACb,QAAQ,IAAI,iBAAiB,CAC/B",
  "names": ["require_delay", "__commonJSMin", "exports", "module", "randomInteger", "minimum", "maximum", "createAbortError", "error", "createDelay", "defaultClear", "set", "willResolve", "ms", "value", "signal", "timeoutId", "settle", "rejectFn", "clear", "signalListener", "cleanup", "delayPromise", "resolve", "reject", "createWithTimers", "clearAndSet", "delay", "options", "dependencies_exports", "__export", "handler", "__toCommonJS", "import_delay", "delay"]
}
