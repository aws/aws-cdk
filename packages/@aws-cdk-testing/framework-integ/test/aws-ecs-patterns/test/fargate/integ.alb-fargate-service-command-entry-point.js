"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const ec2 = require("aws-cdk-lib/aws-ec2");
const ecs = require("aws-cdk-lib/aws-ecs");
const cdk = require("aws-cdk-lib");
const integ = require("@aws-cdk/integ-tests-alpha");
const ecsPatterns = require("aws-cdk-lib/aws-ecs-patterns");
const app = new cdk.App();
const stack = new cdk.Stack(app, 'aws-ecs-integ-lb-fargate-cmd-entrypoint-test');
// Create VPC and cluster
const vpc = new ec2.Vpc(stack, 'Vpc', { maxAzs: 2 });
const cluster = new ecs.Cluster(stack, 'TestFargateCluster', { vpc });
// Create ALB service with Command and EntryPoint
new ecsPatterns.ApplicationLoadBalancedFargateService(stack, 'ALBFargateServiceWithCommandAndEntryPoint', {
    cluster,
    memoryLimitMiB: 512,
    cpu: 256,
    taskImageOptions: {
        image: ecs.ContainerImage.fromRegistry('amazon/amazon-ecs-sample'),
        command: ['/usr/sbin/apache2', '-D', 'FOREGROUND'],
        entryPoint: ['/bin/bash'],
    },
});
new integ.IntegTest(app, 'AlbFargateServiceWithCommandAndEntryPoint', {
    testCases: [stack],
});
app.synth();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW50ZWcuYWxiLWZhcmdhdGUtc2VydmljZS1jb21tYW5kLWVudHJ5LXBvaW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiaW50ZWcuYWxiLWZhcmdhdGUtc2VydmljZS1jb21tYW5kLWVudHJ5LXBvaW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsMkNBQTJDO0FBQzNDLDJDQUEyQztBQUMzQyxtQ0FBbUM7QUFDbkMsb0RBQW9EO0FBQ3BELDREQUE0RDtBQUU1RCxNQUFNLEdBQUcsR0FBRyxJQUFJLEdBQUcsQ0FBQyxHQUFHLEVBQUUsQ0FBQztBQUMxQixNQUFNLEtBQUssR0FBRyxJQUFJLEdBQUcsQ0FBQyxLQUFLLENBQ3pCLEdBQUcsRUFDSCw4Q0FBOEMsQ0FDL0MsQ0FBQztBQUVGLHlCQUF5QjtBQUN6QixNQUFNLEdBQUcsR0FBRyxJQUFJLEdBQUcsQ0FBQyxHQUFHLENBQUMsS0FBSyxFQUFFLEtBQUssRUFBRSxFQUFFLE1BQU0sRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDO0FBQ3JELE1BQU0sT0FBTyxHQUFHLElBQUksR0FBRyxDQUFDLE9BQU8sQ0FBQyxLQUFLLEVBQUUsb0JBQW9CLEVBQUUsRUFBRSxHQUFHLEVBQUUsQ0FBQyxDQUFDO0FBRXRFLGlEQUFpRDtBQUNqRCxJQUFJLFdBQVcsQ0FBQyxxQ0FBcUMsQ0FDbkQsS0FBSyxFQUNMLDJDQUEyQyxFQUMzQztJQUNFLE9BQU87SUFDUCxjQUFjLEVBQUUsR0FBRztJQUNuQixHQUFHLEVBQUUsR0FBRztJQUNSLGdCQUFnQixFQUFFO1FBQ2hCLEtBQUssRUFBRSxHQUFHLENBQUMsY0FBYyxDQUFDLFlBQVksQ0FBQywwQkFBMEIsQ0FBQztRQUNsRSxPQUFPLEVBQUUsQ0FBQyxtQkFBbUIsRUFBRSxJQUFJLEVBQUUsWUFBWSxDQUFDO1FBQ2xELFVBQVUsRUFBRSxDQUFDLFdBQVcsQ0FBQztLQUMxQjtDQUNGLENBQ0YsQ0FBQztBQUVGLElBQUksS0FBSyxDQUFDLFNBQVMsQ0FBQyxHQUFHLEVBQUUsMkNBQTJDLEVBQUU7SUFDcEUsU0FBUyxFQUFFLENBQUMsS0FBSyxDQUFDO0NBQ25CLENBQUMsQ0FBQztBQUVILEdBQUcsQ0FBQyxLQUFLLEVBQUUsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIGVjMiBmcm9tICdhd3MtY2RrLWxpYi9hd3MtZWMyJztcbmltcG9ydCAqIGFzIGVjcyBmcm9tICdhd3MtY2RrLWxpYi9hd3MtZWNzJztcbmltcG9ydCAqIGFzIGNkayBmcm9tICdhd3MtY2RrLWxpYic7XG5pbXBvcnQgKiBhcyBpbnRlZyBmcm9tICdAYXdzLWNkay9pbnRlZy10ZXN0cy1hbHBoYSc7XG5pbXBvcnQgKiBhcyBlY3NQYXR0ZXJucyBmcm9tICdhd3MtY2RrLWxpYi9hd3MtZWNzLXBhdHRlcm5zJztcblxuY29uc3QgYXBwID0gbmV3IGNkay5BcHAoKTtcbmNvbnN0IHN0YWNrID0gbmV3IGNkay5TdGFjayhcbiAgYXBwLFxuICAnYXdzLWVjcy1pbnRlZy1sYi1mYXJnYXRlLWNtZC1lbnRyeXBvaW50LXRlc3QnLFxuKTtcblxuLy8gQ3JlYXRlIFZQQyBhbmQgY2x1c3RlclxuY29uc3QgdnBjID0gbmV3IGVjMi5WcGMoc3RhY2ssICdWcGMnLCB7IG1heEF6czogMiB9KTtcbmNvbnN0IGNsdXN0ZXIgPSBuZXcgZWNzLkNsdXN0ZXIoc3RhY2ssICdUZXN0RmFyZ2F0ZUNsdXN0ZXInLCB7IHZwYyB9KTtcblxuLy8gQ3JlYXRlIEFMQiBzZXJ2aWNlIHdpdGggQ29tbWFuZCBhbmQgRW50cnlQb2ludFxubmV3IGVjc1BhdHRlcm5zLkFwcGxpY2F0aW9uTG9hZEJhbGFuY2VkRmFyZ2F0ZVNlcnZpY2UoXG4gIHN0YWNrLFxuICAnQUxCRmFyZ2F0ZVNlcnZpY2VXaXRoQ29tbWFuZEFuZEVudHJ5UG9pbnQnLFxuICB7XG4gICAgY2x1c3RlcixcbiAgICBtZW1vcnlMaW1pdE1pQjogNTEyLFxuICAgIGNwdTogMjU2LFxuICAgIHRhc2tJbWFnZU9wdGlvbnM6IHtcbiAgICAgIGltYWdlOiBlY3MuQ29udGFpbmVySW1hZ2UuZnJvbVJlZ2lzdHJ5KCdhbWF6b24vYW1hem9uLWVjcy1zYW1wbGUnKSxcbiAgICAgIGNvbW1hbmQ6IFsnL3Vzci9zYmluL2FwYWNoZTInLCAnLUQnLCAnRk9SRUdST1VORCddLFxuICAgICAgZW50cnlQb2ludDogWycvYmluL2Jhc2gnXSxcbiAgICB9LFxuICB9LFxuKTtcblxubmV3IGludGVnLkludGVnVGVzdChhcHAsICdBbGJGYXJnYXRlU2VydmljZVdpdGhDb21tYW5kQW5kRW50cnlQb2ludCcsIHtcbiAgdGVzdENhc2VzOiBbc3RhY2tdLFxufSk7XG5cbmFwcC5zeW50aCgpO1xuIl19