{
 "Resources": {
  "MyTopic86869434": {
   "Type": "AWS::SNS::Topic"
  },
  "EchoServiceRoleBE28060B": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   }
  },
  "Echo11F3FB29": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "ZipFile": "exports.handler = function handler(event, _context, callback) {\n    /* eslint-disable no-console */\n    console.log('====================================================');\n    console.log(JSON.stringify(event, undefined, 2));\n    console.log('====================================================');\n    return callback(undefined, event);\n}"
    },
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "EchoServiceRoleBE28060B",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x"
   },
   "DependsOn": [
    "EchoServiceRoleBE28060B"
   ]
  },
  "EchoAllowInvokeawscdksnslambdaMyTopic6C62AB907F727CDA": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "Echo11F3FB29",
      "Arn"
     ]
    },
    "Principal": "sns.amazonaws.com",
    "SourceArn": {
     "Ref": "MyTopic86869434"
    }
   }
  },
  "EchoMyTopic4CB8819E": {
   "Type": "AWS::SNS::Subscription",
   "Properties": {
    "Endpoint": {
     "Fn::GetAtt": [
      "Echo11F3FB29",
      "Arn"
     ]
    },
    "Protocol": "lambda",
    "RedrivePolicy": {
     "deadLetterTargetArn": {
      "Fn::GetAtt": [
       "DeadLetterQueue9F481546",
       "Arn"
      ]
     }
    },
    "TopicArn": {
     "Ref": "MyTopic86869434"
    }
   }
  },
  "DeadLetterQueue9F481546": {
   "Type": "AWS::SQS::Queue",
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  },
  "DeadLetterQueuePolicyB1FB890C": {
   "Type": "AWS::SQS::QueuePolicy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "sqs:SendMessage",
       "Condition": {
        "ArnEquals": {
         "aws:SourceArn": {
          "Ref": "MyTopic86869434"
         }
        }
       },
       "Effect": "Allow",
       "Principal": {
        "Service": "sns.amazonaws.com"
       },
       "Resource": {
        "Fn::GetAtt": [
         "DeadLetterQueue9F481546",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "Queues": [
     {
      "Ref": "DeadLetterQueue9F481546"
     }
    ]
   }
  },
  "FilteredServiceRole16D9DDC1": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   }
  },
  "Filtered186C0D0A": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "ZipFile": "exports.handler = function handler(event, _context, callback) {\n    /* eslint-disable no-console */\n    console.log('====================================================');\n    console.log(JSON.stringify(event, undefined, 2));\n    console.log('====================================================');\n    return callback(undefined, event);\n}"
    },
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "FilteredServiceRole16D9DDC1",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x"
   },
   "DependsOn": [
    "FilteredServiceRole16D9DDC1"
   ]
  },
  "FilteredAllowInvokeawscdksnslambdaMyTopic6C62AB90A2EA1666": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "Filtered186C0D0A",
      "Arn"
     ]
    },
    "Principal": "sns.amazonaws.com",
    "SourceArn": {
     "Ref": "MyTopic86869434"
    }
   }
  },
  "FilteredMyTopicC8395C27": {
   "Type": "AWS::SNS::Subscription",
   "Properties": {
    "Endpoint": {
     "Fn::GetAtt": [
      "Filtered186C0D0A",
      "Arn"
     ]
    },
    "FilterPolicy": {
     "color": [
      "red",
      {
       "prefix": "bl"
      },
      {
       "prefix": "ye"
      }
     ],
     "size": [
      {
       "anything-but": [
        "small",
        "medium"
       ]
      }
     ],
     "price": [
      {
       "numeric": [
        ">=",
        100,
        "<=",
        200
       ]
      }
     ]
    },
    "Protocol": "lambda",
    "TopicArn": {
     "Ref": "MyTopic86869434"
    }
   }
  },
  "FilteredMessageBodyServiceRoleB2EB82B3": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   }
  },
  "FilteredMessageBody222AE8F1": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "ZipFile": "exports.handler = function handler(event, _context, callback) {\n    /* eslint-disable no-console */\n    console.log('====================================================');\n    console.log(JSON.stringify(event, undefined, 2));\n    console.log('====================================================');\n    return callback(undefined, event);\n}"
    },
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "FilteredMessageBodyServiceRoleB2EB82B3",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x"
   },
   "DependsOn": [
    "FilteredMessageBodyServiceRoleB2EB82B3"
   ]
  },
  "FilteredMessageBodyAllowInvokeawscdksnslambdaMyTopic6C62AB90FB54CEA4": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "FilteredMessageBody222AE8F1",
      "Arn"
     ]
    },
    "Principal": "sns.amazonaws.com",
    "SourceArn": {
     "Ref": "MyTopic86869434"
    }
   }
  },
  "FilteredMessageBodyMyTopicAD1F55C4": {
   "Type": "AWS::SNS::Subscription",
   "Properties": {
    "Endpoint": {
     "Fn::GetAtt": [
      "FilteredMessageBody222AE8F1",
      "Arn"
     ]
    },
    "FilterPolicy": {
     "background": {
      "color": [
       "red",
       {
        "prefix": "bl"
       },
       {
        "prefix": "ye"
       }
      ]
     }
    },
    "FilterPolicyScope": "MessageBody",
    "Protocol": "lambda",
    "TopicArn": {
     "Ref": "MyTopic86869434"
    }
   }
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}