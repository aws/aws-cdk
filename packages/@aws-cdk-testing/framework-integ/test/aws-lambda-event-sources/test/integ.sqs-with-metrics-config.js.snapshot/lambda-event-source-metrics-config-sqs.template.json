{
 "Resources": {
  "F1ServiceRoleCCF1273A": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   }
  },
  "F1ServiceRoleDefaultPolicy1610A985": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "sqs:ChangeMessageVisibility",
        "sqs:DeleteMessage",
        "sqs:GetQueueAttributes",
        "sqs:GetQueueUrl",
        "sqs:ReceiveMessage"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "Q63C6E3AB",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "F1ServiceRoleDefaultPolicy1610A985",
    "Roles": [
     {
      "Ref": "F1ServiceRoleCCF1273A"
     }
    ]
   }
  },
  "F1EAD92DBE": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "ZipFile": "exports.handler = async function handler(event) {\n    console.log('event:', JSON.stringify(event, undefined, 2));\n    return { event };\n}"
    },
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "F1ServiceRoleCCF1273A",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x"
   },
   "DependsOn": [
    "F1ServiceRoleDefaultPolicy1610A985",
    "F1ServiceRoleCCF1273A"
   ]
  },
  "F1SqsEventSourcelambdaeventsourcemetricsconfigsqsQ5E4B9C7541A3CDAE": {
   "Type": "AWS::Lambda::EventSourceMapping",
   "Properties": {
    "BatchSize": 5,
    "EventSourceArn": {
     "Fn::GetAtt": [
      "Q63C6E3AB",
      "Arn"
     ]
    },
    "FunctionName": {
     "Ref": "F1EAD92DBE"
    },
    "MetricsConfig": {
     "Metrics": []
    }
   }
  },
  "Q63C6E3AB": {
   "Type": "AWS::SQS::Queue",
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  },
  "F2ServiceRole7F7C6006": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   }
  },
  "F2ServiceRoleDefaultPolicy999D30A8": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "sqs:ChangeMessageVisibility",
        "sqs:DeleteMessage",
        "sqs:GetQueueAttributes",
        "sqs:GetQueueUrl",
        "sqs:ReceiveMessage"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "Q63C6E3AB",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "F2ServiceRoleDefaultPolicy999D30A8",
    "Roles": [
     {
      "Ref": "F2ServiceRole7F7C6006"
     }
    ]
   }
  },
  "F23BAC7B9C": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "ZipFile": "exports.handler = async function handler(event) {\n    console.log('event:', JSON.stringify(event, undefined, 2));\n    return { event };\n}"
    },
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "F2ServiceRole7F7C6006",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x"
   },
   "DependsOn": [
    "F2ServiceRoleDefaultPolicy999D30A8",
    "F2ServiceRole7F7C6006"
   ]
  },
  "F2SqsEventSourcelambdaeventsourcemetricsconfigsqsQ5E4B9C754C1C02FC": {
   "Type": "AWS::Lambda::EventSourceMapping",
   "Properties": {
    "BatchSize": 5,
    "EventSourceArn": {
     "Fn::GetAtt": [
      "Q63C6E3AB",
      "Arn"
     ]
    },
    "FunctionName": {
     "Ref": "F23BAC7B9C"
    },
    "MetricsConfig": {
     "Metrics": [
      "EventCount"
     ]
    }
   }
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}