{
 "Resources": {
  "GlueFunctionServiceRoleD5EDDC4C": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   }
  },
  "GlueFunctionServiceRoleDefaultPolicy16E5B38F": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "secretsmanager:DescribeSecret",
        "secretsmanager:GetSecretValue"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Ref": "GlueClientCertSecret3C32AE8A"
        },
        {
         "Ref": "GlueRootCASecretBD1C20BD"
        }
       ]
      },
      {
       "Action": "glue:GetRegistry",
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "SchemaRegistry",
         "Arn"
        ]
       }
      },
      {
       "Action": "glue:GetSchemaVersion",
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "SchemaRegistry",
          "Arn"
         ]
        },
        {
         "Fn::Sub": [
          "arn:${AWS::Partition}:glue:${AWS::Region}:${AWS::AccountId}:schema/${registryName}/*",
          {
           "registryName": "smk-glue-test-schema-registry"
          }
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "GlueFunctionServiceRoleDefaultPolicy16E5B38F",
    "Roles": [
     {
      "Ref": "GlueFunctionServiceRoleD5EDDC4C"
     }
    ]
   }
  },
  "GlueFunctionEB1182FC": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "ZipFile": "exports.handler = async function handler(event) {\n    console.log('event:', JSON.stringify(event, undefined, 2));\n    return { event };\n}"
    },
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "GlueFunctionServiceRoleD5EDDC4C",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x"
   },
   "DependsOn": [
    "GlueFunctionServiceRoleDefaultPolicy16E5B38F",
    "GlueFunctionServiceRoleD5EDDC4C"
   ]
  },
  "GlueFunctionKafkaEventSource46eb851822d1a9f28d63dc4ec210952etesttopicsmkglueBB4DBE04": {
   "Type": "AWS::Lambda::EventSourceMapping",
   "Properties": {
    "BatchSize": 100,
    "FunctionName": {
     "Ref": "GlueFunctionEB1182FC"
    },
    "ProvisionedPollerConfig": {
     "MaximumPollers": 3,
     "MinimumPollers": 1
    },
    "SelfManagedEventSource": {
     "Endpoints": {
      "KafkaBootstrapServers": [
       "kafka-broker-1:9092",
       "kafka-broker-2:9092",
       "kafka-broker-3:9092"
      ]
     }
    },
    "SelfManagedKafkaEventSourceConfig": {
     "ConsumerGroupId": "test-consumer-group-smk-glue",
     "SchemaRegistryConfig": {
      "EventRecordFormat": "JSON",
      "SchemaRegistryURI": {
       "Fn::GetAtt": [
        "SchemaRegistry",
        "Arn"
       ]
      },
      "SchemaValidationConfigs": [
       {
        "Attribute": "KEY"
       }
      ]
     }
    },
    "SourceAccessConfigurations": [
     {
      "Type": "CLIENT_CERTIFICATE_TLS_AUTH",
      "URI": {
       "Ref": "GlueClientCertSecret3C32AE8A"
      }
     },
     {
      "Type": "SERVER_ROOT_CA_CERTIFICATE",
      "URI": {
       "Ref": "GlueRootCASecretBD1C20BD"
      }
     }
    ],
    "StartingPosition": "TRIM_HORIZON",
    "Topics": [
     "test-topic-smk-glue"
    ]
   }
  },
  "GlueRootCASecretBD1C20BD": {
   "Type": "AWS::SecretsManager::Secret",
   "Properties": {
    "SecretString": "{\"certificate\":\"-----BEGIN CERTIFICATE-----\\n    MIIE5DCCAsygAwIBAgIRAPJdwaFaNRrytHBto0j5BA0wDQYJKoZIhvcNAQELBQAw\\n    cmUuiAii9R0=\\n    -----END CERTIFICATE-----\\n    -----BEGIN CERTIFICATE-----\\n    MIIFgjCCA2qgAwIBAgIQdjNZd6uFf9hbNC5RdfmHrzANBgkqhkiG9w0BAQsFADBb\\n    c8PH3PSoAaRwMMgOSA2ALJvbRz8mpg==\\n    -----END CERTIFICATE-----\\\"\\n    \"}"
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  },
  "GlueClientCertSecret3C32AE8A": {
   "Type": "AWS::SecretsManager::Secret",
   "Properties": {
    "SecretString": "{\"certificate\":\"-----BEGIN CERTIFICATE-----\\n    MIIE5DCCAsygAwIBAgIRAPJdwaFaNRrytHBto0j5BA0wDQYJKoZIhvcNAQELBQAw\\n    cmUuiAii9R0=\\n    -----END CERTIFICATE-----\\n    -----BEGIN CERTIFICATE-----\\n    MIIFgjCCA2qgAwIBAgIQdjNZd6uFf9hbNC5RdfmHrzANBgkqhkiG9w0BAQsFADBb\\n    c8PH3PSoAaRwMMgOSA2ALJvbRz8mpg==\\n    -----END CERTIFICATE-----\\\"\\n    \",\"privateKey\":\"-----BEGIN ENCRYPTED PRIVATE KEY-----\\n    zp2mwJn2NYB7AZ7+imp0azDZb+8YG2aUCiyqb6PnnA==\\n    -----END ENCRYPTED PRIVATE KEY-----\"}"
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  },
  "SchemaRegistry": {
   "Type": "AWS::Glue::Registry",
   "Properties": {
    "Description": "Schema registry for SMK integration tests",
    "Name": "smk-glue-test-schema-registry"
   }
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}