{
 "Resources": {
  "vpcA2121C38": {
   "Type": "AWS::EC2::VPC",
   "Properties": {
    "CidrBlock": "10.0.0.0/16",
    "EnableDnsHostnames": true,
    "EnableDnsSupport": true,
    "InstanceTenancy": "default",
    "Tags": [
     {
      "Key": "Name",
      "Value": "stack/vpc"
     }
    ]
   }
  },
  "vpcPublicSubnet1Subnet2E65531E": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": {
     "Fn::Select": [
      0,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.0.0.0/18",
    "MapPublicIpOnLaunch": true,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Public"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Public"
     },
     {
      "Key": "Name",
      "Value": "stack/vpc/PublicSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "vpcA2121C38"
    }
   }
  },
  "vpcPublicSubnet1RouteTable48A2DF9B": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "stack/vpc/PublicSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "vpcA2121C38"
    }
   }
  },
  "vpcPublicSubnet1RouteTableAssociation5D3F4579": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "vpcPublicSubnet1RouteTable48A2DF9B"
    },
    "SubnetId": {
     "Ref": "vpcPublicSubnet1Subnet2E65531E"
    }
   }
  },
  "vpcPublicSubnet1DefaultRoute10708846": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "GatewayId": {
     "Ref": "vpcIGWE57CBDCA"
    },
    "RouteTableId": {
     "Ref": "vpcPublicSubnet1RouteTable48A2DF9B"
    }
   },
   "DependsOn": [
    "vpcVPCGW7984C166"
   ]
  },
  "vpcPublicSubnet1EIPDA49DCBE": {
   "Type": "AWS::EC2::EIP",
   "Properties": {
    "Domain": "vpc",
    "Tags": [
     {
      "Key": "Name",
      "Value": "stack/vpc/PublicSubnet1"
     }
    ]
   }
  },
  "vpcPublicSubnet1NATGateway9C16659E": {
   "Type": "AWS::EC2::NatGateway",
   "Properties": {
    "AllocationId": {
     "Fn::GetAtt": [
      "vpcPublicSubnet1EIPDA49DCBE",
      "AllocationId"
     ]
    },
    "SubnetId": {
     "Ref": "vpcPublicSubnet1Subnet2E65531E"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "stack/vpc/PublicSubnet1"
     }
    ]
   },
   "DependsOn": [
    "vpcPublicSubnet1DefaultRoute10708846",
    "vpcPublicSubnet1RouteTableAssociation5D3F4579"
   ]
  },
  "vpcPublicSubnet2Subnet009B674F": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": {
     "Fn::Select": [
      1,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.0.64.0/18",
    "MapPublicIpOnLaunch": true,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Public"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Public"
     },
     {
      "Key": "Name",
      "Value": "stack/vpc/PublicSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "vpcA2121C38"
    }
   }
  },
  "vpcPublicSubnet2RouteTableEB40D4CB": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "stack/vpc/PublicSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "vpcA2121C38"
    }
   }
  },
  "vpcPublicSubnet2RouteTableAssociation21F81B59": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "vpcPublicSubnet2RouteTableEB40D4CB"
    },
    "SubnetId": {
     "Ref": "vpcPublicSubnet2Subnet009B674F"
    }
   }
  },
  "vpcPublicSubnet2DefaultRouteA1EC0F60": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "GatewayId": {
     "Ref": "vpcIGWE57CBDCA"
    },
    "RouteTableId": {
     "Ref": "vpcPublicSubnet2RouteTableEB40D4CB"
    }
   },
   "DependsOn": [
    "vpcVPCGW7984C166"
   ]
  },
  "vpcPublicSubnet2EIP9B3743B1": {
   "Type": "AWS::EC2::EIP",
   "Properties": {
    "Domain": "vpc",
    "Tags": [
     {
      "Key": "Name",
      "Value": "stack/vpc/PublicSubnet2"
     }
    ]
   }
  },
  "vpcPublicSubnet2NATGateway9B8AE11A": {
   "Type": "AWS::EC2::NatGateway",
   "Properties": {
    "AllocationId": {
     "Fn::GetAtt": [
      "vpcPublicSubnet2EIP9B3743B1",
      "AllocationId"
     ]
    },
    "SubnetId": {
     "Ref": "vpcPublicSubnet2Subnet009B674F"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "stack/vpc/PublicSubnet2"
     }
    ]
   },
   "DependsOn": [
    "vpcPublicSubnet2DefaultRouteA1EC0F60",
    "vpcPublicSubnet2RouteTableAssociation21F81B59"
   ]
  },
  "vpcPrivateSubnet1Subnet934893E8": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": {
     "Fn::Select": [
      0,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.0.128.0/18",
    "MapPublicIpOnLaunch": false,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Private"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Private"
     },
     {
      "Key": "Name",
      "Value": "stack/vpc/PrivateSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "vpcA2121C38"
    }
   }
  },
  "vpcPrivateSubnet1RouteTableB41A48CC": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "stack/vpc/PrivateSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "vpcA2121C38"
    }
   }
  },
  "vpcPrivateSubnet1RouteTableAssociation67945127": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "vpcPrivateSubnet1RouteTableB41A48CC"
    },
    "SubnetId": {
     "Ref": "vpcPrivateSubnet1Subnet934893E8"
    }
   }
  },
  "vpcPrivateSubnet1DefaultRoute1AA8E2E5": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "NatGatewayId": {
     "Ref": "vpcPublicSubnet1NATGateway9C16659E"
    },
    "RouteTableId": {
     "Ref": "vpcPrivateSubnet1RouteTableB41A48CC"
    }
   }
  },
  "vpcPrivateSubnet2Subnet7031C2BA": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": {
     "Fn::Select": [
      1,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.0.192.0/18",
    "MapPublicIpOnLaunch": false,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Private"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Private"
     },
     {
      "Key": "Name",
      "Value": "stack/vpc/PrivateSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "vpcA2121C38"
    }
   }
  },
  "vpcPrivateSubnet2RouteTable7280F23E": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "stack/vpc/PrivateSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "vpcA2121C38"
    }
   }
  },
  "vpcPrivateSubnet2RouteTableAssociation007E94D3": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "vpcPrivateSubnet2RouteTable7280F23E"
    },
    "SubnetId": {
     "Ref": "vpcPrivateSubnet2Subnet7031C2BA"
    }
   }
  },
  "vpcPrivateSubnet2DefaultRouteB0E07F99": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "NatGatewayId": {
     "Ref": "vpcPublicSubnet2NATGateway9B8AE11A"
    },
    "RouteTableId": {
     "Ref": "vpcPrivateSubnet2RouteTable7280F23E"
    }
   }
  },
  "vpcIGWE57CBDCA": {
   "Type": "AWS::EC2::InternetGateway",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "stack/vpc"
     }
    ]
   }
  },
  "vpcVPCGW7984C166": {
   "Type": "AWS::EC2::VPCGatewayAttachment",
   "Properties": {
    "InternetGatewayId": {
     "Ref": "vpcIGWE57CBDCA"
    },
    "VpcId": {
     "Ref": "vpcA2121C38"
    }
   }
  },
  "myFileSystem1DAA6862": {
   "Type": "AWS::EFS::FileSystem",
   "Properties": {
    "Encrypted": true,
    "FileSystemPolicy": {
     "Statement": [
      {
       "Action": [
        "elasticfilesystem:ClientRootAccess",
        "elasticfilesystem:ClientWrite"
       ],
       "Condition": {
        "Bool": {
         "elasticfilesystem:AccessedViaMountTarget": "true"
        }
       },
       "Effect": "Allow",
       "Principal": {
        "AWS": "*"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "FileSystemTags": [
     {
      "Key": "Name",
      "Value": "stack/myFileSystem"
     }
    ]
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain"
  },
  "myFileSystemEfsSecurityGroup5809542D": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "stack/myFileSystem/EfsSecurityGroup",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "Tags": [
     {
      "Key": "Name",
      "Value": "stack/myFileSystem"
     }
    ],
    "VpcId": {
     "Ref": "vpcA2121C38"
    }
   }
  },
  "myFileSystemEfsMountTargetPrivateSubnet1752908A7": {
   "Type": "AWS::EFS::MountTarget",
   "Properties": {
    "FileSystemId": {
     "Ref": "myFileSystem1DAA6862"
    },
    "SecurityGroups": [
     {
      "Fn::GetAtt": [
       "myFileSystemEfsSecurityGroup5809542D",
       "GroupId"
      ]
     }
    ],
    "SubnetId": {
     "Ref": "vpcPrivateSubnet1Subnet934893E8"
    }
   }
  },
  "myFileSystemEfsMountTargetPrivateSubnet245A93748": {
   "Type": "AWS::EFS::MountTarget",
   "Properties": {
    "FileSystemId": {
     "Ref": "myFileSystem1DAA6862"
    },
    "SecurityGroups": [
     {
      "Fn::GetAtt": [
       "myFileSystemEfsSecurityGroup5809542D",
       "GroupId"
      ]
     }
    ],
    "SubnetId": {
     "Ref": "vpcPrivateSubnet2Subnet7031C2BA"
    }
   }
  },
  "mySecretE4D0A59C": {
   "Type": "AWS::SecretsManager::Secret",
   "Properties": {
    "GenerateSecretString": {}
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  },
  "anotherSecret11974229": {
   "Type": "AWS::SecretsManager::Secret",
   "Properties": {
    "GenerateSecretString": {}
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  },
  "ssm85049941": {
   "Type": "AWS::SSM::Parameter",
   "Properties": {
    "Type": "String",
    "Value": "myString"
   }
  },
  "myContainerExecutionRoleEBACF86C": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "ecs-tasks.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    }
   }
  },
  "myContainerExecutionRoleDefaultPolicy42DA929E": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "logs:CreateLogStream",
        "logs:PutLogEvents"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:",
          {
           "Ref": "AWS::Partition"
          },
          ":logs:",
          {
           "Ref": "AWS::Region"
          },
          ":",
          {
           "Ref": "AWS::AccountId"
          },
          ":log-group:/aws/batch/job:*"
         ]
        ]
       }
      },
      {
       "Action": [
        "secretsmanager:DescribeSecret",
        "secretsmanager:GetSecretValue"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Ref": "anotherSecret11974229"
        },
        {
         "Ref": "mySecretE4D0A59C"
        }
       ]
      },
      {
       "Action": [
        "ssm:DescribeParameters",
        "ssm:GetParameter",
        "ssm:GetParameterHistory",
        "ssm:GetParameters"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:",
          {
           "Ref": "AWS::Partition"
          },
          ":ssm:",
          {
           "Ref": "AWS::Region"
          },
          ":",
          {
           "Ref": "AWS::AccountId"
          },
          ":parameter/",
          {
           "Ref": "ssm85049941"
          }
         ]
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "myContainerExecutionRoleDefaultPolicy42DA929E",
    "Roles": [
     {
      "Ref": "myContainerExecutionRoleEBACF86C"
     }
    ]
   }
  },
  "ECSJobDefn48425E25": {
   "Type": "AWS::Batch::JobDefinition",
   "Properties": {
    "ContainerProperties": {
     "Environment": [
      {
       "Name": "foo",
       "Value": "bar"
      }
     ],
     "ExecutionRoleArn": {
      "Fn::GetAtt": [
       "myContainerExecutionRoleEBACF86C",
       "Arn"
      ]
     },
     "Image": "amazon/amazon-ecs-sample",
     "MountPoints": [
      {
       "ContainerPath": "ahhh",
       "SourceVolume": "volumeName"
      },
      {
       "ContainerPath": "/my/path",
       "SourceVolume": "efsVolume"
      }
     ],
     "ReadonlyRootFilesystem": false,
     "ResourceRequirements": [
      {
       "Type": "MEMORY",
       "Value": "2048"
      },
      {
       "Type": "VCPU",
       "Value": "256"
      },
      {
       "Type": "GPU",
       "Value": "12"
      }
     ],
     "Secrets": [
      {
       "Name": "MY_SECRET_ENV_VAR",
       "ValueFrom": {
        "Ref": "mySecretE4D0A59C"
       }
      },
      {
       "Name": "ANOTHER_ONE",
       "ValueFrom": {
        "Fn::Join": [
         "",
         [
          {
           "Ref": "anotherSecret11974229"
          },
          "::bar:foo"
         ]
        ]
       }
      },
      {
       "Name": "SSM_TIME",
       "ValueFrom": {
        "Fn::Join": [
         "",
         [
          "arn:",
          {
           "Ref": "AWS::Partition"
          },
          ":ssm:",
          {
           "Ref": "AWS::Region"
          },
          ":",
          {
           "Ref": "AWS::AccountId"
          },
          ":parameter/",
          {
           "Ref": "ssm85049941"
          }
         ]
        ]
       }
      }
     ],
     "Ulimits": [
      {
       "HardLimit": 50,
       "Name": "core",
       "SoftLimit": 10
      }
     ],
     "Volumes": [
      {
       "Host": {
        "SourcePath": "/foo/bar"
       },
       "Name": "volumeName"
      },
      {
       "EfsVolumeConfiguration": {
        "FileSystemId": {
         "Ref": "myFileSystem1DAA6862"
        }
       },
       "Name": "efsVolume"
      }
     ]
    },
    "PlatformCapabilities": [
     "EC2"
    ],
    "RetryStrategy": {},
    "Timeout": {},
    "Type": "container"
   }
  },
  "myFargateContainerExecutionRoleB9EB79EA": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "ecs-tasks.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    }
   }
  },
  "myFargateContainerExecutionRoleDefaultPolicy4FF431BF": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "logs:CreateLogStream",
        "logs:PutLogEvents"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:",
          {
           "Ref": "AWS::Partition"
          },
          ":logs:",
          {
           "Ref": "AWS::Region"
          },
          ":",
          {
           "Ref": "AWS::AccountId"
          },
          ":log-group:/aws/batch/job:*"
         ]
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "myFargateContainerExecutionRoleDefaultPolicy4FF431BF",
    "Roles": [
     {
      "Ref": "myFargateContainerExecutionRoleB9EB79EA"
     }
    ]
   }
  },
  "ECSFargateJobDefn327BE725": {
   "Type": "AWS::Batch::JobDefinition",
   "Properties": {
    "ContainerProperties": {
     "Environment": [],
     "EphemeralStorage": {
      "SizeInGiB": 100
     },
     "ExecutionRoleArn": {
      "Fn::GetAtt": [
       "myFargateContainerExecutionRoleB9EB79EA",
       "Arn"
      ]
     },
     "FargatePlatformConfiguration": {
      "PlatformVersion": "LATEST"
     },
     "Image": "amazon/amazon-ecs-sample",
     "NetworkConfiguration": {
      "AssignPublicIp": "DISABLED"
     },
     "ReadonlyRootFilesystem": false,
     "ResourceRequirements": [
      {
       "Type": "MEMORY",
       "Value": "32768"
      },
      {
       "Type": "VCPU",
       "Value": "16"
      }
     ]
    },
    "JobDefinitionName": "foofoo",
    "Parameters": {
     "foo": "bar"
    },
    "PlatformCapabilities": [
     "FARGATE"
    ],
    "PropagateTags": true,
    "RetryStrategy": {
     "Attempts": 5,
     "EvaluateOnExit": [
      {
       "Action": "EXIT",
       "OnReason": "CannotPullContainerError:*"
      },
      {
       "Action": "RETRY",
       "OnExitCode": "*"
      },
      {
       "Action": "EXIT",
       "OnExitCode": "40*",
       "OnReason": "reason",
       "OnStatusReason": "statusreason"
      }
     ]
    },
    "SchedulingPriority": 10,
    "Timeout": {
     "AttemptDurationSeconds": 600
    },
    "Type": "container"
   }
  },
  "EcsDockerContainerExecutionRole7AA53A24": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "ecs-tasks.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    }
   }
  },
  "EcsDockerContainerExecutionRoleDefaultPolicyF58C2301": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "logs:CreateLogStream",
        "logs:PutLogEvents"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:",
          {
           "Ref": "AWS::Partition"
          },
          ":logs:",
          {
           "Ref": "AWS::Region"
          },
          ":",
          {
           "Ref": "AWS::AccountId"
          },
          ":log-group:/aws/batch/job:*"
         ]
        ]
       }
      },
      {
       "Action": [
        "ecr:BatchCheckLayerAvailability",
        "ecr:BatchGetImage",
        "ecr:GetDownloadUrlForLayer"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:",
          {
           "Ref": "AWS::Partition"
          },
          ":ecr:",
          {
           "Ref": "AWS::Region"
          },
          ":",
          {
           "Ref": "AWS::AccountId"
          },
          ":repository/",
          {
           "Fn::Sub": "cdk-hnb659fds-container-assets-${AWS::AccountId}-${AWS::Region}"
          }
         ]
        ]
       }
      },
      {
       "Action": "ecr:GetAuthorizationToken",
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "EcsDockerContainerExecutionRoleDefaultPolicyF58C2301",
    "Roles": [
     {
      "Ref": "EcsDockerContainerExecutionRole7AA53A24"
     }
    ]
   }
  },
  "ECSDockerJobDefnF388CFCF": {
   "Type": "AWS::Batch::JobDefinition",
   "Properties": {
    "ContainerProperties": {
     "Environment": [],
     "ExecutionRoleArn": {
      "Fn::GetAtt": [
       "EcsDockerContainerExecutionRole7AA53A24",
       "Arn"
      ]
     },
     "Image": {
      "Fn::Sub": "${AWS::AccountId}.dkr.ecr.${AWS::Region}.${AWS::URLSuffix}/cdk-hnb659fds-container-assets-${AWS::AccountId}-${AWS::Region}:8b518243ecbfcfd08b4734069e7e74ff97b7889dfde0a60d16e7bdc96e6c593b"
     },
     "ReadonlyRootFilesystem": false,
     "ResourceRequirements": [
      {
       "Type": "MEMORY",
       "Value": "32768"
      },
      {
       "Type": "VCPU",
       "Value": "16"
      }
     ]
    },
    "PlatformCapabilities": [
     "EC2"
    ],
    "RetryStrategy": {},
    "Timeout": {},
    "Type": "container"
   }
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}