{
 "Resources": {
  "AwsApiCallEventBridgeputEvents4c9823512bd115538d55792e96660af0": {
   "Type": "Custom::DeployAssert@SdkCallEventBridgeputEvents",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "SingletonFunction1488541a7b23466481b69b4408076b81HandlerCD40AE9F",
      "Arn"
     ]
    },
    "service": "EventBridge",
    "api": "putEvents",
    "parameters": {
     "Entries": "[{\"Detail\":\"{\\\"date\\\":\\\"abc1694766807403\\\"}\",\"DetailType\":\"cdk-integ-custom-rule\",\"Source\":\"cdk-integ\"}]"
    },
    "flattenResponse": "false",
    "salt": "1694766807466"
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  },
  "SingletonFunction1488541a7b23466481b69b4408076b81Role37ABCE73": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Version": "2012-10-17",
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ]
    },
    "ManagedPolicyArns": [
     {
      "Fn::Sub": "arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
     }
    ],
    "Policies": [
     {
      "PolicyName": "Inline",
      "PolicyDocument": {
       "Version": "2012-10-17",
       "Statement": [
        {
         "Action": [
          "eventbridge:PutEvents"
         ],
         "Effect": "Allow",
         "Resource": [
          "*"
         ]
        },
        {
         "Action": [
          "events:PutEvents"
         ],
         "Effect": "Allow",
         "Resource": [
          "*"
         ]
        },
        {
         "Action": [
          "logs:FilterLogEvents"
         ],
         "Effect": "Allow",
         "Resource": [
          "*"
         ]
        }
       ]
      }
     }
    ]
   }
  },
  "SingletonFunction1488541a7b23466481b69b4408076b81HandlerCD40AE9F": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Runtime": "nodejs18.x",
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "144a0fcf5cb08c347ee9f860c889f4c2921b613fe68e84aae74fbbd448fbbe08.zip"
    },
    "Timeout": 120,
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "SingletonFunction1488541a7b23466481b69b4408076b81Role37ABCE73",
      "Arn"
     ]
    }
   }
  },
  "AwsApiCallCloudWatchLogsfilterLogEvents8c50ecf087cf222ab9714453b56f3f7d": {
   "Type": "Custom::DeployAssert@SdkCallCloudWatchLogsfilterLogEvents",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "SingletonFunction1488541a7b23466481b69b4408076b81HandlerCD40AE9F",
      "Arn"
     ]
    },
    "service": "CloudWatchLogs",
    "api": "filterLogEvents",
    "expected": "{\"$StringLike\":\"abc1694766807403\"}",
    "actualPath": "events.0.message",
    "parameters": {
     "logGroupName": {
      "Fn::Join": [
       "",
       [
        "\"",
        {
         "Fn::ImportValue": "log-group-events:ExportsOutputRefloggroup2F19C5C9B4F4C6918"
        },
        "\""
       ]
      ]
     },
     "startTime": "1694766807403",
     "limit": "1"
    },
    "flattenResponse": "true",
    "outputPaths": [
     "events.0.message"
    ],
    "salt": "1694766807468"
   },
   "DependsOn": [
    "AwsApiCallEventBridgeputEvents4c9823512bd115538d55792e96660af0"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  }
 },
 "Outputs": {
  "AssertionResultsAwsApiCallCloudWatchLogsfilterLogEvents8c50ecf087cf222ab9714453b56f3f7d": {
   "Value": {
    "Fn::GetAtt": [
     "AwsApiCallCloudWatchLogsfilterLogEvents8c50ecf087cf222ab9714453b56f3f7d",
     "assertion"
    ]
   }
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}