"use strict";var E=Object.create;var u=Object.defineProperty;var T=Object.getOwnPropertyDescriptor;var V=Object.getOwnPropertyNames;var L=Object.getPrototypeOf,F=Object.prototype.hasOwnProperty;var c=(e,t)=>()=>(e&&(t=e(e=0)),t);var x=(e,t)=>()=>(t||e((t={exports:{}}).exports,t),t.exports),l=(e,t)=>{for(var a in t)u(e,a,{get:t[a],enumerable:!0})},f=(e,t,a,i)=>{if(t&&typeof t=="object"||typeof t=="function")for(let n of V(t))!F.call(e,n)&&n!==a&&u(e,n,{get:()=>t[n],enumerable:!(i=T(t,n))||i.enumerable});return e};var O=(e,t,a)=>(a=e!=null?E(L(e)):{},f(t||!e||!e.__esModule?u(a,"default",{value:e,enumerable:!0}):a,e)),p=e=>f(u({},"__esModule",{value:!0}),e);var h,k=c(()=>{"use strict";h={acm:{exportcertificate:["Passphrase"],importcertificate:["Certificate","CertificateChain","PrivateKey"]},"acm-pca":{importcertificateauthoritycertificate:["Certificate","CertificateChain"],issuecertificate:["Csr"]},apigateway:{importapikeys:["body"],importdocumentationparts:["body"],importrestapi:["body"],putrestapi:["body"],posttoconnection:["Data"]},appconfig:{createhostedconfigurationversion:["Content"]},appsync:{startschemacreation:["definition"]},awsmobilehubservice:{createproject:["contents"],updateproject:["contents"]},"backup-storage":{notifyobjectcomplete:["MetadataBlob"],putchunk:["Data"],putobject:["InlineChunk"]},cloudfront:{createfunction:["FunctionCode"],testfunction:["EventObject"],updatefunction:["FunctionCode"]},cloudsearch:{uploaddocuments:["documents"]},codeartifact:{publishpackageversion:["assetContent"]},codecommit:{createcommit:["putFiles.*.fileContent"],createunreferencedmergecommit:["conflictResolution.replaceContents.*.content"],mergebranchesbysquash:["conflictResolution.replaceContents.*.content"],mergebranchesbythreeway:["conflictResolution.replaceContents.*.content"],mergepullrequestbysquash:["conflictResolution.replaceContents.*.content"],mergepullrequestbythreeway:["conflictResolution.replaceContents.*.content"],putfile:["fileContent"]},"cognito-idp":{setuicustomization:["ImageFile"]},comprehend:{classifydocument:["Bytes"],detectentities:["Bytes"]},datasync:{createlocationhdfs:["KerberosKeytab","KerberosKrb5Conf"],createlocationobjectstorage:["ServerCertificate"],updatelocationhdfs:["KerberosKeytab","KerberosKrb5Conf"],updatelocationobjectstorage:["ServerCertificate"]},dms:{importcertificate:["CertificateWallet"]},ebs:{putsnapshotblock:["BlockData"]},ec2:{bundleinstance:["Storage.S3.UploadPolicy"],importkeypair:["PublicKeyMaterial"],modifyinstanceattribute:["UserData.Value"]},ecr:{uploadlayerpart:["layerPartBlob"]},"ecr-public":{createrepository:["catalogData.logoImageBlob"],putrepositorycatalogdata:["catalogData.logoImageBlob"],uploadlayerpart:["layerPartBlob"]},firehose:{putrecord:["Record.Data"],putrecordbatch:["Records.*.Data"]},gamelift:{createscript:["ZipFile"],updatescript:["ZipFile"]},gamesparks:{importgameconfiguration:["ImportSource.File"]},glacier:{uploadarchive:["body"],uploadmultipartpart:["body"]},glue:{updatecolumnstatisticsforpartition:["ColumnStatisticsList.*.StatisticsData.DecimalColumnStatisticsData.MaximumValue.UnscaledValue"],updatecolumnstatisticsfortable:["ColumnStatisticsList.*.StatisticsData.DecimalColumnStatisticsData.MaximumValue.UnscaledValue"]},greengrass:{createcomponentversion:["inlineRecipe"]},iot:{createotaupdate:["files.*.codeSigning.customCodeSigning.signature.inlineDocument"],testinvokeauthorizer:["mqttContext.password"]},iotanalytics:{batchputmessage:["messages.*.payload"],runpipelineactivity:["payloads.*"]},iotdata:{publish:["payload"],updatethingshadow:["payload"]},ioteventsdata:{batchputmessage:["messages.*.payload"]},iotsitewise:{createportal:["portalLogoImageFile.data"],updateportal:["portalLogoImage.file.data"]},iotwireless:{updateresourceposition:["GeoJsonPayload"]},kafka:{createconfiguration:["ServerProperties"],updateconfiguration:["ServerProperties"]},kendra:{batchputdocument:["Documents.*.Blob"]},kinesis:{putrecord:["Data"],putrecords:["Records.*.Data"]},kinesisanalytics:{createapplication:["ApplicationConfiguration.ApplicationCodeConfiguration.CodeContent.ZipFileContent"],updateapplication:["ApplicationConfigurationUpdate.ApplicationCodeConfigurationUpdate.CodeContentUpdate.ZipFileContentUpdate"]},kms:{decrypt:["CiphertextBlob","Recipient.AttestationDocument"],encrypt:["Plaintext"],generatedatakey:["Recipient.AttestationDocument"],generatedatakeypair:["Recipient.AttestationDocument"],generatemac:["Message"],generaterandom:["Recipient.AttestationDocument"],importkeymaterial:["EncryptedKeyMaterial"],reencrypt:["CiphertextBlob"],sign:["Message"],verify:["Message","Signature"],verifymac:["Mac","Message"]},lambda:{createfunction:["Code.ZipFile"],invoke:["Payload"],invokeasync:["InvokeArgs"],invokewithresponsestream:["Payload"],publishlayerversion:["Content.ZipFile"],updatefunctioncode:["ZipFile"]},lex:{startimport:["payload"],postcontent:["inputStream"],recognizeutterance:["inputStream"]},lookoutvision:{detectanomalies:["Body"],updatedatasetentries:["Changes"]},mediastore:{putobject:["Body"]},mobiletargeting:{sendmessages:["MessageRequest.MessageConfiguration.EmailMessage.RawEmail.Data"],sendusersmessages:["SendUsersMessageRequest.MessageConfiguration.EmailMessage.RawEmail.Data"]},qldb:{sendcommand:["CommitTransaction.CommitDigest","ExecuteStatement.Parameters.*.IonBinary"]},quicksight:{startassetbundleimportjob:["AssetBundleImportSource.Body"]},rekognition:{comparefaces:["SourceImage.Bytes"],detectcustomlabels:["Image.Bytes"],detectfaces:["Image.Bytes"],detectlabels:["Image.Bytes"],detectmoderationlabels:["Image.Bytes"],detectprotectiveequipment:["Image.Bytes"],detecttext:["Image.Bytes"],indexfaces:["Image.Bytes"],recognizecelebrities:["Image.Bytes"],searchfacesbyimage:["Image.Bytes"],searchusersbyimage:["Image.Bytes"],updatedatasetentries:["Changes.GroundTruth"]},s3:{putobject:["Body"],uploadpart:["Body"],writegetobjectresponse:["Body"]},sagemaker:{invokeendpoint:["Body"],invokeendpointwithresponsestream:["Body"]},secretsmanager:{createsecret:["SecretBinary"],putsecretvalue:["SecretBinary"],updatesecret:["SecretBinary"]},ses:{createdeliverabilitytestreport:["Content.Raw.Data","Content.Raw.Data"],sendemail:["Content.Raw.Data","Content.Raw.Data"],sendrawemail:["RawMessage.Data"]},signer:{signpayload:["payload"]},ssm:{registertaskwithmaintenancewindow:["TaskInvocationParameters.Lambda.Payload"],updatemaintenancewindowtask:["TaskInvocationParameters.Lambda.Payload"]},support:{addattachmentstoset:["attachments.*.data"]},synthetics:{createcanary:["Code.ZipFile"],updatecanary:["Code.ZipFile"]},textract:{analyzedocument:["Document.Bytes"],analyzeexpense:["Document.Bytes"],analyzeid:["DocumentPages.*.Bytes"],detectdocumenttext:["Document.Bytes"]},translate:{importterminology:["TerminologyData.File"],translatedocument:["Document.Content"]},waf:{updatebytematchset:["Updates.*.ByteMatchTuple.TargetString"]},"waf-regional":{updatebytematchset:["Updates.*.ByteMatchTuple.TargetString"]},wafv2:{checkcapacity:["Rules.*.Statement.ByteMatchStatement.SearchString"],createrulegroup:["Rules.*.Statement.ByteMatchStatement.SearchString"],createwebacl:["Rules.*.Statement.ByteMatchStatement.SearchString"],updaterulegroup:["Rules.*.Statement.ByteMatchStatement.SearchString"],updatewebacl:["Rules.*.Statement.ByteMatchStatement.SearchString"]},workspaces:{importclientbranding:["DeviceTypeAndroid.Logo","DeviceTypeIos.Logo","DeviceTypeIos.Logo2x","DeviceTypeIos.Logo3x"]}}});var v={};l(v,{coerceApiParametersToUint8Array:()=>W,coerceToUint8Array:()=>d});function W(e,t,a={}){let i=h?.[e.toLowerCase()]?.[t.toLowerCase()]??[];for(let n of i)d(a,n.split("."));return a}function d(e,t){return t.length===0?G(e):t[0]==="*"&&Array.isArray(e)?e.map(a=>d(a,t.slice(1))):(e&&typeof e=="object"&&t[0]in e&&(e[t[0]]=d(e[t[0]],t.slice(1))),e)}function G(e){return e instanceof Uint8Array?e:typeof e=="string"||typeof e=="number"?new TextEncoder().encode(e.toString()):e}var A=c(()=>{"use strict";k()});var M={};l(M,{findV3ClientConstructor:()=>g});function g(e){let[t,a]=Object.entries(e).find(([i])=>i.endsWith("Client")&&i!=="__Client");return a}var m=c(()=>{"use strict"});var b,D=c(()=>{"use strict";b=["ACM","ACMPCA","APIGateway","ARCZonalShift","AccessAnalyzer","Account","AlexaForBusiness","Amp","Amplify","AmplifyBackend","AmplifyUIBuilder","ApiGatewayManagementApi","ApiGatewayV2","AppConfig","AppConfigData","AppIntegrations","AppMesh","AppRunner","AppStream","AppSync","Appflow","ApplicationAutoScaling","ApplicationCostProfiler","ApplicationInsights","Athena","AuditManager","AugmentedAIRuntime","AutoScaling","AutoScalingPlans","Backup","BackupGateway","BackupStorage","Batch","Billingconductor","Braket","Budgets","CUR","Chime","ChimeSDKIdentity","ChimeSDKMediaPipelines","ChimeSDKMeetings","ChimeSDKMessaging","ChimeSDKVoice","Cloud9","CloudControl","CloudDirectory","CloudFormation","CloudFront","CloudHSM","CloudHSMV2","CloudSearch","CloudSearchDomain","CloudTrail","CloudWatch","CloudWatchEvents","CloudWatchLogs","CodeArtifact","CodeBuild","CodeCatalyst","CodeCommit","CodeDeploy","CodeGuruProfiler","CodeGuruReviewer","CodePipeline","CodeStar","CodeStarNotifications","CodeStarconnections","CognitoIdentity","CognitoIdentityServiceProvider","CognitoSync","Comprehend","ComprehendMedical","ComputeOptimizer","ConfigService","Connect","ConnectCampaigns","ConnectCases","ConnectContactLens","ConnectParticipant","ControlTower","CostExplorer","CustomerProfiles","DAX","DLM","DMS","DataBrew","DataExchange","DataPipeline","DataSync","Detective","DevOpsGuru","DeviceFarm","DirectConnect","DirectoryService","Discovery","DocDB","DocDBElastic","Drs","DynamoDB","DynamoDBStreams","EBS","EC2","EC2InstanceConnect","ECR","ECRPUBLIC","ECS","EFS","EKS","ELB","ELBv2","EMR","EMRServerless","EMRcontainers","ES","ElastiCache","ElasticBeanstalk","ElasticInference","ElasticTranscoder","EventBridge","Evidently","FMS","FSx","Finspace","Finspacedata","Firehose","Fis","ForecastQueryService","ForecastService","FraudDetector","GameLift","GameSparks","Glacier","GlobalAccelerator","Glue","Grafana","Greengrass","GreengrassV2","GroundStation","GuardDuty","Health","HealthLake","Honeycode","IAM","IVS","IdentityStore","Imagebuilder","Inspector","Inspector2","IoT1ClickDevicesService","IoT1ClickProjects","IoTAnalytics","IoTEvents","IoTEventsData","IoTFleetHub","IoTFleetWise","IoTJobsDataPlane","IoTRoboRunner","IoTSecureTunneling","IoTSiteWise","IoTThingsGraph","IoTTwinMaker","IoTWireless","Iot","IotData","IotDeviceAdvisor","Ivschat","KMS","Kafka","KafkaConnect","Kendra","Keyspaces","Kinesis","KinesisAnalytics","KinesisAnalyticsV2","KinesisVideo","KinesisVideoArchivedMedia","KinesisVideoMedia","KinesisVideoSignalingChannels","KinesisVideoWebRTCStorage","LakeFormation","Lambda","LexModelBuildingService","LexModelsV2","LexRuntime","LexRuntimeV2","LicenseManager","LicenseManagerLinuxSubscriptions","LicenseManagerUserSubscriptions","Lightsail","Location","LookoutEquipment","LookoutMetrics","LookoutVision","M2","MQ","MTurk","MWAA","MachineLearning","Macie","Macie2","ManagedBlockchain","MarketplaceCatalog","MarketplaceCommerceAnalytics","MarketplaceEntitlementService","MarketplaceMetering","MediaConnect","MediaConvert","MediaLive","MediaPackage","MediaPackageVod","MediaStore","MediaStoreData","MediaTailor","MemoryDB","Mgn","MigrationHub","MigrationHubConfig","MigrationHubOrchestrator","MigrationHubRefactorSpaces","MigrationHubStrategy","Mobile","Neptune","NetworkFirewall","NetworkManager","Nimble","OAM","Omics","OpenSearch","OpenSearchServerless","OpsWorks","OpsWorksCM","Organizations","Outposts","PI","Panorama","Personalize","PersonalizeEvents","PersonalizeRuntime","Pinpoint","PinpointEmail","PinpointSMSVoice","PinpointSMSVoiceV2","Pipes","Polly","Pricing","PrivateNetworks","Proton","QLDB","QLDBSession","QuickSight","RAM","RDS","RDSDataService","RUM","Rbin","Redshift","RedshiftData","RedshiftServerless","Rekognition","Resiliencehub","ResourceExplorer2","ResourceGroups","ResourceGroupsTaggingAPI","RoboMaker","RolesAnywhere","Route53","Route53Domains","Route53RecoveryCluster","Route53RecoveryControlConfig","Route53RecoveryReadiness","Route53Resolver","S3","S3Control","S3Outposts","SES","SESV2","SMS","SNS","SQS","SSM","SSMContacts","SSMIncidents","SSO","SSOAdmin","SSOOIDC","STS","SWF","SageMaker","SageMakerFeatureStoreRuntime","SageMakerGeospatial","SageMakerMetrics","SageMakerRuntime","SagemakerEdge","SavingsPlans","Scheduler","Schemas","SecretsManager","SecurityHub","SecurityLake","ServerlessApplicationRepository","ServiceCatalog","ServiceCatalogAppRegistry","ServiceDiscovery","ServiceQuotas","Shield","Signer","SimSpaceWeaver","SnowDeviceManagement","Snowball","SsmSap","StepFunctions","StorageGateway","Support","SupportApp","Synthetics","Textract","TimestreamQuery","TimestreamWrite","TranscribeService","Transfer","Translate","VoiceID","WAF","WAFRegional","WAFV2","WellArchitected","Wisdom","WorkDocs","WorkLink","WorkMail","WorkMailMessageFlow","WorkSpaces","WorkSpacesWeb","XRay"]});var y,R=c(()=>{"use strict";D();y={...b.reduce((e,t)=>({...e,[t]:`client-${t.replace(/([a-z])([A-Z])/g,"$1-$2").toLowerCase()}`.replace("-chime-sdk","-chime-sdk-").replace("client-amplify-","client-amplify").replace("client-cloud-","client-cloud").replace("client-code-","client-code").replace("client-connect-","client-connect").replace("client-data-","client-data").replace("client-io-t","client-iot-").replace("client-iot-fleet-","client-iotfleet").replace("client-lookout-","client-lookout").replace("client-media-","client-media").replace("client-migration-hub-","client-migrationhub").replace("client-pinpoint-sms","client-pinpoint-sms-").replace("client-route53","client-route53-").replace("client-sage-maker","client-sagemaker").replace("client-security-","client-security").replace("client-work-","client-work")}),{}),AccessAnalyzer:"client-accessanalyzer",ACMPCA:"client-acm-pca",APIGateway:"client-api-gateway",ApiGatewayManagementApi:"client-apigatewaymanagementapi",ApiGatewayV2:"client-apigatewayv2",AppConfig:"client-appconfig",AppConfigData:"client-appconfigdata",AppIntegrations:"client-appintegrations",AppRunner:"client-apprunner",AppStream:"client-appstream",AppSync:"client-appsync",ApplicationCostProfiler:"client-applicationcostprofiler",ARCZonalShift:"client-arc-zonal-shift",AugmentedAIRuntime:"client-sage-maker-a2iruntime",AuditManager:"client-auditmanager",BackupStorage:"client-backupstorage",CUR:"client-cost-and-usage-report-service",CloudHSMV2:"client-cloudhsm-v2",CodeGuruProfiler:"client-codeguruprofiler",CodeStarconnections:"client-codestar-connections",CognitoIdentityServiceProvider:"client-cognito-identity-provider",ComprehendMedical:"client-comprehendmedical",ConnectContactLens:"client-connect-contact-lens",ControlTower:"client-controltower",DMS:"client-database-migration-service",DataPipeline:"client-data-pipeline",Discovery:"client-application-discovery-service",DevOpsGuru:"client-devops-guru",DynamoDB:"client-dynamodb",DynamoDBStreams:"client-dynamodb-streams",DocDB:"client-docdb",DocDBElastic:"client-docdb-elastic",EC2InstanceConnect:"client-ec2-instance-connect",ECRPUBLIC:"client-ecr-public",ELB:"client-elastic-load-balancing",ELBv2:"client-elastic-load-balancing-v2",ElastiCache:"client-elasticache",EMRcontainers:"client-emr-containers",EMRServerless:"client-emr-serverless",ES:"client-elasticsearch-service",EventBridge:"client-eventbridge",Finspacedata:"client-finspace-data",ForecastQueryService:"client-forecastquery",ForecastService:"client-forecast",FraudDetector:"client-frauddetector",GameLift:"client-gamelift",GameSparks:"client-gamesparks",GreengrassV2:"client-greengrassv2",GroundStation:"client-groundstation",GuardDuty:"client-guardduty",HealthLake:"client-healthlake",IdentityStore:"client-identitystore",IoTAnalytics:"client-iotanalytics",IotData:"client-iot-data-plane",IotDeviceAdvisor:"client-iotdeviceadvisor",IoTSecureTunneling:"client-iotsecuretunneling",IoTSiteWise:"client-iotsitewise",IoTThingsGraph:"client-iotthingsgraph",IoTTwinMaker:"client-iottwinmaker",IoTRoboRunner:"client-iot-roborunner",KafkaConnect:"client-kafkaconnect",KinesisVideoSignalingChannels:"client-kinesis-video-signaling",KinesisVideoWebRTCStorage:"client-kinesis-video-webrtc-storage",LakeFormation:"client-lakeformation",LexRuntime:"client-lex-runtime-service",ManagedBlockchain:"client-managedblockchain",MigrationHubConfig:"client-migrationhub-config",MigrationHubRefactorSpaces:"client-migration-hub-refactor-spaces",NetworkManager:"client-networkmanager",OpenSearch:"client-opensearch",OpenSearchServerless:"client-opensearchserverless",OpsWorks:"client-opsworks",OpsWorksCM:"client-opsworkscm",PrivateNetworks:"client-privatenetworks",QLDBSession:"client-qldb-session",QuickSight:"client-quicksight",ResourceExplorer2:"client-resource-explorer-2",RDSDataService:"client-rds-data",RoboMaker:"client-robomaker",RolesAnywhere:"client-rolesanywhere",Route53:"client-route-53",Route53Domains:"client-route-53-domains",Route53Resolver:"client-route53resolver",S3Control:"client-s3-control",SageMakerFeatureStoreRuntime:"client-sagemaker-featurestore-runtime",SavingsPlans:"client-savingsplans",SecurityHub:"client-securityhub",ServerlessApplicationRepository:"client-serverlessapplicationrepository",ServiceCatalogAppRegistry:"client-service-catalog-appregistry",ServiceDiscovery:"client-servicediscovery",SimSpaceWeaver:"client-simspaceweaver",SSMContacts:"client-ssm-contacts",SSMIncidents:"client-ssm-incidents",SSOAdmin:"client-sso-admin",SSOOIDC:"client-sso-oidc",StepFunctions:"client-sfn",TranscribeService:"client-transcribe",WAFRegional:"client-waf-regional",WellArchitected:"client-wellarchitected",WorkMailMessageFlow:"client-workmailmessageflow"}});var w={};l(w,{getV3ClientPackageName:()=>S});var S,C=c(()=>{"use strict";R();S=e=>{if(e in y)return`@aws-sdk/${y[e]}`;throw new Error(`Client '${e}' is either deprecated or newly added. Please consider using the v3 package format (@aws-sdk/client-xxx).`)}});var P={};l(P,{getV3Client:()=>_,getV3Command:()=>U,loadV3ClientPackage:()=>K});function K(e){let t=e.startsWith("@aws-sdk/")?e:S(e);try{let a=require(t),{version:i}=require(t+"/package.json");return{service:t.replace("@aws-sdk/client-",""),pkg:a,packageName:t,packageVersion:i}}catch{throw Error(`Service ${e} client package with name '${t}' does not exist.`)}}function _(e,t={}){try{let a=g(e.pkg);return new a(t)}catch{throw Error(`No client constructor found within package: ${e.packageName}`)}}function U(e,t){let a=t.endsWith("Command")?t:`${t}Command`,i=Object.entries(e.pkg).find(([n])=>n.toLowerCase()===a.toLowerCase())?.[1];if(!i)throw new Error(`Unable to find command named: ${a} for api: ${t} in service package`);return i}var I=c(()=>{"use strict";m();C()});var B=x(r=>{"use strict";var N=r&&r.__createBinding||(Object.create?function(e,t,a,i){i===void 0&&(i=a);var n=Object.getOwnPropertyDescriptor(t,a);(!n||("get"in n?!t.__esModule:n.writable||n.configurable))&&(n={enumerable:!0,get:function(){return t[a]}}),Object.defineProperty(e,i,n)}:function(e,t,a,i){i===void 0&&(i=a),e[i]=t[a]}),q=r&&r.__exportStar||function(e,t){for(var a in e)a!=="default"&&!Object.prototype.hasOwnProperty.call(t,a)&&N(t,e,a)};Object.defineProperty(r,"__esModule",{value:!0});r.getV3ClientPackageName=r.findV3ClientConstructor=r.coerceApiParametersToUint8Array=void 0;var j=(A(),p(v));Object.defineProperty(r,"coerceApiParametersToUint8Array",{enumerable:!0,get:function(){return j.coerceApiParametersToUint8Array}});var z=(m(),p(M));Object.defineProperty(r,"findV3ClientConstructor",{enumerable:!0,get:function(){return z.findV3ClientConstructor}});var H=(C(),p(w));Object.defineProperty(r,"getV3ClientPackageName",{enumerable:!0,get:function(){return H.getV3ClientPackageName}});q((I(),p(P)),r)});var Z={};l(Z,{handler:()=>$});module.exports=p(Z);var o=O(B());async function $(e){console.log("Event: %j",{...e,ResponseURL:"..."});let t=(0,o.loadV3ClientPackage)(e.service);console.log(`AWS SDK V3: ${t.packageName}@${t.packageVersion}`);let a=(0,o.getV3Client)(t,{apiVersion:e.apiVersion}),i=(0,o.getV3Command)(t,e.action),n=(0,o.coerceApiParametersToUint8Array)(e.service,e.action,e.parameters);try{let s=await a.send(new i(n));delete s.$metadata,console.log("Response: %j",s)}catch(s){if(console.log(s),!e.catchErrorPattern||!new RegExp(e.catchErrorPattern).test(s.name))throw s}}0&&(module.exports={handler});
