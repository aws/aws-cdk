{
  "version": "48.0.0",
  "artifacts": {
    "aws-appconfig-configuration.assets": {
      "type": "cdk:asset-manifest",
      "properties": {
        "file": "aws-appconfig-configuration.assets.json",
        "requiresBootstrapStackVersion": 6,
        "bootstrapStackVersionSsmParameter": "/cdk-bootstrap/hnb659fds/version"
      }
    },
    "aws-appconfig-configuration": {
      "type": "aws:cloudformation:stack",
      "environment": "aws://unknown-account/unknown-region",
      "properties": {
        "templateFile": "aws-appconfig-configuration.template.json",
        "terminationProtection": false,
        "validateOnSynth": false,
        "assumeRoleArn": "arn:${AWS::Partition}:iam::${AWS::AccountId}:role/cdk-hnb659fds-deploy-role-${AWS::AccountId}-${AWS::Region}",
        "cloudFormationExecutionRoleArn": "arn:${AWS::Partition}:iam::${AWS::AccountId}:role/cdk-hnb659fds-cfn-exec-role-${AWS::AccountId}-${AWS::Region}",
        "stackTemplateAssetObjectUrl": "s3://cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}/8c85311dc42b1fb8768af7521415084e144a4ad9dd86f53dbd1714ec4fa505f2.json",
        "requiresBootstrapStackVersion": 6,
        "bootstrapStackVersionSsmParameter": "/cdk-bootstrap/hnb659fds/version",
        "additionalDependencies": [
          "aws-appconfig-configuration.assets"
        ],
        "lookupRole": {
          "arn": "arn:${AWS::Partition}:iam::${AWS::AccountId}:role/cdk-hnb659fds-lookup-role-${AWS::AccountId}-${AWS::Region}",
          "requiresBootstrapStackVersion": 8,
          "bootstrapStackVersionSsmParameter": "/cdk-bootstrap/hnb659fds/version"
        }
      },
      "dependencies": [
        "aws-appconfig-configuration.assets"
      ],
      "metadata": {
        "/aws-appconfig-configuration/MyAppConfig": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "applicationName": "*"
            }
          }
        ],
        "/aws-appconfig-configuration/MyAppConfig/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "MyAppConfigB4B63E75"
          }
        ],
        "/aws-appconfig-configuration/MyAppConfig/HostedEnv": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "application": "*"
            }
          }
        ],
        "/aws-appconfig-configuration/MyAppConfig/HostedEnv/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "MyAppConfigHostedEnvF39C847E"
          }
        ],
        "/aws-appconfig-configuration/MyAppConfig/HostedEnvFromJson": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "application": "*"
            }
          }
        ],
        "/aws-appconfig-configuration/MyAppConfig/HostedEnvFromJson/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "MyAppConfigHostedEnvFromJson9E6E36C4"
          }
        ],
        "/aws-appconfig-configuration/MyAppConfig/HostedEnvFromYaml": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "application": "*"
            }
          }
        ],
        "/aws-appconfig-configuration/MyAppConfig/HostedEnvFromYaml/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "MyAppConfigHostedEnvFromYaml82D3D1B2"
          }
        ],
        "/aws-appconfig-configuration/MyAppConfig/ParameterEnv": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "application": "*"
            }
          }
        ],
        "/aws-appconfig-configuration/MyAppConfig/ParameterEnv/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "MyAppConfigParameterEnvD769FB19"
          }
        ],
        "/aws-appconfig-configuration/MyAppConfig/DocumentEnv": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "application": "*"
            }
          }
        ],
        "/aws-appconfig-configuration/MyAppConfig/DocumentEnv/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "MyAppConfigDocumentEnv34B10223"
          }
        ],
        "/aws-appconfig-configuration/MyAppConfig/BucketEnv": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "application": "*"
            }
          }
        ],
        "/aws-appconfig-configuration/MyAppConfig/BucketEnv/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "MyAppConfigBucketEnvCBDFEF45"
          }
        ],
        "/aws-appconfig-configuration/MyAppConfig/SecretEnv": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "application": "*"
            }
          }
        ],
        "/aws-appconfig-configuration/MyAppConfig/SecretEnv/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "MyAppConfigSecretEnvE1102B63"
          }
        ],
        "/aws-appconfig-configuration/MyAppConfig/SecretEnvWithKey": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "application": "*"
            }
          }
        ],
        "/aws-appconfig-configuration/MyAppConfig/SecretEnvWithKey/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "MyAppConfigSecretEnvWithKey9C93DA23"
          }
        ],
        "/aws-appconfig-configuration/MyDeployStrategy": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "rolloutStrategy": "*"
            }
          }
        ],
        "/aws-appconfig-configuration/MyDeployStrategy/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "MyDeployStrategy062CAEA2"
          }
        ],
        "/aws-appconfig-configuration/MyHostedConfigFromFile/DeploymentStrategy": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "rolloutStrategy": "*"
            }
          }
        ],
        "/aws-appconfig-configuration/MyHostedConfigFromFile/DeploymentStrategy/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "MyHostedConfigFromFileDeploymentStrategyCAF37A7C"
          }
        ],
        "/aws-appconfig-configuration/MyHostedConfigFromFile/ConfigurationProfile": [
          {
            "type": "aws:cdk:logicalId",
            "data": "MyHostedConfigFromFileConfigurationProfile32B2D26F"
          }
        ],
        "/aws-appconfig-configuration/MyHostedConfigFromFile/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "MyHostedConfigFromFile943CF9F9"
          }
        ],
        "/aws-appconfig-configuration/MyHostedConfig/ConfigurationProfile": [
          {
            "type": "aws:cdk:logicalId",
            "data": "MyHostedConfigConfigurationProfile2E1A2BBC"
          }
        ],
        "/aws-appconfig-configuration/MyHostedConfig/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "MyHostedConfig51D3877D"
          }
        ],
        "/aws-appconfig-configuration/MyHostedConfig/Deployment8E5DB": [
          {
            "type": "aws:cdk:logicalId",
            "data": "MyHostedConfigDeployment8E5DB1FCC9183"
          }
        ],
        "/aws-appconfig-configuration/MyHostedConfigFromJson/ConfigurationProfile": [
          {
            "type": "aws:cdk:logicalId",
            "data": "MyHostedConfigFromJsonConfigurationProfile863E1E42"
          }
        ],
        "/aws-appconfig-configuration/MyHostedConfigFromJson/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "MyHostedConfigFromJsonD8CF9BE4"
          }
        ],
        "/aws-appconfig-configuration/MyHostedConfigFromJson/Deployment3AC6E": [
          {
            "type": "aws:cdk:logicalId",
            "data": "MyHostedConfigFromJsonDeployment3AC6ED5A2933B"
          }
        ],
        "/aws-appconfig-configuration/MyHostedConfigFromYaml/ConfigurationProfile": [
          {
            "type": "aws:cdk:logicalId",
            "data": "MyHostedConfigFromYamlConfigurationProfile7C77A435"
          }
        ],
        "/aws-appconfig-configuration/MyHostedConfigFromYaml/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "MyHostedConfigFromYaml13C5BE35"
          }
        ],
        "/aws-appconfig-configuration/MyHostedConfigFromYaml/DeploymentD93A5": [
          {
            "type": "aws:cdk:logicalId",
            "data": "MyHostedConfigFromYamlDeploymentD93A5BDCCAAB2"
          }
        ],
        "/aws-appconfig-configuration/MyValidatorFunction": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "runtime": "*",
              "handler": "*",
              "code": "*"
            }
          }
        ],
        "/aws-appconfig-configuration/MyValidatorFunction/ServiceRole": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "assumedBy": {
                "principalAccount": "*",
                "assumeRoleAction": "*"
              },
              "managedPolicies": [
                {
                  "managedPolicyArn": "*"
                }
              ]
            }
          }
        ],
        "/aws-appconfig-configuration/MyValidatorFunction/ServiceRole/ImportServiceRole": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": "*"
          }
        ],
        "/aws-appconfig-configuration/MyValidatorFunction/ServiceRole/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "MyValidatorFunctionServiceRole5CD02390"
          }
        ],
        "/aws-appconfig-configuration/MyValidatorFunction/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "MyValidatorFunctionA679CB3C"
          }
        ],
        "/aws-appconfig-configuration/MyValidatorFunction/AppConfigPermission": [
          {
            "type": "aws:cdk:logicalId",
            "data": "MyValidatorFunctionAppConfigPermission77CD11AC"
          }
        ],
        "/aws-appconfig-configuration/MyParameter": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "stringValue": "*"
            }
          }
        ],
        "/aws-appconfig-configuration/MyParameter/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "MyParameter18BA547D"
          }
        ],
        "/aws-appconfig-configuration/MyConfigFromParameter/Role": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "roleName": "*",
              "assumedBy": {
                "principalAccount": "*",
                "assumeRoleAction": "*"
              },
              "inlinePolicies": "*"
            }
          }
        ],
        "/aws-appconfig-configuration/MyConfigFromParameter/Role/ImportRole": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": "*"
          }
        ],
        "/aws-appconfig-configuration/MyConfigFromParameter/Role/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "MyConfigFromParameterRole4E40C8BC"
          }
        ],
        "/aws-appconfig-configuration/MyConfigFromParameter/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "MyConfigFromParameterDC204468"
          }
        ],
        "/aws-appconfig-configuration/MyConfigFromParameter/Deployment28051": [
          {
            "type": "aws:cdk:logicalId",
            "data": "MyConfigFromParameterDeployment28051DE6185BF"
          }
        ],
        "/aws-appconfig-configuration/MyDocument": [
          {
            "type": "aws:cdk:logicalId",
            "data": "MyDocument"
          }
        ],
        "/aws-appconfig-configuration/MyConfigFromDocument/Role": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "roleName": "*",
              "assumedBy": {
                "principalAccount": "*",
                "assumeRoleAction": "*"
              },
              "inlinePolicies": "*"
            }
          }
        ],
        "/aws-appconfig-configuration/MyConfigFromDocument/Role/ImportRole": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": "*"
          }
        ],
        "/aws-appconfig-configuration/MyConfigFromDocument/Role/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "MyConfigFromDocumentRole29FB4D3D"
          }
        ],
        "/aws-appconfig-configuration/MyConfigFromDocument/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "MyConfigFromDocument79E66ABA"
          }
        ],
        "/aws-appconfig-configuration/MyConfigFromDocument/Deployment7A5BA": [
          {
            "type": "aws:cdk:logicalId",
            "data": "MyConfigFromDocumentDeployment7A5BA9D7D69C3"
          }
        ],
        "/aws-appconfig-configuration/MyBucket": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "versioned": true,
              "removalPolicy": "destroy",
              "autoDeleteObjects": true
            }
          }
        ],
        "/aws-appconfig-configuration/MyBucket/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "MyBucketF68F3FF0"
          }
        ],
        "/aws-appconfig-configuration/MyBucket/Policy": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "bucket": "*"
            }
          }
        ],
        "/aws-appconfig-configuration/MyBucket/Policy/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "MyBucketPolicyE7FBAC7B"
          }
        ],
        "/aws-appconfig-configuration/MyBucket/AutoDeleteObjectsCustomResource": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": "*"
          }
        ],
        "/aws-appconfig-configuration/MyBucket/AutoDeleteObjectsCustomResource/Default": [
          {
            "type": "aws:cdk:logicalId",
            "data": "MyBucketAutoDeleteObjectsCustomResource2C28D565"
          }
        ],
        "/aws-appconfig-configuration/Custom::S3AutoDeleteObjectsCustomResourceProvider": [
          {
            "type": "aws:cdk:is-custom-resource-handler-customResourceProvider",
            "data": true
          }
        ],
        "/aws-appconfig-configuration/Custom::S3AutoDeleteObjectsCustomResourceProvider/Role": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092"
          }
        ],
        "/aws-appconfig-configuration/Custom::S3AutoDeleteObjectsCustomResourceProvider/Handler": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F"
          }
        ],
        "/aws-appconfig-configuration/DeployConfigInBucket/AwsCliLayer": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {}
          }
        ],
        "/aws-appconfig-configuration/DeployConfigInBucket/AwsCliLayer/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "DeployConfigInBucketAwsCliLayerFC57D055"
          }
        ],
        "/aws-appconfig-configuration/DeployConfigInBucket/CustomResourceHandler": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "uuid": "*",
              "layers": [
                "*"
              ],
              "environment": "*",
              "lambdaPurpose": "*",
              "timeout": "*",
              "role": "*",
              "memorySize": "*",
              "ephemeralStorageSize": "*",
              "vpc": "*",
              "vpcSubnets": "*",
              "filesystem": "*",
              "logGroup": "*",
              "code": "*",
              "handler": "*",
              "runtime": "*"
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "addMetadata": [
                "*",
                true
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "addMetadata": [
                "*",
                "*"
              ]
            }
          }
        ],
        "/aws-appconfig-configuration/DeployConfigInBucket/CustomResource": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": "*"
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": "*"
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": "*"
          }
        ],
        "/aws-appconfig-configuration/DeployConfigInBucket/CustomResource/Default": [
          {
            "type": "aws:cdk:logicalId",
            "data": "DeployConfigInBucketCustomResource91997C5B"
          }
        ],
        "/aws-appconfig-configuration/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "layers": [
                "*"
              ],
              "environment": "*",
              "timeout": "*",
              "role": "*",
              "memorySize": "*",
              "ephemeralStorageSize": "*",
              "vpc": "*",
              "vpcSubnets": "*",
              "filesystem": "*",
              "logGroup": "*",
              "code": "*",
              "handler": "*",
              "runtime": "*"
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "addEnvironment": [
                "*",
                "*"
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "addLayers": [
                "*"
              ]
            }
          },
          {
            "type": "aws:cdk:is-custom-resource-handler-singleton",
            "data": true
          },
          {
            "type": "aws:cdk:is-custom-resource-handler-runtime-family",
            "data": 2
          }
        ],
        "/aws-appconfig-configuration/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C/ServiceRole": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "assumedBy": {
                "principalAccount": "*",
                "assumeRoleAction": "*"
              },
              "managedPolicies": [
                {
                  "managedPolicyArn": "*"
                }
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "addToPrincipalPolicy": [
                {}
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "attachInlinePolicy": [
                "*"
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "attachInlinePolicy": [
                "*"
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "addToPrincipalPolicy": [
                {}
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "addToPrincipalPolicy": [
                {}
              ]
            }
          }
        ],
        "/aws-appconfig-configuration/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C/ServiceRole/ImportServiceRole": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": "*"
          }
        ],
        "/aws-appconfig-configuration/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C/ServiceRole/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265"
          }
        ],
        "/aws-appconfig-configuration/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C/ServiceRole/DefaultPolicy": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": "*"
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "attachToRole": [
                "*"
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "attachToRole": [
                "*"
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "addStatements": [
                {}
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "addStatements": [
                {}
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "addStatements": [
                {}
              ]
            }
          }
        ],
        "/aws-appconfig-configuration/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C/ServiceRole/DefaultPolicy/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF"
          }
        ],
        "/aws-appconfig-configuration/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C81C01536"
          }
        ],
        "/aws-appconfig-configuration/MyConfigFromBucket/DeploymentStrategy": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "rolloutStrategy": "*"
            }
          }
        ],
        "/aws-appconfig-configuration/MyConfigFromBucket/DeploymentStrategy/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "MyConfigFromBucketDeploymentStrategy59D68C4F"
          }
        ],
        "/aws-appconfig-configuration/MyConfigFromBucket/Role": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "roleName": "*",
              "assumedBy": {
                "principalAccount": "*",
                "assumeRoleAction": "*"
              },
              "inlinePolicies": "*"
            }
          }
        ],
        "/aws-appconfig-configuration/MyConfigFromBucket/Role/ImportRole": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": "*"
          }
        ],
        "/aws-appconfig-configuration/MyConfigFromBucket/Role/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "MyConfigFromBucketRole5749669F"
          }
        ],
        "/aws-appconfig-configuration/MyConfigFromBucket/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "MyConfigFromBucket064B5420"
          }
        ],
        "/aws-appconfig-configuration/DummyRole": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "assumedBy": {
                "principalAccount": "*",
                "assumeRoleAction": "*"
              }
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "addToPrincipalPolicy": [
                {}
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "attachInlinePolicy": [
                "*"
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "attachInlinePolicy": [
                "*"
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "addToPrincipalPolicy": [
                {}
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "addToPrincipalPolicy": [
                {}
              ]
            }
          }
        ],
        "/aws-appconfig-configuration/DummyRole/ImportDummyRole": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": "*"
          }
        ],
        "/aws-appconfig-configuration/DummyRole/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "DummyRoleA4B7EAF1"
          }
        ],
        "/aws-appconfig-configuration/DummyRole/DefaultPolicy": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": "*"
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "attachToRole": [
                "*"
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "attachToRole": [
                "*"
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "addStatements": [
                {}
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "addStatements": [
                {}
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "addStatements": [
                {}
              ]
            }
          }
        ],
        "/aws-appconfig-configuration/DummyRole/DefaultPolicy/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "DummyRoleDefaultPolicy68837380"
          }
        ],
        "/aws-appconfig-configuration/MyConfigFromBucketWithRole/DeploymentStrategy": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "rolloutStrategy": "*"
            }
          }
        ],
        "/aws-appconfig-configuration/MyConfigFromBucketWithRole/DeploymentStrategy/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "MyConfigFromBucketWithRoleDeploymentStrategy109EA62F"
          }
        ],
        "/aws-appconfig-configuration/MyConfigFromBucketWithRole/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "MyConfigFromBucketWithRole625F4717"
          }
        ],
        "/aws-appconfig-configuration/MySecret": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "secretStringValue": "*"
            }
          }
        ],
        "/aws-appconfig-configuration/MySecret/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "MySecret8FE80B51"
          }
        ],
        "/aws-appconfig-configuration/MyConfigFromSecret/DeploymentStrategy": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "rolloutStrategy": "*"
            }
          }
        ],
        "/aws-appconfig-configuration/MyConfigFromSecret/DeploymentStrategy/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "MyConfigFromSecretDeploymentStrategy7E7398AA"
          }
        ],
        "/aws-appconfig-configuration/MyConfigFromSecret/Role": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "roleName": "*",
              "assumedBy": {
                "principalAccount": "*",
                "assumeRoleAction": "*"
              },
              "inlinePolicies": "*"
            }
          }
        ],
        "/aws-appconfig-configuration/MyConfigFromSecret/Role/ImportRole": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": "*"
          }
        ],
        "/aws-appconfig-configuration/MyConfigFromSecret/Role/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "MyConfigFromSecretRole77E11CE7"
          }
        ],
        "/aws-appconfig-configuration/MyConfigFromSecret/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "MyConfigFromSecret42EED9DC"
          }
        ],
        "/aws-appconfig-configuration/MyKey": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": "*"
          }
        ],
        "/aws-appconfig-configuration/MyKey/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "MyKey6AB29FA6"
          }
        ],
        "/aws-appconfig-configuration/MySecretWithKey": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "secretStringValue": "*",
              "encryptionKey": "*"
            }
          }
        ],
        "/aws-appconfig-configuration/MySecretWithKey/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "MySecretWithKey1F7B590B"
          }
        ],
        "/aws-appconfig-configuration/MyConfigFromSecretWithKey/DeploymentStrategy": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "rolloutStrategy": "*"
            }
          }
        ],
        "/aws-appconfig-configuration/MyConfigFromSecretWithKey/DeploymentStrategy/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "MyConfigFromSecretWithKeyDeploymentStrategy9FAC9F62"
          }
        ],
        "/aws-appconfig-configuration/MyConfigFromSecretWithKey/Role": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "roleName": "*",
              "assumedBy": {
                "principalAccount": "*",
                "assumeRoleAction": "*"
              },
              "inlinePolicies": "*"
            }
          }
        ],
        "/aws-appconfig-configuration/MyConfigFromSecretWithKey/Role/ImportRole": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": "*"
          }
        ],
        "/aws-appconfig-configuration/MyConfigFromSecretWithKey/Role/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "MyConfigFromSecretWithKeyRole3C7B494A"
          }
        ],
        "/aws-appconfig-configuration/MyConfigFromSecretWithKey/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "MyConfigFromSecretWithKey6F08D343"
          }
        ],
        "/aws-appconfig-configuration/MyPipeline": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "crossAccountKeys": true,
              "stages": [
                {
                  "stageName": "*",
                  "actions": [
                    {}
                  ]
                },
                {
                  "stageName": "*",
                  "actions": [
                    {}
                  ]
                }
              ]
            }
          },
          {
            "type": "aws:cdk:warning",
            "data": "V1 pipeline type is implicitly selected when `pipelineType` is not set. If you want to use V2 type, set `PipelineType.V2`. [ack: @aws-cdk/aws-codepipeline:unspecifiedPipelineType]"
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "addStage": [
                {
                  "stageName": "*"
                }
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "addStage": [
                {
                  "stageName": "*"
                }
              ]
            }
          }
        ],
        "/aws-appconfig-configuration/MyPipeline/ArtifactsBucketEncryptionKey": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "removalPolicy": "destroy",
              "enableKeyRotation": "*"
            }
          }
        ],
        "/aws-appconfig-configuration/MyPipeline/ArtifactsBucketEncryptionKey/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "MyPipelineArtifactsBucketEncryptionKey8BF0A7F3"
          }
        ],
        "/aws-appconfig-configuration/MyPipeline/ArtifactsBucketEncryptionKeyAlias": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "aliasName": "*",
              "targetKey": "*",
              "removalPolicy": "destroy"
            }
          }
        ],
        "/aws-appconfig-configuration/MyPipeline/ArtifactsBucketEncryptionKeyAlias/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "MyPipelineArtifactsBucketEncryptionKeyAlias9D4F8C59"
          }
        ],
        "/aws-appconfig-configuration/MyPipeline/ArtifactsBucket": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "bucketName": "*",
              "encryptionKey": "*",
              "encryption": "KMS",
              "enforceSSL": true,
              "blockPublicAccess": "*",
              "removalPolicy": "retain"
            }
          }
        ],
        "/aws-appconfig-configuration/MyPipeline/ArtifactsBucket/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "MyPipelineArtifactsBucket727923DD"
          }
        ],
        "/aws-appconfig-configuration/MyPipeline/ArtifactsBucket/Policy": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "bucket": "*"
            }
          }
        ],
        "/aws-appconfig-configuration/MyPipeline/ArtifactsBucket/Policy/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "MyPipelineArtifactsBucketPolicyDFDA675B"
          }
        ],
        "/aws-appconfig-configuration/MyPipeline/Role": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "assumedBy": {
                "principalAccount": "*",
                "assumeRoleAction": "*"
              },
              "roleName": "*"
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "addToPrincipalPolicy": [
                {}
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "attachInlinePolicy": [
                "*"
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "attachInlinePolicy": [
                "*"
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "addToPrincipalPolicy": [
                {}
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "addToPrincipalPolicy": [
                {}
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "addToPrincipalPolicy": [
                {}
              ]
            }
          }
        ],
        "/aws-appconfig-configuration/MyPipeline/Role/ImportRole": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": "*"
          }
        ],
        "/aws-appconfig-configuration/MyPipeline/Role/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "MyPipelineRoleC0D47CA4"
          }
        ],
        "/aws-appconfig-configuration/MyPipeline/Role/DefaultPolicy": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": "*"
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "attachToRole": [
                "*"
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "attachToRole": [
                "*"
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "addStatements": [
                {}
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "addStatements": [
                {}
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "addStatements": [
                {}
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "addStatements": [
                {}
              ]
            }
          }
        ],
        "/aws-appconfig-configuration/MyPipeline/Role/DefaultPolicy/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "MyPipelineRoleDefaultPolicy34F09EFA"
          }
        ],
        "/aws-appconfig-configuration/MyPipeline/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "MyPipelineAED38ECF"
          }
        ],
        "/aws-appconfig-configuration/MyPipeline/beta/Source/CodePipelineActionRole": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "assumedBy": {
                "principalAccount": "*",
                "assumeRoleAction": "*"
              }
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "grantAssumeRole": [
                "*"
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "grant": [
                "*",
                "*"
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "addToPrincipalPolicy": [
                {}
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "attachInlinePolicy": [
                "*"
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "attachInlinePolicy": [
                "*"
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "addToPrincipalPolicy": [
                {}
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "addToPrincipalPolicy": [
                {}
              ]
            }
          }
        ],
        "/aws-appconfig-configuration/MyPipeline/beta/Source/CodePipelineActionRole/ImportCodePipelineActionRole": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": "*"
          }
        ],
        "/aws-appconfig-configuration/MyPipeline/beta/Source/CodePipelineActionRole/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "MyPipelinebetaSourceCodePipelineActionRoleA59DCC4C"
          }
        ],
        "/aws-appconfig-configuration/MyPipeline/beta/Source/CodePipelineActionRole/DefaultPolicy": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": "*"
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "attachToRole": [
                "*"
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "attachToRole": [
                "*"
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "addStatements": [
                {}
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "addStatements": [
                {}
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "addStatements": [
                {}
              ]
            }
          }
        ],
        "/aws-appconfig-configuration/MyPipeline/beta/Source/CodePipelineActionRole/DefaultPolicy/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "MyPipelinebetaSourceCodePipelineActionRoleDefaultPolicy4F6DF82E"
          }
        ],
        "/aws-appconfig-configuration/MyPipeline/prod/Deploy/CodePipelineActionRole": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "assumedBy": {
                "principalAccount": "*",
                "assumeRoleAction": "*"
              }
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "grantAssumeRole": [
                "*"
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "grant": [
                "*",
                "*"
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "addToPrincipalPolicy": [
                {}
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "attachInlinePolicy": [
                "*"
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "attachInlinePolicy": [
                "*"
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "addToPrincipalPolicy": [
                {}
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "addToPrincipalPolicy": [
                {}
              ]
            }
          }
        ],
        "/aws-appconfig-configuration/MyPipeline/prod/Deploy/CodePipelineActionRole/ImportCodePipelineActionRole": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": "*"
          }
        ],
        "/aws-appconfig-configuration/MyPipeline/prod/Deploy/CodePipelineActionRole/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "MyPipelineprodDeployCodePipelineActionRoleFAD07544"
          }
        ],
        "/aws-appconfig-configuration/MyPipeline/prod/Deploy/CodePipelineActionRole/DefaultPolicy": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": "*"
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "attachToRole": [
                "*"
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "attachToRole": [
                "*"
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "addStatements": [
                {}
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "addStatements": [
                {}
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "addStatements": [
                {}
              ]
            }
          }
        ],
        "/aws-appconfig-configuration/MyPipeline/prod/Deploy/CodePipelineActionRole/DefaultPolicy/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "MyPipelineprodDeployCodePipelineActionRoleDefaultPolicyF1913519"
          }
        ],
        "/aws-appconfig-configuration/MyConfigFromPipeline/DeploymentStrategy": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "rolloutStrategy": "*"
            }
          }
        ],
        "/aws-appconfig-configuration/MyConfigFromPipeline/DeploymentStrategy/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "MyConfigFromPipelineDeploymentStrategyF07EE763"
          }
        ],
        "/aws-appconfig-configuration/MyConfigFromPipeline/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "MyConfigFromPipelineEA8471A4"
          }
        ],
        "/aws-appconfig-configuration/BootstrapVersion": [
          {
            "type": "aws:cdk:logicalId",
            "data": "BootstrapVersion"
          }
        ],
        "/aws-appconfig-configuration/CheckBootstrapVersion": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CheckBootstrapVersion"
          }
        ]
      },
      "displayName": "aws-appconfig-configuration"
    },
    "appconfigconfigurationDefaultTestDeployAssert6752CD38.assets": {
      "type": "cdk:asset-manifest",
      "properties": {
        "file": "appconfigconfigurationDefaultTestDeployAssert6752CD38.assets.json",
        "requiresBootstrapStackVersion": 6,
        "bootstrapStackVersionSsmParameter": "/cdk-bootstrap/hnb659fds/version"
      }
    },
    "appconfigconfigurationDefaultTestDeployAssert6752CD38": {
      "type": "aws:cloudformation:stack",
      "environment": "aws://unknown-account/unknown-region",
      "properties": {
        "templateFile": "appconfigconfigurationDefaultTestDeployAssert6752CD38.template.json",
        "terminationProtection": false,
        "validateOnSynth": false,
        "assumeRoleArn": "arn:${AWS::Partition}:iam::${AWS::AccountId}:role/cdk-hnb659fds-deploy-role-${AWS::AccountId}-${AWS::Region}",
        "cloudFormationExecutionRoleArn": "arn:${AWS::Partition}:iam::${AWS::AccountId}:role/cdk-hnb659fds-cfn-exec-role-${AWS::AccountId}-${AWS::Region}",
        "stackTemplateAssetObjectUrl": "s3://cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}/21fbb51d7b23f6a6c262b46a9caee79d744a3ac019fd45422d988b96d44b2a22.json",
        "requiresBootstrapStackVersion": 6,
        "bootstrapStackVersionSsmParameter": "/cdk-bootstrap/hnb659fds/version",
        "additionalDependencies": [
          "appconfigconfigurationDefaultTestDeployAssert6752CD38.assets"
        ],
        "lookupRole": {
          "arn": "arn:${AWS::Partition}:iam::${AWS::AccountId}:role/cdk-hnb659fds-lookup-role-${AWS::AccountId}-${AWS::Region}",
          "requiresBootstrapStackVersion": 8,
          "bootstrapStackVersionSsmParameter": "/cdk-bootstrap/hnb659fds/version"
        }
      },
      "dependencies": [
        "appconfigconfigurationDefaultTestDeployAssert6752CD38.assets"
      ],
      "metadata": {
        "/appconfig-configuration/DefaultTest/DeployAssert/BootstrapVersion": [
          {
            "type": "aws:cdk:logicalId",
            "data": "BootstrapVersion"
          }
        ],
        "/appconfig-configuration/DefaultTest/DeployAssert/CheckBootstrapVersion": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CheckBootstrapVersion"
          }
        ]
      },
      "displayName": "appconfig-configuration/DefaultTest/DeployAssert"
    },
    "Tree": {
      "type": "cdk:tree",
      "properties": {
        "file": "tree.json"
      }
    },
    "aws-cdk-lib/feature-flag-report": {
      "type": "cdk:feature-flag-report",
      "properties": {
        "module": "aws-cdk-lib",
        "flags": {
          "@aws-cdk/aws-signer:signingProfileNamePassedToCfn": {
            "recommendedValue": true,
            "explanation": "Pass signingProfileName to CfnSigningProfile"
          },
          "@aws-cdk/core:newStyleStackSynthesis": {
            "recommendedValue": true,
            "explanation": "Switch to new stack synthesis method which enables CI/CD",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/core:stackRelativeExports": {
            "recommendedValue": true,
            "explanation": "Name exports based on the construct paths relative to the stack, rather than the global construct path",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/aws-rds:lowercaseDbIdentifier": {
            "recommendedValue": true,
            "explanation": "Force lowercasing of RDS Cluster names in CDK",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/aws-apigateway:usagePlanKeyOrderInsensitiveId": {
            "recommendedValue": true,
            "explanation": "Allow adding/removing multiple UsagePlanKeys independently",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/aws-lambda:recognizeVersionProps": {
            "recommendedValue": true,
            "explanation": "Enable this feature flag to opt in to the updated logical id calculation for Lambda Version created using the  `fn.currentVersion`.",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/aws-lambda:recognizeLayerVersion": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Enable this feature flag to opt in to the updated logical id calculation for Lambda Version created using the `fn.currentVersion`."
          },
          "@aws-cdk/aws-cloudfront:defaultSecurityPolicyTLSv1.2_2021": {
            "recommendedValue": true,
            "explanation": "Enable this feature flag to have cloudfront distributions use the security policy TLSv1.2_2021 by default.",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/core:checkSecretUsage": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Enable this flag to make it impossible to accidentally use SecretValues in unsafe locations"
          },
          "@aws-cdk/core:target-partitions": {
            "recommendedValue": [
              "aws",
              "aws-cn"
            ],
            "explanation": "What regions to include in lookup tables of environment agnostic stacks"
          },
          "@aws-cdk-containers/ecs-service-extensions:enableDefaultLogDriver": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "ECS extensions will automatically add an `awslogs` driver if no logging is specified"
          },
          "@aws-cdk/aws-ec2:uniqueImdsv2TemplateName": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Enable this feature flag to have Launch Templates generated by the `InstanceRequireImdsv2Aspect` use unique names."
          },
          "@aws-cdk/aws-ecs:arnFormatIncludesClusterName": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "ARN format used by ECS. In the new ARN format, the cluster name is part of the resource ID."
          },
          "@aws-cdk/aws-iam:minimizePolicies": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Minimize IAM policies by combining Statements"
          },
          "@aws-cdk/core:validateSnapshotRemovalPolicy": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Error on snapshot removal policies on resources that do not support it."
          },
          "@aws-cdk/aws-codepipeline:crossAccountKeyAliasStackSafeResourceName": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Generate key aliases that include the stack name"
          },
          "@aws-cdk/aws-s3:createDefaultLoggingPolicy": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Enable this feature flag to create an S3 bucket policy by default in cases where an AWS service would automatically create the Policy if one does not exist."
          },
          "@aws-cdk/aws-sns-subscriptions:restrictSqsDescryption": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Restrict KMS key policy for encrypted Queues a bit more"
          },
          "@aws-cdk/aws-apigateway:disableCloudWatchRole": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Make default CloudWatch Role behavior safe for multiple API Gateways in one environment"
          },
          "@aws-cdk/core:enablePartitionLiterals": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Make ARNs concrete if AWS partition is known"
          },
          "@aws-cdk/aws-events:eventsTargetQueueSameAccount": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Event Rules may only push to encrypted SQS queues in the same account"
          },
          "@aws-cdk/aws-ecs:disableExplicitDeploymentControllerForCircuitBreaker": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Avoid setting the \"ECS\" deployment controller when adding a circuit breaker"
          },
          "@aws-cdk/aws-iam:importedRoleStackSafeDefaultPolicyName": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Enable this feature to by default create default policy names for imported roles that depend on the stack the role is in."
          },
          "@aws-cdk/aws-s3:serverAccessLogsUseBucketPolicy": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Use S3 Bucket Policy instead of ACLs for Server Access Logging"
          },
          "@aws-cdk/aws-route53-patters:useCertificate": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Use the official `Certificate` resource instead of `DnsValidatedCertificate`"
          },
          "@aws-cdk/customresources:installLatestAwsSdkDefault": {
            "userValue": false,
            "recommendedValue": false,
            "explanation": "Whether to install the latest SDK by default in AwsCustomResource"
          },
          "@aws-cdk/aws-rds:databaseProxyUniqueResourceName": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Use unique resource name for Database Proxy"
          },
          "@aws-cdk/aws-codedeploy:removeAlarmsFromDeploymentGroup": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Remove CloudWatch alarms from deployment group"
          },
          "@aws-cdk/aws-apigateway:authorizerChangeDeploymentLogicalId": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Include authorizer configuration in the calculation of the API deployment logical ID."
          },
          "@aws-cdk/aws-ec2:launchTemplateDefaultUserData": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Define user data for a launch template by default when a machine image is provided."
          },
          "@aws-cdk/aws-secretsmanager:useAttachedSecretResourcePolicyForSecretTargetAttachments": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "SecretTargetAttachments uses the ResourcePolicy of the attached Secret."
          },
          "@aws-cdk/aws-redshift:columnId": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Whether to use an ID to track Redshift column changes"
          },
          "@aws-cdk/aws-stepfunctions-tasks:enableEmrServicePolicyV2": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Enable AmazonEMRServicePolicy_v2 managed policies"
          },
          "@aws-cdk/aws-ec2:restrictDefaultSecurityGroup": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Restrict access to the VPC default security group"
          },
          "@aws-cdk/aws-apigateway:requestValidatorUniqueId": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Generate a unique id for each RequestValidator added to a method"
          },
          "@aws-cdk/aws-kms:aliasNameRef": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "KMS Alias name and keyArn will have implicit reference to KMS Key"
          },
          "@aws-cdk/aws-kms:applyImportedAliasPermissionsToPrincipal": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Enable grant methods on Aliases imported by name to use kms:ResourceAliases condition"
          },
          "@aws-cdk/aws-autoscaling:generateLaunchTemplateInsteadOfLaunchConfig": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Generate a launch template when creating an AutoScalingGroup"
          },
          "@aws-cdk/core:includePrefixInUniqueNameGeneration": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Include the stack prefix in the stack name generation process"
          },
          "@aws-cdk/aws-efs:denyAnonymousAccess": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "EFS denies anonymous clients accesses"
          },
          "@aws-cdk/aws-opensearchservice:enableOpensearchMultiAzWithStandby": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Enables support for Multi-AZ with Standby deployment for opensearch domains"
          },
          "@aws-cdk/aws-lambda-nodejs:useLatestRuntimeVersion": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Enables aws-lambda-nodejs.Function to use the latest available NodeJs runtime as the default"
          },
          "@aws-cdk/aws-efs:mountTargetOrderInsensitiveLogicalId": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, mount targets will have a stable logicalId that is linked to the associated subnet."
          },
          "@aws-cdk/aws-rds:auroraClusterChangeScopeOfInstanceParameterGroupWithEachParameters": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, a scope of InstanceParameterGroup for AuroraClusterInstance with each parameters will change."
          },
          "@aws-cdk/aws-appsync:useArnForSourceApiAssociationIdentifier": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, will always use the arn for identifiers for CfnSourceApiAssociation in the GraphqlApi construct rather than id."
          },
          "@aws-cdk/aws-rds:preventRenderingDeprecatedCredentials": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, creating an RDS database cluster from a snapshot will only render credentials for snapshot credentials."
          },
          "@aws-cdk/aws-codepipeline-actions:useNewDefaultBranchForCodeCommitSource": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, the CodeCommit source action is using the default branch name 'main'."
          },
          "@aws-cdk/aws-cloudwatch-actions:changeLambdaPermissionLogicalIdForLambdaAction": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, the logical ID of a Lambda permission for a Lambda action includes an alarm ID."
          },
          "@aws-cdk/aws-codepipeline:crossAccountKeysDefaultValueToFalse": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Enables Pipeline to set the default value for crossAccountKeys to false."
          },
          "@aws-cdk/aws-codepipeline:defaultPipelineTypeToV2": {
            "userValue": false,
            "recommendedValue": true,
            "explanation": "Enables Pipeline to set the default pipeline type to V2."
          },
          "@aws-cdk/aws-kms:reduceCrossAccountRegionPolicyScope": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, IAM Policy created from KMS key grant will reduce the resource scope to this key only."
          },
          "@aws-cdk/pipelines:reduceAssetRoleTrustScope": {
            "recommendedValue": true,
            "explanation": "Remove the root account principal from PipelineAssetsFileRole trust policy",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/aws-eks:nodegroupNameAttribute": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, nodegroupName attribute of the provisioned EKS NodeGroup will not have the cluster name prefix."
          },
          "@aws-cdk/aws-ec2:ebsDefaultGp3Volume": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, the default volume type of the EBS volume will be GP3"
          },
          "@aws-cdk/aws-ecs:removeDefaultDeploymentAlarm": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, remove default deployment alarm settings"
          },
          "@aws-cdk/custom-resources:logApiResponseDataPropertyTrueDefault": {
            "userValue": false,
            "recommendedValue": false,
            "explanation": "When enabled, the custom resource used for `AwsCustomResource` will configure the `logApiResponseData` property as true by default"
          },
          "@aws-cdk/aws-s3:keepNotificationInImportedBucket": {
            "userValue": false,
            "recommendedValue": false,
            "explanation": "When enabled, Adding notifications to a bucket in the current stack will not remove notification from imported stack."
          },
          "@aws-cdk/aws-stepfunctions-tasks:useNewS3UriParametersForBedrockInvokeModelTask": {
            "recommendedValue": true,
            "explanation": "When enabled, use new props for S3 URI field in task definition of state machine for bedrock invoke model.",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/core:explicitStackTags": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, stack tags need to be assigned explicitly on a Stack."
          },
          "@aws-cdk/aws-ecs:enableImdsBlockingDeprecatedFeature": {
            "userValue": false,
            "recommendedValue": false,
            "explanation": "When set to true along with canContainersAccessInstanceRole=false in ECS cluster, new updated commands will be added to UserData to block container accessing IMDS. **Applicable to Linux only. IMPORTANT: See [details.](#aws-cdkaws-ecsenableImdsBlockingDeprecatedFeature)**"
          },
          "@aws-cdk/aws-ecs:disableEcsImdsBlocking": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When set to true, CDK synth will throw exception if canContainersAccessInstanceRole is false. **IMPORTANT: See [details.](#aws-cdkaws-ecsdisableEcsImdsBlocking)**"
          },
          "@aws-cdk/aws-ecs:reduceEc2FargateCloudWatchPermissions": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, we will only grant the necessary permissions when users specify cloudwatch log group through logConfiguration"
          },
          "@aws-cdk/aws-dynamodb:resourcePolicyPerReplica": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled will allow you to specify a resource policy per replica, and not copy the source table policy to all replicas"
          },
          "@aws-cdk/aws-ec2:ec2SumTImeoutEnabled": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, initOptions.timeout and resourceSignalTimeout values will be summed together."
          },
          "@aws-cdk/aws-appsync:appSyncGraphQLAPIScopeLambdaPermission": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, a Lambda authorizer Permission created when using GraphqlApi will be properly scoped with a SourceArn."
          },
          "@aws-cdk/aws-rds:setCorrectValueForDatabaseInstanceReadReplicaInstanceResourceId": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, the value of property `instanceResourceId` in construct `DatabaseInstanceReadReplica` will be set to the correct value which is `DbiResourceId` instead of currently `DbInstanceArn`"
          },
          "@aws-cdk/core:cfnIncludeRejectComplexResourceUpdateCreatePolicyIntrinsics": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, CFN templates added with `cfn-include` will error if the template contains Resource Update or Create policies with CFN Intrinsics that include non-primitive values."
          },
          "@aws-cdk/aws-lambda-nodejs:sdkV3ExcludeSmithyPackages": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, both `@aws-sdk` and `@smithy` packages will be excluded from the Lambda Node.js 18.x runtime to prevent version mismatches in bundled applications."
          },
          "@aws-cdk/aws-stepfunctions-tasks:fixRunEcsTaskPolicy": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, the resource of IAM Run Ecs policy generated by SFN EcsRunTask will reference the definition, instead of constructing ARN."
          },
          "@aws-cdk/aws-ec2:bastionHostUseAmazonLinux2023ByDefault": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, the BastionHost construct will use the latest Amazon Linux 2023 AMI, instead of Amazon Linux 2."
          },
          "@aws-cdk/core:aspectStabilization": {
            "recommendedValue": true,
            "explanation": "When enabled, a stabilization loop will be run when invoking Aspects during synthesis.",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/aws-route53-targets:userPoolDomainNameMethodWithoutCustomResource": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, use a new method for DNS Name of user pool domain target without creating a custom resource."
          },
          "@aws-cdk/aws-elasticloadbalancingV2:albDualstackWithoutPublicIpv4SecurityGroupRulesDefault": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, the default security group ingress rules will allow IPv6 ingress from anywhere"
          },
          "@aws-cdk/aws-iam:oidcRejectUnauthorizedConnections": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, the default behaviour of OIDC provider will reject unauthorized connections"
          },
          "@aws-cdk/core:enableAdditionalMetadataCollection": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, CDK will expand the scope of usage data collected to better inform CDK development and improve communication for security concerns and emerging issues."
          },
          "@aws-cdk/aws-lambda:createNewPoliciesWithAddToRolePolicy": {
            "userValue": false,
            "recommendedValue": false,
            "explanation": "[Deprecated] When enabled, Lambda will create new inline policies with AddToRolePolicy instead of adding to the Default Policy Statement"
          },
          "@aws-cdk/aws-s3:setUniqueReplicationRoleName": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, CDK will automatically generate a unique role name that is used for s3 object replication."
          },
          "@aws-cdk/pipelines:reduceStageRoleTrustScope": {
            "recommendedValue": true,
            "explanation": "Remove the root account principal from Stage addActions trust policy",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/aws-events:requireEventBusPolicySid": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, grantPutEventsTo() will use resource policies with Statement IDs for service principals."
          },
          "@aws-cdk/core:aspectPrioritiesMutating": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When set to true, Aspects added by the construct library on your behalf will be given a priority of MUTATING."
          },
          "@aws-cdk/aws-dynamodb:retainTableReplica": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, table replica will be default to the removal policy of source table unless specified otherwise."
          },
          "@aws-cdk/cognito:logUserPoolClientSecretValue": {
            "recommendedValue": false,
            "explanation": "When disabled, the value of the user pool client secret will not be logged in the custom resource lambda function logs."
          },
          "@aws-cdk/pipelines:reduceCrossAccountActionRoleTrustScope": {
            "recommendedValue": true,
            "explanation": "When enabled, scopes down the trust policy for the cross-account action role",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/aws-stepfunctions:useDistributedMapResultWriterV2": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, the resultWriterV2 property of DistributedMap will be used insted of resultWriter"
          },
          "@aws-cdk/s3-notifications:addS3TrustKeyPolicyForSnsSubscriptions": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Add an S3 trust policy to a KMS key resource policy for SNS subscriptions."
          },
          "@aws-cdk/aws-ec2:requirePrivateSubnetsForEgressOnlyInternetGateway": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, the EgressOnlyGateway resource is only created if private subnets are defined in the dual-stack VPC."
          },
          "@aws-cdk/aws-ec2-alpha:useResourceIdForVpcV2Migration": {
            "recommendedValue": false,
            "explanation": "When enabled, use resource IDs for VPC V2 migration"
          },
          "@aws-cdk/aws-s3:publicAccessBlockedByDefault": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, setting any combination of options for BlockPublicAccess will automatically set true for any options not defined."
          },
          "@aws-cdk/aws-lambda:useCdkManagedLogGroup": {
            "userValue": false,
            "recommendedValue": true,
            "explanation": "When enabled, CDK creates and manages loggroup for the lambda function"
          }
        }
      }
    }
  },
  "minimumCliVersion": "2.1024.0"
}