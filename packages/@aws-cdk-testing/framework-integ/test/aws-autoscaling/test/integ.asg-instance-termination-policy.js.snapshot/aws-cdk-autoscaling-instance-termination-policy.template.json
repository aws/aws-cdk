{
 "Resources": {
  "VPCB9E5F0B4": {
   "Type": "AWS::EC2::VPC",
   "Properties": {
    "CidrBlock": "10.0.0.0/16",
    "EnableDnsHostnames": true,
    "EnableDnsSupport": true,
    "InstanceTenancy": "default",
    "Tags": [
     {
      "Key": "Name",
      "Value": "aws-cdk-autoscaling-instance-termination-policy/VPC"
     }
    ]
   }
  },
  "VPCPublicSubnet1SubnetB4246D30": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": {
     "Fn::Select": [
      0,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.0.0.0/18",
    "MapPublicIpOnLaunch": true,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Public"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Public"
     },
     {
      "Key": "Name",
      "Value": "aws-cdk-autoscaling-instance-termination-policy/VPC/PublicSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "VPCB9E5F0B4"
    }
   }
  },
  "VPCPublicSubnet1RouteTableFEE4B781": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "aws-cdk-autoscaling-instance-termination-policy/VPC/PublicSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "VPCB9E5F0B4"
    }
   }
  },
  "VPCPublicSubnet1RouteTableAssociation0B0896DC": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "VPCPublicSubnet1RouteTableFEE4B781"
    },
    "SubnetId": {
     "Ref": "VPCPublicSubnet1SubnetB4246D30"
    }
   }
  },
  "VPCPublicSubnet1DefaultRoute91CEF279": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "GatewayId": {
     "Ref": "VPCIGWB7E252D3"
    },
    "RouteTableId": {
     "Ref": "VPCPublicSubnet1RouteTableFEE4B781"
    }
   },
   "DependsOn": [
    "VPCVPCGW99B986DC"
   ]
  },
  "VPCPublicSubnet2Subnet74179F39": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": {
     "Fn::Select": [
      1,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.0.64.0/18",
    "MapPublicIpOnLaunch": true,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Public"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Public"
     },
     {
      "Key": "Name",
      "Value": "aws-cdk-autoscaling-instance-termination-policy/VPC/PublicSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "VPCB9E5F0B4"
    }
   }
  },
  "VPCPublicSubnet2RouteTable6F1A15F1": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "aws-cdk-autoscaling-instance-termination-policy/VPC/PublicSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "VPCB9E5F0B4"
    }
   }
  },
  "VPCPublicSubnet2RouteTableAssociation5A808732": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "VPCPublicSubnet2RouteTable6F1A15F1"
    },
    "SubnetId": {
     "Ref": "VPCPublicSubnet2Subnet74179F39"
    }
   }
  },
  "VPCPublicSubnet2DefaultRouteB7481BBA": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "GatewayId": {
     "Ref": "VPCIGWB7E252D3"
    },
    "RouteTableId": {
     "Ref": "VPCPublicSubnet2RouteTable6F1A15F1"
    }
   },
   "DependsOn": [
    "VPCVPCGW99B986DC"
   ]
  },
  "VPCIsolatedSubnet1SubnetEBD00FC6": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": {
     "Fn::Select": [
      0,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.0.128.0/18",
    "MapPublicIpOnLaunch": false,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Isolated"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Isolated"
     },
     {
      "Key": "Name",
      "Value": "aws-cdk-autoscaling-instance-termination-policy/VPC/IsolatedSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "VPCB9E5F0B4"
    }
   }
  },
  "VPCIsolatedSubnet1RouteTableEB156210": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "aws-cdk-autoscaling-instance-termination-policy/VPC/IsolatedSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "VPCB9E5F0B4"
    }
   }
  },
  "VPCIsolatedSubnet1RouteTableAssociationA2D18F7C": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "VPCIsolatedSubnet1RouteTableEB156210"
    },
    "SubnetId": {
     "Ref": "VPCIsolatedSubnet1SubnetEBD00FC6"
    }
   }
  },
  "VPCIsolatedSubnet2Subnet4B1C8CAA": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": {
     "Fn::Select": [
      1,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.0.192.0/18",
    "MapPublicIpOnLaunch": false,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Isolated"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Isolated"
     },
     {
      "Key": "Name",
      "Value": "aws-cdk-autoscaling-instance-termination-policy/VPC/IsolatedSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "VPCB9E5F0B4"
    }
   }
  },
  "VPCIsolatedSubnet2RouteTable9B4F78DC": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "aws-cdk-autoscaling-instance-termination-policy/VPC/IsolatedSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "VPCB9E5F0B4"
    }
   }
  },
  "VPCIsolatedSubnet2RouteTableAssociation7BF8E0EB": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "VPCIsolatedSubnet2RouteTable9B4F78DC"
    },
    "SubnetId": {
     "Ref": "VPCIsolatedSubnet2Subnet4B1C8CAA"
    }
   }
  },
  "VPCIGWB7E252D3": {
   "Type": "AWS::EC2::InternetGateway",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "aws-cdk-autoscaling-instance-termination-policy/VPC"
     }
    ]
   }
  },
  "VPCVPCGW99B986DC": {
   "Type": "AWS::EC2::VPCGatewayAttachment",
   "Properties": {
    "InternetGatewayId": {
     "Ref": "VPCIGWB7E252D3"
    },
    "VpcId": {
     "Ref": "VPCB9E5F0B4"
    }
   }
  },
  "MyFunctionServiceRole3C357FF2": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   }
  },
  "MyFunction3BAA72D1": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "ZipFile": "exports.handler = function asgHandler(_event, _context, callback) {\n    let json = JSON.parse(JSON.stringify(_event));\n    let instanceIds = [];\n    json.Instances.forEach((instance) => {\n        instanceIds.push(instance.InstanceId);\n    });\n    // eslint-disable-next-line quote-props\n    const result = { 'InstanceIDs': instanceIds };\n    return callback(undefined, result);\n}"
    },
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "MyFunctionServiceRole3C357FF2",
      "Arn"
     ]
    },
    "Runtime": "nodejs20.x"
   },
   "DependsOn": [
    "MyFunctionServiceRole3C357FF2"
   ]
  },
  "MyFunctionAllowInvokeByAutoScalingE1D035DF": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "MyFunction3BAA72D1",
      "Arn"
     ]
    },
    "Principal": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":iam::",
       {
        "Ref": "AWS::AccountId"
       },
       ":role/aws-service-role/autoscaling.amazonaws.com/AWSServiceRoleForAutoScaling"
      ]
     ]
    }
   }
  },
  "ASGInstanceSecurityGroup0525485D": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "aws-cdk-autoscaling-instance-termination-policy/ASG/InstanceSecurityGroup",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "Tags": [
     {
      "Key": "Name",
      "Value": "aws-cdk-autoscaling-instance-termination-policy/ASG"
     }
    ],
    "VpcId": {
     "Ref": "VPCB9E5F0B4"
    }
   },
   "DependsOn": [
    "MyFunctionAllowInvokeByAutoScalingE1D035DF",
    "MyFunction3BAA72D1",
    "MyFunctionServiceRole3C357FF2",
    "VPCIGWB7E252D3",
    "VPCIsolatedSubnet1RouteTableEB156210",
    "VPCIsolatedSubnet1RouteTableAssociationA2D18F7C",
    "VPCIsolatedSubnet1SubnetEBD00FC6",
    "VPCIsolatedSubnet2RouteTable9B4F78DC",
    "VPCIsolatedSubnet2RouteTableAssociation7BF8E0EB",
    "VPCIsolatedSubnet2Subnet4B1C8CAA",
    "VPCPublicSubnet1DefaultRoute91CEF279",
    "VPCPublicSubnet1RouteTableFEE4B781",
    "VPCPublicSubnet1RouteTableAssociation0B0896DC",
    "VPCPublicSubnet1SubnetB4246D30",
    "VPCPublicSubnet2DefaultRouteB7481BBA",
    "VPCPublicSubnet2RouteTable6F1A15F1",
    "VPCPublicSubnet2RouteTableAssociation5A808732",
    "VPCPublicSubnet2Subnet74179F39",
    "VPCB9E5F0B4",
    "VPCVPCGW99B986DC"
   ]
  },
  "ASGInstanceRoleE263A41B": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "ec2.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "aws-cdk-autoscaling-instance-termination-policy/ASG"
     }
    ]
   },
   "DependsOn": [
    "MyFunctionAllowInvokeByAutoScalingE1D035DF",
    "MyFunction3BAA72D1",
    "MyFunctionServiceRole3C357FF2",
    "VPCIGWB7E252D3",
    "VPCIsolatedSubnet1RouteTableEB156210",
    "VPCIsolatedSubnet1RouteTableAssociationA2D18F7C",
    "VPCIsolatedSubnet1SubnetEBD00FC6",
    "VPCIsolatedSubnet2RouteTable9B4F78DC",
    "VPCIsolatedSubnet2RouteTableAssociation7BF8E0EB",
    "VPCIsolatedSubnet2Subnet4B1C8CAA",
    "VPCPublicSubnet1DefaultRoute91CEF279",
    "VPCPublicSubnet1RouteTableFEE4B781",
    "VPCPublicSubnet1RouteTableAssociation0B0896DC",
    "VPCPublicSubnet1SubnetB4246D30",
    "VPCPublicSubnet2DefaultRouteB7481BBA",
    "VPCPublicSubnet2RouteTable6F1A15F1",
    "VPCPublicSubnet2RouteTableAssociation5A808732",
    "VPCPublicSubnet2Subnet74179F39",
    "VPCB9E5F0B4",
    "VPCVPCGW99B986DC"
   ]
  },
  "ASGInstanceProfile0A2834D7": {
   "Type": "AWS::IAM::InstanceProfile",
   "Properties": {
    "Roles": [
     {
      "Ref": "ASGInstanceRoleE263A41B"
     }
    ]
   },
   "DependsOn": [
    "MyFunctionAllowInvokeByAutoScalingE1D035DF",
    "MyFunction3BAA72D1",
    "MyFunctionServiceRole3C357FF2",
    "VPCIGWB7E252D3",
    "VPCIsolatedSubnet1RouteTableEB156210",
    "VPCIsolatedSubnet1RouteTableAssociationA2D18F7C",
    "VPCIsolatedSubnet1SubnetEBD00FC6",
    "VPCIsolatedSubnet2RouteTable9B4F78DC",
    "VPCIsolatedSubnet2RouteTableAssociation7BF8E0EB",
    "VPCIsolatedSubnet2Subnet4B1C8CAA",
    "VPCPublicSubnet1DefaultRoute91CEF279",
    "VPCPublicSubnet1RouteTableFEE4B781",
    "VPCPublicSubnet1RouteTableAssociation0B0896DC",
    "VPCPublicSubnet1SubnetB4246D30",
    "VPCPublicSubnet2DefaultRouteB7481BBA",
    "VPCPublicSubnet2RouteTable6F1A15F1",
    "VPCPublicSubnet2RouteTableAssociation5A808732",
    "VPCPublicSubnet2Subnet74179F39",
    "VPCB9E5F0B4",
    "VPCVPCGW99B986DC"
   ]
  },
  "ASGLaunchTemplate0CA92847": {
   "Type": "AWS::EC2::LaunchTemplate",
   "Properties": {
    "LaunchTemplateData": {
     "IamInstanceProfile": {
      "Arn": {
       "Fn::GetAtt": [
        "ASGInstanceProfile0A2834D7",
        "Arn"
       ]
      }
     },
     "ImageId": {
      "Ref": "SsmParameterValueawsserviceamiamazonlinuxlatestamznamihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter"
     },
     "InstanceType": "t2.micro",
     "Monitoring": {
      "Enabled": false
     },
     "SecurityGroupIds": [
      {
       "Fn::GetAtt": [
        "ASGInstanceSecurityGroup0525485D",
        "GroupId"
       ]
      }
     ],
     "TagSpecifications": [
      {
       "ResourceType": "instance",
       "Tags": [
        {
         "Key": "Name",
         "Value": "aws-cdk-autoscaling-instance-termination-policy/ASG/LaunchTemplate"
        }
       ]
      },
      {
       "ResourceType": "volume",
       "Tags": [
        {
         "Key": "Name",
         "Value": "aws-cdk-autoscaling-instance-termination-policy/ASG/LaunchTemplate"
        }
       ]
      }
     ],
     "UserData": {
      "Fn::Base64": "#!/bin/bash"
     }
    },
    "TagSpecifications": [
     {
      "ResourceType": "launch-template",
      "Tags": [
       {
        "Key": "Name",
        "Value": "aws-cdk-autoscaling-instance-termination-policy/ASG/LaunchTemplate"
       }
      ]
     }
    ]
   },
   "DependsOn": [
    "ASGInstanceRoleE263A41B",
    "MyFunctionAllowInvokeByAutoScalingE1D035DF",
    "MyFunction3BAA72D1",
    "MyFunctionServiceRole3C357FF2",
    "VPCIGWB7E252D3",
    "VPCIsolatedSubnet1RouteTableEB156210",
    "VPCIsolatedSubnet1RouteTableAssociationA2D18F7C",
    "VPCIsolatedSubnet1SubnetEBD00FC6",
    "VPCIsolatedSubnet2RouteTable9B4F78DC",
    "VPCIsolatedSubnet2RouteTableAssociation7BF8E0EB",
    "VPCIsolatedSubnet2Subnet4B1C8CAA",
    "VPCPublicSubnet1DefaultRoute91CEF279",
    "VPCPublicSubnet1RouteTableFEE4B781",
    "VPCPublicSubnet1RouteTableAssociation0B0896DC",
    "VPCPublicSubnet1SubnetB4246D30",
    "VPCPublicSubnet2DefaultRouteB7481BBA",
    "VPCPublicSubnet2RouteTable6F1A15F1",
    "VPCPublicSubnet2RouteTableAssociation5A808732",
    "VPCPublicSubnet2Subnet74179F39",
    "VPCB9E5F0B4",
    "VPCVPCGW99B986DC"
   ]
  },
  "ASG46ED3070": {
   "Type": "AWS::AutoScaling::AutoScalingGroup",
   "Properties": {
    "LaunchTemplate": {
     "LaunchTemplateId": {
      "Ref": "ASGLaunchTemplate0CA92847"
     },
     "Version": {
      "Fn::GetAtt": [
       "ASGLaunchTemplate0CA92847",
       "LatestVersionNumber"
      ]
     }
    },
    "MaxSize": "1",
    "MinSize": "1",
    "Tags": [
     {
      "Key": "Name",
      "PropagateAtLaunch": true,
      "Value": "aws-cdk-autoscaling-instance-termination-policy/ASG"
     }
    ],
    "TerminationPolicies": [
     {
      "Fn::GetAtt": [
       "MyFunction3BAA72D1",
       "Arn"
      ]
     },
     "OldestInstance"
    ],
    "VPCZoneIdentifier": [
     {
      "Ref": "VPCIsolatedSubnet1SubnetEBD00FC6"
     },
     {
      "Ref": "VPCIsolatedSubnet2Subnet4B1C8CAA"
     }
    ]
   },
   "DependsOn": [
    "MyFunctionAllowInvokeByAutoScalingE1D035DF",
    "MyFunction3BAA72D1",
    "MyFunctionServiceRole3C357FF2",
    "VPCIGWB7E252D3",
    "VPCIsolatedSubnet1RouteTableEB156210",
    "VPCIsolatedSubnet1RouteTableAssociationA2D18F7C",
    "VPCIsolatedSubnet1SubnetEBD00FC6",
    "VPCIsolatedSubnet2RouteTable9B4F78DC",
    "VPCIsolatedSubnet2RouteTableAssociation7BF8E0EB",
    "VPCIsolatedSubnet2Subnet4B1C8CAA",
    "VPCPublicSubnet1DefaultRoute91CEF279",
    "VPCPublicSubnet1RouteTableFEE4B781",
    "VPCPublicSubnet1RouteTableAssociation0B0896DC",
    "VPCPublicSubnet1SubnetB4246D30",
    "VPCPublicSubnet2DefaultRouteB7481BBA",
    "VPCPublicSubnet2RouteTable6F1A15F1",
    "VPCPublicSubnet2RouteTableAssociation5A808732",
    "VPCPublicSubnet2Subnet74179F39",
    "VPCB9E5F0B4",
    "VPCVPCGW99B986DC"
   ],
   "UpdatePolicy": {
    "AutoScalingScheduledAction": {
     "IgnoreUnmodifiedGroupSizeProperties": true
    }
   }
  }
 },
 "Parameters": {
  "SsmParameterValueawsserviceamiamazonlinuxlatestamznamihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter": {
   "Type": "AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>",
   "Default": "/aws/service/ami-amazon-linux-latest/amzn-ami-hvm-x86_64-gp2"
  },
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}