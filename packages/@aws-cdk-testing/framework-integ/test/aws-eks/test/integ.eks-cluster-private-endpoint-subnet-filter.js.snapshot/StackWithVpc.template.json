{
 "Resources": {
  "MyVpcF9F0CA6F": {
   "Type": "AWS::EC2::VPC",
   "Properties": {
    "CidrBlock": "10.0.0.0/16",
    "EnableDnsHostnames": true,
    "EnableDnsSupport": true,
    "InstanceTenancy": "default",
    "Tags": [
     {
      "Key": "Name",
      "Value": "my-vpc-name"
     }
    ]
   }
  },
  "MyVpcPublicSubnet1SubnetF6608456": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": "dummy1a",
    "CidrBlock": "10.0.0.0/19",
    "MapPublicIpOnLaunch": true,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Public"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Public"
     },
     {
      "Key": "Name",
      "Value": "StackWithVpc/MyVpc/PublicSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "MyVpcF9F0CA6F"
    }
   }
  },
  "MyVpcPublicSubnet1RouteTableC46AB2F4": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "StackWithVpc/MyVpc/PublicSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "MyVpcF9F0CA6F"
    }
   }
  },
  "MyVpcPublicSubnet1RouteTableAssociation2ECEE1CB": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "MyVpcPublicSubnet1RouteTableC46AB2F4"
    },
    "SubnetId": {
     "Ref": "MyVpcPublicSubnet1SubnetF6608456"
    }
   }
  },
  "MyVpcPublicSubnet1DefaultRoute95FDF9EB": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "GatewayId": {
     "Ref": "MyVpcIGW5C4A4F63"
    },
    "RouteTableId": {
     "Ref": "MyVpcPublicSubnet1RouteTableC46AB2F4"
    }
   },
   "DependsOn": [
    "MyVpcVPCGW488ACE0D"
   ]
  },
  "MyVpcPublicSubnet1EIP096967CB": {
   "Type": "AWS::EC2::EIP",
   "Properties": {
    "Domain": "vpc",
    "Tags": [
     {
      "Key": "Name",
      "Value": "StackWithVpc/MyVpc/PublicSubnet1"
     }
    ]
   }
  },
  "MyVpcPublicSubnet1NATGatewayAD3400C1": {
   "Type": "AWS::EC2::NatGateway",
   "Properties": {
    "AllocationId": {
     "Fn::GetAtt": [
      "MyVpcPublicSubnet1EIP096967CB",
      "AllocationId"
     ]
    },
    "SubnetId": {
     "Ref": "MyVpcPublicSubnet1SubnetF6608456"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "StackWithVpc/MyVpc/PublicSubnet1"
     }
    ]
   },
   "DependsOn": [
    "MyVpcPublicSubnet1DefaultRoute95FDF9EB",
    "MyVpcPublicSubnet1RouteTableAssociation2ECEE1CB"
   ]
  },
  "MyVpcPublicSubnet2Subnet492B6BFB": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": "dummy1b",
    "CidrBlock": "10.0.32.0/19",
    "MapPublicIpOnLaunch": true,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Public"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Public"
     },
     {
      "Key": "Name",
      "Value": "StackWithVpc/MyVpc/PublicSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "MyVpcF9F0CA6F"
    }
   }
  },
  "MyVpcPublicSubnet2RouteTable1DF17386": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "StackWithVpc/MyVpc/PublicSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "MyVpcF9F0CA6F"
    }
   }
  },
  "MyVpcPublicSubnet2RouteTableAssociation227DE78D": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "MyVpcPublicSubnet2RouteTable1DF17386"
    },
    "SubnetId": {
     "Ref": "MyVpcPublicSubnet2Subnet492B6BFB"
    }
   }
  },
  "MyVpcPublicSubnet2DefaultRoute052936F6": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "GatewayId": {
     "Ref": "MyVpcIGW5C4A4F63"
    },
    "RouteTableId": {
     "Ref": "MyVpcPublicSubnet2RouteTable1DF17386"
    }
   },
   "DependsOn": [
    "MyVpcVPCGW488ACE0D"
   ]
  },
  "MyVpcPublicSubnet2EIP8CCBA239": {
   "Type": "AWS::EC2::EIP",
   "Properties": {
    "Domain": "vpc",
    "Tags": [
     {
      "Key": "Name",
      "Value": "StackWithVpc/MyVpc/PublicSubnet2"
     }
    ]
   }
  },
  "MyVpcPublicSubnet2NATGateway91BFBEC9": {
   "Type": "AWS::EC2::NatGateway",
   "Properties": {
    "AllocationId": {
     "Fn::GetAtt": [
      "MyVpcPublicSubnet2EIP8CCBA239",
      "AllocationId"
     ]
    },
    "SubnetId": {
     "Ref": "MyVpcPublicSubnet2Subnet492B6BFB"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "StackWithVpc/MyVpc/PublicSubnet2"
     }
    ]
   },
   "DependsOn": [
    "MyVpcPublicSubnet2DefaultRoute052936F6",
    "MyVpcPublicSubnet2RouteTableAssociation227DE78D"
   ]
  },
  "MyVpcPublicSubnet3Subnet57EEE236": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": "dummy1c",
    "CidrBlock": "10.0.64.0/19",
    "MapPublicIpOnLaunch": true,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Public"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Public"
     },
     {
      "Key": "Name",
      "Value": "StackWithVpc/MyVpc/PublicSubnet3"
     }
    ],
    "VpcId": {
     "Ref": "MyVpcF9F0CA6F"
    }
   }
  },
  "MyVpcPublicSubnet3RouteTable15028F08": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "StackWithVpc/MyVpc/PublicSubnet3"
     }
    ],
    "VpcId": {
     "Ref": "MyVpcF9F0CA6F"
    }
   }
  },
  "MyVpcPublicSubnet3RouteTableAssociation5C27DDA4": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "MyVpcPublicSubnet3RouteTable15028F08"
    },
    "SubnetId": {
     "Ref": "MyVpcPublicSubnet3Subnet57EEE236"
    }
   }
  },
  "MyVpcPublicSubnet3DefaultRoute3A83AB36": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "GatewayId": {
     "Ref": "MyVpcIGW5C4A4F63"
    },
    "RouteTableId": {
     "Ref": "MyVpcPublicSubnet3RouteTable15028F08"
    }
   },
   "DependsOn": [
    "MyVpcVPCGW488ACE0D"
   ]
  },
  "MyVpcPublicSubnet3EIPC5ACADAB": {
   "Type": "AWS::EC2::EIP",
   "Properties": {
    "Domain": "vpc",
    "Tags": [
     {
      "Key": "Name",
      "Value": "StackWithVpc/MyVpc/PublicSubnet3"
     }
    ]
   }
  },
  "MyVpcPublicSubnet3NATGatewayD4B50EBE": {
   "Type": "AWS::EC2::NatGateway",
   "Properties": {
    "AllocationId": {
     "Fn::GetAtt": [
      "MyVpcPublicSubnet3EIPC5ACADAB",
      "AllocationId"
     ]
    },
    "SubnetId": {
     "Ref": "MyVpcPublicSubnet3Subnet57EEE236"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "StackWithVpc/MyVpc/PublicSubnet3"
     }
    ]
   },
   "DependsOn": [
    "MyVpcPublicSubnet3DefaultRoute3A83AB36",
    "MyVpcPublicSubnet3RouteTableAssociation5C27DDA4"
   ]
  },
  "MyVpcPrivateSubnet1Subnet5057CF7E": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": "dummy1a",
    "CidrBlock": "10.0.96.0/19",
    "MapPublicIpOnLaunch": false,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Private"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Private"
     },
     {
      "Key": "Name",
      "Value": "StackWithVpc/MyVpc/PrivateSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "MyVpcF9F0CA6F"
    }
   }
  },
  "MyVpcPrivateSubnet1RouteTable8819E6E2": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "StackWithVpc/MyVpc/PrivateSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "MyVpcF9F0CA6F"
    }
   }
  },
  "MyVpcPrivateSubnet1RouteTableAssociation56D38C7E": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "MyVpcPrivateSubnet1RouteTable8819E6E2"
    },
    "SubnetId": {
     "Ref": "MyVpcPrivateSubnet1Subnet5057CF7E"
    }
   }
  },
  "MyVpcPrivateSubnet1DefaultRouteA8CDE2FA": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "NatGatewayId": {
     "Ref": "MyVpcPublicSubnet1NATGatewayAD3400C1"
    },
    "RouteTableId": {
     "Ref": "MyVpcPrivateSubnet1RouteTable8819E6E2"
    }
   }
  },
  "MyVpcPrivateSubnet2Subnet0040C983": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": "dummy1b",
    "CidrBlock": "10.0.128.0/19",
    "MapPublicIpOnLaunch": false,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Private"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Private"
     },
     {
      "Key": "Name",
      "Value": "StackWithVpc/MyVpc/PrivateSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "MyVpcF9F0CA6F"
    }
   }
  },
  "MyVpcPrivateSubnet2RouteTableCEDCEECE": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "StackWithVpc/MyVpc/PrivateSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "MyVpcF9F0CA6F"
    }
   }
  },
  "MyVpcPrivateSubnet2RouteTableAssociation86A610DA": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "MyVpcPrivateSubnet2RouteTableCEDCEECE"
    },
    "SubnetId": {
     "Ref": "MyVpcPrivateSubnet2Subnet0040C983"
    }
   }
  },
  "MyVpcPrivateSubnet2DefaultRoute9CE96294": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "NatGatewayId": {
     "Ref": "MyVpcPublicSubnet2NATGateway91BFBEC9"
    },
    "RouteTableId": {
     "Ref": "MyVpcPrivateSubnet2RouteTableCEDCEECE"
    }
   }
  },
  "MyVpcPrivateSubnet3Subnet772D6AD7": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": "dummy1c",
    "CidrBlock": "10.0.160.0/19",
    "MapPublicIpOnLaunch": false,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Private"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Private"
     },
     {
      "Key": "Name",
      "Value": "StackWithVpc/MyVpc/PrivateSubnet3"
     }
    ],
    "VpcId": {
     "Ref": "MyVpcF9F0CA6F"
    }
   }
  },
  "MyVpcPrivateSubnet3RouteTableB790927C": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "StackWithVpc/MyVpc/PrivateSubnet3"
     }
    ],
    "VpcId": {
     "Ref": "MyVpcF9F0CA6F"
    }
   }
  },
  "MyVpcPrivateSubnet3RouteTableAssociationD951741C": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "MyVpcPrivateSubnet3RouteTableB790927C"
    },
    "SubnetId": {
     "Ref": "MyVpcPrivateSubnet3Subnet772D6AD7"
    }
   }
  },
  "MyVpcPrivateSubnet3DefaultRouteEC11C0C5": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "NatGatewayId": {
     "Ref": "MyVpcPublicSubnet3NATGatewayD4B50EBE"
    },
    "RouteTableId": {
     "Ref": "MyVpcPrivateSubnet3RouteTableB790927C"
    }
   }
  },
  "MyVpcIGW5C4A4F63": {
   "Type": "AWS::EC2::InternetGateway",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "my-vpc-name"
     }
    ]
   }
  },
  "MyVpcVPCGW488ACE0D": {
   "Type": "AWS::EC2::VPCGatewayAttachment",
   "Properties": {
    "InternetGatewayId": {
     "Ref": "MyVpcIGW5C4A4F63"
    },
    "VpcId": {
     "Ref": "MyVpcF9F0CA6F"
    }
   }
  },
  "AdminRole38563C57": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "AWS": "arn:aws:iam::123456:root"
       }
      }
     ],
     "Version": "2012-10-17"
    }
   }
  },
  "KubectlLayer600207B5": {
   "Type": "AWS::Lambda::LayerVersion",
   "Properties": {
    "Content": {
     "S3Bucket": "cdk-hnb659fds-assets-123456-eu-west-1",
     "S3Key": "c475180f5b1bbabac165414da13a9b843b111cd3b6d5fae9c954c006640c4064.zip"
    },
    "Description": "/opt/kubectl/kubectl 1.24; /opt/helm/helm 3.9",
    "LicenseInfo": "Apache-2.0"
   }
  },
  "ClusterKubectlHandlerRole94549F93": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     },
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/AmazonEC2ContainerRegistryReadOnly"
       ]
      ]
     },
     {
      "Fn::If": [
       "ClusterHasEcrPublic8EE1114E",
       {
        "Fn::Join": [
         "",
         [
          "arn:",
          {
           "Ref": "AWS::Partition"
          },
          ":iam::aws:policy/AmazonElasticContainerRegistryPublicReadOnly"
         ]
        ]
       },
       {
        "Ref": "AWS::NoValue"
       }
      ]
     }
    ]
   }
  },
  "ClusterKubectlHandlerRoleDefaultPolicyE44083DD": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "eks:DescribeCluster",
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "Cluster9EE0221C",
         "Arn"
        ]
       }
      },
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "ClusterCreationRole360249B6",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "ClusterKubectlHandlerRoleDefaultPolicyE44083DD",
    "Roles": [
     {
      "Ref": "ClusterKubectlHandlerRole94549F93"
     }
    ]
   }
  },
  "ClusterRoleFA261979": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "eks.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/AmazonEKSClusterPolicy"
       ]
      ]
     }
    ]
   }
  },
  "ClusterControlPlaneSecurityGroupD274242C": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "EKS Control Plane Security Group",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "VpcId": "vpc-12345"
   }
  },
  "ClusterCreationRole360249B6": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "AWS": [
         {
          "Fn::GetAtt": [
           "ClusterKubectlHandlerRole94549F93",
           "Arn"
          ]
         },
         {
          "Fn::GetAtt": [
           "awscdkawseksClusterResourceProviderNestedStackawscdkawseksClusterResourceProviderNestedStackResource9827C454",
           "Outputs.StackWithVpcawscdkawseksClusterResourceProviderIsCompleteHandlerServiceRole7AA42F62Arn"
          ]
         },
         {
          "Fn::GetAtt": [
           "awscdkawseksClusterResourceProviderNestedStackawscdkawseksClusterResourceProviderNestedStackResource9827C454",
           "Outputs.StackWithVpcawscdkawseksClusterResourceProviderOnEventHandlerServiceRole2C2C2EAAArn"
          ]
         }
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    }
   }
  },
  "ClusterCreationRoleDefaultPolicyE8BDFC7B": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "iam:PassRole",
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "ClusterRoleFA261979",
         "Arn"
        ]
       }
      },
      {
       "Action": [
        "eks:CreateCluster",
        "eks:CreateFargateProfile",
        "eks:DeleteCluster",
        "eks:DescribeCluster",
        "eks:DescribeUpdate",
        "eks:TagResource",
        "eks:UntagResource",
        "eks:UpdateClusterConfig",
        "eks:UpdateClusterVersion"
       ],
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": [
        "eks:DeleteFargateProfile",
        "eks:DescribeFargateProfile"
       ],
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": [
        "ec2:DescribeDhcpOptions",
        "ec2:DescribeInstances",
        "ec2:DescribeNetworkInterfaces",
        "ec2:DescribeRouteTables",
        "ec2:DescribeSecurityGroups",
        "ec2:DescribeSubnets",
        "ec2:DescribeVpcs",
        "iam:CreateServiceLinkedRole",
        "iam:GetRole",
        "iam:listAttachedRolePolicies"
       ],
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "ClusterCreationRoleDefaultPolicyE8BDFC7B",
    "Roles": [
     {
      "Ref": "ClusterCreationRole360249B6"
     }
    ]
   }
  },
  "Cluster9EE0221C": {
   "Type": "Custom::AWSCDK-EKS-Cluster",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "awscdkawseksClusterResourceProviderNestedStackawscdkawseksClusterResourceProviderNestedStackResource9827C454",
      "Outputs.StackWithVpcawscdkawseksClusterResourceProviderframeworkonEvent5D5BC046Arn"
     ]
    },
    "Config": {
     "version": "1.24",
     "roleArn": {
      "Fn::GetAtt": [
       "ClusterRoleFA261979",
       "Arn"
      ]
     },
     "kubernetesNetworkConfig": {
      "ipFamily": "ipv4"
     },
     "resourcesVpcConfig": {
      "subnetIds": [],
      "securityGroupIds": [
       {
        "Fn::GetAtt": [
         "ClusterControlPlaneSecurityGroupD274242C",
         "GroupId"
        ]
       }
      ],
      "endpointPublicAccess": false,
      "endpointPrivateAccess": true
     },
     "accessConfig": {}
    },
    "AssumeRoleArn": {
     "Fn::GetAtt": [
      "ClusterCreationRole360249B6",
      "Arn"
     ]
    },
    "AttributesRevision": 4
   },
   "DependsOn": [
    "ClusterCreationRoleDefaultPolicyE8BDFC7B",
    "ClusterCreationRole360249B6"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  },
  "ClusterKubectlReadyBarrier200052AF": {
   "Type": "AWS::SSM::Parameter",
   "Properties": {
    "Type": "String",
    "Value": "aws:cdk:eks:kubectl-ready"
   },
   "DependsOn": [
    "ClusterCreationRoleDefaultPolicyE8BDFC7B",
    "ClusterCreationRole360249B6",
    "Cluster9EE0221C"
   ]
  },
  "ClusterAwsAuthmanifestFE51F8AE": {
   "Type": "Custom::AWSCDK-EKS-KubernetesResource",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B",
      "Outputs.StackWithVpcawscdkawseksKubectlProviderframeworkonEvent883E2AFBArn"
     ]
    },
    "Manifest": {
     "Fn::Join": [
      "",
      [
       "[{\"apiVersion\":\"v1\",\"kind\":\"ConfigMap\",\"metadata\":{\"name\":\"aws-auth\",\"namespace\":\"kube-system\"},\"data\":{\"mapRoles\":\"[{\\\"rolearn\\\":\\\"",
       {
        "Fn::GetAtt": [
         "AdminRole38563C57",
         "Arn"
        ]
       },
       "\\\",\\\"username\\\":\\\"",
       {
        "Fn::GetAtt": [
         "AdminRole38563C57",
         "Arn"
        ]
       },
       "\\\",\\\"groups\\\":[\\\"system:masters\\\"]},{\\\"rolearn\\\":\\\"",
       {
        "Fn::GetAtt": [
         "ClusterNodegroupDefaultCapacityNodeGroupRole55953B04",
         "Arn"
        ]
       },
       "\\\",\\\"username\\\":\\\"system:node:{{EC2PrivateDNSName}}\\\",\\\"groups\\\":[\\\"system:bootstrappers\\\",\\\"system:nodes\\\"]}]\",\"mapUsers\":\"[]\",\"mapAccounts\":\"[]\"}}]"
      ]
     ]
    },
    "ClusterName": {
     "Ref": "Cluster9EE0221C"
    },
    "RoleArn": {
     "Fn::GetAtt": [
      "ClusterCreationRole360249B6",
      "Arn"
     ]
    },
    "Overwrite": true
   },
   "DependsOn": [
    "ClusterKubectlReadyBarrier200052AF"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  },
  "ClusterNodegroupDefaultCapacityNodeGroupRole55953B04": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "ec2.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/AmazonEKSWorkerNodePolicy"
       ]
      ]
     },
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/AmazonEKS_CNI_Policy"
       ]
      ]
     },
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/AmazonEC2ContainerRegistryReadOnly"
       ]
      ]
     }
    ]
   }
  },
  "ClusterNodegroupDefaultCapacityDA0920A3": {
   "Type": "AWS::EKS::Nodegroup",
   "Properties": {
    "AmiType": "AL2_x86_64",
    "ClusterName": {
     "Ref": "Cluster9EE0221C"
    },
    "ForceUpdateEnabled": true,
    "InstanceTypes": [
     "m5.large"
    ],
    "NodeRole": {
     "Fn::GetAtt": [
      "ClusterNodegroupDefaultCapacityNodeGroupRole55953B04",
      "Arn"
     ]
    },
    "ScalingConfig": {
     "DesiredSize": 2,
     "MaxSize": 2,
     "MinSize": 2
    },
    "Subnets": [
     "p-12345",
     "p-67890"
    ]
   }
  },
  "awscdkawseksClusterResourceProviderNestedStackawscdkawseksClusterResourceProviderNestedStackResource9827C454": {
   "Type": "AWS::CloudFormation::Stack",
   "Properties": {
    "TemplateURL": {
     "Fn::Join": [
      "",
      [
       "https://s3.eu-west-1.",
       {
        "Ref": "AWS::URLSuffix"
       },
       "/cdk-hnb659fds-assets-123456-eu-west-1/a5a3dddbb3821d1a21dcf89b50049c1e27a0a6d0306320344ce9081932803ae1.json"
      ]
     ]
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  },
  "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B": {
   "Type": "AWS::CloudFormation::Stack",
   "Properties": {
    "Parameters": {
     "referencetoStackWithVpcKubectlLayer8B0FF754Ref": {
      "Ref": "KubectlLayer600207B5"
     },
     "referencetoStackWithVpcClusterKubectlHandlerRole05F67B71Arn": {
      "Fn::GetAtt": [
       "ClusterKubectlHandlerRole94549F93",
       "Arn"
      ]
     }
    },
    "TemplateURL": {
     "Fn::Join": [
      "",
      [
       "https://s3.eu-west-1.",
       {
        "Ref": "AWS::URLSuffix"
       },
       "/cdk-hnb659fds-assets-123456-eu-west-1/7fbf928b8b560071c77803b506678b4f0136b904a865e301adb576117b33a9c5.json"
      ]
     ]
    }
   },
   "DependsOn": [
    "ClusterKubectlHandlerRoleDefaultPolicyE44083DD",
    "ClusterKubectlHandlerRole94549F93"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  }
 },
 "Conditions": {
  "ClusterHasEcrPublic8EE1114E": {
   "Fn::Equals": [
    {
     "Ref": "AWS::Partition"
    },
    "aws"
   ]
  }
 },
 "Outputs": {
  "ClusterConfigCommand43AAE40F": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "aws eks update-kubeconfig --name ",
      {
       "Ref": "Cluster9EE0221C"
      },
      " --region eu-west-1 --role-arn ",
      {
       "Fn::GetAtt": [
        "AdminRole38563C57",
        "Arn"
       ]
      }
     ]
    ]
   }
  },
  "ClusterGetTokenCommand06AE992E": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "aws eks get-token --cluster-name ",
      {
       "Ref": "Cluster9EE0221C"
      },
      " --region eu-west-1 --role-arn ",
      {
       "Fn::GetAtt": [
        "AdminRole38563C57",
        "Arn"
       ]
      }
     ]
    ]
   }
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}