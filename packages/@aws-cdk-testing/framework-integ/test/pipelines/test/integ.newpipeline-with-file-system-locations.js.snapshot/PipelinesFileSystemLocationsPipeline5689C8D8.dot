digraph G {
  # Arrows represent an "unlocks" relationship (opposite of dependency). So chosen
  # because the layout looks more natural that way.
  # To represent subgraph dependencies, subgraphs are represented by BEGIN/END nodes.
  # To render: `dot -Tsvg PipelinesFileSystemLocationsPipeline5689C8D8.dot > graph.svg`, open in a browser.
  node [shape="box"];
"BEGIN Build" [shape="cds", style="filled", fillcolor="#b7deff"];
"END Build" [shape="cds", style="filled", fillcolor="#b7deff"];
"Build.Synth";
"Source.c81125c577cddc5477d274144695873cfd8965e6a0" -> "Build.Synth";
"BEGIN Build" -> "Build.Synth";
"Build.Synth" -> "END Build";
"BEGIN Assets" [shape="cds", style="filled", fillcolor="#b7deff"];
"END Assets" [shape="cds", style="filled", fillcolor="#b7deff"];
"Assets.FileAsset1";
"Build.Synth" -> "Assets.FileAsset1";
"BEGIN Assets" -> "Assets.FileAsset1";
"Assets.FileAsset1" -> "END Assets";
"BEGIN Beta" [shape="cds", style="filled", fillcolor="#b7deff"];
"END Beta" [shape="cds", style="filled", fillcolor="#b7deff"];
"Build.Synth" -> "BEGIN Beta";
"BEGIN Beta.Stack1" [shape="cds", style="filled", fillcolor="#b7deff"];
"END Beta.Stack1" [shape="cds", style="filled", fillcolor="#b7deff"];
"Beta.Stack1.Deploy";
"Build.Synth" -> "Beta.Stack1.Deploy";
"Assets.FileAsset1" -> "Beta.Stack1.Deploy";
"BEGIN Beta.Stack1" -> "Beta.Stack1.Deploy";
"Beta.Stack1.Deploy" -> "END Beta.Stack1";
"BEGIN Beta" -> "BEGIN Beta.Stack1";
"END Beta.Stack1" -> "END Beta";
"BEGIN Source" [shape="cds", style="filled", fillcolor="#b7deff"];
"END Source" [shape="cds", style="filled", fillcolor="#b7deff"];
"Source.c81125c577cddc5477d274144695873cfd8965e6a0";
"BEGIN Source" -> "Source.c81125c577cddc5477d274144695873cfd8965e6a0";
"Source.c81125c577cddc5477d274144695873cfd8965e6a0" -> "END Source";
}