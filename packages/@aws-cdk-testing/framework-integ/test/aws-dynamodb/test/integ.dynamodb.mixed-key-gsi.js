"use strict";
/**
 * This aimes to verify we can deploy a DynamoDB table with an attribute being
 * a key attribute in one GSI, and a non-key attribute in another.
 *
 * See https://github.com/aws/aws-cdk/issues/4398
 */
Object.defineProperty(exports, "__esModule", { value: true });
const aws_cdk_lib_1 = require("aws-cdk-lib");
const aws_dynamodb_1 = require("aws-cdk-lib/aws-dynamodb");
const app = new aws_cdk_lib_1.App();
const stack = new aws_cdk_lib_1.Stack(app, 'aws-cdk-dynamodb-gsi');
const table = new aws_dynamodb_1.Table(stack, 'Table', {
    partitionKey: { name: 'pkey', type: aws_dynamodb_1.AttributeType.NUMBER },
    removalPolicy: aws_cdk_lib_1.RemovalPolicy.DESTROY,
});
table.addGlobalSecondaryIndex({
    indexName: 'IndexA',
    partitionKey: { name: 'foo', type: aws_dynamodb_1.AttributeType.STRING },
    projectionType: aws_dynamodb_1.ProjectionType.INCLUDE,
    nonKeyAttributes: ['bar'],
});
table.addGlobalSecondaryIndex({
    indexName: 'IndexB',
    partitionKey: { name: 'baz', type: aws_dynamodb_1.AttributeType.STRING },
    sortKey: { name: 'bar', type: aws_dynamodb_1.AttributeType.STRING },
    projectionType: aws_dynamodb_1.ProjectionType.INCLUDE,
    nonKeyAttributes: ['blah'],
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW50ZWcuZHluYW1vZGIubWl4ZWQta2V5LWdzaS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbImludGVnLmR5bmFtb2RiLm1peGVkLWtleS1nc2kudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBOzs7OztHQUtHOztBQUVILDZDQUF3RDtBQUN4RCwyREFBZ0Y7QUFFaEYsTUFBTSxHQUFHLEdBQUcsSUFBSSxpQkFBRyxFQUFFLENBQUM7QUFDdEIsTUFBTSxLQUFLLEdBQUcsSUFBSSxtQkFBSyxDQUFDLEdBQUcsRUFBRSxzQkFBc0IsQ0FBQyxDQUFDO0FBRXJELE1BQU0sS0FBSyxHQUFHLElBQUksb0JBQUssQ0FBQyxLQUFLLEVBQUUsT0FBTyxFQUFFO0lBQ3RDLFlBQVksRUFBRSxFQUFFLElBQUksRUFBRSxNQUFNLEVBQUUsSUFBSSxFQUFFLDRCQUFhLENBQUMsTUFBTSxFQUFFO0lBQzFELGFBQWEsRUFBRSwyQkFBYSxDQUFDLE9BQU87Q0FDckMsQ0FBQyxDQUFDO0FBRUgsS0FBSyxDQUFDLHVCQUF1QixDQUFDO0lBQzVCLFNBQVMsRUFBRSxRQUFRO0lBQ25CLFlBQVksRUFBRSxFQUFFLElBQUksRUFBRSxLQUFLLEVBQUUsSUFBSSxFQUFFLDRCQUFhLENBQUMsTUFBTSxFQUFFO0lBQ3pELGNBQWMsRUFBRSw2QkFBYyxDQUFDLE9BQU87SUFDdEMsZ0JBQWdCLEVBQUUsQ0FBQyxLQUFLLENBQUM7Q0FDMUIsQ0FBQyxDQUFDO0FBRUgsS0FBSyxDQUFDLHVCQUF1QixDQUFDO0lBQzVCLFNBQVMsRUFBRSxRQUFRO0lBQ25CLFlBQVksRUFBRSxFQUFFLElBQUksRUFBRSxLQUFLLEVBQUUsSUFBSSxFQUFFLDRCQUFhLENBQUMsTUFBTSxFQUFFO0lBQ3pELE9BQU8sRUFBRSxFQUFFLElBQUksRUFBRSxLQUFLLEVBQUUsSUFBSSxFQUFFLDRCQUFhLENBQUMsTUFBTSxFQUFFO0lBQ3BELGNBQWMsRUFBRSw2QkFBYyxDQUFDLE9BQU87SUFDdEMsZ0JBQWdCLEVBQUUsQ0FBQyxNQUFNLENBQUM7Q0FDM0IsQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBUaGlzIGFpbWVzIHRvIHZlcmlmeSB3ZSBjYW4gZGVwbG95IGEgRHluYW1vREIgdGFibGUgd2l0aCBhbiBhdHRyaWJ1dGUgYmVpbmdcbiAqIGEga2V5IGF0dHJpYnV0ZSBpbiBvbmUgR1NJLCBhbmQgYSBub24ta2V5IGF0dHJpYnV0ZSBpbiBhbm90aGVyLlxuICpcbiAqIFNlZSBodHRwczovL2dpdGh1Yi5jb20vYXdzL2F3cy1jZGsvaXNzdWVzLzQzOThcbiAqL1xuXG5pbXBvcnQgeyBBcHAsIFJlbW92YWxQb2xpY3ksIFN0YWNrIH0gZnJvbSAnYXdzLWNkay1saWInO1xuaW1wb3J0IHsgQXR0cmlidXRlVHlwZSwgUHJvamVjdGlvblR5cGUsIFRhYmxlIH0gZnJvbSAnYXdzLWNkay1saWIvYXdzLWR5bmFtb2RiJztcblxuY29uc3QgYXBwID0gbmV3IEFwcCgpO1xuY29uc3Qgc3RhY2sgPSBuZXcgU3RhY2soYXBwLCAnYXdzLWNkay1keW5hbW9kYi1nc2knKTtcblxuY29uc3QgdGFibGUgPSBuZXcgVGFibGUoc3RhY2ssICdUYWJsZScsIHtcbiAgcGFydGl0aW9uS2V5OiB7IG5hbWU6ICdwa2V5JywgdHlwZTogQXR0cmlidXRlVHlwZS5OVU1CRVIgfSxcbiAgcmVtb3ZhbFBvbGljeTogUmVtb3ZhbFBvbGljeS5ERVNUUk9ZLFxufSk7XG5cbnRhYmxlLmFkZEdsb2JhbFNlY29uZGFyeUluZGV4KHtcbiAgaW5kZXhOYW1lOiAnSW5kZXhBJyxcbiAgcGFydGl0aW9uS2V5OiB7IG5hbWU6ICdmb28nLCB0eXBlOiBBdHRyaWJ1dGVUeXBlLlNUUklORyB9LFxuICBwcm9qZWN0aW9uVHlwZTogUHJvamVjdGlvblR5cGUuSU5DTFVERSxcbiAgbm9uS2V5QXR0cmlidXRlczogWydiYXInXSxcbn0pO1xuXG50YWJsZS5hZGRHbG9iYWxTZWNvbmRhcnlJbmRleCh7XG4gIGluZGV4TmFtZTogJ0luZGV4QicsXG4gIHBhcnRpdGlvbktleTogeyBuYW1lOiAnYmF6JywgdHlwZTogQXR0cmlidXRlVHlwZS5TVFJJTkcgfSxcbiAgc29ydEtleTogeyBuYW1lOiAnYmFyJywgdHlwZTogQXR0cmlidXRlVHlwZS5TVFJJTkcgfSxcbiAgcHJvamVjdGlvblR5cGU6IFByb2plY3Rpb25UeXBlLklOQ0xVREUsXG4gIG5vbktleUF0dHJpYnV0ZXM6IFsnYmxhaCddLFxufSk7XG4iXX0=