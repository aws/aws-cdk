{
 "Resources": {
  "HostedZoneDB99F866": {
   "Type": "AWS::Route53::HostedZone",
   "Properties": {
    "Name": "uniqueexample.com."
   }
  },
  "TheVPC92636AB0": {
   "Type": "AWS::EC2::VPC",
   "Properties": {
    "CidrBlock": "10.0.0.0/16",
    "EnableDnsHostnames": true,
    "EnableDnsSupport": true,
    "InstanceTenancy": "default",
    "Tags": [
     {
      "Key": "Name",
      "Value": "parent-stack/TheVPC"
     }
    ]
   }
  },
  "TheVPCPublicSubnet1Subnet770D4FF2": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": "us-east-1a",
    "CidrBlock": "10.0.0.0/19",
    "MapPublicIpOnLaunch": true,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Public"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Public"
     },
     {
      "Key": "Name",
      "Value": "parent-stack/TheVPC/PublicSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "TheVPC92636AB0"
    }
   }
  },
  "TheVPCPublicSubnet1RouteTable17DA183D": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "parent-stack/TheVPC/PublicSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "TheVPC92636AB0"
    }
   }
  },
  "TheVPCPublicSubnet1RouteTableAssociationE5186D77": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "TheVPCPublicSubnet1RouteTable17DA183D"
    },
    "SubnetId": {
     "Ref": "TheVPCPublicSubnet1Subnet770D4FF2"
    }
   }
  },
  "TheVPCPublicSubnet1DefaultRoute6D26543F": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "GatewayId": {
     "Ref": "TheVPCIGWFA25CC08"
    },
    "RouteTableId": {
     "Ref": "TheVPCPublicSubnet1RouteTable17DA183D"
    }
   },
   "DependsOn": [
    "TheVPCVPCGWC9B93E30"
   ]
  },
  "TheVPCPublicSubnet1EIP4412F690": {
   "Type": "AWS::EC2::EIP",
   "Properties": {
    "Domain": "vpc",
    "Tags": [
     {
      "Key": "Name",
      "Value": "parent-stack/TheVPC/PublicSubnet1"
     }
    ]
   }
  },
  "TheVPCPublicSubnet1NATGatewayC61D892B": {
   "Type": "AWS::EC2::NatGateway",
   "Properties": {
    "AllocationId": {
     "Fn::GetAtt": [
      "TheVPCPublicSubnet1EIP4412F690",
      "AllocationId"
     ]
    },
    "SubnetId": {
     "Ref": "TheVPCPublicSubnet1Subnet770D4FF2"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "parent-stack/TheVPC/PublicSubnet1"
     }
    ]
   },
   "DependsOn": [
    "TheVPCPublicSubnet1DefaultRoute6D26543F",
    "TheVPCPublicSubnet1RouteTableAssociationE5186D77"
   ]
  },
  "TheVPCPublicSubnet2Subnet73F96DA9": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": "us-east-1b",
    "CidrBlock": "10.0.32.0/19",
    "MapPublicIpOnLaunch": true,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Public"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Public"
     },
     {
      "Key": "Name",
      "Value": "parent-stack/TheVPC/PublicSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "TheVPC92636AB0"
    }
   }
  },
  "TheVPCPublicSubnet2RouteTable3609F42C": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "parent-stack/TheVPC/PublicSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "TheVPC92636AB0"
    }
   }
  },
  "TheVPCPublicSubnet2RouteTableAssociationB4B0A733": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "TheVPCPublicSubnet2RouteTable3609F42C"
    },
    "SubnetId": {
     "Ref": "TheVPCPublicSubnet2Subnet73F96DA9"
    }
   }
  },
  "TheVPCPublicSubnet2DefaultRouteFEB062B2": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "GatewayId": {
     "Ref": "TheVPCIGWFA25CC08"
    },
    "RouteTableId": {
     "Ref": "TheVPCPublicSubnet2RouteTable3609F42C"
    }
   },
   "DependsOn": [
    "TheVPCVPCGWC9B93E30"
   ]
  },
  "TheVPCPublicSubnet2EIP5AAFF9FA": {
   "Type": "AWS::EC2::EIP",
   "Properties": {
    "Domain": "vpc",
    "Tags": [
     {
      "Key": "Name",
      "Value": "parent-stack/TheVPC/PublicSubnet2"
     }
    ]
   }
  },
  "TheVPCPublicSubnet2NATGatewayB437CFAF": {
   "Type": "AWS::EC2::NatGateway",
   "Properties": {
    "AllocationId": {
     "Fn::GetAtt": [
      "TheVPCPublicSubnet2EIP5AAFF9FA",
      "AllocationId"
     ]
    },
    "SubnetId": {
     "Ref": "TheVPCPublicSubnet2Subnet73F96DA9"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "parent-stack/TheVPC/PublicSubnet2"
     }
    ]
   },
   "DependsOn": [
    "TheVPCPublicSubnet2DefaultRouteFEB062B2",
    "TheVPCPublicSubnet2RouteTableAssociationB4B0A733"
   ]
  },
  "TheVPCPublicSubnet3Subnet7C1E748F": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": "us-east-1c",
    "CidrBlock": "10.0.64.0/19",
    "MapPublicIpOnLaunch": true,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Public"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Public"
     },
     {
      "Key": "Name",
      "Value": "parent-stack/TheVPC/PublicSubnet3"
     }
    ],
    "VpcId": {
     "Ref": "TheVPC92636AB0"
    }
   }
  },
  "TheVPCPublicSubnet3RouteTable679ADB47": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "parent-stack/TheVPC/PublicSubnet3"
     }
    ],
    "VpcId": {
     "Ref": "TheVPC92636AB0"
    }
   }
  },
  "TheVPCPublicSubnet3RouteTableAssociationACA3F606": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "TheVPCPublicSubnet3RouteTable679ADB47"
    },
    "SubnetId": {
     "Ref": "TheVPCPublicSubnet3Subnet7C1E748F"
    }
   }
  },
  "TheVPCPublicSubnet3DefaultRoute326CE968": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "GatewayId": {
     "Ref": "TheVPCIGWFA25CC08"
    },
    "RouteTableId": {
     "Ref": "TheVPCPublicSubnet3RouteTable679ADB47"
    }
   },
   "DependsOn": [
    "TheVPCVPCGWC9B93E30"
   ]
  },
  "TheVPCPublicSubnet3EIPE3930834": {
   "Type": "AWS::EC2::EIP",
   "Properties": {
    "Domain": "vpc",
    "Tags": [
     {
      "Key": "Name",
      "Value": "parent-stack/TheVPC/PublicSubnet3"
     }
    ]
   }
  },
  "TheVPCPublicSubnet3NATGateway3A4A718F": {
   "Type": "AWS::EC2::NatGateway",
   "Properties": {
    "AllocationId": {
     "Fn::GetAtt": [
      "TheVPCPublicSubnet3EIPE3930834",
      "AllocationId"
     ]
    },
    "SubnetId": {
     "Ref": "TheVPCPublicSubnet3Subnet7C1E748F"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "parent-stack/TheVPC/PublicSubnet3"
     }
    ]
   },
   "DependsOn": [
    "TheVPCPublicSubnet3DefaultRoute326CE968",
    "TheVPCPublicSubnet3RouteTableAssociationACA3F606"
   ]
  },
  "TheVPCPrivateSubnet1Subnet571D3690": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": "us-east-1a",
    "CidrBlock": "10.0.96.0/19",
    "MapPublicIpOnLaunch": false,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Private"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Private"
     },
     {
      "Key": "Name",
      "Value": "parent-stack/TheVPC/PrivateSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "TheVPC92636AB0"
    }
   }
  },
  "TheVPCPrivateSubnet1RouteTableF6513BC2": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "parent-stack/TheVPC/PrivateSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "TheVPC92636AB0"
    }
   }
  },
  "TheVPCPrivateSubnet1RouteTableAssociation46F1FFFC": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "TheVPCPrivateSubnet1RouteTableF6513BC2"
    },
    "SubnetId": {
     "Ref": "TheVPCPrivateSubnet1Subnet571D3690"
    }
   }
  },
  "TheVPCPrivateSubnet1DefaultRouteD1B9E467": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "NatGatewayId": {
     "Ref": "TheVPCPublicSubnet1NATGatewayC61D892B"
    },
    "RouteTableId": {
     "Ref": "TheVPCPrivateSubnet1RouteTableF6513BC2"
    }
   }
  },
  "TheVPCPrivateSubnet2SubnetCC3D7013": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": "us-east-1b",
    "CidrBlock": "10.0.128.0/19",
    "MapPublicIpOnLaunch": false,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Private"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Private"
     },
     {
      "Key": "Name",
      "Value": "parent-stack/TheVPC/PrivateSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "TheVPC92636AB0"
    }
   }
  },
  "TheVPCPrivateSubnet2RouteTable9AC81FAC": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "parent-stack/TheVPC/PrivateSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "TheVPC92636AB0"
    }
   }
  },
  "TheVPCPrivateSubnet2RouteTableAssociation336D47D1": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "TheVPCPrivateSubnet2RouteTable9AC81FAC"
    },
    "SubnetId": {
     "Ref": "TheVPCPrivateSubnet2SubnetCC3D7013"
    }
   }
  },
  "TheVPCPrivateSubnet2DefaultRoute52A1F245": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "NatGatewayId": {
     "Ref": "TheVPCPublicSubnet2NATGatewayB437CFAF"
    },
    "RouteTableId": {
     "Ref": "TheVPCPrivateSubnet2RouteTable9AC81FAC"
    }
   }
  },
  "TheVPCPrivateSubnet3Subnet69CC2C6F": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": "us-east-1c",
    "CidrBlock": "10.0.160.0/19",
    "MapPublicIpOnLaunch": false,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Private"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Private"
     },
     {
      "Key": "Name",
      "Value": "parent-stack/TheVPC/PrivateSubnet3"
     }
    ],
    "VpcId": {
     "Ref": "TheVPC92636AB0"
    }
   }
  },
  "TheVPCPrivateSubnet3RouteTable1A0D1274": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "parent-stack/TheVPC/PrivateSubnet3"
     }
    ],
    "VpcId": {
     "Ref": "TheVPC92636AB0"
    }
   }
  },
  "TheVPCPrivateSubnet3RouteTableAssociation50EE5E34": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "TheVPCPrivateSubnet3RouteTable1A0D1274"
    },
    "SubnetId": {
     "Ref": "TheVPCPrivateSubnet3Subnet69CC2C6F"
    }
   }
  },
  "TheVPCPrivateSubnet3DefaultRoute990F9A2A": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "NatGatewayId": {
     "Ref": "TheVPCPublicSubnet3NATGateway3A4A718F"
    },
    "RouteTableId": {
     "Ref": "TheVPCPrivateSubnet3RouteTable1A0D1274"
    }
   }
  },
  "TheVPCIGWFA25CC08": {
   "Type": "AWS::EC2::InternetGateway",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "parent-stack/TheVPC"
     }
    ]
   }
  },
  "TheVPCVPCGWC9B93E30": {
   "Type": "AWS::EC2::VPCGatewayAttachment",
   "Properties": {
    "InternetGatewayId": {
     "Ref": "TheVPCIGWFA25CC08"
    },
    "VpcId": {
     "Ref": "TheVPC92636AB0"
    }
   }
  },
  "TheVPCRestrictDefaultSecurityGroupCustomResourceAFA88FCE": {
   "Type": "Custom::VpcRestrictDefaultSG",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "CustomVpcRestrictDefaultSGCustomResourceProviderHandlerDC833E5E",
      "Arn"
     ]
    },
    "DefaultSecurityGroupId": {
     "Fn::GetAtt": [
      "TheVPC92636AB0",
      "DefaultSecurityGroup"
     ]
    },
    "Account": "12345678"
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  },
  "CustomVpcRestrictDefaultSGCustomResourceProviderRole26592FE0": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Version": "2012-10-17",
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ]
    },
    "ManagedPolicyArns": [
     {
      "Fn::Sub": "arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
     }
    ],
    "Policies": [
     {
      "PolicyName": "Inline",
      "PolicyDocument": {
       "Version": "2012-10-17",
       "Statement": [
        {
         "Effect": "Allow",
         "Action": [
          "ec2:AuthorizeSecurityGroupIngress",
          "ec2:AuthorizeSecurityGroupEgress",
          "ec2:RevokeSecurityGroupIngress",
          "ec2:RevokeSecurityGroupEgress"
         ],
         "Resource": [
          {
           "Fn::Join": [
            "",
            [
             "arn:aws:ec2:us-east-1:12345678:security-group/",
             {
              "Fn::GetAtt": [
               "TheVPC92636AB0",
               "DefaultSecurityGroup"
              ]
             }
            ]
           ]
          }
         ]
        }
       ]
      }
     }
    ]
   }
  },
  "CustomVpcRestrictDefaultSGCustomResourceProviderHandlerDC833E5E": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-12345678-us-east-1",
     "S3Key": "bde7b5c89cb43285f884c94f0b9e17cdb0f5eb5345005114dd60342e0b8a85a1.zip"
    },
    "Timeout": 900,
    "MemorySize": 128,
    "Handler": "__entrypoint__.handler",
    "Role": {
     "Fn::GetAtt": [
      "CustomVpcRestrictDefaultSGCustomResourceProviderRole26592FE0",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x",
    "Description": "Lambda function for removing all inbound/outbound rules from the VPC default security group"
   },
   "DependsOn": [
    "CustomVpcRestrictDefaultSGCustomResourceProviderRole26592FE0"
   ]
  },
  "PrivateHostedZone6354E1BB": {
   "Type": "AWS::Route53::HostedZone",
   "Properties": {
    "Name": "uniqueexample.com.",
    "VPCs": [
     {
      "VPCId": {
       "Ref": "TheVPC92636AB0"
      },
      "VPCRegion": "us-east-1"
     }
    ]
   }
  },
  "CrossAccountRoleFACE29D1": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "AWS": "arn:aws:iam::234567890123:root"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "RoleName": "MyUniqueDelegationRole"
   }
  },
  "CrossAccountRoleDefaultPolicy212A317F": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "route53:ChangeResourceRecordSets",
       "Condition": {
        "ForAllValues:StringEquals": {
         "route53:ChangeResourceRecordSetsRecordTypes": [
          "NS"
         ],
         "route53:ChangeResourceRecordSetsActions": [
          "UPSERT",
          "DELETE"
         ]
        }
       },
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:aws:route53:::hostedzone/",
          {
           "Ref": "HostedZoneDB99F866"
          }
         ]
        ]
       }
      },
      {
       "Action": "route53:ListHostedZonesByName",
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "CrossAccountRoleDefaultPolicy212A317F",
    "Roles": [
     {
      "Ref": "CrossAccountRoleFACE29D1"
     }
    ]
   }
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}