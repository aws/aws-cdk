{
  "version": "44.0.0",
  "artifacts": {
    "parent-stack.assets": {
      "type": "cdk:asset-manifest",
      "properties": {
        "file": "parent-stack.assets.json",
        "requiresBootstrapStackVersion": 6,
        "bootstrapStackVersionSsmParameter": "/cdk-bootstrap/hnb659fds/version"
      }
    },
    "parent-stack": {
      "type": "aws:cloudformation:stack",
      "environment": "aws://12345678/us-east-1",
      "properties": {
        "templateFile": "parent-stack.template.json",
        "terminationProtection": false,
        "validateOnSynth": false,
        "assumeRoleArn": "arn:${AWS::Partition}:iam::12345678:role/cdk-hnb659fds-deploy-role-12345678-us-east-1",
        "cloudFormationExecutionRoleArn": "arn:${AWS::Partition}:iam::12345678:role/cdk-hnb659fds-cfn-exec-role-12345678-us-east-1",
        "stackTemplateAssetObjectUrl": "s3://cdk-hnb659fds-assets-12345678-us-east-1/b168be2e4ceb90de248733d200d01b4b462d37a0454ca1608abf4b752c4aa07d.json",
        "requiresBootstrapStackVersion": 6,
        "bootstrapStackVersionSsmParameter": "/cdk-bootstrap/hnb659fds/version",
        "additionalDependencies": [
          "parent-stack.assets"
        ],
        "lookupRole": {
          "arn": "arn:${AWS::Partition}:iam::12345678:role/cdk-hnb659fds-lookup-role-12345678-us-east-1",
          "requiresBootstrapStackVersion": 8,
          "bootstrapStackVersionSsmParameter": "/cdk-bootstrap/hnb659fds/version"
        }
      },
      "dependencies": [
        "parent-stack.assets"
      ],
      "metadata": {
        "/parent-stack/HostedZone": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "zoneName": "*"
            }
          },
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "zoneName": "*"
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {}
          }
        ],
        "/parent-stack/HostedZone/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "HostedZoneDB99F866"
          }
        ],
        "/parent-stack/TheVPC": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "ipAddresses": "*"
            }
          }
        ],
        "/parent-stack/TheVPC/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "TheVPC92636AB0"
          }
        ],
        "/parent-stack/TheVPC/PublicSubnet1": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "availabilityZone": "*",
              "vpcId": "*",
              "cidrBlock": "*",
              "mapPublicIpOnLaunch": true,
              "ipv6CidrBlock": "*",
              "assignIpv6AddressOnCreation": "*"
            }
          },
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "availabilityZone": "*",
              "vpcId": "*",
              "cidrBlock": "*",
              "mapPublicIpOnLaunch": true,
              "ipv6CidrBlock": "*",
              "assignIpv6AddressOnCreation": "*"
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {}
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "addNatGateway": [
                "*"
              ]
            }
          }
        ],
        "/parent-stack/TheVPC/PublicSubnet1/Subnet": [
          {
            "type": "aws:cdk:logicalId",
            "data": "TheVPCPublicSubnet1Subnet770D4FF2"
          }
        ],
        "/parent-stack/TheVPC/PublicSubnet1/RouteTable": [
          {
            "type": "aws:cdk:logicalId",
            "data": "TheVPCPublicSubnet1RouteTable17DA183D"
          }
        ],
        "/parent-stack/TheVPC/PublicSubnet1/RouteTableAssociation": [
          {
            "type": "aws:cdk:logicalId",
            "data": "TheVPCPublicSubnet1RouteTableAssociationE5186D77"
          }
        ],
        "/parent-stack/TheVPC/PublicSubnet1/DefaultRoute": [
          {
            "type": "aws:cdk:logicalId",
            "data": "TheVPCPublicSubnet1DefaultRoute6D26543F"
          }
        ],
        "/parent-stack/TheVPC/PublicSubnet1/EIP": [
          {
            "type": "aws:cdk:logicalId",
            "data": "TheVPCPublicSubnet1EIP4412F690"
          }
        ],
        "/parent-stack/TheVPC/PublicSubnet1/NATGateway": [
          {
            "type": "aws:cdk:logicalId",
            "data": "TheVPCPublicSubnet1NATGatewayC61D892B"
          }
        ],
        "/parent-stack/TheVPC/PublicSubnet2": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "availabilityZone": "*",
              "vpcId": "*",
              "cidrBlock": "*",
              "mapPublicIpOnLaunch": true,
              "ipv6CidrBlock": "*",
              "assignIpv6AddressOnCreation": "*"
            }
          },
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "availabilityZone": "*",
              "vpcId": "*",
              "cidrBlock": "*",
              "mapPublicIpOnLaunch": true,
              "ipv6CidrBlock": "*",
              "assignIpv6AddressOnCreation": "*"
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {}
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "addNatGateway": [
                "*"
              ]
            }
          }
        ],
        "/parent-stack/TheVPC/PublicSubnet2/Subnet": [
          {
            "type": "aws:cdk:logicalId",
            "data": "TheVPCPublicSubnet2Subnet73F96DA9"
          }
        ],
        "/parent-stack/TheVPC/PublicSubnet2/RouteTable": [
          {
            "type": "aws:cdk:logicalId",
            "data": "TheVPCPublicSubnet2RouteTable3609F42C"
          }
        ],
        "/parent-stack/TheVPC/PublicSubnet2/RouteTableAssociation": [
          {
            "type": "aws:cdk:logicalId",
            "data": "TheVPCPublicSubnet2RouteTableAssociationB4B0A733"
          }
        ],
        "/parent-stack/TheVPC/PublicSubnet2/DefaultRoute": [
          {
            "type": "aws:cdk:logicalId",
            "data": "TheVPCPublicSubnet2DefaultRouteFEB062B2"
          }
        ],
        "/parent-stack/TheVPC/PublicSubnet2/EIP": [
          {
            "type": "aws:cdk:logicalId",
            "data": "TheVPCPublicSubnet2EIP5AAFF9FA"
          }
        ],
        "/parent-stack/TheVPC/PublicSubnet2/NATGateway": [
          {
            "type": "aws:cdk:logicalId",
            "data": "TheVPCPublicSubnet2NATGatewayB437CFAF"
          }
        ],
        "/parent-stack/TheVPC/PublicSubnet3": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "availabilityZone": "*",
              "vpcId": "*",
              "cidrBlock": "*",
              "mapPublicIpOnLaunch": true,
              "ipv6CidrBlock": "*",
              "assignIpv6AddressOnCreation": "*"
            }
          },
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "availabilityZone": "*",
              "vpcId": "*",
              "cidrBlock": "*",
              "mapPublicIpOnLaunch": true,
              "ipv6CidrBlock": "*",
              "assignIpv6AddressOnCreation": "*"
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {}
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "addNatGateway": [
                "*"
              ]
            }
          }
        ],
        "/parent-stack/TheVPC/PublicSubnet3/Subnet": [
          {
            "type": "aws:cdk:logicalId",
            "data": "TheVPCPublicSubnet3Subnet7C1E748F"
          }
        ],
        "/parent-stack/TheVPC/PublicSubnet3/RouteTable": [
          {
            "type": "aws:cdk:logicalId",
            "data": "TheVPCPublicSubnet3RouteTable679ADB47"
          }
        ],
        "/parent-stack/TheVPC/PublicSubnet3/RouteTableAssociation": [
          {
            "type": "aws:cdk:logicalId",
            "data": "TheVPCPublicSubnet3RouteTableAssociationACA3F606"
          }
        ],
        "/parent-stack/TheVPC/PublicSubnet3/DefaultRoute": [
          {
            "type": "aws:cdk:logicalId",
            "data": "TheVPCPublicSubnet3DefaultRoute326CE968"
          }
        ],
        "/parent-stack/TheVPC/PublicSubnet3/EIP": [
          {
            "type": "aws:cdk:logicalId",
            "data": "TheVPCPublicSubnet3EIPE3930834"
          }
        ],
        "/parent-stack/TheVPC/PublicSubnet3/NATGateway": [
          {
            "type": "aws:cdk:logicalId",
            "data": "TheVPCPublicSubnet3NATGateway3A4A718F"
          }
        ],
        "/parent-stack/TheVPC/PrivateSubnet1": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "availabilityZone": "*",
              "vpcId": "*",
              "cidrBlock": "*",
              "mapPublicIpOnLaunch": false,
              "ipv6CidrBlock": "*",
              "assignIpv6AddressOnCreation": "*"
            }
          },
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "availabilityZone": "*",
              "vpcId": "*",
              "cidrBlock": "*",
              "mapPublicIpOnLaunch": false,
              "ipv6CidrBlock": "*",
              "assignIpv6AddressOnCreation": "*"
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {}
          }
        ],
        "/parent-stack/TheVPC/PrivateSubnet1/Subnet": [
          {
            "type": "aws:cdk:logicalId",
            "data": "TheVPCPrivateSubnet1Subnet571D3690"
          }
        ],
        "/parent-stack/TheVPC/PrivateSubnet1/RouteTable": [
          {
            "type": "aws:cdk:logicalId",
            "data": "TheVPCPrivateSubnet1RouteTableF6513BC2"
          }
        ],
        "/parent-stack/TheVPC/PrivateSubnet1/RouteTableAssociation": [
          {
            "type": "aws:cdk:logicalId",
            "data": "TheVPCPrivateSubnet1RouteTableAssociation46F1FFFC"
          }
        ],
        "/parent-stack/TheVPC/PrivateSubnet1/DefaultRoute": [
          {
            "type": "aws:cdk:logicalId",
            "data": "TheVPCPrivateSubnet1DefaultRouteD1B9E467"
          }
        ],
        "/parent-stack/TheVPC/PrivateSubnet2": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "availabilityZone": "*",
              "vpcId": "*",
              "cidrBlock": "*",
              "mapPublicIpOnLaunch": false,
              "ipv6CidrBlock": "*",
              "assignIpv6AddressOnCreation": "*"
            }
          },
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "availabilityZone": "*",
              "vpcId": "*",
              "cidrBlock": "*",
              "mapPublicIpOnLaunch": false,
              "ipv6CidrBlock": "*",
              "assignIpv6AddressOnCreation": "*"
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {}
          }
        ],
        "/parent-stack/TheVPC/PrivateSubnet2/Subnet": [
          {
            "type": "aws:cdk:logicalId",
            "data": "TheVPCPrivateSubnet2SubnetCC3D7013"
          }
        ],
        "/parent-stack/TheVPC/PrivateSubnet2/RouteTable": [
          {
            "type": "aws:cdk:logicalId",
            "data": "TheVPCPrivateSubnet2RouteTable9AC81FAC"
          }
        ],
        "/parent-stack/TheVPC/PrivateSubnet2/RouteTableAssociation": [
          {
            "type": "aws:cdk:logicalId",
            "data": "TheVPCPrivateSubnet2RouteTableAssociation336D47D1"
          }
        ],
        "/parent-stack/TheVPC/PrivateSubnet2/DefaultRoute": [
          {
            "type": "aws:cdk:logicalId",
            "data": "TheVPCPrivateSubnet2DefaultRoute52A1F245"
          }
        ],
        "/parent-stack/TheVPC/PrivateSubnet3": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "availabilityZone": "*",
              "vpcId": "*",
              "cidrBlock": "*",
              "mapPublicIpOnLaunch": false,
              "ipv6CidrBlock": "*",
              "assignIpv6AddressOnCreation": "*"
            }
          },
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "availabilityZone": "*",
              "vpcId": "*",
              "cidrBlock": "*",
              "mapPublicIpOnLaunch": false,
              "ipv6CidrBlock": "*",
              "assignIpv6AddressOnCreation": "*"
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {}
          }
        ],
        "/parent-stack/TheVPC/PrivateSubnet3/Subnet": [
          {
            "type": "aws:cdk:logicalId",
            "data": "TheVPCPrivateSubnet3Subnet69CC2C6F"
          }
        ],
        "/parent-stack/TheVPC/PrivateSubnet3/RouteTable": [
          {
            "type": "aws:cdk:logicalId",
            "data": "TheVPCPrivateSubnet3RouteTable1A0D1274"
          }
        ],
        "/parent-stack/TheVPC/PrivateSubnet3/RouteTableAssociation": [
          {
            "type": "aws:cdk:logicalId",
            "data": "TheVPCPrivateSubnet3RouteTableAssociation50EE5E34"
          }
        ],
        "/parent-stack/TheVPC/PrivateSubnet3/DefaultRoute": [
          {
            "type": "aws:cdk:logicalId",
            "data": "TheVPCPrivateSubnet3DefaultRoute990F9A2A"
          }
        ],
        "/parent-stack/TheVPC/IGW": [
          {
            "type": "aws:cdk:logicalId",
            "data": "TheVPCIGWFA25CC08"
          }
        ],
        "/parent-stack/TheVPC/VPCGW": [
          {
            "type": "aws:cdk:logicalId",
            "data": "TheVPCVPCGWC9B93E30"
          }
        ],
        "/parent-stack/TheVPC/RestrictDefaultSecurityGroupCustomResource": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": "*"
          }
        ],
        "/parent-stack/TheVPC/RestrictDefaultSecurityGroupCustomResource/Default": [
          {
            "type": "aws:cdk:logicalId",
            "data": "TheVPCRestrictDefaultSecurityGroupCustomResourceAFA88FCE"
          }
        ],
        "/parent-stack/Custom::VpcRestrictDefaultSGCustomResourceProvider": [
          {
            "type": "aws:cdk:is-custom-resource-handler-customResourceProvider",
            "data": true
          }
        ],
        "/parent-stack/Custom::VpcRestrictDefaultSGCustomResourceProvider/Role": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CustomVpcRestrictDefaultSGCustomResourceProviderRole26592FE0"
          }
        ],
        "/parent-stack/Custom::VpcRestrictDefaultSGCustomResourceProvider/Handler": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CustomVpcRestrictDefaultSGCustomResourceProviderHandlerDC833E5E"
          }
        ],
        "/parent-stack/PrivateHostedZone": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "zoneName": "*",
              "vpc": "*"
            }
          },
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "zoneName": "*",
              "vpc": "*"
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {}
          }
        ],
        "/parent-stack/PrivateHostedZone/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "PrivateHostedZone6354E1BB"
          }
        ],
        "/parent-stack/CrossAccountRole": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "roleName": "*",
              "assumedBy": {
                "principalAccount": "*",
                "assumeRoleAction": "*"
              }
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "addToPrincipalPolicy": [
                {}
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "attachInlinePolicy": [
                "*"
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "attachInlinePolicy": [
                "*"
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "addToPrincipalPolicy": [
                {}
              ]
            }
          }
        ],
        "/parent-stack/CrossAccountRole/ImportCrossAccountRole": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": "*"
          }
        ],
        "/parent-stack/CrossAccountRole/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CrossAccountRoleFACE29D1"
          }
        ],
        "/parent-stack/CrossAccountRole/DefaultPolicy": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": "*"
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "attachToRole": [
                "*"
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "attachToRole": [
                "*"
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "addStatements": [
                {}
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "addStatements": [
                {}
              ]
            }
          }
        ],
        "/parent-stack/CrossAccountRole/DefaultPolicy/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CrossAccountRoleDefaultPolicy212A317F"
          }
        ],
        "/parent-stack/BootstrapVersion": [
          {
            "type": "aws:cdk:logicalId",
            "data": "BootstrapVersion"
          }
        ],
        "/parent-stack/CheckBootstrapVersion": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CheckBootstrapVersion"
          }
        ]
      },
      "displayName": "parent-stack"
    },
    "child-stack.assets": {
      "type": "cdk:asset-manifest",
      "properties": {
        "file": "child-stack.assets.json",
        "requiresBootstrapStackVersion": 6,
        "bootstrapStackVersionSsmParameter": "/cdk-bootstrap/hnb659fds/version"
      }
    },
    "child-stack": {
      "type": "aws:cloudformation:stack",
      "environment": "aws://234567890123/us-east-1",
      "properties": {
        "templateFile": "child-stack.template.json",
        "terminationProtection": false,
        "validateOnSynth": false,
        "assumeRoleArn": "arn:${AWS::Partition}:iam::234567890123:role/cdk-hnb659fds-deploy-role-234567890123-us-east-1",
        "cloudFormationExecutionRoleArn": "arn:${AWS::Partition}:iam::234567890123:role/cdk-hnb659fds-cfn-exec-role-234567890123-us-east-1",
        "stackTemplateAssetObjectUrl": "s3://cdk-hnb659fds-assets-234567890123-us-east-1/aa2fc180508659dd49d215a105445c02e3de9a09cdbf8a6b6e043884d7e97e85.json",
        "requiresBootstrapStackVersion": 6,
        "bootstrapStackVersionSsmParameter": "/cdk-bootstrap/hnb659fds/version",
        "additionalDependencies": [
          "child-stack.assets"
        ],
        "lookupRole": {
          "arn": "arn:${AWS::Partition}:iam::234567890123:role/cdk-hnb659fds-lookup-role-234567890123-us-east-1",
          "requiresBootstrapStackVersion": 8,
          "bootstrapStackVersionSsmParameter": "/cdk-bootstrap/hnb659fds/version"
        }
      },
      "dependencies": [
        "parent-stack",
        "child-stack.assets"
      ],
      "metadata": {
        "/child-stack/SubZone": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "zoneName": "*"
            }
          },
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "zoneName": "*"
            }
          }
        ],
        "/child-stack/SubZone/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "SubZoneF7955E1A"
          }
        ],
        "/child-stack/MutableRoleDelegationRole": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": "*"
          }
        ],
        "/child-stack/DelegationRole": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": "*"
          }
        ],
        "/child-stack/delegate/cross-account-zone-delegation-handler-role": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": "*"
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": "*"
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": "*"
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": "*"
          }
        ],
        "/child-stack/delegate/cross-account-zone-delegation-handler-role/PolicychildstackdelegatecrossaccountzonedelegationhandlerroleCB13E48E": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "policyName": "*"
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "attachToRole": [
                "*"
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "attachToRole": [
                "*"
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "addStatements": [
                {}
              ]
            }
          }
        ],
        "/child-stack/delegate/cross-account-zone-delegation-handler-role/PolicychildstackdelegatecrossaccountzonedelegationhandlerroleCB13E48E/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "delegatecrossaccountzonedelegationhandlerrolePolicychildstackdelegatecrossaccountzonedelegationhandlerroleCB13E48E86169197"
          }
        ],
        "/child-stack/delegate/CrossAccountZoneDelegationCustomResource": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": "*"
          }
        ],
        "/child-stack/delegate/CrossAccountZoneDelegationCustomResource/Default": [
          {
            "type": "aws:cdk:logicalId",
            "data": "delegateCrossAccountZoneDelegationCustomResource23BD590B"
          }
        ],
        "/child-stack/Custom::CrossAccountZoneDelegationCustomResourceProvider": [
          {
            "type": "aws:cdk:is-custom-resource-handler-customResourceProvider",
            "data": true
          }
        ],
        "/child-stack/Custom::CrossAccountZoneDelegationCustomResourceProvider/Role": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CustomCrossAccountZoneDelegationCustomResourceProviderRoleED64687B"
          }
        ],
        "/child-stack/Custom::CrossAccountZoneDelegationCustomResourceProvider/Handler": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CustomCrossAccountZoneDelegationCustomResourceProviderHandler44A84265"
          }
        ],
        "/child-stack/BootstrapVersion": [
          {
            "type": "aws:cdk:logicalId",
            "data": "BootstrapVersion"
          }
        ],
        "/child-stack/CheckBootstrapVersion": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CheckBootstrapVersion"
          }
        ]
      },
      "displayName": "child-stack"
    },
    "child-opt-in-stack.assets": {
      "type": "cdk:asset-manifest",
      "properties": {
        "file": "child-opt-in-stack.assets.json",
        "requiresBootstrapStackVersion": 6,
        "bootstrapStackVersionSsmParameter": "/cdk-bootstrap/hnb659fds/version"
      }
    },
    "child-opt-in-stack": {
      "type": "aws:cloudformation:stack",
      "environment": "aws://234567890123/af-south-1",
      "properties": {
        "templateFile": "child-opt-in-stack.template.json",
        "terminationProtection": false,
        "validateOnSynth": false,
        "assumeRoleArn": "arn:${AWS::Partition}:iam::234567890123:role/cdk-hnb659fds-deploy-role-234567890123-af-south-1",
        "cloudFormationExecutionRoleArn": "arn:${AWS::Partition}:iam::234567890123:role/cdk-hnb659fds-cfn-exec-role-234567890123-af-south-1",
        "stackTemplateAssetObjectUrl": "s3://cdk-hnb659fds-assets-234567890123-af-south-1/f7730dc31655c9b60058fa5b1354e5f6663ea5384e494e3f46cdd913975e6b81.json",
        "requiresBootstrapStackVersion": 6,
        "bootstrapStackVersionSsmParameter": "/cdk-bootstrap/hnb659fds/version",
        "additionalDependencies": [
          "child-opt-in-stack.assets"
        ],
        "lookupRole": {
          "arn": "arn:${AWS::Partition}:iam::234567890123:role/cdk-hnb659fds-lookup-role-234567890123-af-south-1",
          "requiresBootstrapStackVersion": 8,
          "bootstrapStackVersionSsmParameter": "/cdk-bootstrap/hnb659fds/version"
        }
      },
      "dependencies": [
        "parent-stack",
        "child-opt-in-stack.assets"
      ],
      "metadata": {
        "/child-opt-in-stack/SubZone": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "zoneName": "*"
            }
          },
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "zoneName": "*"
            }
          }
        ],
        "/child-opt-in-stack/SubZone/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "SubZoneF7955E1A"
          }
        ],
        "/child-opt-in-stack/MutableRoleDelegationRole": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": "*"
          }
        ],
        "/child-opt-in-stack/DelegationRole": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": "*"
          }
        ],
        "/child-opt-in-stack/delegate/cross-account-zone-delegation-handler-role": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": "*"
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": "*"
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": "*"
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": "*"
          }
        ],
        "/child-opt-in-stack/delegate/cross-account-zone-delegation-handler-role/PolicychildoptinstackdelegatecrossaccountzonedelegationhandlerroleD1C6F26D": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "policyName": "*"
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "attachToRole": [
                "*"
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "attachToRole": [
                "*"
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "addStatements": [
                {}
              ]
            }
          }
        ],
        "/child-opt-in-stack/delegate/cross-account-zone-delegation-handler-role/PolicychildoptinstackdelegatecrossaccountzonedelegationhandlerroleD1C6F26D/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "delegatecrossaccountzonedelegationhandlerrolePolicychildoptinstackdelegatecrossaccountzonedelegationhandlerroleD1C6F26DE28FC01D"
          }
        ],
        "/child-opt-in-stack/delegate/CrossAccountZoneDelegationCustomResource": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": "*"
          }
        ],
        "/child-opt-in-stack/delegate/CrossAccountZoneDelegationCustomResource/Default": [
          {
            "type": "aws:cdk:logicalId",
            "data": "delegateCrossAccountZoneDelegationCustomResource23BD590B"
          }
        ],
        "/child-opt-in-stack/Custom::CrossAccountZoneDelegationCustomResourceProvider": [
          {
            "type": "aws:cdk:is-custom-resource-handler-customResourceProvider",
            "data": true
          }
        ],
        "/child-opt-in-stack/Custom::CrossAccountZoneDelegationCustomResourceProvider/Role": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CustomCrossAccountZoneDelegationCustomResourceProviderRoleED64687B"
          }
        ],
        "/child-opt-in-stack/Custom::CrossAccountZoneDelegationCustomResourceProvider/Handler": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CustomCrossAccountZoneDelegationCustomResourceProviderHandler44A84265"
          }
        ],
        "/child-opt-in-stack/BootstrapVersion": [
          {
            "type": "aws:cdk:logicalId",
            "data": "BootstrapVersion"
          }
        ],
        "/child-opt-in-stack/CheckBootstrapVersion": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CheckBootstrapVersion"
          }
        ]
      },
      "displayName": "child-opt-in-stack"
    },
    "child-opt-in-stack-with-assume-role-region.assets": {
      "type": "cdk:asset-manifest",
      "properties": {
        "file": "child-opt-in-stack-with-assume-role-region.assets.json",
        "requiresBootstrapStackVersion": 6,
        "bootstrapStackVersionSsmParameter": "/cdk-bootstrap/hnb659fds/version"
      }
    },
    "child-opt-in-stack-with-assume-role-region": {
      "type": "aws:cloudformation:stack",
      "environment": "aws://234567890123/af-south-1",
      "properties": {
        "templateFile": "child-opt-in-stack-with-assume-role-region.template.json",
        "terminationProtection": false,
        "validateOnSynth": false,
        "assumeRoleArn": "arn:${AWS::Partition}:iam::234567890123:role/cdk-hnb659fds-deploy-role-234567890123-af-south-1",
        "cloudFormationExecutionRoleArn": "arn:${AWS::Partition}:iam::234567890123:role/cdk-hnb659fds-cfn-exec-role-234567890123-af-south-1",
        "stackTemplateAssetObjectUrl": "s3://cdk-hnb659fds-assets-234567890123-af-south-1/37f545cde55b1019f3a7d8320e11b4467046749ac858eb35c24d756e47bf1d5c.json",
        "requiresBootstrapStackVersion": 6,
        "bootstrapStackVersionSsmParameter": "/cdk-bootstrap/hnb659fds/version",
        "additionalDependencies": [
          "child-opt-in-stack-with-assume-role-region.assets"
        ],
        "lookupRole": {
          "arn": "arn:${AWS::Partition}:iam::234567890123:role/cdk-hnb659fds-lookup-role-234567890123-af-south-1",
          "requiresBootstrapStackVersion": 8,
          "bootstrapStackVersionSsmParameter": "/cdk-bootstrap/hnb659fds/version"
        }
      },
      "dependencies": [
        "parent-stack",
        "child-opt-in-stack-with-assume-role-region.assets"
      ],
      "metadata": {
        "/child-opt-in-stack-with-assume-role-region/SubZone": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "zoneName": "*"
            }
          },
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "zoneName": "*"
            }
          }
        ],
        "/child-opt-in-stack-with-assume-role-region/SubZone/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "SubZoneF7955E1A"
          }
        ],
        "/child-opt-in-stack-with-assume-role-region/MutableRoleDelegationRole": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": "*"
          }
        ],
        "/child-opt-in-stack-with-assume-role-region/DelegationRole": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": "*"
          }
        ],
        "/child-opt-in-stack-with-assume-role-region/delegate/cross-account-zone-delegation-handler-role": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": "*"
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": "*"
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": "*"
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": "*"
          }
        ],
        "/child-opt-in-stack-with-assume-role-region/delegate/cross-account-zone-delegation-handler-role/PolicychildoptinstackwithassumeroleregiondelegatecrossaccountzonedelegationhandlerroleA822DAE1": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": {
              "policyName": "*"
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "attachToRole": [
                "*"
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "attachToRole": [
                "*"
              ]
            }
          },
          {
            "type": "aws:cdk:analytics:method",
            "data": {
              "addStatements": [
                {}
              ]
            }
          }
        ],
        "/child-opt-in-stack-with-assume-role-region/delegate/cross-account-zone-delegation-handler-role/PolicychildoptinstackwithassumeroleregiondelegatecrossaccountzonedelegationhandlerroleA822DAE1/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "delegatecrossaccountzonedelegationhandlerrolePolicychildoptinstackwithassumeroleregiondelegatecrossaccountzonedelegationhandlerroleA822DAE1970772B0"
          }
        ],
        "/child-opt-in-stack-with-assume-role-region/delegate/CrossAccountZoneDelegationCustomResource": [
          {
            "type": "aws:cdk:analytics:construct",
            "data": "*"
          }
        ],
        "/child-opt-in-stack-with-assume-role-region/delegate/CrossAccountZoneDelegationCustomResource/Default": [
          {
            "type": "aws:cdk:logicalId",
            "data": "delegateCrossAccountZoneDelegationCustomResource23BD590B"
          }
        ],
        "/child-opt-in-stack-with-assume-role-region/Custom::CrossAccountZoneDelegationCustomResourceProvider": [
          {
            "type": "aws:cdk:is-custom-resource-handler-customResourceProvider",
            "data": true
          }
        ],
        "/child-opt-in-stack-with-assume-role-region/Custom::CrossAccountZoneDelegationCustomResourceProvider/Role": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CustomCrossAccountZoneDelegationCustomResourceProviderRoleED64687B"
          }
        ],
        "/child-opt-in-stack-with-assume-role-region/Custom::CrossAccountZoneDelegationCustomResourceProvider/Handler": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CustomCrossAccountZoneDelegationCustomResourceProviderHandler44A84265"
          }
        ],
        "/child-opt-in-stack-with-assume-role-region/BootstrapVersion": [
          {
            "type": "aws:cdk:logicalId",
            "data": "BootstrapVersion"
          }
        ],
        "/child-opt-in-stack-with-assume-role-region/CheckBootstrapVersion": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CheckBootstrapVersion"
          }
        ]
      },
      "displayName": "child-opt-in-stack-with-assume-role-region"
    },
    "Route53CrossAccountIntegDefaultTestDeployAssertF1D808C9.assets": {
      "type": "cdk:asset-manifest",
      "properties": {
        "file": "Route53CrossAccountIntegDefaultTestDeployAssertF1D808C9.assets.json",
        "requiresBootstrapStackVersion": 6,
        "bootstrapStackVersionSsmParameter": "/cdk-bootstrap/hnb659fds/version"
      }
    },
    "Route53CrossAccountIntegDefaultTestDeployAssertF1D808C9": {
      "type": "aws:cloudformation:stack",
      "environment": "aws://unknown-account/unknown-region",
      "properties": {
        "templateFile": "Route53CrossAccountIntegDefaultTestDeployAssertF1D808C9.template.json",
        "terminationProtection": false,
        "validateOnSynth": false,
        "assumeRoleArn": "arn:${AWS::Partition}:iam::${AWS::AccountId}:role/cdk-hnb659fds-deploy-role-${AWS::AccountId}-${AWS::Region}",
        "cloudFormationExecutionRoleArn": "arn:${AWS::Partition}:iam::${AWS::AccountId}:role/cdk-hnb659fds-cfn-exec-role-${AWS::AccountId}-${AWS::Region}",
        "stackTemplateAssetObjectUrl": "s3://cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}/21fbb51d7b23f6a6c262b46a9caee79d744a3ac019fd45422d988b96d44b2a22.json",
        "requiresBootstrapStackVersion": 6,
        "bootstrapStackVersionSsmParameter": "/cdk-bootstrap/hnb659fds/version",
        "additionalDependencies": [
          "Route53CrossAccountIntegDefaultTestDeployAssertF1D808C9.assets"
        ],
        "lookupRole": {
          "arn": "arn:${AWS::Partition}:iam::${AWS::AccountId}:role/cdk-hnb659fds-lookup-role-${AWS::AccountId}-${AWS::Region}",
          "requiresBootstrapStackVersion": 8,
          "bootstrapStackVersionSsmParameter": "/cdk-bootstrap/hnb659fds/version"
        }
      },
      "dependencies": [
        "Route53CrossAccountIntegDefaultTestDeployAssertF1D808C9.assets"
      ],
      "metadata": {
        "/Route53CrossAccountInteg/DefaultTest/DeployAssert/BootstrapVersion": [
          {
            "type": "aws:cdk:logicalId",
            "data": "BootstrapVersion"
          }
        ],
        "/Route53CrossAccountInteg/DefaultTest/DeployAssert/CheckBootstrapVersion": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CheckBootstrapVersion"
          }
        ]
      },
      "displayName": "Route53CrossAccountInteg/DefaultTest/DeployAssert"
    },
    "Tree": {
      "type": "cdk:tree",
      "properties": {
        "file": "tree.json"
      }
    },
    "aws-cdk-lib/feature-flag-report": {
      "type": "cdk:feature-flag-report",
      "properties": {
        "module": "aws-cdk-lib",
        "flags": {
          "@aws-cdk/core:enableStackNameDuplicates": {
            "recommendedValue": true,
            "explanation": "Allow multiple stacks with the same name"
          },
          "aws-cdk:enableDiffNoFail": {
            "recommendedValue": true,
            "explanation": "Make `cdk diff` not fail when there are differences"
          },
          "@aws-cdk/core:newStyleStackSynthesis": {
            "recommendedValue": true,
            "explanation": "Switch to new stack synthesis method which enables CI/CD"
          },
          "@aws-cdk/core:stackRelativeExports": {
            "recommendedValue": true,
            "explanation": "Name exports based on the construct paths relative to the stack, rather than the global construct path"
          },
          "@aws-cdk/aws-ecr-assets:dockerIgnoreSupport": {
            "recommendedValue": true,
            "explanation": "DockerImageAsset properly supports `.dockerignore` files by default"
          },
          "@aws-cdk/aws-secretsmanager:parseOwnedSecretName": {
            "recommendedValue": true,
            "explanation": "Fix the referencing of SecretsManager names from ARNs"
          },
          "@aws-cdk/aws-kms:defaultKeyPolicies": {
            "recommendedValue": true,
            "explanation": "Tighten default KMS key policies"
          },
          "@aws-cdk/aws-s3:grantWriteWithoutAcl": {
            "recommendedValue": true,
            "explanation": "Remove `PutObjectAcl` from Bucket.grantWrite"
          },
          "@aws-cdk/aws-ecs-patterns:removeDefaultDesiredCount": {
            "recommendedValue": true,
            "explanation": "Do not specify a default DesiredCount for ECS services"
          },
          "@aws-cdk/aws-rds:lowercaseDbIdentifier": {
            "recommendedValue": true,
            "explanation": "Force lowercasing of RDS Cluster names in CDK"
          },
          "@aws-cdk/aws-apigateway:usagePlanKeyOrderInsensitiveId": {
            "recommendedValue": true,
            "explanation": "Allow adding/removing multiple UsagePlanKeys independently"
          },
          "@aws-cdk/aws-efs:defaultEncryptionAtRest": {
            "recommendedValue": true,
            "explanation": "Enable this feature flag to have elastic file systems encrypted at rest by default."
          },
          "@aws-cdk/aws-lambda:recognizeVersionProps": {
            "recommendedValue": true,
            "explanation": "Enable this feature flag to opt in to the updated logical id calculation for Lambda Version created using the  `fn.currentVersion`."
          },
          "@aws-cdk/aws-lambda:recognizeLayerVersion": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Enable this feature flag to opt in to the updated logical id calculation for Lambda Version created using the `fn.currentVersion`."
          },
          "@aws-cdk/aws-cloudfront:defaultSecurityPolicyTLSv1.2_2021": {
            "recommendedValue": true,
            "explanation": "Enable this feature flag to have cloudfront distributions use the security policy TLSv1.2_2021 by default."
          },
          "@aws-cdk/core:checkSecretUsage": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Enable this flag to make it impossible to accidentally use SecretValues in unsafe locations"
          },
          "@aws-cdk/core:target-partitions": {
            "recommendedValue": [
              "aws",
              "aws-cn"
            ],
            "explanation": "What regions to include in lookup tables of environment agnostic stacks"
          },
          "@aws-cdk-containers/ecs-service-extensions:enableDefaultLogDriver": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "ECS extensions will automatically add an `awslogs` driver if no logging is specified"
          },
          "@aws-cdk/aws-ec2:uniqueImdsv2TemplateName": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Enable this feature flag to have Launch Templates generated by the `InstanceRequireImdsv2Aspect` use unique names."
          },
          "@aws-cdk/aws-ecs:arnFormatIncludesClusterName": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "ARN format used by ECS. In the new ARN format, the cluster name is part of the resource ID."
          },
          "@aws-cdk/aws-iam:minimizePolicies": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Minimize IAM policies by combining Statements"
          },
          "@aws-cdk/core:validateSnapshotRemovalPolicy": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Error on snapshot removal policies on resources that do not support it."
          },
          "@aws-cdk/aws-codepipeline:crossAccountKeyAliasStackSafeResourceName": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Generate key aliases that include the stack name"
          },
          "@aws-cdk/aws-s3:createDefaultLoggingPolicy": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Enable this feature flag to create an S3 bucket policy by default in cases where an AWS service would automatically create the Policy if one does not exist."
          },
          "@aws-cdk/aws-sns-subscriptions:restrictSqsDescryption": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Restrict KMS key policy for encrypted Queues a bit more"
          },
          "@aws-cdk/aws-apigateway:disableCloudWatchRole": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Make default CloudWatch Role behavior safe for multiple API Gateways in one environment"
          },
          "@aws-cdk/core:enablePartitionLiterals": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Make ARNs concrete if AWS partition is known"
          },
          "@aws-cdk/aws-events:eventsTargetQueueSameAccount": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Event Rules may only push to encrypted SQS queues in the same account"
          },
          "@aws-cdk/aws-ecs:disableExplicitDeploymentControllerForCircuitBreaker": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Avoid setting the \"ECS\" deployment controller when adding a circuit breaker"
          },
          "@aws-cdk/aws-iam:importedRoleStackSafeDefaultPolicyName": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Enable this feature to by default create default policy names for imported roles that depend on the stack the role is in."
          },
          "@aws-cdk/aws-s3:serverAccessLogsUseBucketPolicy": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Use S3 Bucket Policy instead of ACLs for Server Access Logging"
          },
          "@aws-cdk/aws-route53-patters:useCertificate": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Use the official `Certificate` resource instead of `DnsValidatedCertificate`"
          },
          "@aws-cdk/customresources:installLatestAwsSdkDefault": {
            "userValue": false,
            "recommendedValue": false,
            "explanation": "Whether to install the latest SDK by default in AwsCustomResource"
          },
          "@aws-cdk/aws-rds:databaseProxyUniqueResourceName": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Use unique resource name for Database Proxy"
          },
          "@aws-cdk/aws-codedeploy:removeAlarmsFromDeploymentGroup": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Remove CloudWatch alarms from deployment group"
          },
          "@aws-cdk/aws-apigateway:authorizerChangeDeploymentLogicalId": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Include authorizer configuration in the calculation of the API deployment logical ID."
          },
          "@aws-cdk/aws-ec2:launchTemplateDefaultUserData": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Define user data for a launch template by default when a machine image is provided."
          },
          "@aws-cdk/aws-secretsmanager:useAttachedSecretResourcePolicyForSecretTargetAttachments": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "SecretTargetAttachments uses the ResourcePolicy of the attached Secret."
          },
          "@aws-cdk/aws-redshift:columnId": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Whether to use an ID to track Redshift column changes"
          },
          "@aws-cdk/aws-stepfunctions-tasks:enableEmrServicePolicyV2": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Enable AmazonEMRServicePolicy_v2 managed policies"
          },
          "@aws-cdk/aws-ec2:restrictDefaultSecurityGroup": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Restrict access to the VPC default security group"
          },
          "@aws-cdk/aws-apigateway:requestValidatorUniqueId": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Generate a unique id for each RequestValidator added to a method"
          },
          "@aws-cdk/aws-kms:aliasNameRef": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "KMS Alias name and keyArn will have implicit reference to KMS Key"
          },
          "@aws-cdk/aws-kms:applyImportedAliasPermissionsToPrincipal": {
            "recommendedValue": true,
            "explanation": "Enable grant methods on Aliases imported by name to use kms:ResourceAliases condition"
          },
          "@aws-cdk/aws-autoscaling:generateLaunchTemplateInsteadOfLaunchConfig": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Generate a launch template when creating an AutoScalingGroup"
          },
          "@aws-cdk/core:includePrefixInUniqueNameGeneration": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Include the stack prefix in the stack name generation process"
          },
          "@aws-cdk/aws-efs:denyAnonymousAccess": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "EFS denies anonymous clients accesses"
          },
          "@aws-cdk/aws-opensearchservice:enableOpensearchMultiAzWithStandby": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Enables support for Multi-AZ with Standby deployment for opensearch domains"
          },
          "@aws-cdk/aws-lambda-nodejs:useLatestRuntimeVersion": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Enables aws-lambda-nodejs.Function to use the latest available NodeJs runtime as the default"
          },
          "@aws-cdk/aws-efs:mountTargetOrderInsensitiveLogicalId": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, mount targets will have a stable logicalId that is linked to the associated subnet."
          },
          "@aws-cdk/aws-rds:auroraClusterChangeScopeOfInstanceParameterGroupWithEachParameters": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, a scope of InstanceParameterGroup for AuroraClusterInstance with each parameters will change."
          },
          "@aws-cdk/aws-appsync:useArnForSourceApiAssociationIdentifier": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, will always use the arn for identifiers for CfnSourceApiAssociation in the GraphqlApi construct rather than id."
          },
          "@aws-cdk/aws-rds:preventRenderingDeprecatedCredentials": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, creating an RDS database cluster from a snapshot will only render credentials for snapshot credentials."
          },
          "@aws-cdk/aws-codepipeline-actions:useNewDefaultBranchForCodeCommitSource": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, the CodeCommit source action is using the default branch name 'main'."
          },
          "@aws-cdk/aws-cloudwatch-actions:changeLambdaPermissionLogicalIdForLambdaAction": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, the logical ID of a Lambda permission for a Lambda action includes an alarm ID."
          },
          "@aws-cdk/aws-codepipeline:crossAccountKeysDefaultValueToFalse": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Enables Pipeline to set the default value for crossAccountKeys to false."
          },
          "@aws-cdk/aws-codepipeline:defaultPipelineTypeToV2": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Enables Pipeline to set the default pipeline type to V2."
          },
          "@aws-cdk/aws-kms:reduceCrossAccountRegionPolicyScope": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, IAM Policy created from KMS key grant will reduce the resource scope to this key only."
          },
          "@aws-cdk/pipelines:reduceAssetRoleTrustScope": {
            "recommendedValue": true,
            "explanation": "Remove the root account principal from PipelineAssetsFileRole trust policy"
          },
          "@aws-cdk/aws-eks:nodegroupNameAttribute": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, nodegroupName attribute of the provisioned EKS NodeGroup will not have the cluster name prefix."
          },
          "@aws-cdk/aws-ec2:ebsDefaultGp3Volume": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, the default volume type of the EBS volume will be GP3"
          },
          "@aws-cdk/aws-ecs:removeDefaultDeploymentAlarm": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, remove default deployment alarm settings"
          },
          "@aws-cdk/custom-resources:logApiResponseDataPropertyTrueDefault": {
            "userValue": false,
            "recommendedValue": false,
            "explanation": "When enabled, the custom resource used for `AwsCustomResource` will configure the `logApiResponseData` property as true by default"
          },
          "@aws-cdk/aws-s3:keepNotificationInImportedBucket": {
            "userValue": false,
            "recommendedValue": false,
            "explanation": "When enabled, Adding notifications to a bucket in the current stack will not remove notification from imported stack."
          },
          "@aws-cdk/aws-stepfunctions-tasks:useNewS3UriParametersForBedrockInvokeModelTask": {
            "recommendedValue": true,
            "explanation": "When enabled, use new props for S3 URI field in task definition of state machine for bedrock invoke model."
          },
          "@aws-cdk/aws-ecs:enableImdsBlockingDeprecatedFeature": {
            "userValue": false,
            "recommendedValue": false,
            "explanation": "When set to true along with canContainersAccessInstanceRole=false in ECS cluster, new updated commands will be added to UserData to block container accessing IMDS. **Applicable to Linux only. IMPORTANT: See [details.](#aws-cdkaws-ecsenableImdsBlockingDeprecatedFeature)**"
          },
          "@aws-cdk/aws-ecs:disableEcsImdsBlocking": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When set to true, CDK synth will throw exception if canContainersAccessInstanceRole is false. **IMPORTANT: See [details.](#aws-cdkaws-ecsdisableEcsImdsBlocking)**"
          },
          "@aws-cdk/aws-ecs:reduceEc2FargateCloudWatchPermissions": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, we will only grant the necessary permissions when users specify cloudwatch log group through logConfiguration"
          },
          "@aws-cdk/aws-dynamodb:resourcePolicyPerReplica": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled will allow you to specify a resource policy per replica, and not copy the source table policy to all replicas"
          },
          "@aws-cdk/aws-ec2:ec2SumTImeoutEnabled": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, initOptions.timeout and resourceSignalTimeout values will be summed together."
          },
          "@aws-cdk/aws-appsync:appSyncGraphQLAPIScopeLambdaPermission": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, a Lambda authorizer Permission created when using GraphqlApi will be properly scoped with a SourceArn."
          },
          "@aws-cdk/aws-rds:setCorrectValueForDatabaseInstanceReadReplicaInstanceResourceId": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, the value of property `instanceResourceId` in construct `DatabaseInstanceReadReplica` will be set to the correct value which is `DbiResourceId` instead of currently `DbInstanceArn`"
          },
          "@aws-cdk/core:cfnIncludeRejectComplexResourceUpdateCreatePolicyIntrinsics": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, CFN templates added with `cfn-include` will error if the template contains Resource Update or Create policies with CFN Intrinsics that include non-primitive values."
          },
          "@aws-cdk/aws-lambda-nodejs:sdkV3ExcludeSmithyPackages": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, both `@aws-sdk` and `@smithy` packages will be excluded from the Lambda Node.js 18.x runtime to prevent version mismatches in bundled applications."
          },
          "@aws-cdk/aws-stepfunctions-tasks:fixRunEcsTaskPolicy": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, the resource of IAM Run Ecs policy generated by SFN EcsRunTask will reference the definition, instead of constructing ARN."
          },
          "@aws-cdk/aws-ec2:bastionHostUseAmazonLinux2023ByDefault": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, the BastionHost construct will use the latest Amazon Linux 2023 AMI, instead of Amazon Linux 2."
          },
          "@aws-cdk/core:aspectStabilization": {
            "recommendedValue": true,
            "explanation": "When enabled, a stabilization loop will be run when invoking Aspects during synthesis."
          },
          "@aws-cdk/aws-route53-targets:userPoolDomainNameMethodWithoutCustomResource": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, use a new method for DNS Name of user pool domain target without creating a custom resource."
          },
          "@aws-cdk/aws-elasticloadbalancingV2:albDualstackWithoutPublicIpv4SecurityGroupRulesDefault": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, the default security group ingress rules will allow IPv6 ingress from anywhere"
          },
          "@aws-cdk/aws-iam:oidcRejectUnauthorizedConnections": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, the default behaviour of OIDC provider will reject unauthorized connections"
          },
          "@aws-cdk/core:enableAdditionalMetadataCollection": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, CDK will expand the scope of usage data collected to better inform CDK development and improve communication for security concerns and emerging issues."
          },
          "@aws-cdk/aws-lambda:createNewPoliciesWithAddToRolePolicy": {
            "userValue": false,
            "recommendedValue": false,
            "explanation": "[Deprecated] When enabled, Lambda will create new inline policies with AddToRolePolicy instead of adding to the Default Policy Statement"
          },
          "@aws-cdk/aws-s3:setUniqueReplicationRoleName": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, CDK will automatically generate a unique role name that is used for s3 object replication."
          },
          "@aws-cdk/pipelines:reduceStageRoleTrustScope": {
            "recommendedValue": true,
            "explanation": "Remove the root account principal from Stage addActions trust policy"
          },
          "@aws-cdk/aws-events:requireEventBusPolicySid": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, grantPutEventsTo() will use resource policies with Statement IDs for service principals."
          },
          "@aws-cdk/core:aspectPrioritiesMutating": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When set to true, Aspects added by the construct library on your behalf will be given a priority of MUTATING."
          },
          "@aws-cdk/aws-dynamodb:retainTableReplica": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, table replica will be default to the removal policy of source table unless specified otherwise."
          },
          "@aws-cdk/cognito:logUserPoolClientSecretValue": {
            "recommendedValue": false,
            "explanation": "When disabled, the value of the user pool client secret will not be logged in the custom resource lambda function logs."
          },
          "@aws-cdk/pipelines:reduceCrossAccountActionRoleTrustScope": {
            "recommendedValue": true,
            "explanation": "When enabled, scopes down the trust policy for the cross-account action role"
          },
          "@aws-cdk/aws-stepfunctions:useDistributedMapResultWriterV2": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, the resultWriterV2 property of DistributedMap will be used insted of resultWriter"
          },
          "@aws-cdk/s3-notifications:addS3TrustKeyPolicyForSnsSubscriptions": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Add an S3 trust policy to a KMS key resource policy for SNS subscriptions."
          },
          "@aws-cdk/aws-ec2:requirePrivateSubnetsForEgressOnlyInternetGateway": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, the EgressOnlyGateway resource is only created if private subnets are defined in the dual-stack VPC."
          },
          "@aws-cdk/aws-ec2-alpha:useResourceIdForVpcV2Migration": {
            "recommendedValue": false,
            "explanation": "When enabled, use resource IDs for VPC V2 migration"
          },
          "@aws-cdk/aws-s3:publicAccessBlockedByDefault": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, setting any combination of options for BlockPublicAccess will automatically set true for any options not defined."
          },
          "@aws-cdk/aws-lambda:useCdkManagedLogGroup": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, CDK creates and manages loggroup for the lambda function"
          }
        }
      }
    }
  },
  "missing": [
    {
      "key": "availability-zones:account=12345678:region=us-east-1",
      "provider": "availability-zones",
      "props": {
        "dummyValue": [
          "dummy1a",
          "dummy1b",
          "dummy1c"
        ],
        "account": "12345678",
        "region": "us-east-1",
        "lookupRoleArn": "arn:${AWS::Partition}:iam::12345678:role/cdk-hnb659fds-lookup-role-12345678-us-east-1"
      }
    }
  ],
  "minimumCliVersion": "2.1019.2"
}