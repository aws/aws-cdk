"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const cdk = require("aws-cdk-lib");
const servicediscovery = require("aws-cdk-lib/aws-servicediscovery");
const app = new cdk.App();
const stack = new cdk.Stack(app, 'aws-servicediscovery-integ');
const namespace = new servicediscovery.HttpNamespace(stack, 'MyNamespace', {
    name: 'MyHTTPNamespace',
});
const service1 = namespace.createService('NonIpService', {
    description: 'service registering non-ip instances',
});
service1.registerNonIpInstance('NonIpInstance', {
    customAttributes: { arn: 'arn:aws:s3:::mybucket' },
});
const service2 = namespace.createService('IpService', {
    description: 'service registering ip instances',
    healthCheck: {
        type: servicediscovery.HealthCheckType.HTTP,
        resourcePath: '/check',
    },
});
service2.registerIpInstance('IpInstance', {
    ipv4: '54.239.25.192',
});
app.synth();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW50ZWcuc2VydmljZS13aXRoLWh0dHAtbmFtZXNwYWNlLmxpdC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbImludGVnLnNlcnZpY2Utd2l0aC1odHRwLW5hbWVzcGFjZS5saXQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxtQ0FBbUM7QUFDbkMscUVBQXFFO0FBRXJFLE1BQU0sR0FBRyxHQUFHLElBQUksR0FBRyxDQUFDLEdBQUcsRUFBRSxDQUFDO0FBQzFCLE1BQU0sS0FBSyxHQUFHLElBQUksR0FBRyxDQUFDLEtBQUssQ0FBQyxHQUFHLEVBQUUsNEJBQTRCLENBQUMsQ0FBQztBQUUvRCxNQUFNLFNBQVMsR0FBRyxJQUFJLGdCQUFnQixDQUFDLGFBQWEsQ0FBQyxLQUFLLEVBQUUsYUFBYSxFQUFFO0lBQ3pFLElBQUksRUFBRSxpQkFBaUI7Q0FDeEIsQ0FBQyxDQUFDO0FBRUgsTUFBTSxRQUFRLEdBQUcsU0FBUyxDQUFDLGFBQWEsQ0FBQyxjQUFjLEVBQUU7SUFDdkQsV0FBVyxFQUFFLHNDQUFzQztDQUNwRCxDQUFDLENBQUM7QUFFSCxRQUFRLENBQUMscUJBQXFCLENBQUMsZUFBZSxFQUFFO0lBQzlDLGdCQUFnQixFQUFFLEVBQUUsR0FBRyxFQUFFLHVCQUF1QixFQUFFO0NBQ25ELENBQUMsQ0FBQztBQUVILE1BQU0sUUFBUSxHQUFHLFNBQVMsQ0FBQyxhQUFhLENBQUMsV0FBVyxFQUFFO0lBQ3BELFdBQVcsRUFBRSxrQ0FBa0M7SUFDL0MsV0FBVyxFQUFFO1FBQ1gsSUFBSSxFQUFFLGdCQUFnQixDQUFDLGVBQWUsQ0FBQyxJQUFJO1FBQzNDLFlBQVksRUFBRSxRQUFRO0tBQ3ZCO0NBQ0YsQ0FBQyxDQUFDO0FBRUgsUUFBUSxDQUFDLGtCQUFrQixDQUFDLFlBQVksRUFBRTtJQUN4QyxJQUFJLEVBQUUsZUFBZTtDQUN0QixDQUFDLENBQUM7QUFFSCxHQUFHLENBQUMsS0FBSyxFQUFFLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBjZGsgZnJvbSAnYXdzLWNkay1saWInO1xuaW1wb3J0ICogYXMgc2VydmljZWRpc2NvdmVyeSBmcm9tICdhd3MtY2RrLWxpYi9hd3Mtc2VydmljZWRpc2NvdmVyeSc7XG5cbmNvbnN0IGFwcCA9IG5ldyBjZGsuQXBwKCk7XG5jb25zdCBzdGFjayA9IG5ldyBjZGsuU3RhY2soYXBwLCAnYXdzLXNlcnZpY2VkaXNjb3ZlcnktaW50ZWcnKTtcblxuY29uc3QgbmFtZXNwYWNlID0gbmV3IHNlcnZpY2VkaXNjb3ZlcnkuSHR0cE5hbWVzcGFjZShzdGFjaywgJ015TmFtZXNwYWNlJywge1xuICBuYW1lOiAnTXlIVFRQTmFtZXNwYWNlJyxcbn0pO1xuXG5jb25zdCBzZXJ2aWNlMSA9IG5hbWVzcGFjZS5jcmVhdGVTZXJ2aWNlKCdOb25JcFNlcnZpY2UnLCB7XG4gIGRlc2NyaXB0aW9uOiAnc2VydmljZSByZWdpc3RlcmluZyBub24taXAgaW5zdGFuY2VzJyxcbn0pO1xuXG5zZXJ2aWNlMS5yZWdpc3Rlck5vbklwSW5zdGFuY2UoJ05vbklwSW5zdGFuY2UnLCB7XG4gIGN1c3RvbUF0dHJpYnV0ZXM6IHsgYXJuOiAnYXJuOmF3czpzMzo6Om15YnVja2V0JyB9LFxufSk7XG5cbmNvbnN0IHNlcnZpY2UyID0gbmFtZXNwYWNlLmNyZWF0ZVNlcnZpY2UoJ0lwU2VydmljZScsIHtcbiAgZGVzY3JpcHRpb246ICdzZXJ2aWNlIHJlZ2lzdGVyaW5nIGlwIGluc3RhbmNlcycsXG4gIGhlYWx0aENoZWNrOiB7XG4gICAgdHlwZTogc2VydmljZWRpc2NvdmVyeS5IZWFsdGhDaGVja1R5cGUuSFRUUCxcbiAgICByZXNvdXJjZVBhdGg6ICcvY2hlY2snLFxuICB9LFxufSk7XG5cbnNlcnZpY2UyLnJlZ2lzdGVySXBJbnN0YW5jZSgnSXBJbnN0YW5jZScsIHtcbiAgaXB2NDogJzU0LjIzOS4yNS4xOTInLFxufSk7XG5cbmFwcC5zeW50aCgpO1xuIl19