{
 "Resources": {
  "Vpc8378EB38": {
   "Type": "AWS::EC2::VPC",
   "Properties": {
    "CidrBlock": "10.0.0.0/16",
    "EnableDnsHostnames": true,
    "EnableDnsSupport": true,
    "InstanceTenancy": "default",
    "Tags": [
     {
      "Key": "Name",
      "Value": "efs-from-imported-subnet/Vpc"
     }
    ]
   }
  },
  "VpctestSubnet1Subnet43126774": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": {
     "Fn::Select": [
      0,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.0.0.0/17",
    "MapPublicIpOnLaunch": true,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "test"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Public"
     },
     {
      "Key": "Name",
      "Value": "efs-from-imported-subnet/Vpc/testSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "Vpc8378EB38"
    }
   }
  },
  "VpctestSubnet1RouteTableF77D2377": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "efs-from-imported-subnet/Vpc/testSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "Vpc8378EB38"
    }
   }
  },
  "VpctestSubnet1RouteTableAssociationE292CAA1": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "VpctestSubnet1RouteTableF77D2377"
    },
    "SubnetId": {
     "Ref": "VpctestSubnet1Subnet43126774"
    }
   }
  },
  "VpctestSubnet1DefaultRouteA2DE75B7": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "GatewayId": {
     "Ref": "VpcIGWD7BA715C"
    },
    "RouteTableId": {
     "Ref": "VpctestSubnet1RouteTableF77D2377"
    }
   },
   "DependsOn": [
    "VpcVPCGWBF912B6E"
   ]
  },
  "VpctestSubnet1EIPEE8206FB": {
   "Type": "AWS::EC2::EIP",
   "Properties": {
    "Domain": "vpc",
    "Tags": [
     {
      "Key": "Name",
      "Value": "efs-from-imported-subnet/Vpc/testSubnet1"
     }
    ]
   }
  },
  "VpctestSubnet1NATGateway4E5EAED1": {
   "Type": "AWS::EC2::NatGateway",
   "Properties": {
    "AllocationId": {
     "Fn::GetAtt": [
      "VpctestSubnet1EIPEE8206FB",
      "AllocationId"
     ]
    },
    "SubnetId": {
     "Ref": "VpctestSubnet1Subnet43126774"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "efs-from-imported-subnet/Vpc/testSubnet1"
     }
    ]
   },
   "DependsOn": [
    "VpctestSubnet1DefaultRouteA2DE75B7",
    "VpctestSubnet1RouteTableAssociationE292CAA1"
   ]
  },
  "VpctestSubnet2Subnet3B2E5192": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": {
     "Fn::Select": [
      1,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.0.128.0/17",
    "MapPublicIpOnLaunch": true,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "test"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Public"
     },
     {
      "Key": "Name",
      "Value": "efs-from-imported-subnet/Vpc/testSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "Vpc8378EB38"
    }
   }
  },
  "VpctestSubnet2RouteTable25D207BE": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "efs-from-imported-subnet/Vpc/testSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "Vpc8378EB38"
    }
   }
  },
  "VpctestSubnet2RouteTableAssociationFA920AD0": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "VpctestSubnet2RouteTable25D207BE"
    },
    "SubnetId": {
     "Ref": "VpctestSubnet2Subnet3B2E5192"
    }
   }
  },
  "VpctestSubnet2DefaultRoute31936D04": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "GatewayId": {
     "Ref": "VpcIGWD7BA715C"
    },
    "RouteTableId": {
     "Ref": "VpctestSubnet2RouteTable25D207BE"
    }
   },
   "DependsOn": [
    "VpcVPCGWBF912B6E"
   ]
  },
  "VpcIGWD7BA715C": {
   "Type": "AWS::EC2::InternetGateway",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "efs-from-imported-subnet/Vpc"
     }
    ]
   }
  },
  "VpcVPCGWBF912B6E": {
   "Type": "AWS::EC2::VPCGatewayAttachment",
   "Properties": {
    "InternetGatewayId": {
     "Ref": "VpcIGWD7BA715C"
    },
    "VpcId": {
     "Ref": "Vpc8378EB38"
    }
   }
  },
  "FileSystem8A8E25C0": {
   "Type": "AWS::EFS::FileSystem",
   "Properties": {
    "Encrypted": true,
    "FileSystemPolicy": {
     "Statement": [
      {
       "Action": [
        "elasticfilesystem:ClientRootAccess",
        "elasticfilesystem:ClientWrite"
       ],
       "Condition": {
        "Bool": {
         "elasticfilesystem:AccessedViaMountTarget": "true"
        }
       },
       "Effect": "Allow",
       "Principal": {
        "AWS": "*"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "FileSystemTags": [
     {
      "Key": "Name",
      "Value": "efs-from-imported-subnet/FileSystem"
     }
    ]
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  },
  "FileSystemEfsSecurityGroup212D3ACB": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "efs-from-imported-subnet/FileSystem/EfsSecurityGroup",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "Tags": [
     {
      "Key": "Name",
      "Value": "efs-from-imported-subnet/FileSystem"
     }
    ],
    "VpcId": {
     "Ref": "Vpc8378EB38"
    }
   }
  },
  "FileSystemEfsMountTargetSubnetE0FBE03C": {
   "Type": "AWS::EFS::MountTarget",
   "Properties": {
    "FileSystemId": {
     "Ref": "FileSystem8A8E25C0"
    },
    "SecurityGroups": [
     {
      "Fn::GetAtt": [
       "FileSystemEfsSecurityGroup212D3ACB",
       "GroupId"
      ]
     }
    ],
    "SubnetId": {
     "Ref": "VpctestSubnet1Subnet43126774"
    }
   }
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}