{
 "Resources": {
  "NlbByHardcodedArnSecurityGroup0from00000443BE5EDB93": {
   "Type": "AWS::EC2::SecurityGroupIngress",
   "Properties": {
    "CidrIp": "0.0.0.0/0",
    "Description": "from 0.0.0.0/0:443",
    "FromPort": 443,
    "GroupId": "sg-123456789012",
    "IpProtocol": "tcp",
    "ToPort": 443
   }
  },
  "NlbByHardcodedArnAlarmFlowCount60A46641": {
   "Type": "AWS::CloudWatch::Alarm",
   "Properties": {
    "ComparisonOperator": "GreaterThanOrEqualToThreshold",
    "Dimensions": [
     {
      "Name": "LoadBalancer",
      "Value": "network/my-load-balancer/50dc6c495c0c9188"
     }
    ],
    "EvaluationPeriods": 1,
    "MetricName": "ActiveFlowCount",
    "Namespace": "AWS/NetworkELB",
    "Period": 300,
    "Statistic": "Average",
    "Threshold": 0
   }
  },
  "NlbByCfnOutputsFromAnotherStackOutsideCdkSecurityGroup0from0000044343E5A61F": {
   "Type": "AWS::EC2::SecurityGroupIngress",
   "Properties": {
    "CidrIp": "0.0.0.0/0",
    "Description": "from 0.0.0.0/0:443",
    "FromPort": 443,
    "GroupId": {
     "Fn::ImportValue": "SgId"
    },
    "IpProtocol": "tcp",
    "ToPort": 443
   }
  },
  "NlbByCfnOutputsFromAnotherStackOutsideCdkAlarmFlowCountD9A1D5AC": {
   "Type": "AWS::CloudWatch::Alarm",
   "Properties": {
    "ComparisonOperator": "GreaterThanOrEqualToThreshold",
    "Dimensions": [
     {
      "Name": "LoadBalancer",
      "Value": {
       "Fn::Join": [
        "",
        [
         {
          "Fn::Select": [
           1,
           {
            "Fn::Split": [
             "/",
             {
              "Fn::ImportValue": "NlbArn"
             }
            ]
           }
          ]
         },
         "/",
         {
          "Fn::Select": [
           2,
           {
            "Fn::Split": [
             "/",
             {
              "Fn::ImportValue": "NlbArn"
             }
            ]
           }
          ]
         },
         "/",
         {
          "Fn::Select": [
           3,
           {
            "Fn::Split": [
             "/",
             {
              "Fn::ImportValue": "NlbArn"
             }
            ]
           }
          ]
         }
        ]
       ]
      }
     }
    ],
    "EvaluationPeriods": 1,
    "MetricName": "ActiveFlowCount",
    "Namespace": "AWS/NetworkELB",
    "Period": 300,
    "Statistic": "Average",
    "Threshold": 0
   }
  },
  "NlbByCfnOutputsFromAnotherStackWithinCdkSecurityGroup0from000004437639F0E5": {
   "Type": "AWS::EC2::SecurityGroupIngress",
   "Properties": {
    "CidrIp": "0.0.0.0/0",
    "Description": "from 0.0.0.0/0:443",
    "FromPort": 443,
    "GroupId": {
     "Fn::ImportValue": "aws-cdk-elbv2-StackWithLb:ExportsOutputFnGetAttSGADB53937GroupId97E49F2D"
    },
    "IpProtocol": "tcp",
    "ToPort": 443
   }
  },
  "NlbByCfnOutputsFromAnotherStackWithinCdkAlarmFlowCountD865DB84": {
   "Type": "AWS::CloudWatch::Alarm",
   "Properties": {
    "ComparisonOperator": "GreaterThanOrEqualToThreshold",
    "Dimensions": [
     {
      "Name": "LoadBalancer",
      "Value": {
       "Fn::Join": [
        "",
        [
         {
          "Fn::Select": [
           1,
           {
            "Fn::Split": [
             "/",
             {
              "Fn::ImportValue": "aws-cdk-elbv2-StackWithLb:ExportsOutputRefLB8A12904C1150D6A6"
             }
            ]
           }
          ]
         },
         "/",
         {
          "Fn::Select": [
           2,
           {
            "Fn::Split": [
             "/",
             {
              "Fn::ImportValue": "aws-cdk-elbv2-StackWithLb:ExportsOutputRefLB8A12904C1150D6A6"
             }
            ]
           }
          ]
         },
         "/",
         {
          "Fn::Select": [
           3,
           {
            "Fn::Split": [
             "/",
             {
              "Fn::ImportValue": "aws-cdk-elbv2-StackWithLb:ExportsOutputRefLB8A12904C1150D6A6"
             }
            ]
           }
          ]
         }
        ]
       ]
      }
     }
    ],
    "EvaluationPeriods": 1,
    "MetricName": "ActiveFlowCount",
    "Namespace": "AWS/NetworkELB",
    "Period": 300,
    "Statistic": "Average",
    "Threshold": 0
   }
  },
  "TgByHardcodedArnHealthyHostCount433C0E6E": {
   "Type": "AWS::CloudWatch::Alarm",
   "Properties": {
    "ComparisonOperator": "GreaterThanOrEqualToThreshold",
    "Dimensions": [
     {
      "Name": "LoadBalancer",
      "Value": "net/my-load-balancer/50dc6c495c0c9188"
     },
     {
      "Name": "TargetGroup",
      "Value": "targetgroup/my-target-group/50dc6c495c0c9188"
     }
    ],
    "EvaluationPeriods": 1,
    "MetricName": "HealthyHostCount",
    "Namespace": "AWS/NetworkELB",
    "Period": 300,
    "Statistic": "Average",
    "Threshold": 0
   }
  },
  "TgByCfnOutputsFromAnotherStackOutsideCdkHealthyHostCount3DA06734": {
   "Type": "AWS::CloudWatch::Alarm",
   "Properties": {
    "ComparisonOperator": "GreaterThanOrEqualToThreshold",
    "Dimensions": [
     {
      "Name": "LoadBalancer",
      "Value": {
       "Fn::Join": [
        "",
        [
         {
          "Fn::Select": [
           1,
           {
            "Fn::Split": [
             "/",
             {
              "Fn::ImportValue": "NlbArn"
             }
            ]
           }
          ]
         },
         "/",
         {
          "Fn::Select": [
           2,
           {
            "Fn::Split": [
             "/",
             {
              "Fn::ImportValue": "NlbArn"
             }
            ]
           }
          ]
         },
         "/",
         {
          "Fn::Select": [
           3,
           {
            "Fn::Split": [
             "/",
             {
              "Fn::ImportValue": "NlbArn"
             }
            ]
           }
          ]
         }
        ]
       ]
      }
     },
     {
      "Name": "TargetGroup",
      "Value": {
       "Fn::Select": [
        5,
        {
         "Fn::Split": [
          ":",
          {
           "Fn::ImportValue": "TgArn"
          }
         ]
        }
       ]
      }
     }
    ],
    "EvaluationPeriods": 1,
    "MetricName": "HealthyHostCount",
    "Namespace": "AWS/NetworkELB",
    "Period": 300,
    "Statistic": "Average",
    "Threshold": 0
   }
  },
  "TgByCfnOutputsFromAnotherStackWithinCdkHealthyHostCountD4851E85": {
   "Type": "AWS::CloudWatch::Alarm",
   "Properties": {
    "ComparisonOperator": "GreaterThanOrEqualToThreshold",
    "Dimensions": [
     {
      "Name": "LoadBalancer",
      "Value": {
       "Fn::Join": [
        "",
        [
         {
          "Fn::Select": [
           1,
           {
            "Fn::Split": [
             "/",
             {
              "Fn::ImportValue": "aws-cdk-elbv2-StackWithLb:ExportsOutputRefLB8A12904C1150D6A6"
             }
            ]
           }
          ]
         },
         "/",
         {
          "Fn::Select": [
           2,
           {
            "Fn::Split": [
             "/",
             {
              "Fn::ImportValue": "aws-cdk-elbv2-StackWithLb:ExportsOutputRefLB8A12904C1150D6A6"
             }
            ]
           }
          ]
         },
         "/",
         {
          "Fn::Select": [
           3,
           {
            "Fn::Split": [
             "/",
             {
              "Fn::ImportValue": "aws-cdk-elbv2-StackWithLb:ExportsOutputRefLB8A12904C1150D6A6"
             }
            ]
           }
          ]
         }
        ]
       ]
      }
     },
     {
      "Name": "TargetGroup",
      "Value": {
       "Fn::Select": [
        5,
        {
         "Fn::Split": [
          ":",
          {
           "Fn::ImportValue": "aws-cdk-elbv2-StackWithLb:ExportsOutputRefLBListenerTargetGroupGroup07C223BF73476D0D"
          }
         ]
        }
       ]
      }
     }
    ],
    "EvaluationPeriods": 1,
    "MetricName": "HealthyHostCount",
    "Namespace": "AWS/NetworkELB",
    "Period": 300,
    "Statistic": "Average",
    "Threshold": 0
   }
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}