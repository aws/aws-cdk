{
 "Resources": {
  "Vpc8378EB38": {
   "Type": "AWS::EC2::VPC",
   "Properties": {
    "CidrBlock": "10.0.0.0/16",
    "EnableDnsHostnames": true,
    "EnableDnsSupport": true,
    "InstanceTenancy": "default",
    "Tags": [
     {
      "Key": "Name",
      "Value": "IntegAlbOidc/Vpc"
     }
    ]
   }
  },
  "VpcPublicSubnet1Subnet5C2D37C4": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": {
     "Fn::Select": [
      0,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.0.0.0/18",
    "MapPublicIpOnLaunch": true,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Public"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Public"
     },
     {
      "Key": "Name",
      "Value": "IntegAlbOidc/Vpc/PublicSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "Vpc8378EB38"
    }
   }
  },
  "VpcPublicSubnet1RouteTable6C95E38E": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "IntegAlbOidc/Vpc/PublicSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "Vpc8378EB38"
    }
   }
  },
  "VpcPublicSubnet1RouteTableAssociation97140677": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "VpcPublicSubnet1RouteTable6C95E38E"
    },
    "SubnetId": {
     "Ref": "VpcPublicSubnet1Subnet5C2D37C4"
    }
   }
  },
  "VpcPublicSubnet1DefaultRoute3DA9E72A": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "GatewayId": {
     "Ref": "VpcIGWD7BA715C"
    },
    "RouteTableId": {
     "Ref": "VpcPublicSubnet1RouteTable6C95E38E"
    }
   },
   "DependsOn": [
    "VpcVPCGWBF912B6E"
   ]
  },
  "VpcPublicSubnet1EIPD7E02669": {
   "Type": "AWS::EC2::EIP",
   "Properties": {
    "Domain": "vpc",
    "Tags": [
     {
      "Key": "Name",
      "Value": "IntegAlbOidc/Vpc/PublicSubnet1"
     }
    ]
   }
  },
  "VpcPublicSubnet1NATGateway4D7517AA": {
   "Type": "AWS::EC2::NatGateway",
   "Properties": {
    "AllocationId": {
     "Fn::GetAtt": [
      "VpcPublicSubnet1EIPD7E02669",
      "AllocationId"
     ]
    },
    "SubnetId": {
     "Ref": "VpcPublicSubnet1Subnet5C2D37C4"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "IntegAlbOidc/Vpc/PublicSubnet1"
     }
    ]
   },
   "DependsOn": [
    "VpcPublicSubnet1DefaultRoute3DA9E72A",
    "VpcPublicSubnet1RouteTableAssociation97140677"
   ]
  },
  "VpcPublicSubnet2Subnet691E08A3": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": {
     "Fn::Select": [
      1,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.0.64.0/18",
    "MapPublicIpOnLaunch": true,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Public"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Public"
     },
     {
      "Key": "Name",
      "Value": "IntegAlbOidc/Vpc/PublicSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "Vpc8378EB38"
    }
   }
  },
  "VpcPublicSubnet2RouteTable94F7E489": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "IntegAlbOidc/Vpc/PublicSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "Vpc8378EB38"
    }
   }
  },
  "VpcPublicSubnet2RouteTableAssociationDD5762D8": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "VpcPublicSubnet2RouteTable94F7E489"
    },
    "SubnetId": {
     "Ref": "VpcPublicSubnet2Subnet691E08A3"
    }
   }
  },
  "VpcPublicSubnet2DefaultRoute97F91067": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "GatewayId": {
     "Ref": "VpcIGWD7BA715C"
    },
    "RouteTableId": {
     "Ref": "VpcPublicSubnet2RouteTable94F7E489"
    }
   },
   "DependsOn": [
    "VpcVPCGWBF912B6E"
   ]
  },
  "VpcPublicSubnet2EIP3C605A87": {
   "Type": "AWS::EC2::EIP",
   "Properties": {
    "Domain": "vpc",
    "Tags": [
     {
      "Key": "Name",
      "Value": "IntegAlbOidc/Vpc/PublicSubnet2"
     }
    ]
   }
  },
  "VpcPublicSubnet2NATGateway9182C01D": {
   "Type": "AWS::EC2::NatGateway",
   "Properties": {
    "AllocationId": {
     "Fn::GetAtt": [
      "VpcPublicSubnet2EIP3C605A87",
      "AllocationId"
     ]
    },
    "SubnetId": {
     "Ref": "VpcPublicSubnet2Subnet691E08A3"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "IntegAlbOidc/Vpc/PublicSubnet2"
     }
    ]
   },
   "DependsOn": [
    "VpcPublicSubnet2DefaultRoute97F91067",
    "VpcPublicSubnet2RouteTableAssociationDD5762D8"
   ]
  },
  "VpcPrivateSubnet1Subnet536B997A": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": {
     "Fn::Select": [
      0,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.0.128.0/18",
    "MapPublicIpOnLaunch": false,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Private"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Private"
     },
     {
      "Key": "Name",
      "Value": "IntegAlbOidc/Vpc/PrivateSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "Vpc8378EB38"
    }
   }
  },
  "VpcPrivateSubnet1RouteTableB2C5B500": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "IntegAlbOidc/Vpc/PrivateSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "Vpc8378EB38"
    }
   }
  },
  "VpcPrivateSubnet1RouteTableAssociation70C59FA6": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "VpcPrivateSubnet1RouteTableB2C5B500"
    },
    "SubnetId": {
     "Ref": "VpcPrivateSubnet1Subnet536B997A"
    }
   }
  },
  "VpcPrivateSubnet1DefaultRouteBE02A9ED": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "NatGatewayId": {
     "Ref": "VpcPublicSubnet1NATGateway4D7517AA"
    },
    "RouteTableId": {
     "Ref": "VpcPrivateSubnet1RouteTableB2C5B500"
    }
   }
  },
  "VpcPrivateSubnet2Subnet3788AAA1": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": {
     "Fn::Select": [
      1,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.0.192.0/18",
    "MapPublicIpOnLaunch": false,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Private"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Private"
     },
     {
      "Key": "Name",
      "Value": "IntegAlbOidc/Vpc/PrivateSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "Vpc8378EB38"
    }
   }
  },
  "VpcPrivateSubnet2RouteTableA678073B": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "IntegAlbOidc/Vpc/PrivateSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "Vpc8378EB38"
    }
   }
  },
  "VpcPrivateSubnet2RouteTableAssociationA89CAD56": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "VpcPrivateSubnet2RouteTableA678073B"
    },
    "SubnetId": {
     "Ref": "VpcPrivateSubnet2Subnet3788AAA1"
    }
   }
  },
  "VpcPrivateSubnet2DefaultRoute060D2087": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "NatGatewayId": {
     "Ref": "VpcPublicSubnet2NATGateway9182C01D"
    },
    "RouteTableId": {
     "Ref": "VpcPrivateSubnet2RouteTableA678073B"
    }
   }
  },
  "VpcIGWD7BA715C": {
   "Type": "AWS::EC2::InternetGateway",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "IntegAlbOidc/Vpc"
     }
    ]
   }
  },
  "VpcVPCGWBF912B6E": {
   "Type": "AWS::EC2::VPCGatewayAttachment",
   "Properties": {
    "InternetGatewayId": {
     "Ref": "VpcIGWD7BA715C"
    },
    "VpcId": {
     "Ref": "Vpc8378EB38"
    }
   }
  },
  "VpcRestrictDefaultSecurityGroupCustomResourceC73DA2BE": {
   "Type": "Custom::VpcRestrictDefaultSG",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "CustomVpcRestrictDefaultSGCustomResourceProviderHandlerDC833E5E",
      "Arn"
     ]
    },
    "DefaultSecurityGroupId": {
     "Fn::GetAtt": [
      "Vpc8378EB38",
      "DefaultSecurityGroup"
     ]
    },
    "Account": {
     "Ref": "AWS::AccountId"
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  },
  "CustomVpcRestrictDefaultSGCustomResourceProviderRole26592FE0": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Version": "2012-10-17",
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ]
    },
    "ManagedPolicyArns": [
     {
      "Fn::Sub": "arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
     }
    ],
    "Policies": [
     {
      "PolicyName": "Inline",
      "PolicyDocument": {
       "Version": "2012-10-17",
       "Statement": [
        {
         "Effect": "Allow",
         "Action": [
          "ec2:AuthorizeSecurityGroupIngress",
          "ec2:AuthorizeSecurityGroupEgress",
          "ec2:RevokeSecurityGroupIngress",
          "ec2:RevokeSecurityGroupEgress"
         ],
         "Resource": [
          {
           "Fn::Join": [
            "",
            [
             "arn:",
             {
              "Ref": "AWS::Partition"
             },
             ":ec2:",
             {
              "Ref": "AWS::Region"
             },
             ":",
             {
              "Ref": "AWS::AccountId"
             },
             ":security-group/",
             {
              "Fn::GetAtt": [
               "Vpc8378EB38",
               "DefaultSecurityGroup"
              ]
             }
            ]
           ]
          }
         ]
        }
       ]
      }
     }
    ]
   }
  },
  "CustomVpcRestrictDefaultSGCustomResourceProviderHandlerDC833E5E": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "a099fdfc61c84ffc56cef4fb2c9472483623ac865ce5d8fca88c89cf60d48d03.zip"
    },
    "Timeout": 900,
    "MemorySize": 128,
    "Handler": "__entrypoint__.handler",
    "Role": {
     "Fn::GetAtt": [
      "CustomVpcRestrictDefaultSGCustomResourceProviderRole26592FE0",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x",
    "Description": "Lambda function for removing all inbound/outbound rules from the VPC default security group"
   },
   "DependsOn": [
    "CustomVpcRestrictDefaultSGCustomResourceProviderRole26592FE0"
   ]
  },
  "Certificate4E7ABB08": {
   "Type": "AWS::CertificateManager::Certificate",
   "Properties": {
    "DomainName": "*.example.com",
    "DomainValidationOptions": [
     {
      "DomainName": "*.example.com",
      "HostedZoneId": "Z23ABC4XYZL05B"
     }
    ],
    "Tags": [
     {
      "Key": "Name",
      "Value": "IntegAlbOidc/Certificate"
     }
    ],
    "ValidationMethod": "DNS"
   }
  },
  "UserPool6BA7E5F2": {
   "Type": "AWS::Cognito::UserPool",
   "Properties": {
    "AccountRecoverySetting": {
     "RecoveryMechanisms": [
      {
       "Name": "verified_phone_number",
       "Priority": 1
      },
      {
       "Name": "verified_email",
       "Priority": 2
      }
     ]
    },
    "AdminCreateUserConfig": {
     "AllowAdminCreateUserOnly": true
    },
    "AutoVerifiedAttributes": [
     "email"
    ],
    "EmailVerificationMessage": "The verification code to your new account is {####}",
    "EmailVerificationSubject": "Verify your new account",
    "SmsVerificationMessage": "The verification code to your new account is {####}",
    "UsernameAttributes": [
     "email"
    ],
    "VerificationMessageTemplate": {
     "DefaultEmailOption": "CONFIRM_WITH_CODE",
     "EmailMessage": "The verification code to your new account is {####}",
     "EmailSubject": "Verify your new account",
     "SmsMessage": "The verification code to your new account is {####}"
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  },
  "UserPoolDomainD0EA232A": {
   "Type": "AWS::Cognito::UserPoolDomain",
   "Properties": {
    "Domain": "z23abc4xyzl05b",
    "UserPoolId": {
     "Ref": "UserPool6BA7E5F2"
    }
   }
  },
  "UserPoolUserPoolClient40176907": {
   "Type": "AWS::Cognito::UserPoolClient",
   "Properties": {
    "AllowedOAuthFlows": [
     "code"
    ],
    "AllowedOAuthFlowsUserPoolClient": true,
    "AllowedOAuthScopes": [
     "profile",
     "phone",
     "email",
     "openid",
     "aws.cognito.signin.user.admin"
    ],
    "CallbackURLs": [
     "https://*.example.com/oauth2/idpresponse"
    ],
    "GenerateSecret": true,
    "SupportedIdentityProviders": [
     "COGNITO"
    ],
    "UserPoolId": {
     "Ref": "UserPool6BA7E5F2"
    }
   }
  },
  "UserPoolUserPoolClientDescribeCognitoUserPoolClientA6EA22D2": {
   "Type": "Custom::DescribeCognitoUserPoolClient",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "AWS679f53fac002430cb0da5b7982bd22872D164C4C",
      "Arn"
     ]
    },
    "Create": {
     "Fn::Join": [
      "",
      [
       "{\"region\":\"",
       {
        "Ref": "AWS::Region"
       },
       "\",\"service\":\"CognitoIdentityServiceProvider\",\"action\":\"describeUserPoolClient\",\"parameters\":{\"UserPoolId\":\"",
       {
        "Ref": "UserPool6BA7E5F2"
       },
       "\",\"ClientId\":\"",
       {
        "Ref": "UserPoolUserPoolClient40176907"
       },
       "\"},\"physicalResourceId\":{\"id\":\"",
       {
        "Ref": "UserPoolUserPoolClient40176907"
       },
       "\"}}"
      ]
     ]
    },
    "Update": {
     "Fn::Join": [
      "",
      [
       "{\"region\":\"",
       {
        "Ref": "AWS::Region"
       },
       "\",\"service\":\"CognitoIdentityServiceProvider\",\"action\":\"describeUserPoolClient\",\"parameters\":{\"UserPoolId\":\"",
       {
        "Ref": "UserPool6BA7E5F2"
       },
       "\",\"ClientId\":\"",
       {
        "Ref": "UserPoolUserPoolClient40176907"
       },
       "\"},\"physicalResourceId\":{\"id\":\"",
       {
        "Ref": "UserPoolUserPoolClient40176907"
       },
       "\"}}"
      ]
     ]
    },
    "InstallLatestAwsSdk": false
   },
   "DependsOn": [
    "UserPoolUserPoolClientDescribeCognitoUserPoolClientCustomResourcePolicyFFF2174F"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  },
  "UserPoolUserPoolClientDescribeCognitoUserPoolClientCustomResourcePolicyFFF2174F": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "cognito-idp:DescribeUserPoolClient",
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "UserPool6BA7E5F2",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "UserPoolUserPoolClientDescribeCognitoUserPoolClientCustomResourcePolicyFFF2174F",
    "Roles": [
     {
      "Ref": "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2"
     }
    ]
   }
  },
  "LoadBalancerBE9EEC3A": {
   "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
   "Properties": {
    "LoadBalancerAttributes": [
     {
      "Key": "deletion_protection.enabled",
      "Value": "false"
     }
    ],
    "Scheme": "internet-facing",
    "SecurityGroups": [
     {
      "Fn::GetAtt": [
       "LoadBalancerSecurityGroupA28D6DD7",
       "GroupId"
      ]
     }
    ],
    "Subnets": [
     {
      "Ref": "VpcPublicSubnet1Subnet5C2D37C4"
     },
     {
      "Ref": "VpcPublicSubnet2Subnet691E08A3"
     }
    ],
    "Type": "application"
   },
   "DependsOn": [
    "VpcPublicSubnet1DefaultRoute3DA9E72A",
    "VpcPublicSubnet1RouteTableAssociation97140677",
    "VpcPublicSubnet2DefaultRoute97F91067",
    "VpcPublicSubnet2RouteTableAssociationDD5762D8"
   ]
  },
  "LoadBalancerSecurityGroupA28D6DD7": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "Automatically created Security Group for ELB IntegAlbOidcLoadBalancer3609D530",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow to IdP endpoint",
      "FromPort": 443,
      "IpProtocol": "tcp",
      "ToPort": 443
     }
    ],
    "SecurityGroupIngress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow from anyone on port 443",
      "FromPort": 443,
      "IpProtocol": "tcp",
      "ToPort": 443
     }
    ],
    "VpcId": {
     "Ref": "Vpc8378EB38"
    }
   }
  },
  "LoadBalancerListenerE1A099B9": {
   "Type": "AWS::ElasticLoadBalancingV2::Listener",
   "Properties": {
    "Certificates": [
     {
      "CertificateArn": {
       "Ref": "Certificate4E7ABB08"
      }
     }
    ],
    "DefaultActions": [
     {
      "AuthenticateOidcConfig": {
       "AuthorizationEndpoint": {
        "Fn::Join": [
         "",
         [
          "https://",
          {
           "Ref": "UserPoolDomainD0EA232A"
          },
          ".auth.",
          {
           "Ref": "AWS::Region"
          },
          ".amazoncognito.com/oauth2/authorize"
         ]
        ]
       },
       "ClientId": {
        "Ref": "UserPoolUserPoolClient40176907"
       },
       "ClientSecret": {
        "Fn::GetAtt": [
         "UserPoolUserPoolClientDescribeCognitoUserPoolClientA6EA22D2",
         "UserPoolClient.ClientSecret"
        ]
       },
       "Issuer": {
        "Fn::Join": [
         "",
         [
          "https://cognito-idp.",
          {
           "Ref": "AWS::Region"
          },
          ".amazonaws.com/",
          {
           "Ref": "UserPool6BA7E5F2"
          }
         ]
        ]
       },
       "TokenEndpoint": {
        "Fn::Join": [
         "",
         [
          "https://",
          {
           "Ref": "UserPoolDomainD0EA232A"
          },
          ".auth.",
          {
           "Ref": "AWS::Region"
          },
          ".amazoncognito.com/oauth2/token"
         ]
        ]
       },
       "UserInfoEndpoint": {
        "Fn::Join": [
         "",
         [
          "https://",
          {
           "Ref": "UserPoolDomainD0EA232A"
          },
          ".auth.",
          {
           "Ref": "AWS::Region"
          },
          ".amazoncognito.com/oauth2/userInfo"
         ]
        ]
       }
      },
      "Order": 1,
      "Type": "authenticate-oidc"
     },
     {
      "FixedResponseConfig": {
       "ContentType": "text/plain",
       "MessageBody": "Authenticated",
       "StatusCode": "200"
      },
      "Order": 2,
      "Type": "fixed-response"
     }
    ],
    "LoadBalancerArn": {
     "Ref": "LoadBalancerBE9EEC3A"
    },
    "Port": 443,
    "Protocol": "HTTPS"
   }
  },
  "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   }
  },
  "AWS679f53fac002430cb0da5b7982bd22872D164C4C": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "b0de6372e1c756b7afa1a8a1d0a21ee4cd330150290abffc9bc163f285150514.zip"
    },
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x",
    "Timeout": 120
   },
   "DependsOn": [
    "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2"
   ]
  },
  "ARecordE7B57761": {
   "Type": "AWS::Route53::RecordSet",
   "Properties": {
    "AliasTarget": {
     "DNSName": {
      "Fn::Join": [
       "",
       [
        "dualstack.",
        {
         "Fn::GetAtt": [
          "LoadBalancerBE9EEC3A",
          "DNSName"
         ]
        }
       ]
      ]
     },
     "HostedZoneId": {
      "Fn::GetAtt": [
       "LoadBalancerBE9EEC3A",
       "CanonicalHostedZoneID"
      ]
     }
    },
    "HostedZoneId": "Z23ABC4XYZL05B",
    "Name": "example.com.",
    "Type": "A"
   }
  },
  "UserFDDCDD17": {
   "Type": "Custom::CognitoUser",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "AWS679f53fac002430cb0da5b7982bd22872D164C4C",
      "Arn"
     ]
    },
    "Create": {
     "Fn::Join": [
      "",
      [
       "{\"service\":\"CognitoIdentityServiceProvider\",\"action\":\"adminCreateUser\",\"parameters\":{\"UserPoolId\":\"",
       {
        "Ref": "UserPool6BA7E5F2"
       },
       "\",\"Username\":\"test-user@example.com\",\"UserAttributes\":[{\"Name\":\"email\",\"Value\":\"test-user@example.com\"},{\"Name\":\"email_verified\",\"Value\":\"true\"}],\"MessageAction\":\"SUPPRESS\"},\"physicalResourceId\":{\"id\":\"User\"}}"
      ]
     ]
    },
    "InstallLatestAwsSdk": false
   },
   "DependsOn": [
    "UserCustomResourcePolicyC2EB5139"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  },
  "UserCustomResourcePolicyC2EB5139": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "cognito-idp:AdminCreateUser",
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "UserPool6BA7E5F2",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "UserCustomResourcePolicyC2EB5139",
    "Roles": [
     {
      "Ref": "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2"
     }
    ]
   }
  },
  "UserSetUserPasswordAD2F2A64": {
   "Type": "Custom::CognitoUserPassword",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "AWS679f53fac002430cb0da5b7982bd22872D164C4C",
      "Arn"
     ]
    },
    "Create": {
     "Fn::Join": [
      "",
      [
       "{\"service\":\"CognitoIdentityServiceProvider\",\"action\":\"adminSetUserPassword\",\"parameters\":{\"UserPoolId\":\"",
       {
        "Ref": "UserPool6BA7E5F2"
       },
       "\",\"Username\":\"",
       {
        "Fn::GetAtt": [
         "UserFDDCDD17",
         "User.Username"
        ]
       },
       "\",\"Password\":\"TestUser@123\",\"Permanent\":true},\"physicalResourceId\":{\"id\":\"SetUserPassword\"}}"
      ]
     ]
    },
    "InstallLatestAwsSdk": false
   },
   "DependsOn": [
    "UserCustomResourcePolicyC2EB5139",
    "UserFDDCDD17",
    "UserSetUserPasswordCustomResourcePolicy7B250C76"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  },
  "UserSetUserPasswordCustomResourcePolicy7B250C76": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "cognito-idp:AdminSetUserPassword",
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "UserPool6BA7E5F2",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "UserSetUserPasswordCustomResourcePolicy7B250C76",
    "Roles": [
     {
      "Ref": "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2"
     }
    ]
   },
   "DependsOn": [
    "UserCustomResourcePolicyC2EB5139",
    "UserFDDCDD17"
   ]
  },
  "SigninServiceRole24B8BB32": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   }
  },
  "Signin352C80E6": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "1832f4c7bb54fe8f4eb5677dc53ae4204e4b27b12077ddd397a6755206864302.zip"
    },
    "Environment": {
     "Variables": {
      "TEST_USERNAME": "test-user@example.com",
      "TEST_PASSWORD": "TestUser@123",
      "TEST_URL": "https://*.example.com"
     }
    },
    "FunctionName": "cdk-integ-alb-oidc-signin-handler",
    "Handler": "index.handler",
    "MemorySize": 1024,
    "Role": {
     "Fn::GetAtt": [
      "SigninServiceRole24B8BB32",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x",
    "Timeout": 300
   },
   "DependsOn": [
    "SigninServiceRole24B8BB32"
   ]
  }
 },
 "Outputs": {
  "ExportsOutputRefSignin352C80E64BA58F71": {
   "Value": {
    "Ref": "Signin352C80E6"
   },
   "Export": {
    "Name": "IntegAlbOidc:ExportsOutputRefSignin352C80E64BA58F71"
   }
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}