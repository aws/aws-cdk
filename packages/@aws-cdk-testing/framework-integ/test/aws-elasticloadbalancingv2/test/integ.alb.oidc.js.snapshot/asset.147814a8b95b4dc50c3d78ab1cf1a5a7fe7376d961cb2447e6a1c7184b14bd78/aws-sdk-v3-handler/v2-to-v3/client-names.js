"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.CLIENT_NAMES = void 0;
exports.CLIENT_NAMES = [
    'ACM',
    'ACMPCA',
    'APIGateway',
    'ARCZonalShift',
    'AccessAnalyzer',
    'Account',
    'AlexaForBusiness',
    'Amp',
    'Amplify',
    'AmplifyBackend',
    'AmplifyUIBuilder',
    'ApiGatewayManagementApi',
    'ApiGatewayV2',
    'AppConfig',
    'AppConfigData',
    'AppIntegrations',
    'AppMesh',
    'AppRunner',
    'AppStream',
    'AppSync',
    'Appflow',
    'ApplicationAutoScaling',
    'ApplicationCostProfiler',
    'ApplicationInsights',
    'Athena',
    'AuditManager',
    'AugmentedAIRuntime',
    'AutoScaling',
    'AutoScalingPlans',
    'Backup',
    'BackupGateway',
    'BackupStorage',
    'Batch',
    'Billingconductor',
    'Braket',
    'Budgets',
    'CUR',
    'Chime',
    'ChimeSDKIdentity',
    'ChimeSDKMediaPipelines',
    'ChimeSDKMeetings',
    'ChimeSDKMessaging',
    'ChimeSDKVoice',
    'Cloud9',
    'CloudControl',
    'CloudDirectory',
    'CloudFormation',
    'CloudFront',
    'CloudHSM',
    'CloudHSMV2',
    'CloudSearch',
    'CloudSearchDomain',
    'CloudTrail',
    'CloudWatch',
    'CloudWatchEvents',
    'CloudWatchLogs',
    'CodeArtifact',
    'CodeBuild',
    'CodeCatalyst',
    'CodeCommit',
    'CodeDeploy',
    'CodeGuruProfiler',
    'CodeGuruReviewer',
    'CodePipeline',
    'CodeStar',
    'CodeStarNotifications',
    'CodeStarconnections',
    'CognitoIdentity',
    'CognitoIdentityServiceProvider',
    'CognitoSync',
    'Comprehend',
    'ComprehendMedical',
    'ComputeOptimizer',
    'ConfigService',
    'Connect',
    'ConnectCampaigns',
    'ConnectCases',
    'ConnectContactLens',
    'ConnectParticipant',
    'ControlTower',
    'CostExplorer',
    'CustomerProfiles',
    'DAX',
    'DLM',
    'DMS',
    'DataBrew',
    'DataExchange',
    'DataPipeline',
    'DataSync',
    'Detective',
    'DevOpsGuru',
    'DeviceFarm',
    'DirectConnect',
    'DirectoryService',
    'Discovery',
    'DocDB',
    'DocDBElastic',
    'Drs',
    'DynamoDB',
    'DynamoDBStreams',
    'EBS',
    'EC2',
    'EC2InstanceConnect',
    'ECR',
    'ECRPUBLIC',
    'ECS',
    'EFS',
    'EKS',
    'ELB',
    'ELBv2',
    'EMR',
    'EMRServerless',
    'EMRcontainers',
    'ES',
    'ElastiCache',
    'ElasticBeanstalk',
    'ElasticInference',
    'ElasticTranscoder',
    'EventBridge',
    'Evidently',
    'FMS',
    'FSx',
    'Finspace',
    'Finspacedata',
    'Firehose',
    'Fis',
    'ForecastQueryService',
    'ForecastService',
    'FraudDetector',
    'GameLift',
    'GameSparks',
    'Glacier',
    'GlobalAccelerator',
    'Glue',
    'Grafana',
    'Greengrass',
    'GreengrassV2',
    'GroundStation',
    'GuardDuty',
    'Health',
    'HealthLake',
    'Honeycode',
    'IAM',
    'IVS',
    'IdentityStore',
    'Imagebuilder',
    'Inspector',
    'Inspector2',
    'IoT1ClickDevicesService',
    'IoT1ClickProjects',
    'IoTAnalytics',
    'IoTEvents',
    'IoTEventsData',
    'IoTFleetHub',
    'IoTFleetWise',
    'IoTJobsDataPlane',
    'IoTRoboRunner',
    'IoTSecureTunneling',
    'IoTSiteWise',
    'IoTThingsGraph',
    'IoTTwinMaker',
    'IoTWireless',
    'Iot',
    'IotData',
    'IotDeviceAdvisor',
    'Ivschat',
    'KMS',
    'Kafka',
    'KafkaConnect',
    'Kendra',
    'Keyspaces',
    'Kinesis',
    'KinesisAnalytics',
    'KinesisAnalyticsV2',
    'KinesisVideo',
    'KinesisVideoArchivedMedia',
    'KinesisVideoMedia',
    'KinesisVideoSignalingChannels',
    'KinesisVideoWebRTCStorage',
    'LakeFormation',
    'Lambda',
    'LexModelBuildingService',
    'LexModelsV2',
    'LexRuntime',
    'LexRuntimeV2',
    'LicenseManager',
    'LicenseManagerLinuxSubscriptions',
    'LicenseManagerUserSubscriptions',
    'Lightsail',
    'Location',
    'LookoutEquipment',
    'LookoutMetrics',
    'LookoutVision',
    'M2',
    'MQ',
    'MTurk',
    'MWAA',
    'MachineLearning',
    'Macie',
    'Macie2',
    'ManagedBlockchain',
    'MarketplaceCatalog',
    'MarketplaceCommerceAnalytics',
    'MarketplaceEntitlementService',
    'MarketplaceMetering',
    'MediaConnect',
    'MediaConvert',
    'MediaLive',
    'MediaPackage',
    'MediaPackageVod',
    'MediaStore',
    'MediaStoreData',
    'MediaTailor',
    'MemoryDB',
    'Mgn',
    'MigrationHub',
    'MigrationHubConfig',
    'MigrationHubOrchestrator',
    'MigrationHubRefactorSpaces',
    'MigrationHubStrategy',
    'Mobile',
    'Neptune',
    'NetworkFirewall',
    'NetworkManager',
    'Nimble',
    'OAM',
    'Omics',
    'OpenSearch',
    'OpenSearchServerless',
    'OpsWorks',
    'OpsWorksCM',
    'Organizations',
    'Outposts',
    'PI',
    'Panorama',
    'Personalize',
    'PersonalizeEvents',
    'PersonalizeRuntime',
    'Pinpoint',
    'PinpointEmail',
    'PinpointSMSVoice',
    'PinpointSMSVoiceV2',
    'Pipes',
    'Polly',
    'Pricing',
    'PrivateNetworks',
    'Proton',
    'QLDB',
    'QLDBSession',
    'QuickSight',
    'RAM',
    'RDS',
    'RDSDataService',
    'RUM',
    'Rbin',
    'Redshift',
    'RedshiftData',
    'RedshiftServerless',
    'Rekognition',
    'Resiliencehub',
    'ResourceExplorer2',
    'ResourceGroups',
    'ResourceGroupsTaggingAPI',
    'RoboMaker',
    'RolesAnywhere',
    'Route53',
    'Route53Domains',
    'Route53RecoveryCluster',
    'Route53RecoveryControlConfig',
    'Route53RecoveryReadiness',
    'Route53Resolver',
    'S3',
    'S3Control',
    'S3Outposts',
    'SES',
    'SESV2',
    'SMS',
    'SNS',
    'SQS',
    'SSM',
    'SSMContacts',
    'SSMIncidents',
    'SSO',
    'SSOAdmin',
    'SSOOIDC',
    'STS',
    'SWF',
    'SageMaker',
    'SageMakerFeatureStoreRuntime',
    'SageMakerGeospatial',
    'SageMakerMetrics',
    'SageMakerRuntime',
    'SagemakerEdge',
    'SavingsPlans',
    'Scheduler',
    'Schemas',
    'SecretsManager',
    'SecurityHub',
    'SecurityLake',
    'ServerlessApplicationRepository',
    'ServiceCatalog',
    'ServiceCatalogAppRegistry',
    'ServiceDiscovery',
    'ServiceQuotas',
    'Shield',
    'Signer',
    'SimSpaceWeaver',
    'SnowDeviceManagement',
    'Snowball',
    'SsmSap',
    'StepFunctions',
    'StorageGateway',
    'Support',
    'SupportApp',
    'Synthetics',
    'Textract',
    'TimestreamQuery',
    'TimestreamWrite',
    'TranscribeService',
    'Transfer',
    'Translate',
    'VoiceID',
    'WAF',
    'WAFRegional',
    'WAFV2',
    'WellArchitected',
    'Wisdom',
    'WorkDocs',
    'WorkLink',
    'WorkMail',
    'WorkMailMessageFlow',
    'WorkSpaces',
    'WorkSpacesWeb',
    'XRay',
];
//# sourceMappingURL=data:application/json;base64,