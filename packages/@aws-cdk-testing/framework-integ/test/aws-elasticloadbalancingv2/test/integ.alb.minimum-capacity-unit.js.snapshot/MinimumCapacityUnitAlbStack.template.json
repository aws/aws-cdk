{
 "Resources": {
  "Stack8A423254": {
   "Type": "AWS::EC2::VPC",
   "Properties": {
    "CidrBlock": "10.0.0.0/16",
    "EnableDnsHostnames": true,
    "EnableDnsSupport": true,
    "InstanceTenancy": "default",
    "Tags": [
     {
      "Key": "Name",
      "Value": "MinimumCapacityUnitAlbStack/Stack"
     }
    ]
   }
  },
  "StackPublicSubnet1Subnet0AD81D22": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": {
     "Fn::Select": [
      0,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.0.0.0/18",
    "MapPublicIpOnLaunch": true,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Public"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Public"
     },
     {
      "Key": "Name",
      "Value": "MinimumCapacityUnitAlbStack/Stack/PublicSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "Stack8A423254"
    }
   }
  },
  "StackPublicSubnet1RouteTable5057189D": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "MinimumCapacityUnitAlbStack/Stack/PublicSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "Stack8A423254"
    }
   }
  },
  "StackPublicSubnet1RouteTableAssociation74F1C1B6": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "StackPublicSubnet1RouteTable5057189D"
    },
    "SubnetId": {
     "Ref": "StackPublicSubnet1Subnet0AD81D22"
    }
   }
  },
  "StackPublicSubnet1DefaultRoute16154E3D": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "GatewayId": {
     "Ref": "StackIGW2F0A1126"
    },
    "RouteTableId": {
     "Ref": "StackPublicSubnet1RouteTable5057189D"
    }
   },
   "DependsOn": [
    "StackVPCGWFFCB6290"
   ]
  },
  "StackPublicSubnet1EIPBDAAB2A5": {
   "Type": "AWS::EC2::EIP",
   "Properties": {
    "Domain": "vpc",
    "Tags": [
     {
      "Key": "Name",
      "Value": "MinimumCapacityUnitAlbStack/Stack/PublicSubnet1"
     }
    ]
   }
  },
  "StackPublicSubnet1NATGatewayD2E1ABF7": {
   "Type": "AWS::EC2::NatGateway",
   "Properties": {
    "AllocationId": {
     "Fn::GetAtt": [
      "StackPublicSubnet1EIPBDAAB2A5",
      "AllocationId"
     ]
    },
    "SubnetId": {
     "Ref": "StackPublicSubnet1Subnet0AD81D22"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "MinimumCapacityUnitAlbStack/Stack/PublicSubnet1"
     }
    ]
   },
   "DependsOn": [
    "StackPublicSubnet1DefaultRoute16154E3D",
    "StackPublicSubnet1RouteTableAssociation74F1C1B6"
   ]
  },
  "StackPublicSubnet2Subnet3C7D2288": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": {
     "Fn::Select": [
      1,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.0.64.0/18",
    "MapPublicIpOnLaunch": true,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Public"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Public"
     },
     {
      "Key": "Name",
      "Value": "MinimumCapacityUnitAlbStack/Stack/PublicSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "Stack8A423254"
    }
   }
  },
  "StackPublicSubnet2RouteTableCD306445": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "MinimumCapacityUnitAlbStack/Stack/PublicSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "Stack8A423254"
    }
   }
  },
  "StackPublicSubnet2RouteTableAssociation5E8F73F1": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "StackPublicSubnet2RouteTableCD306445"
    },
    "SubnetId": {
     "Ref": "StackPublicSubnet2Subnet3C7D2288"
    }
   }
  },
  "StackPublicSubnet2DefaultRoute0319539B": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "GatewayId": {
     "Ref": "StackIGW2F0A1126"
    },
    "RouteTableId": {
     "Ref": "StackPublicSubnet2RouteTableCD306445"
    }
   },
   "DependsOn": [
    "StackVPCGWFFCB6290"
   ]
  },
  "StackPublicSubnet2EIP8CDBC8C2": {
   "Type": "AWS::EC2::EIP",
   "Properties": {
    "Domain": "vpc",
    "Tags": [
     {
      "Key": "Name",
      "Value": "MinimumCapacityUnitAlbStack/Stack/PublicSubnet2"
     }
    ]
   }
  },
  "StackPublicSubnet2NATGatewayA8E03AB3": {
   "Type": "AWS::EC2::NatGateway",
   "Properties": {
    "AllocationId": {
     "Fn::GetAtt": [
      "StackPublicSubnet2EIP8CDBC8C2",
      "AllocationId"
     ]
    },
    "SubnetId": {
     "Ref": "StackPublicSubnet2Subnet3C7D2288"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "MinimumCapacityUnitAlbStack/Stack/PublicSubnet2"
     }
    ]
   },
   "DependsOn": [
    "StackPublicSubnet2DefaultRoute0319539B",
    "StackPublicSubnet2RouteTableAssociation5E8F73F1"
   ]
  },
  "StackPrivateSubnet1Subnet47AC2BC7": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": {
     "Fn::Select": [
      0,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.0.128.0/18",
    "MapPublicIpOnLaunch": false,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Private"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Private"
     },
     {
      "Key": "Name",
      "Value": "MinimumCapacityUnitAlbStack/Stack/PrivateSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "Stack8A423254"
    }
   }
  },
  "StackPrivateSubnet1RouteTable8ADA6A0C": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "MinimumCapacityUnitAlbStack/Stack/PrivateSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "Stack8A423254"
    }
   }
  },
  "StackPrivateSubnet1RouteTableAssociationFFE38495": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "StackPrivateSubnet1RouteTable8ADA6A0C"
    },
    "SubnetId": {
     "Ref": "StackPrivateSubnet1Subnet47AC2BC7"
    }
   }
  },
  "StackPrivateSubnet1DefaultRouteFBF81BA5": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "NatGatewayId": {
     "Ref": "StackPublicSubnet1NATGatewayD2E1ABF7"
    },
    "RouteTableId": {
     "Ref": "StackPrivateSubnet1RouteTable8ADA6A0C"
    }
   }
  },
  "StackPrivateSubnet2SubnetA2F8EDD8": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": {
     "Fn::Select": [
      1,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.0.192.0/18",
    "MapPublicIpOnLaunch": false,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Private"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Private"
     },
     {
      "Key": "Name",
      "Value": "MinimumCapacityUnitAlbStack/Stack/PrivateSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "Stack8A423254"
    }
   }
  },
  "StackPrivateSubnet2RouteTableA5546697": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "MinimumCapacityUnitAlbStack/Stack/PrivateSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "Stack8A423254"
    }
   }
  },
  "StackPrivateSubnet2RouteTableAssociation68ACB8C1": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "StackPrivateSubnet2RouteTableA5546697"
    },
    "SubnetId": {
     "Ref": "StackPrivateSubnet2SubnetA2F8EDD8"
    }
   }
  },
  "StackPrivateSubnet2DefaultRoute22004492": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "NatGatewayId": {
     "Ref": "StackPublicSubnet2NATGatewayA8E03AB3"
    },
    "RouteTableId": {
     "Ref": "StackPrivateSubnet2RouteTableA5546697"
    }
   }
  },
  "StackIGW2F0A1126": {
   "Type": "AWS::EC2::InternetGateway",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "MinimumCapacityUnitAlbStack/Stack"
     }
    ]
   }
  },
  "StackVPCGWFFCB6290": {
   "Type": "AWS::EC2::VPCGatewayAttachment",
   "Properties": {
    "InternetGatewayId": {
     "Ref": "StackIGW2F0A1126"
    },
    "VpcId": {
     "Ref": "Stack8A423254"
    }
   }
  },
  "LB8A12904C": {
   "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
   "Properties": {
    "LoadBalancerAttributes": [
     {
      "Key": "deletion_protection.enabled",
      "Value": "false"
     }
    ],
    "MinimumLoadBalancerCapacity": {
     "CapacityUnits": 150
    },
    "Scheme": "internal",
    "SecurityGroups": [
     {
      "Fn::GetAtt": [
       "LBSecurityGroup8A41EA2B",
       "GroupId"
      ]
     }
    ],
    "Subnets": [
     {
      "Ref": "StackPrivateSubnet1Subnet47AC2BC7"
     },
     {
      "Ref": "StackPrivateSubnet2SubnetA2F8EDD8"
     }
    ],
    "Type": "application"
   }
  },
  "LBSecurityGroup8A41EA2B": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "Automatically created Security Group for ELB MinimumCapacityUnitAlbStackLBD84B2E1C",
    "SecurityGroupEgress": [
     {
      "CidrIp": "255.255.255.255/32",
      "Description": "Disallow all traffic",
      "FromPort": 252,
      "IpProtocol": "icmp",
      "ToPort": 86
     }
    ],
    "SecurityGroupIngress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow from anyone on port 80",
      "FromPort": 80,
      "IpProtocol": "tcp",
      "ToPort": 80
     }
    ],
    "VpcId": {
     "Ref": "Stack8A423254"
    }
   }
  },
  "LBListener49E825B4": {
   "Type": "AWS::ElasticLoadBalancingV2::Listener",
   "Properties": {
    "DefaultActions": [
     {
      "TargetGroupArn": {
       "Ref": "TargetGroup3D7CD9B8"
      },
      "Type": "forward"
     }
    ],
    "LoadBalancerArn": {
     "Ref": "LB8A12904C"
    },
    "Port": 80,
    "Protocol": "HTTP"
   }
  },
  "TargetGroup3D7CD9B8": {
   "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
   "Properties": {
    "Port": 80,
    "Protocol": "HTTP",
    "TargetGroupAttributes": [
     {
      "Key": "stickiness.enabled",
      "Value": "false"
     }
    ],
    "TargetType": "instance",
    "VpcId": {
     "Ref": "Stack8A423254"
    }
   }
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}