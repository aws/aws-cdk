"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const cloudwatch = require("aws-cdk-lib/aws-cloudwatch");
const cdk = require("aws-cdk-lib");
const integ = require("@aws-cdk/integ-tests-alpha");
const apigw = require("aws-cdk-lib/aws-apigateway");
const app = new cdk.App();
const stack = new cdk.Stack(app, 'restapi-metrics');
const restApi = new apigw.RestApi(stack, 'Api', { cloudWatchRole: true });
const stage = restApi.deploymentStage;
const method = restApi.root.addMethod('GET');
new cloudwatch.Alarm(stack, 'RestApiAlarm', {
    metric: restApi.metricClientError(),
    evaluationPeriods: 1,
    threshold: 1,
});
new cloudwatch.Alarm(stack, 'MethodAlarm', {
    metric: method.metricServerError(stage),
    evaluationPeriods: 1,
    threshold: 1,
});
new cloudwatch.Alarm(stack, 'StageAlarm', {
    metric: stage.metricCount(),
    evaluationPeriods: 1,
    threshold: 1,
});
new integ.IntegTest(app, 'MetricsTest', {
    testCases: [stack],
});
app.synth();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW50ZWcucmVzdGFwaS1tZXRyaWNzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiaW50ZWcucmVzdGFwaS1tZXRyaWNzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEseURBQXlEO0FBQ3pELG1DQUFtQztBQUNuQyxvREFBb0Q7QUFDcEQsb0RBQW9EO0FBRXBELE1BQU0sR0FBRyxHQUFHLElBQUksR0FBRyxDQUFDLEdBQUcsRUFBRSxDQUFDO0FBQzFCLE1BQU0sS0FBSyxHQUFHLElBQUksR0FBRyxDQUFDLEtBQUssQ0FBQyxHQUFHLEVBQUUsaUJBQWlCLENBQUMsQ0FBQztBQUNwRCxNQUFNLE9BQU8sR0FBRyxJQUFJLEtBQUssQ0FBQyxPQUFPLENBQUMsS0FBSyxFQUFFLEtBQUssRUFBRSxFQUFFLGNBQWMsRUFBRSxJQUFJLEVBQUUsQ0FBQyxDQUFDO0FBQzFFLE1BQU0sS0FBSyxHQUFHLE9BQU8sQ0FBQyxlQUFlLENBQUM7QUFDdEMsTUFBTSxNQUFNLEdBQUcsT0FBTyxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsS0FBSyxDQUFDLENBQUM7QUFFN0MsSUFBSSxVQUFVLENBQUMsS0FBSyxDQUFDLEtBQUssRUFBRSxjQUFjLEVBQUU7SUFDMUMsTUFBTSxFQUFFLE9BQU8sQ0FBQyxpQkFBaUIsRUFBRTtJQUNuQyxpQkFBaUIsRUFBRSxDQUFDO0lBQ3BCLFNBQVMsRUFBRSxDQUFDO0NBQ2IsQ0FBQyxDQUFDO0FBRUgsSUFBSSxVQUFVLENBQUMsS0FBSyxDQUFDLEtBQUssRUFBRSxhQUFhLEVBQUU7SUFDekMsTUFBTSxFQUFFLE1BQU0sQ0FBQyxpQkFBaUIsQ0FBQyxLQUFLLENBQUM7SUFDdkMsaUJBQWlCLEVBQUUsQ0FBQztJQUNwQixTQUFTLEVBQUUsQ0FBQztDQUNiLENBQUMsQ0FBQztBQUVILElBQUksVUFBVSxDQUFDLEtBQUssQ0FBQyxLQUFLLEVBQUUsWUFBWSxFQUFFO0lBQ3hDLE1BQU0sRUFBRSxLQUFLLENBQUMsV0FBVyxFQUFFO0lBQzNCLGlCQUFpQixFQUFFLENBQUM7SUFDcEIsU0FBUyxFQUFFLENBQUM7Q0FDYixDQUFDLENBQUM7QUFFSCxJQUFJLEtBQUssQ0FBQyxTQUFTLENBQUMsR0FBRyxFQUFFLGFBQWEsRUFBRTtJQUN0QyxTQUFTLEVBQUUsQ0FBQyxLQUFLLENBQUM7Q0FDbkIsQ0FBQyxDQUFDO0FBRUgsR0FBRyxDQUFDLEtBQUssRUFBRSxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgY2xvdWR3YXRjaCBmcm9tICdhd3MtY2RrLWxpYi9hd3MtY2xvdWR3YXRjaCc7XG5pbXBvcnQgKiBhcyBjZGsgZnJvbSAnYXdzLWNkay1saWInO1xuaW1wb3J0ICogYXMgaW50ZWcgZnJvbSAnQGF3cy1jZGsvaW50ZWctdGVzdHMtYWxwaGEnO1xuaW1wb3J0ICogYXMgYXBpZ3cgZnJvbSAnYXdzLWNkay1saWIvYXdzLWFwaWdhdGV3YXknO1xuXG5jb25zdCBhcHAgPSBuZXcgY2RrLkFwcCgpO1xuY29uc3Qgc3RhY2sgPSBuZXcgY2RrLlN0YWNrKGFwcCwgJ3Jlc3RhcGktbWV0cmljcycpO1xuY29uc3QgcmVzdEFwaSA9IG5ldyBhcGlndy5SZXN0QXBpKHN0YWNrLCAnQXBpJywgeyBjbG91ZFdhdGNoUm9sZTogdHJ1ZSB9KTtcbmNvbnN0IHN0YWdlID0gcmVzdEFwaS5kZXBsb3ltZW50U3RhZ2U7XG5jb25zdCBtZXRob2QgPSByZXN0QXBpLnJvb3QuYWRkTWV0aG9kKCdHRVQnKTtcblxubmV3IGNsb3Vkd2F0Y2guQWxhcm0oc3RhY2ssICdSZXN0QXBpQWxhcm0nLCB7XG4gIG1ldHJpYzogcmVzdEFwaS5tZXRyaWNDbGllbnRFcnJvcigpLFxuICBldmFsdWF0aW9uUGVyaW9kczogMSxcbiAgdGhyZXNob2xkOiAxLFxufSk7XG5cbm5ldyBjbG91ZHdhdGNoLkFsYXJtKHN0YWNrLCAnTWV0aG9kQWxhcm0nLCB7XG4gIG1ldHJpYzogbWV0aG9kLm1ldHJpY1NlcnZlckVycm9yKHN0YWdlKSxcbiAgZXZhbHVhdGlvblBlcmlvZHM6IDEsXG4gIHRocmVzaG9sZDogMSxcbn0pO1xuXG5uZXcgY2xvdWR3YXRjaC5BbGFybShzdGFjaywgJ1N0YWdlQWxhcm0nLCB7XG4gIG1ldHJpYzogc3RhZ2UubWV0cmljQ291bnQoKSxcbiAgZXZhbHVhdGlvblBlcmlvZHM6IDEsXG4gIHRocmVzaG9sZDogMSxcbn0pO1xuXG5uZXcgaW50ZWcuSW50ZWdUZXN0KGFwcCwgJ01ldHJpY3NUZXN0Jywge1xuICB0ZXN0Q2FzZXM6IFtzdGFja10sXG59KTtcblxuYXBwLnN5bnRoKCk7XG4iXX0=