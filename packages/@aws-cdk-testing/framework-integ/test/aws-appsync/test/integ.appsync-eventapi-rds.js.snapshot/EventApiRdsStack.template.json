{
 "Resources": {
  "IntegVPC2FF1AB0E": {
   "Type": "AWS::EC2::VPC",
   "Properties": {
    "CidrBlock": "10.0.0.0/16",
    "EnableDnsHostnames": true,
    "EnableDnsSupport": true,
    "InstanceTenancy": "default",
    "Tags": [
     {
      "Key": "Name",
      "Value": "EventApiRdsStack/Integ-VPC"
     }
    ]
   }
  },
  "IntegVPCPublicSubnet1SubnetE05F7E7D": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": {
     "Fn::Select": [
      0,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.0.0.0/18",
    "MapPublicIpOnLaunch": true,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Public"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Public"
     },
     {
      "Key": "Name",
      "Value": "EventApiRdsStack/Integ-VPC/PublicSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "IntegVPC2FF1AB0E"
    }
   }
  },
  "IntegVPCPublicSubnet1RouteTable622895C7": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "EventApiRdsStack/Integ-VPC/PublicSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "IntegVPC2FF1AB0E"
    }
   }
  },
  "IntegVPCPublicSubnet1RouteTableAssociation0E84800B": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "IntegVPCPublicSubnet1RouteTable622895C7"
    },
    "SubnetId": {
     "Ref": "IntegVPCPublicSubnet1SubnetE05F7E7D"
    }
   }
  },
  "IntegVPCPublicSubnet1DefaultRouteE885D95E": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "GatewayId": {
     "Ref": "IntegVPCIGW02FC78B6"
    },
    "RouteTableId": {
     "Ref": "IntegVPCPublicSubnet1RouteTable622895C7"
    }
   },
   "DependsOn": [
    "IntegVPCVPCGW4DD476C7"
   ]
  },
  "IntegVPCPublicSubnet1EIP1AC057E9": {
   "Type": "AWS::EC2::EIP",
   "Properties": {
    "Domain": "vpc",
    "Tags": [
     {
      "Key": "Name",
      "Value": "EventApiRdsStack/Integ-VPC/PublicSubnet1"
     }
    ]
   }
  },
  "IntegVPCPublicSubnet1NATGateway380AC0A0": {
   "Type": "AWS::EC2::NatGateway",
   "Properties": {
    "AllocationId": {
     "Fn::GetAtt": [
      "IntegVPCPublicSubnet1EIP1AC057E9",
      "AllocationId"
     ]
    },
    "SubnetId": {
     "Ref": "IntegVPCPublicSubnet1SubnetE05F7E7D"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "EventApiRdsStack/Integ-VPC/PublicSubnet1"
     }
    ]
   },
   "DependsOn": [
    "IntegVPCPublicSubnet1DefaultRouteE885D95E",
    "IntegVPCPublicSubnet1RouteTableAssociation0E84800B"
   ]
  },
  "IntegVPCPublicSubnet2Subnet9648DE97": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": {
     "Fn::Select": [
      1,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.0.64.0/18",
    "MapPublicIpOnLaunch": true,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Public"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Public"
     },
     {
      "Key": "Name",
      "Value": "EventApiRdsStack/Integ-VPC/PublicSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "IntegVPC2FF1AB0E"
    }
   }
  },
  "IntegVPCPublicSubnet2RouteTableB79B3910": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "EventApiRdsStack/Integ-VPC/PublicSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "IntegVPC2FF1AB0E"
    }
   }
  },
  "IntegVPCPublicSubnet2RouteTableAssociation831EA0CC": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "IntegVPCPublicSubnet2RouteTableB79B3910"
    },
    "SubnetId": {
     "Ref": "IntegVPCPublicSubnet2Subnet9648DE97"
    }
   }
  },
  "IntegVPCPublicSubnet2DefaultRoute2FC4B163": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "GatewayId": {
     "Ref": "IntegVPCIGW02FC78B6"
    },
    "RouteTableId": {
     "Ref": "IntegVPCPublicSubnet2RouteTableB79B3910"
    }
   },
   "DependsOn": [
    "IntegVPCVPCGW4DD476C7"
   ]
  },
  "IntegVPCPublicSubnet2EIPEA07DF99": {
   "Type": "AWS::EC2::EIP",
   "Properties": {
    "Domain": "vpc",
    "Tags": [
     {
      "Key": "Name",
      "Value": "EventApiRdsStack/Integ-VPC/PublicSubnet2"
     }
    ]
   }
  },
  "IntegVPCPublicSubnet2NATGateway912800A3": {
   "Type": "AWS::EC2::NatGateway",
   "Properties": {
    "AllocationId": {
     "Fn::GetAtt": [
      "IntegVPCPublicSubnet2EIPEA07DF99",
      "AllocationId"
     ]
    },
    "SubnetId": {
     "Ref": "IntegVPCPublicSubnet2Subnet9648DE97"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "EventApiRdsStack/Integ-VPC/PublicSubnet2"
     }
    ]
   },
   "DependsOn": [
    "IntegVPCPublicSubnet2DefaultRoute2FC4B163",
    "IntegVPCPublicSubnet2RouteTableAssociation831EA0CC"
   ]
  },
  "IntegVPCPrivateSubnet1SubnetD5B61223": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": {
     "Fn::Select": [
      0,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.0.128.0/18",
    "MapPublicIpOnLaunch": false,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Private"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Private"
     },
     {
      "Key": "Name",
      "Value": "EventApiRdsStack/Integ-VPC/PrivateSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "IntegVPC2FF1AB0E"
    }
   }
  },
  "IntegVPCPrivateSubnet1RouteTableF2678D77": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "EventApiRdsStack/Integ-VPC/PrivateSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "IntegVPC2FF1AB0E"
    }
   }
  },
  "IntegVPCPrivateSubnet1RouteTableAssociationAD4B0EBF": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "IntegVPCPrivateSubnet1RouteTableF2678D77"
    },
    "SubnetId": {
     "Ref": "IntegVPCPrivateSubnet1SubnetD5B61223"
    }
   }
  },
  "IntegVPCPrivateSubnet1DefaultRoute140D7A84": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "NatGatewayId": {
     "Ref": "IntegVPCPublicSubnet1NATGateway380AC0A0"
    },
    "RouteTableId": {
     "Ref": "IntegVPCPrivateSubnet1RouteTableF2678D77"
    }
   }
  },
  "IntegVPCPrivateSubnet2SubnetFCC4EF23": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": {
     "Fn::Select": [
      1,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.0.192.0/18",
    "MapPublicIpOnLaunch": false,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Private"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Private"
     },
     {
      "Key": "Name",
      "Value": "EventApiRdsStack/Integ-VPC/PrivateSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "IntegVPC2FF1AB0E"
    }
   }
  },
  "IntegVPCPrivateSubnet2RouteTable4132D373": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "EventApiRdsStack/Integ-VPC/PrivateSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "IntegVPC2FF1AB0E"
    }
   }
  },
  "IntegVPCPrivateSubnet2RouteTableAssociation9A15DAD6": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "IntegVPCPrivateSubnet2RouteTable4132D373"
    },
    "SubnetId": {
     "Ref": "IntegVPCPrivateSubnet2SubnetFCC4EF23"
    }
   }
  },
  "IntegVPCPrivateSubnet2DefaultRouteAE44E307": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "NatGatewayId": {
     "Ref": "IntegVPCPublicSubnet2NATGateway912800A3"
    },
    "RouteTableId": {
     "Ref": "IntegVPCPrivateSubnet2RouteTable4132D373"
    }
   }
  },
  "IntegVPCIGW02FC78B6": {
   "Type": "AWS::EC2::InternetGateway",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "EventApiRdsStack/Integ-VPC"
     }
    ]
   }
  },
  "IntegVPCVPCGW4DD476C7": {
   "Type": "AWS::EC2::VPCGatewayAttachment",
   "Properties": {
    "InternetGatewayId": {
     "Ref": "IntegVPCIGW02FC78B6"
    },
    "VpcId": {
     "Ref": "IntegVPC2FF1AB0E"
    }
   }
  },
  "IntegVPCRestrictDefaultSecurityGroupCustomResource42DF8AB1": {
   "Type": "Custom::VpcRestrictDefaultSG",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "CustomVpcRestrictDefaultSGCustomResourceProviderHandlerDC833E5E",
      "Arn"
     ]
    },
    "DefaultSecurityGroupId": {
     "Fn::GetAtt": [
      "IntegVPC2FF1AB0E",
      "DefaultSecurityGroup"
     ]
    },
    "Account": {
     "Ref": "AWS::AccountId"
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  },
  "CustomVpcRestrictDefaultSGCustomResourceProviderRole26592FE0": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Version": "2012-10-17",
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ]
    },
    "ManagedPolicyArns": [
     {
      "Fn::Sub": "arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
     }
    ],
    "Policies": [
     {
      "PolicyName": "Inline",
      "PolicyDocument": {
       "Version": "2012-10-17",
       "Statement": [
        {
         "Effect": "Allow",
         "Action": [
          "ec2:AuthorizeSecurityGroupIngress",
          "ec2:AuthorizeSecurityGroupEgress",
          "ec2:RevokeSecurityGroupIngress",
          "ec2:RevokeSecurityGroupEgress"
         ],
         "Resource": [
          {
           "Fn::Join": [
            "",
            [
             "arn:",
             {
              "Ref": "AWS::Partition"
             },
             ":ec2:",
             {
              "Ref": "AWS::Region"
             },
             ":",
             {
              "Ref": "AWS::AccountId"
             },
             ":security-group/",
             {
              "Fn::GetAtt": [
               "IntegVPC2FF1AB0E",
               "DefaultSecurityGroup"
              ]
             }
            ]
           ]
          }
         ]
        }
       ]
      }
     }
    ]
   }
  },
  "CustomVpcRestrictDefaultSGCustomResourceProviderHandlerDC833E5E": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "a1acfc2b5f4f6b183fd2bb9863f486bc5edef6a357b355a070d9a0e502df418c.zip"
    },
    "Timeout": 900,
    "MemorySize": 128,
    "Handler": "__entrypoint__.handler",
    "Role": {
     "Fn::GetAtt": [
      "CustomVpcRestrictDefaultSGCustomResourceProviderRole26592FE0",
      "Arn"
     ]
    },
    "Runtime": {
     "Fn::FindInMap": [
      "LatestNodeRuntimeMap",
      {
       "Ref": "AWS::Region"
      },
      "value"
     ]
    },
    "Description": "Lambda function for removing all inbound/outbound rules from the VPC default security group"
   },
   "DependsOn": [
    "CustomVpcRestrictDefaultSGCustomResourceProviderRole26592FE0"
   ]
  },
  "IntegClusterSubnets629F72ED": {
   "Type": "AWS::RDS::DBSubnetGroup",
   "Properties": {
    "DBSubnetGroupDescription": "Subnets for Integ-Cluster database",
    "SubnetIds": [
     {
      "Ref": "IntegVPCPrivateSubnet1SubnetD5B61223"
     },
     {
      "Ref": "IntegVPCPrivateSubnet2SubnetFCC4EF23"
     }
    ]
   }
  },
  "IntegClusterSecurityGroupECB0A218": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "RDS security group",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "VpcId": {
     "Ref": "IntegVPC2FF1AB0E"
    }
   }
  },
  "EventApiRdsStackIntegClusterSecretA07206F73fdaad7efa858a3daf9490cf0a702aeb": {
   "Type": "AWS::SecretsManager::Secret",
   "Properties": {
    "Description": {
     "Fn::Join": [
      "",
      [
       "Generated by the CDK for stack: ",
       {
        "Ref": "AWS::StackName"
       }
      ]
     ]
    },
    "GenerateSecretString": {
     "ExcludeCharacters": " %+~`#$&*()|[]{}:;<>?!'/@\"\\",
     "GenerateStringKey": "password",
     "PasswordLength": 30,
     "SecretStringTemplate": "{\"username\":\"clusteradmin\"}"
    },
    "Name": "integ-secretName-v2"
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  },
  "IntegClusterSecretAttachmentC627C903": {
   "Type": "AWS::SecretsManager::SecretTargetAttachment",
   "Properties": {
    "SecretId": {
     "Ref": "EventApiRdsStackIntegClusterSecretA07206F73fdaad7efa858a3daf9490cf0a702aeb"
    },
    "TargetId": {
     "Ref": "IntegCluster4261F36F"
    },
    "TargetType": "AWS::RDS::DBCluster"
   }
  },
  "IntegCluster4261F36F": {
   "Type": "AWS::RDS::DBCluster",
   "Properties": {
    "CopyTagsToSnapshot": true,
    "DBClusterParameterGroupName": "default.aurora-postgresql16",
    "DBSubnetGroupName": {
     "Ref": "IntegClusterSubnets629F72ED"
    },
    "DatabaseName": "integdb",
    "EnableHttpEndpoint": true,
    "Engine": "aurora-postgresql",
    "EngineVersion": "16.6",
    "MasterUserPassword": {
     "Fn::Join": [
      "",
      [
       "{{resolve:secretsmanager:",
       {
        "Ref": "EventApiRdsStackIntegClusterSecretA07206F73fdaad7efa858a3daf9490cf0a702aeb"
       },
       ":SecretString:password::}}"
      ]
     ]
    },
    "MasterUsername": "clusteradmin",
    "Port": 5432,
    "ServerlessV2ScalingConfiguration": {
     "MaxCapacity": 2,
     "MinCapacity": 0.5
    },
    "VpcSecurityGroupIds": [
     {
      "Fn::GetAtt": [
       "IntegClusterSecurityGroupECB0A218",
       "GroupId"
      ]
     }
    ]
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  },
  "IntegClusterwriter03032C94": {
   "Type": "AWS::RDS::DBInstance",
   "Properties": {
    "DBClusterIdentifier": {
     "Ref": "IntegCluster4261F36F"
    },
    "DBInstanceClass": "db.serverless",
    "Engine": "aurora-postgresql",
    "PromotionTier": 0
   },
   "DependsOn": [
    "IntegVPCPrivateSubnet1DefaultRoute140D7A84",
    "IntegVPCPrivateSubnet1RouteTableAssociationAD4B0EBF",
    "IntegVPCPrivateSubnet2DefaultRouteAE44E307",
    "IntegVPCPrivateSubnet2RouteTableAssociation9A15DAD6"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  },
  "PostgresTableResource0A243600": {
   "Type": "Custom::PostgreSQLTable",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "AWS679f53fac002430cb0da5b7982bd22872D164C4C",
      "Arn"
     ]
    },
    "Create": {
     "Fn::Join": [
      "",
      [
       "{\"service\":\"RDSDataService\",\"action\":\"executeStatement\",\"parameters\":{\"resourceArn\":\"arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":rds:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":cluster:",
       {
        "Ref": "IntegCluster4261F36F"
       },
       "\",\"secretArn\":\"arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":secretsmanager:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":secret:integ-secretName-v2\",\"database\":\"integdb\",\"sql\":\"CREATE TABLE IF NOT EXISTS public.events (event_id UUID PRIMARY KEY, message TEXT NOT NULL, ds_type VARCHAR(50) NOT NULL)\"},\"physicalResourceId\":{\"id\":\"arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":rds:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":cluster:",
       {
        "Ref": "IntegCluster4261F36F"
       },
       "/integdb/public/events\"},\"logApiResponseData\":true}"
      ]
     ]
    },
    "Update": {
     "Fn::Join": [
      "",
      [
       "{\"service\":\"RDSDataService\",\"action\":\"executeStatement\",\"parameters\":{\"resourceArn\":\"arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":rds:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":cluster:",
       {
        "Ref": "IntegCluster4261F36F"
       },
       "\",\"secretArn\":\"arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":secretsmanager:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":secret:integ-secretName-v2\",\"database\":\"integdb\",\"sql\":\"CREATE TABLE IF NOT EXISTS public.events (event_id UUID PRIMARY KEY, message TEXT NOT NULL, ds_type VARCHAR(50) NOT NULL)\"},\"physicalResourceId\":{\"id\":\"arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":rds:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":cluster:",
       {
        "Ref": "IntegCluster4261F36F"
       },
       "/integdb/public/events\"},\"logApiResponseData\":true}"
      ]
     ]
    },
    "Delete": {
     "Fn::Join": [
      "",
      [
       "{\"service\":\"RDSDataService\",\"action\":\"executeStatement\",\"parameters\":{\"resourceArn\":\"arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":rds:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":cluster:",
       {
        "Ref": "IntegCluster4261F36F"
       },
       "\",\"secretArn\":\"arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":secretsmanager:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":secret:integ-secretName-v2\",\"database\":\"integdb\",\"sql\":\"DROP TABLE IF EXISTS public.events\"},\"logApiResponseData\":true}"
      ]
     ]
    },
    "InstallLatestAwsSdk": "false"
   },
   "DependsOn": [
    "IntegCluster4261F36F",
    "IntegClusterSecretAttachmentC627C903",
    "EventApiRdsStackIntegClusterSecretA07206F73fdaad7efa858a3daf9490cf0a702aeb",
    "IntegClusterSecurityGroupECB0A218",
    "IntegClusterSubnets629F72ED",
    "IntegClusterwriter03032C94",
    "PostgresTableResourceCustomResourcePolicyD61062D8"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  },
  "PostgresTableResourceCustomResourcePolicyD61062D8": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "rds-data:ExecuteStatement",
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:",
          {
           "Ref": "AWS::Partition"
          },
          ":rds:",
          {
           "Ref": "AWS::Region"
          },
          ":",
          {
           "Ref": "AWS::AccountId"
          },
          ":cluster:",
          {
           "Ref": "IntegCluster4261F36F"
          }
         ]
        ]
       }
      },
      {
       "Action": "secretsmanager:GetSecretValue",
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:",
          {
           "Ref": "AWS::Partition"
          },
          ":secretsmanager:",
          {
           "Ref": "AWS::Region"
          },
          ":",
          {
           "Ref": "AWS::AccountId"
          },
          ":secret:integ-secretName-v2"
         ]
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "PostgresTableResourceCustomResourcePolicyD61062D8",
    "Roles": [
     {
      "Ref": "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2"
     }
    ]
   },
   "DependsOn": [
    "IntegCluster4261F36F",
    "IntegClusterSecretAttachmentC627C903",
    "EventApiRdsStackIntegClusterSecretA07206F73fdaad7efa858a3daf9490cf0a702aeb",
    "IntegClusterSecurityGroupECB0A218",
    "IntegClusterSubnets629F72ED",
    "IntegClusterwriter03032C94"
   ]
  },
  "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   }
  },
  "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleDefaultPolicyD28E1A5E": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "secretsmanager:DescribeSecret",
        "secretsmanager:GetSecretValue"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":secretsmanager:",
           {
            "Ref": "AWS::Region"
           },
           ":",
           {
            "Ref": "AWS::AccountId"
           },
           ":secret:integ-secretName-v2-??????"
          ]
         ]
        },
        {
         "Ref": "IntegClusterSecretAttachmentC627C903"
        }
       ]
      },
      {
       "Action": [
        "rds-data:BatchExecuteStatement",
        "rds-data:BeginTransaction",
        "rds-data:CommitTransaction",
        "rds-data:ExecuteStatement",
        "rds-data:RollbackTransaction"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:",
          {
           "Ref": "AWS::Partition"
          },
          ":rds:",
          {
           "Ref": "AWS::Region"
          },
          ":",
          {
           "Ref": "AWS::AccountId"
          },
          ":cluster:",
          {
           "Ref": "IntegCluster4261F36F"
          }
         ]
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleDefaultPolicyD28E1A5E",
    "Roles": [
     {
      "Ref": "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2"
     }
    ]
   }
  },
  "AWS679f53fac002430cb0da5b7982bd22872D164C4C": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "695130a6c8132c255e833e84e8482a4a144a4a1261c979bd7e3cb7b8258e8876.zip"
    },
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2",
      "Arn"
     ]
    },
    "Runtime": {
     "Fn::FindInMap": [
      "LatestNodeRuntimeMap",
      {
       "Ref": "AWS::Region"
      },
      "value"
     ]
    },
    "Timeout": 300
   },
   "DependsOn": [
    "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleDefaultPolicyD28E1A5E",
    "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2"
   ]
  },
  "EventApiRds68D0750D": {
   "Type": "AWS::AppSync::Api",
   "Properties": {
    "EventConfig": {
     "AuthProviders": [
      {
       "AuthType": "API_KEY"
      }
     ],
     "ConnectionAuthModes": [
      {
       "AuthType": "API_KEY"
      }
     ],
     "DefaultPublishAuthModes": [
      {
       "AuthType": "API_KEY"
      }
     ],
     "DefaultSubscribeAuthModes": [
      {
       "AuthType": "API_KEY"
      }
     ]
    },
    "Name": "RdsEventApi"
   }
  },
  "EventApiRdsDefaultApiKey525323BA": {
   "Type": "AWS::AppSync::ApiKey",
   "Properties": {
    "ApiId": {
     "Fn::GetAtt": [
      "EventApiRds68D0750D",
      "ApiId"
     ]
    }
   }
  },
  "EventApiRdsrdsdsServiceRoleDF08C0D8": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "appsync.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    }
   }
  },
  "EventApiRdsrdsdsServiceRoleDefaultPolicyB327CA2F": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "secretsmanager:DescribeSecret",
        "secretsmanager:GetSecretValue"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":secretsmanager:",
           {
            "Ref": "AWS::Region"
           },
           ":",
           {
            "Ref": "AWS::AccountId"
           },
           ":secret:integ-secretName-v2-??????"
          ]
         ]
        },
        {
         "Ref": "IntegClusterSecretAttachmentC627C903"
        }
       ]
      },
      {
       "Action": [
        "rds-data:BatchExecuteStatement",
        "rds-data:BeginTransaction",
        "rds-data:CommitTransaction",
        "rds-data:ExecuteStatement",
        "rds-data:RollbackTransaction"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:",
          {
           "Ref": "AWS::Partition"
          },
          ":rds:",
          {
           "Ref": "AWS::Region"
          },
          ":",
          {
           "Ref": "AWS::AccountId"
          },
          ":cluster:",
          {
           "Ref": "IntegCluster4261F36F"
          }
         ]
        ]
       }
      },
      {
       "Action": [
        "rds-data:DeleteItems",
        "rds-data:ExecuteSql",
        "rds-data:GetItems",
        "rds-data:InsertItems",
        "rds-data:UpdateItems"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":rds:",
           {
            "Ref": "AWS::Region"
           },
           ":",
           {
            "Ref": "AWS::AccountId"
           },
           ":cluster:",
           {
            "Ref": "IntegCluster4261F36F"
           },
           ":*"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":rds:",
           {
            "Ref": "AWS::Region"
           },
           ":",
           {
            "Ref": "AWS::AccountId"
           },
           ":cluster:",
           {
            "Ref": "IntegCluster4261F36F"
           }
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "EventApiRdsrdsdsServiceRoleDefaultPolicyB327CA2F",
    "Roles": [
     {
      "Ref": "EventApiRdsrdsdsServiceRoleDF08C0D8"
     }
    ]
   }
  },
  "EventApiRdsrdsdsEDC18497": {
   "Type": "AWS::AppSync::DataSource",
   "Properties": {
    "ApiId": {
     "Fn::GetAtt": [
      "EventApiRds68D0750D",
      "ApiId"
     ]
    },
    "Name": "rdsds",
    "RelationalDatabaseConfig": {
     "RdsHttpEndpointConfig": {
      "AwsRegion": {
       "Ref": "AWS::Region"
      },
      "AwsSecretStoreArn": {
       "Fn::Join": [
        "",
        [
         "arn:",
         {
          "Ref": "AWS::Partition"
         },
         ":secretsmanager:",
         {
          "Ref": "AWS::Region"
         },
         ":",
         {
          "Ref": "AWS::AccountId"
         },
         ":secret:integ-secretName-v2"
        ]
       ]
      },
      "DatabaseName": "integdb",
      "DbClusterIdentifier": {
       "Fn::Join": [
        "",
        [
         "arn:",
         {
          "Ref": "AWS::Partition"
         },
         ":rds:",
         {
          "Ref": "AWS::Region"
         },
         ":",
         {
          "Ref": "AWS::AccountId"
         },
         ":cluster:",
         {
          "Ref": "IntegCluster4261F36F"
         }
        ]
       ]
      }
     },
     "RelationalDatabaseSourceType": "RDS_HTTP_ENDPOINT"
    },
    "ServiceRoleArn": {
     "Fn::GetAtt": [
      "EventApiRdsrdsdsServiceRoleDF08C0D8",
      "Arn"
     ]
    },
    "Type": "RELATIONAL_DATABASE"
   }
  },
  "EventApiRdschatD545ACE0": {
   "Type": "AWS::AppSync::ChannelNamespace",
   "Properties": {
    "ApiId": {
     "Fn::GetAtt": [
      "EventApiRds68D0750D",
      "ApiId"
     ]
    },
    "CodeS3Location": {
     "Fn::Sub": "s3://cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}/67ac831abdcb1158be0aed5dc95d435ad86431379694712ee5dca16109f0aa50.js"
    },
    "HandlerConfigs": {
     "OnPublish": {
      "Behavior": "CODE",
      "Integration": {
       "DataSourceName": "rdsds"
      }
     }
    },
    "Name": "chat"
   },
   "DependsOn": [
    "EventApiRdsrdsdsEDC18497"
   ]
  },
  "EventApiRdsTestFunctionServiceRoleE2AAE7F0": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   }
  },
  "EventApiRdsTestFunctionD84110A2": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "cc58ffe6cea9c658ded0d33d16dc6bb780ce30d2c2b9b5a2c0a2367654628dc1.zip"
    },
    "Environment": {
     "Variables": {
      "EVENT_API_REALTIME_URL": {
       "Fn::Join": [
        "",
        [
         "wss://",
         {
          "Fn::GetAtt": [
           "EventApiRds68D0750D",
           "Dns.Realtime"
          ]
         },
         "/event/realtime"
        ]
       ]
      },
      "EVENT_API_HTTP_URL": {
       "Fn::Join": [
        "",
        [
         "https://",
         {
          "Fn::GetAtt": [
           "EventApiRds68D0750D",
           "Dns.Http"
          ]
         },
         "/event"
        ]
       ]
      },
      "API_KEY": {
       "Fn::GetAtt": [
        "EventApiRdsDefaultApiKey525323BA",
        "ApiKey"
       ]
      }
     }
    },
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "EventApiRdsTestFunctionServiceRoleE2AAE7F0",
      "Arn"
     ]
    },
    "Runtime": "nodejs22.x",
    "Timeout": 15
   },
   "DependsOn": [
    "EventApiRdsTestFunctionServiceRoleE2AAE7F0"
   ]
  }
 },
 "Mappings": {
  "LatestNodeRuntimeMap": {
   "af-south-1": {
    "value": "nodejs20.x"
   },
   "ap-east-1": {
    "value": "nodejs20.x"
   },
   "ap-northeast-1": {
    "value": "nodejs20.x"
   },
   "ap-northeast-2": {
    "value": "nodejs20.x"
   },
   "ap-northeast-3": {
    "value": "nodejs20.x"
   },
   "ap-south-1": {
    "value": "nodejs20.x"
   },
   "ap-south-2": {
    "value": "nodejs20.x"
   },
   "ap-southeast-1": {
    "value": "nodejs20.x"
   },
   "ap-southeast-2": {
    "value": "nodejs20.x"
   },
   "ap-southeast-3": {
    "value": "nodejs20.x"
   },
   "ap-southeast-4": {
    "value": "nodejs20.x"
   },
   "ap-southeast-5": {
    "value": "nodejs20.x"
   },
   "ap-southeast-7": {
    "value": "nodejs20.x"
   },
   "ca-central-1": {
    "value": "nodejs20.x"
   },
   "ca-west-1": {
    "value": "nodejs20.x"
   },
   "cn-north-1": {
    "value": "nodejs20.x"
   },
   "cn-northwest-1": {
    "value": "nodejs20.x"
   },
   "eu-central-1": {
    "value": "nodejs20.x"
   },
   "eu-central-2": {
    "value": "nodejs20.x"
   },
   "eu-isoe-west-1": {
    "value": "nodejs18.x"
   },
   "eu-north-1": {
    "value": "nodejs20.x"
   },
   "eu-south-1": {
    "value": "nodejs20.x"
   },
   "eu-south-2": {
    "value": "nodejs20.x"
   },
   "eu-west-1": {
    "value": "nodejs20.x"
   },
   "eu-west-2": {
    "value": "nodejs20.x"
   },
   "eu-west-3": {
    "value": "nodejs20.x"
   },
   "il-central-1": {
    "value": "nodejs20.x"
   },
   "me-central-1": {
    "value": "nodejs20.x"
   },
   "me-south-1": {
    "value": "nodejs20.x"
   },
   "mx-central-1": {
    "value": "nodejs20.x"
   },
   "sa-east-1": {
    "value": "nodejs20.x"
   },
   "us-east-1": {
    "value": "nodejs20.x"
   },
   "us-east-2": {
    "value": "nodejs20.x"
   },
   "us-gov-east-1": {
    "value": "nodejs20.x"
   },
   "us-gov-west-1": {
    "value": "nodejs20.x"
   },
   "us-iso-east-1": {
    "value": "nodejs18.x"
   },
   "us-iso-west-1": {
    "value": "nodejs18.x"
   },
   "us-isob-east-1": {
    "value": "nodejs18.x"
   },
   "us-isob-west-1": {
    "value":"nodejs18.x"
   },
   "us-west-1": {
    "value": "nodejs20.x"
   },
   "us-west-2": {
    "value": "nodejs20.x"
   }
  }
 },
 "Outputs": {
  "ExportsOutputRefEventApiRdsTestFunctionD84110A27566E5F8": {
   "Value": {
    "Ref": "EventApiRdsTestFunctionD84110A2"
   },
   "Export": {
    "Name": "EventApiRdsStack:ExportsOutputRefEventApiRdsTestFunctionD84110A27566E5F8"
   }
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}