{
 "Resources": {
  "PoolD3F588B8": {
   "Type": "AWS::Cognito::UserPool",
   "Properties": {
    "AccountRecoverySetting": {
     "RecoveryMechanisms": [
      {
       "Name": "verified_phone_number",
       "Priority": 1
      },
      {
       "Name": "verified_email",
       "Priority": 2
      }
     ]
    },
    "AdminCreateUserConfig": {
     "AllowAdminCreateUserOnly": false
    },
    "AutoVerifiedAttributes": [
     "email"
    ],
    "EmailVerificationMessage": "The verification code to your new account is {####}",
    "EmailVerificationSubject": "Verify your new account",
    "SmsVerificationMessage": "The verification code to your new account is {####}",
    "UserPoolName": "myPool",
    "VerificationMessageTemplate": {
     "DefaultEmailOption": "CONFIRM_WITH_CODE",
     "EmailMessage": "The verification code to your new account is {####}",
     "EmailSubject": "Verify your new account",
     "SmsMessage": "The verification code to your new account is {####}"
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  },
  "Poollambdaappclient42C69D5A": {
   "Type": "AWS::Cognito::UserPoolClient",
   "Properties": {
    "AllowedOAuthFlows": [
     "implicit",
     "code"
    ],
    "AllowedOAuthFlowsUserPoolClient": true,
    "AllowedOAuthScopes": [
     "profile",
     "phone",
     "email",
     "openid",
     "aws.cognito.signin.user.admin"
    ],
    "CallbackURLs": [
     "https://example.com"
    ],
    "ExplicitAuthFlows": [
     "ALLOW_ADMIN_USER_PASSWORD_AUTH",
     "ALLOW_REFRESH_TOKEN_AUTH"
    ],
    "PreventUserExistenceErrors": "ENABLED",
    "SupportedIdentityProviders": [
     "COGNITO"
    ],
    "UserPoolId": {
     "Ref": "PoolD3F588B8"
    }
   }
  },
  "EventApiCognitoAuthF58AE1C3": {
   "Type": "AWS::AppSync::Api",
   "Properties": {
    "EventConfig": {
     "AuthProviders": [
      {
       "AuthType": "AMAZON_COGNITO_USER_POOLS",
       "CognitoConfig": {
        "AwsRegion": {
         "Ref": "AWS::Region"
        },
        "UserPoolId": {
         "Ref": "PoolD3F588B8"
        }
       }
      }
     ],
     "ConnectionAuthModes": [
      {
       "AuthType": "AMAZON_COGNITO_USER_POOLS"
      }
     ],
     "DefaultPublishAuthModes": [
      {
       "AuthType": "AMAZON_COGNITO_USER_POOLS"
      }
     ],
     "DefaultSubscribeAuthModes": [
      {
       "AuthType": "AMAZON_COGNITO_USER_POOLS"
      }
     ]
    },
    "Name": "api-cognito-auth-test"
   }
  },
  "EventApiCognitoAuthdefault97C03063": {
   "Type": "AWS::AppSync::ChannelNamespace",
   "Properties": {
    "ApiId": {
     "Fn::GetAtt": [
      "EventApiCognitoAuthF58AE1C3",
      "ApiId"
     ]
    },
    "Name": "default"
   }
  },
  "CognitoConfigTestFunctionServiceRole6CA5BEBE": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   }
  },
  "CognitoConfigTestFunctionServiceRoleDefaultPolicyAC30C486": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "cognito-idp:AdminConfirmSignUp",
        "cognito-idp:AdminDeleteUser",
        "cognito-idp:AdminInitiateAuth",
        "cognito-idp:SignUp"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "PoolD3F588B8",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "CognitoConfigTestFunctionServiceRoleDefaultPolicyAC30C486",
    "Roles": [
     {
      "Ref": "CognitoConfigTestFunctionServiceRole6CA5BEBE"
     }
    ]
   }
  },
  "CognitoConfigTestFunction3BE86CF1": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "86c1f810188044ee5131336e9c4bd0c97bf5110181d112dfa5de98163adc8a8d.zip"
    },
    "Environment": {
     "Variables": {
      "EVENT_API_REALTIME_URL": {
       "Fn::Join": [
        "",
        [
         "wss://",
         {
          "Fn::GetAtt": [
           "EventApiCognitoAuthF58AE1C3",
           "Dns.Realtime"
          ]
         },
         "/event/realtime"
        ]
       ]
      },
      "EVENT_API_HTTP_URL": {
       "Fn::Join": [
        "",
        [
         "https://",
         {
          "Fn::GetAtt": [
           "EventApiCognitoAuthF58AE1C3",
           "Dns.Http"
          ]
         },
         "/event"
        ]
       ]
      },
      "USER_POOL_ID": {
       "Ref": "PoolD3F588B8"
      },
      "CLIENT_ID": {
       "Ref": "Poollambdaappclient42C69D5A"
      }
     }
    },
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "CognitoConfigTestFunctionServiceRole6CA5BEBE",
      "Arn"
     ]
    },
    "Runtime": "nodejs22.x",
    "Timeout": 15
   },
   "DependsOn": [
    "CognitoConfigTestFunctionServiceRoleDefaultPolicyAC30C486",
    "CognitoConfigTestFunctionServiceRole6CA5BEBE"
   ]
  }
 },
 "Outputs": {
  "AWSAppSyncEventsHTTPendpoint": {
   "Value": {
    "Fn::GetAtt": [
     "EventApiCognitoAuthF58AE1C3",
     "Dns.Http"
    ]
   }
  },
  "AWSAppSyncEventsRealtimeendpoint": {
   "Value": {
    "Fn::GetAtt": [
     "EventApiCognitoAuthF58AE1C3",
     "Dns.Realtime"
    ]
   }
  },
  "ExportsOutputRefCognitoConfigTestFunction3BE86CF11BB4BF45": {
   "Value": {
    "Ref": "CognitoConfigTestFunction3BE86CF1"
   },
   "Export": {
    "Name": "EventApiCognitoAuthStack:ExportsOutputRefCognitoConfigTestFunction3BE86CF11BB4BF45"
   }
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}