{
  "version": "tree-0.1",
  "tree": {
    "id": "App",
    "path": "",
    "children": {
      "appsync-rds-serverlessV2": {
        "id": "appsync-rds-serverlessV2",
        "path": "appsync-rds-serverlessV2",
        "children": {
          "Integ-VPC": {
            "id": "Integ-VPC",
            "path": "appsync-rds-serverlessV2/Integ-VPC",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "appsync-rds-serverlessV2/Integ-VPC/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::EC2::VPC",
                  "aws:cdk:cloudformation:props": {
                    "cidrBlock": "10.0.0.0/16",
                    "enableDnsHostnames": true,
                    "enableDnsSupport": true,
                    "instanceTenancy": "default",
                    "tags": [
                      {
                        "key": "Name",
                        "value": "appsync-rds-serverlessV2/Integ-VPC"
                      }
                    ]
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_ec2.CfnVPC",
                  "version": "0.0.0"
                }
              },
              "PublicSubnet1": {
                "id": "PublicSubnet1",
                "path": "appsync-rds-serverlessV2/Integ-VPC/PublicSubnet1",
                "children": {
                  "Subnet": {
                    "id": "Subnet",
                    "path": "appsync-rds-serverlessV2/Integ-VPC/PublicSubnet1/Subnet",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Subnet",
                      "aws:cdk:cloudformation:props": {
                        "availabilityZone": {
                          "Fn::Select": [
                            0,
                            {
                              "Fn::GetAZs": ""
                            }
                          ]
                        },
                        "cidrBlock": "10.0.0.0/18",
                        "mapPublicIpOnLaunch": true,
                        "tags": [
                          {
                            "key": "aws-cdk:subnet-name",
                            "value": "Public"
                          },
                          {
                            "key": "aws-cdk:subnet-type",
                            "value": "Public"
                          },
                          {
                            "key": "Name",
                            "value": "appsync-rds-serverlessV2/Integ-VPC/PublicSubnet1"
                          }
                        ],
                        "vpcId": {
                          "Ref": "IntegVPC2FF1AB0E"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_ec2.CfnSubnet",
                      "version": "0.0.0"
                    }
                  },
                  "Acl": {
                    "id": "Acl",
                    "path": "appsync-rds-serverlessV2/Integ-VPC/PublicSubnet1/Acl",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "0.0.0"
                    }
                  },
                  "RouteTable": {
                    "id": "RouteTable",
                    "path": "appsync-rds-serverlessV2/Integ-VPC/PublicSubnet1/RouteTable",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::RouteTable",
                      "aws:cdk:cloudformation:props": {
                        "tags": [
                          {
                            "key": "Name",
                            "value": "appsync-rds-serverlessV2/Integ-VPC/PublicSubnet1"
                          }
                        ],
                        "vpcId": {
                          "Ref": "IntegVPC2FF1AB0E"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_ec2.CfnRouteTable",
                      "version": "0.0.0"
                    }
                  },
                  "RouteTableAssociation": {
                    "id": "RouteTableAssociation",
                    "path": "appsync-rds-serverlessV2/Integ-VPC/PublicSubnet1/RouteTableAssociation",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::SubnetRouteTableAssociation",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "IntegVPCPublicSubnet1RouteTable622895C7"
                        },
                        "subnetId": {
                          "Ref": "IntegVPCPublicSubnet1SubnetE05F7E7D"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_ec2.CfnSubnetRouteTableAssociation",
                      "version": "0.0.0"
                    }
                  },
                  "DefaultRoute": {
                    "id": "DefaultRoute",
                    "path": "appsync-rds-serverlessV2/Integ-VPC/PublicSubnet1/DefaultRoute",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Route",
                      "aws:cdk:cloudformation:props": {
                        "destinationCidrBlock": "0.0.0.0/0",
                        "gatewayId": {
                          "Ref": "IntegVPCIGW02FC78B6"
                        },
                        "routeTableId": {
                          "Ref": "IntegVPCPublicSubnet1RouteTable622895C7"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_ec2.CfnRoute",
                      "version": "0.0.0"
                    }
                  },
                  "EIP": {
                    "id": "EIP",
                    "path": "appsync-rds-serverlessV2/Integ-VPC/PublicSubnet1/EIP",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::EIP",
                      "aws:cdk:cloudformation:props": {
                        "domain": "vpc",
                        "tags": [
                          {
                            "key": "Name",
                            "value": "appsync-rds-serverlessV2/Integ-VPC/PublicSubnet1"
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_ec2.CfnEIP",
                      "version": "0.0.0"
                    }
                  },
                  "NATGateway": {
                    "id": "NATGateway",
                    "path": "appsync-rds-serverlessV2/Integ-VPC/PublicSubnet1/NATGateway",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::NatGateway",
                      "aws:cdk:cloudformation:props": {
                        "allocationId": {
                          "Fn::GetAtt": [
                            "IntegVPCPublicSubnet1EIP1AC057E9",
                            "AllocationId"
                          ]
                        },
                        "subnetId": {
                          "Ref": "IntegVPCPublicSubnet1SubnetE05F7E7D"
                        },
                        "tags": [
                          {
                            "key": "Name",
                            "value": "appsync-rds-serverlessV2/Integ-VPC/PublicSubnet1"
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_ec2.CfnNatGateway",
                      "version": "0.0.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_ec2.PublicSubnet",
                  "version": "0.0.0"
                }
              },
              "PublicSubnet2": {
                "id": "PublicSubnet2",
                "path": "appsync-rds-serverlessV2/Integ-VPC/PublicSubnet2",
                "children": {
                  "Subnet": {
                    "id": "Subnet",
                    "path": "appsync-rds-serverlessV2/Integ-VPC/PublicSubnet2/Subnet",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Subnet",
                      "aws:cdk:cloudformation:props": {
                        "availabilityZone": {
                          "Fn::Select": [
                            1,
                            {
                              "Fn::GetAZs": ""
                            }
                          ]
                        },
                        "cidrBlock": "10.0.64.0/18",
                        "mapPublicIpOnLaunch": true,
                        "tags": [
                          {
                            "key": "aws-cdk:subnet-name",
                            "value": "Public"
                          },
                          {
                            "key": "aws-cdk:subnet-type",
                            "value": "Public"
                          },
                          {
                            "key": "Name",
                            "value": "appsync-rds-serverlessV2/Integ-VPC/PublicSubnet2"
                          }
                        ],
                        "vpcId": {
                          "Ref": "IntegVPC2FF1AB0E"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_ec2.CfnSubnet",
                      "version": "0.0.0"
                    }
                  },
                  "Acl": {
                    "id": "Acl",
                    "path": "appsync-rds-serverlessV2/Integ-VPC/PublicSubnet2/Acl",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "0.0.0"
                    }
                  },
                  "RouteTable": {
                    "id": "RouteTable",
                    "path": "appsync-rds-serverlessV2/Integ-VPC/PublicSubnet2/RouteTable",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::RouteTable",
                      "aws:cdk:cloudformation:props": {
                        "tags": [
                          {
                            "key": "Name",
                            "value": "appsync-rds-serverlessV2/Integ-VPC/PublicSubnet2"
                          }
                        ],
                        "vpcId": {
                          "Ref": "IntegVPC2FF1AB0E"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_ec2.CfnRouteTable",
                      "version": "0.0.0"
                    }
                  },
                  "RouteTableAssociation": {
                    "id": "RouteTableAssociation",
                    "path": "appsync-rds-serverlessV2/Integ-VPC/PublicSubnet2/RouteTableAssociation",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::SubnetRouteTableAssociation",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "IntegVPCPublicSubnet2RouteTableB79B3910"
                        },
                        "subnetId": {
                          "Ref": "IntegVPCPublicSubnet2Subnet9648DE97"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_ec2.CfnSubnetRouteTableAssociation",
                      "version": "0.0.0"
                    }
                  },
                  "DefaultRoute": {
                    "id": "DefaultRoute",
                    "path": "appsync-rds-serverlessV2/Integ-VPC/PublicSubnet2/DefaultRoute",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Route",
                      "aws:cdk:cloudformation:props": {
                        "destinationCidrBlock": "0.0.0.0/0",
                        "gatewayId": {
                          "Ref": "IntegVPCIGW02FC78B6"
                        },
                        "routeTableId": {
                          "Ref": "IntegVPCPublicSubnet2RouteTableB79B3910"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_ec2.CfnRoute",
                      "version": "0.0.0"
                    }
                  },
                  "EIP": {
                    "id": "EIP",
                    "path": "appsync-rds-serverlessV2/Integ-VPC/PublicSubnet2/EIP",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::EIP",
                      "aws:cdk:cloudformation:props": {
                        "domain": "vpc",
                        "tags": [
                          {
                            "key": "Name",
                            "value": "appsync-rds-serverlessV2/Integ-VPC/PublicSubnet2"
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_ec2.CfnEIP",
                      "version": "0.0.0"
                    }
                  },
                  "NATGateway": {
                    "id": "NATGateway",
                    "path": "appsync-rds-serverlessV2/Integ-VPC/PublicSubnet2/NATGateway",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::NatGateway",
                      "aws:cdk:cloudformation:props": {
                        "allocationId": {
                          "Fn::GetAtt": [
                            "IntegVPCPublicSubnet2EIPEA07DF99",
                            "AllocationId"
                          ]
                        },
                        "subnetId": {
                          "Ref": "IntegVPCPublicSubnet2Subnet9648DE97"
                        },
                        "tags": [
                          {
                            "key": "Name",
                            "value": "appsync-rds-serverlessV2/Integ-VPC/PublicSubnet2"
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_ec2.CfnNatGateway",
                      "version": "0.0.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_ec2.PublicSubnet",
                  "version": "0.0.0"
                }
              },
              "PrivateSubnet1": {
                "id": "PrivateSubnet1",
                "path": "appsync-rds-serverlessV2/Integ-VPC/PrivateSubnet1",
                "children": {
                  "Subnet": {
                    "id": "Subnet",
                    "path": "appsync-rds-serverlessV2/Integ-VPC/PrivateSubnet1/Subnet",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Subnet",
                      "aws:cdk:cloudformation:props": {
                        "availabilityZone": {
                          "Fn::Select": [
                            0,
                            {
                              "Fn::GetAZs": ""
                            }
                          ]
                        },
                        "cidrBlock": "10.0.128.0/18",
                        "mapPublicIpOnLaunch": false,
                        "tags": [
                          {
                            "key": "aws-cdk:subnet-name",
                            "value": "Private"
                          },
                          {
                            "key": "aws-cdk:subnet-type",
                            "value": "Private"
                          },
                          {
                            "key": "Name",
                            "value": "appsync-rds-serverlessV2/Integ-VPC/PrivateSubnet1"
                          }
                        ],
                        "vpcId": {
                          "Ref": "IntegVPC2FF1AB0E"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_ec2.CfnSubnet",
                      "version": "0.0.0"
                    }
                  },
                  "Acl": {
                    "id": "Acl",
                    "path": "appsync-rds-serverlessV2/Integ-VPC/PrivateSubnet1/Acl",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "0.0.0"
                    }
                  },
                  "RouteTable": {
                    "id": "RouteTable",
                    "path": "appsync-rds-serverlessV2/Integ-VPC/PrivateSubnet1/RouteTable",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::RouteTable",
                      "aws:cdk:cloudformation:props": {
                        "tags": [
                          {
                            "key": "Name",
                            "value": "appsync-rds-serverlessV2/Integ-VPC/PrivateSubnet1"
                          }
                        ],
                        "vpcId": {
                          "Ref": "IntegVPC2FF1AB0E"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_ec2.CfnRouteTable",
                      "version": "0.0.0"
                    }
                  },
                  "RouteTableAssociation": {
                    "id": "RouteTableAssociation",
                    "path": "appsync-rds-serverlessV2/Integ-VPC/PrivateSubnet1/RouteTableAssociation",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::SubnetRouteTableAssociation",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "IntegVPCPrivateSubnet1RouteTableF2678D77"
                        },
                        "subnetId": {
                          "Ref": "IntegVPCPrivateSubnet1SubnetD5B61223"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_ec2.CfnSubnetRouteTableAssociation",
                      "version": "0.0.0"
                    }
                  },
                  "DefaultRoute": {
                    "id": "DefaultRoute",
                    "path": "appsync-rds-serverlessV2/Integ-VPC/PrivateSubnet1/DefaultRoute",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Route",
                      "aws:cdk:cloudformation:props": {
                        "destinationCidrBlock": "0.0.0.0/0",
                        "natGatewayId": {
                          "Ref": "IntegVPCPublicSubnet1NATGateway380AC0A0"
                        },
                        "routeTableId": {
                          "Ref": "IntegVPCPrivateSubnet1RouteTableF2678D77"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_ec2.CfnRoute",
                      "version": "0.0.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_ec2.PrivateSubnet",
                  "version": "0.0.0"
                }
              },
              "PrivateSubnet2": {
                "id": "PrivateSubnet2",
                "path": "appsync-rds-serverlessV2/Integ-VPC/PrivateSubnet2",
                "children": {
                  "Subnet": {
                    "id": "Subnet",
                    "path": "appsync-rds-serverlessV2/Integ-VPC/PrivateSubnet2/Subnet",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Subnet",
                      "aws:cdk:cloudformation:props": {
                        "availabilityZone": {
                          "Fn::Select": [
                            1,
                            {
                              "Fn::GetAZs": ""
                            }
                          ]
                        },
                        "cidrBlock": "10.0.192.0/18",
                        "mapPublicIpOnLaunch": false,
                        "tags": [
                          {
                            "key": "aws-cdk:subnet-name",
                            "value": "Private"
                          },
                          {
                            "key": "aws-cdk:subnet-type",
                            "value": "Private"
                          },
                          {
                            "key": "Name",
                            "value": "appsync-rds-serverlessV2/Integ-VPC/PrivateSubnet2"
                          }
                        ],
                        "vpcId": {
                          "Ref": "IntegVPC2FF1AB0E"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_ec2.CfnSubnet",
                      "version": "0.0.0"
                    }
                  },
                  "Acl": {
                    "id": "Acl",
                    "path": "appsync-rds-serverlessV2/Integ-VPC/PrivateSubnet2/Acl",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "0.0.0"
                    }
                  },
                  "RouteTable": {
                    "id": "RouteTable",
                    "path": "appsync-rds-serverlessV2/Integ-VPC/PrivateSubnet2/RouteTable",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::RouteTable",
                      "aws:cdk:cloudformation:props": {
                        "tags": [
                          {
                            "key": "Name",
                            "value": "appsync-rds-serverlessV2/Integ-VPC/PrivateSubnet2"
                          }
                        ],
                        "vpcId": {
                          "Ref": "IntegVPC2FF1AB0E"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_ec2.CfnRouteTable",
                      "version": "0.0.0"
                    }
                  },
                  "RouteTableAssociation": {
                    "id": "RouteTableAssociation",
                    "path": "appsync-rds-serverlessV2/Integ-VPC/PrivateSubnet2/RouteTableAssociation",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::SubnetRouteTableAssociation",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "IntegVPCPrivateSubnet2RouteTable4132D373"
                        },
                        "subnetId": {
                          "Ref": "IntegVPCPrivateSubnet2SubnetFCC4EF23"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_ec2.CfnSubnetRouteTableAssociation",
                      "version": "0.0.0"
                    }
                  },
                  "DefaultRoute": {
                    "id": "DefaultRoute",
                    "path": "appsync-rds-serverlessV2/Integ-VPC/PrivateSubnet2/DefaultRoute",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Route",
                      "aws:cdk:cloudformation:props": {
                        "destinationCidrBlock": "0.0.0.0/0",
                        "natGatewayId": {
                          "Ref": "IntegVPCPublicSubnet2NATGateway912800A3"
                        },
                        "routeTableId": {
                          "Ref": "IntegVPCPrivateSubnet2RouteTable4132D373"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_ec2.CfnRoute",
                      "version": "0.0.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_ec2.PrivateSubnet",
                  "version": "0.0.0"
                }
              },
              "IGW": {
                "id": "IGW",
                "path": "appsync-rds-serverlessV2/Integ-VPC/IGW",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::EC2::InternetGateway",
                  "aws:cdk:cloudformation:props": {
                    "tags": [
                      {
                        "key": "Name",
                        "value": "appsync-rds-serverlessV2/Integ-VPC"
                      }
                    ]
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_ec2.CfnInternetGateway",
                  "version": "0.0.0"
                }
              },
              "VPCGW": {
                "id": "VPCGW",
                "path": "appsync-rds-serverlessV2/Integ-VPC/VPCGW",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::EC2::VPCGatewayAttachment",
                  "aws:cdk:cloudformation:props": {
                    "internetGatewayId": {
                      "Ref": "IntegVPCIGW02FC78B6"
                    },
                    "vpcId": {
                      "Ref": "IntegVPC2FF1AB0E"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_ec2.CfnVPCGatewayAttachment",
                  "version": "0.0.0"
                }
              },
              "RestrictDefaultSecurityGroupCustomResource": {
                "id": "RestrictDefaultSecurityGroupCustomResource",
                "path": "appsync-rds-serverlessV2/Integ-VPC/RestrictDefaultSecurityGroupCustomResource",
                "children": {
                  "Default": {
                    "id": "Default",
                    "path": "appsync-rds-serverlessV2/Integ-VPC/RestrictDefaultSecurityGroupCustomResource/Default",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "0.0.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CustomResource",
                  "version": "0.0.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_ec2.Vpc",
              "version": "0.0.0"
            }
          },
          "LatestNodeRuntimeMap": {
            "id": "LatestNodeRuntimeMap",
            "path": "appsync-rds-serverlessV2/LatestNodeRuntimeMap",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnMapping",
              "version": "0.0.0"
            }
          },
          "Custom::VpcRestrictDefaultSGCustomResourceProvider": {
            "id": "Custom::VpcRestrictDefaultSGCustomResourceProvider",
            "path": "appsync-rds-serverlessV2/Custom::VpcRestrictDefaultSGCustomResourceProvider",
            "children": {
              "Staging": {
                "id": "Staging",
                "path": "appsync-rds-serverlessV2/Custom::VpcRestrictDefaultSGCustomResourceProvider/Staging",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.AssetStaging",
                  "version": "0.0.0"
                }
              },
              "Role": {
                "id": "Role",
                "path": "appsync-rds-serverlessV2/Custom::VpcRestrictDefaultSGCustomResourceProvider/Role",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnResource",
                  "version": "0.0.0"
                }
              },
              "Handler": {
                "id": "Handler",
                "path": "appsync-rds-serverlessV2/Custom::VpcRestrictDefaultSGCustomResourceProvider/Handler",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnResource",
                  "version": "0.0.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.CustomResourceProviderBase",
              "version": "0.0.0"
            }
          },
          "Integ-Cluster": {
            "id": "Integ-Cluster",
            "path": "appsync-rds-serverlessV2/Integ-Cluster",
            "children": {
              "Subnets": {
                "id": "Subnets",
                "path": "appsync-rds-serverlessV2/Integ-Cluster/Subnets",
                "children": {
                  "Default": {
                    "id": "Default",
                    "path": "appsync-rds-serverlessV2/Integ-Cluster/Subnets/Default",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::RDS::DBSubnetGroup",
                      "aws:cdk:cloudformation:props": {
                        "dbSubnetGroupDescription": "Subnets for Integ-Cluster database",
                        "subnetIds": [
                          {
                            "Ref": "IntegVPCPrivateSubnet1SubnetD5B61223"
                          },
                          {
                            "Ref": "IntegVPCPrivateSubnet2SubnetFCC4EF23"
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_rds.CfnDBSubnetGroup",
                      "version": "0.0.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_rds.SubnetGroup",
                  "version": "0.0.0"
                }
              },
              "SecurityGroup": {
                "id": "SecurityGroup",
                "path": "appsync-rds-serverlessV2/Integ-Cluster/SecurityGroup",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "appsync-rds-serverlessV2/Integ-Cluster/SecurityGroup/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::SecurityGroup",
                      "aws:cdk:cloudformation:props": {
                        "groupDescription": "RDS security group",
                        "securityGroupEgress": [
                          {
                            "cidrIp": "0.0.0.0/0",
                            "description": "Allow all outbound traffic by default",
                            "ipProtocol": "-1"
                          }
                        ],
                        "vpcId": {
                          "Ref": "IntegVPC2FF1AB0E"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_ec2.CfnSecurityGroup",
                      "version": "0.0.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_ec2.SecurityGroup",
                  "version": "0.0.0"
                }
              },
              "AuroraPostgreSqlDatabaseClusterEngineDefaultParameterGroup": {
                "id": "AuroraPostgreSqlDatabaseClusterEngineDefaultParameterGroup",
                "path": "appsync-rds-serverlessV2/Integ-Cluster/AuroraPostgreSqlDatabaseClusterEngineDefaultParameterGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "0.0.0"
                }
              },
              "Secret": {
                "id": "Secret",
                "path": "appsync-rds-serverlessV2/Integ-Cluster/Secret",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "appsync-rds-serverlessV2/Integ-Cluster/Secret/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::SecretsManager::Secret",
                      "aws:cdk:cloudformation:props": {
                        "description": {
                          "Fn::Join": [
                            "",
                            [
                              "Generated by the CDK for stack: ",
                              {
                                "Ref": "AWS::StackName"
                              }
                            ]
                          ]
                        },
                        "generateSecretString": {
                          "passwordLength": 30,
                          "secretStringTemplate": "{\"username\":\"clusteradmin\"}",
                          "generateStringKey": "password",
                          "excludeCharacters": " %+~`#$&*()|[]{}:;<>?!'/@\"\\"
                        },
                        "name": "integ-secretName"
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_secretsmanager.CfnSecret",
                      "version": "0.0.0"
                    }
                  },
                  "Attachment": {
                    "id": "Attachment",
                    "path": "appsync-rds-serverlessV2/Integ-Cluster/Secret/Attachment",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "appsync-rds-serverlessV2/Integ-Cluster/Secret/Attachment/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::SecretsManager::SecretTargetAttachment",
                          "aws:cdk:cloudformation:props": {
                            "secretId": {
                              "Ref": "appsyncrdsserverlessV2IntegClusterSecret660F89C53fdaad7efa858a3daf9490cf0a702aeb"
                            },
                            "targetId": {
                              "Ref": "IntegCluster4261F36F"
                            },
                            "targetType": "AWS::RDS::DBCluster"
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_secretsmanager.CfnSecretTargetAttachment",
                          "version": "0.0.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_secretsmanager.SecretTargetAttachment",
                      "version": "0.0.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_rds.DatabaseSecret",
                  "version": "0.0.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "appsync-rds-serverlessV2/Integ-Cluster/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::RDS::DBCluster",
                  "aws:cdk:cloudformation:props": {
                    "copyTagsToSnapshot": true,
                    "databaseName": "integdb",
                    "dbClusterParameterGroupName": "default.aurora-postgresql15",
                    "dbSubnetGroupName": {
                      "Ref": "IntegClusterSubnets629F72ED"
                    },
                    "enableHttpEndpoint": true,
                    "engine": "aurora-postgresql",
                    "engineVersion": "15.5",
                    "masterUsername": "clusteradmin",
                    "masterUserPassword": {
                      "Fn::Join": [
                        "",
                        [
                          "{{resolve:secretsmanager:",
                          {
                            "Ref": "appsyncrdsserverlessV2IntegClusterSecret660F89C53fdaad7efa858a3daf9490cf0a702aeb"
                          },
                          ":SecretString:password::}}"
                        ]
                      ]
                    },
                    "port": 5432,
                    "serverlessV2ScalingConfiguration": {
                      "minCapacity": 0.5,
                      "maxCapacity": 2
                    },
                    "vpcSecurityGroupIds": [
                      {
                        "Fn::GetAtt": [
                          "IntegClusterSecurityGroupECB0A218",
                          "GroupId"
                        ]
                      }
                    ]
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_rds.CfnDBCluster",
                  "version": "0.0.0"
                }
              },
              "writer": {
                "id": "writer",
                "path": "appsync-rds-serverlessV2/Integ-Cluster/writer",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "appsync-rds-serverlessV2/Integ-Cluster/writer/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::RDS::DBInstance",
                      "aws:cdk:cloudformation:props": {
                        "dbClusterIdentifier": {
                          "Ref": "IntegCluster4261F36F"
                        },
                        "dbInstanceClass": "db.serverless",
                        "engine": "aurora-postgresql",
                        "promotionTier": 0
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_rds.CfnDBInstance",
                      "version": "0.0.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "0.0.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_rds.DatabaseCluster",
              "version": "0.0.0"
            }
          },
          "Secret": {
            "id": "Secret",
            "path": "appsync-rds-serverlessV2/Secret",
            "constructInfo": {
              "fqn": "aws-cdk-lib.Resource",
              "version": "0.0.0"
            }
          },
          "RdsServerlessV2API": {
            "id": "RdsServerlessV2API",
            "path": "appsync-rds-serverlessV2/RdsServerlessV2API",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "appsync-rds-serverlessV2/RdsServerlessV2API/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::AppSync::GraphQLApi",
                  "aws:cdk:cloudformation:props": {
                    "authenticationType": "API_KEY",
                    "name": "RdsServerlessV2API"
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_appsync.CfnGraphQLApi",
                  "version": "0.0.0"
                }
              },
              "Schema": {
                "id": "Schema",
                "path": "appsync-rds-serverlessV2/RdsServerlessV2API/Schema",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::AppSync::GraphQLSchema",
                  "aws:cdk:cloudformation:props": {
                    "apiId": {
                      "Fn::GetAtt": [
                        "RdsServerlessV2API9BB3798C",
                        "ApiId"
                      ]
                    },
                    "definition": "schema {\n    query: Query\n    mutation: Mutation\n}\n\ntype Query {\n    getPost(id:ID!): Post\n    allPosts: [Post]\n}\n\ntype Mutation {\n    addPost(id: ID!, author: String!, title: String, content: String, url: String): Post!\n}\n\ntype Post {\n    id: ID!\n    author: String!\n    title: String\n    content: String\n    url: String\n    ups: Int\n    downs: Int\n    relatedPosts: [Post]\n    relatedPostsMaxBatchSize: [Post]\n}"
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_appsync.CfnGraphQLSchema",
                  "version": "0.0.0"
                }
              },
              "DefaultApiKey": {
                "id": "DefaultApiKey",
                "path": "appsync-rds-serverlessV2/RdsServerlessV2API/DefaultApiKey",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::AppSync::ApiKey",
                  "aws:cdk:cloudformation:props": {
                    "apiId": {
                      "Fn::GetAtt": [
                        "RdsServerlessV2API9BB3798C",
                        "ApiId"
                      ]
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_appsync.CfnApiKey",
                  "version": "0.0.0"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "appsync-rds-serverlessV2/RdsServerlessV2API/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "0.0.0"
                }
              },
              "ds": {
                "id": "ds",
                "path": "appsync-rds-serverlessV2/RdsServerlessV2API/ds",
                "children": {
                  "ServiceRole": {
                    "id": "ServiceRole",
                    "path": "appsync-rds-serverlessV2/RdsServerlessV2API/ds/ServiceRole",
                    "children": {
                      "ImportServiceRole": {
                        "id": "ImportServiceRole",
                        "path": "appsync-rds-serverlessV2/RdsServerlessV2API/ds/ServiceRole/ImportServiceRole",
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.Resource",
                          "version": "0.0.0"
                        }
                      },
                      "Resource": {
                        "id": "Resource",
                        "path": "appsync-rds-serverlessV2/RdsServerlessV2API/ds/ServiceRole/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                          "aws:cdk:cloudformation:props": {
                            "assumeRolePolicyDocument": {
                              "Statement": [
                                {
                                  "Action": "sts:AssumeRole",
                                  "Effect": "Allow",
                                  "Principal": {
                                    "Service": "appsync.amazonaws.com"
                                  }
                                }
                              ],
                              "Version": "2012-10-17"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                          "version": "0.0.0"
                        }
                      },
                      "DefaultPolicy": {
                        "id": "DefaultPolicy",
                        "path": "appsync-rds-serverlessV2/RdsServerlessV2API/ds/ServiceRole/DefaultPolicy",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "appsync-rds-serverlessV2/RdsServerlessV2API/ds/ServiceRole/DefaultPolicy/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                              "aws:cdk:cloudformation:props": {
                                "policyDocument": {
                                  "Statement": [
                                    {
                                      "Action": [
                                        "secretsmanager:DescribeSecret",
                                        "secretsmanager:GetSecretValue"
                                      ],
                                      "Effect": "Allow",
                                      "Resource": [
                                        {
                                          "Fn::Join": [
                                            "",
                                            [
                                              "arn:",
                                              {
                                                "Ref": "AWS::Partition"
                                              },
                                              ":secretsmanager:",
                                              {
                                                "Ref": "AWS::Region"
                                              },
                                              ":",
                                              {
                                                "Ref": "AWS::AccountId"
                                              },
                                              ":secret:integ-secretName-??????"
                                            ]
                                          ]
                                        },
                                        {
                                          "Ref": "IntegClusterSecretAttachmentC627C903"
                                        }
                                      ]
                                    },
                                    {
                                      "Action": [
                                        "rds-data:BatchExecuteStatement",
                                        "rds-data:BeginTransaction",
                                        "rds-data:CommitTransaction",
                                        "rds-data:ExecuteStatement",
                                        "rds-data:RollbackTransaction"
                                      ],
                                      "Effect": "Allow",
                                      "Resource": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":rds:",
                                            {
                                              "Ref": "AWS::Region"
                                            },
                                            ":",
                                            {
                                              "Ref": "AWS::AccountId"
                                            },
                                            ":cluster:",
                                            {
                                              "Ref": "IntegCluster4261F36F"
                                            }
                                          ]
                                        ]
                                      }
                                    },
                                    {
                                      "Action": [
                                        "rds-data:DeleteItems",
                                        "rds-data:ExecuteSql",
                                        "rds-data:GetItems",
                                        "rds-data:InsertItems",
                                        "rds-data:UpdateItems"
                                      ],
                                      "Effect": "Allow",
                                      "Resource": [
                                        {
                                          "Fn::Join": [
                                            "",
                                            [
                                              "arn:",
                                              {
                                                "Ref": "AWS::Partition"
                                              },
                                              ":rds:",
                                              {
                                                "Ref": "AWS::Region"
                                              },
                                              ":",
                                              {
                                                "Ref": "AWS::AccountId"
                                              },
                                              ":cluster:",
                                              {
                                                "Ref": "IntegCluster4261F36F"
                                              },
                                              ":*"
                                            ]
                                          ]
                                        },
                                        {
                                          "Fn::Join": [
                                            "",
                                            [
                                              "arn:",
                                              {
                                                "Ref": "AWS::Partition"
                                              },
                                              ":rds:",
                                              {
                                                "Ref": "AWS::Region"
                                              },
                                              ":",
                                              {
                                                "Ref": "AWS::AccountId"
                                              },
                                              ":cluster:",
                                              {
                                                "Ref": "IntegCluster4261F36F"
                                              }
                                            ]
                                          ]
                                        }
                                      ]
                                    }
                                  ],
                                  "Version": "2012-10-17"
                                },
                                "policyName": "RdsServerlessV2APIdsServiceRoleDefaultPolicy387D3F05",
                                "roles": [
                                  {
                                    "Ref": "RdsServerlessV2APIdsServiceRole31B5B0D1"
                                  }
                                ]
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                              "version": "0.0.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.Policy",
                          "version": "0.0.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Role",
                      "version": "0.0.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "appsync-rds-serverlessV2/RdsServerlessV2API/ds/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::AppSync::DataSource",
                      "aws:cdk:cloudformation:props": {
                        "apiId": {
                          "Fn::GetAtt": [
                            "RdsServerlessV2API9BB3798C",
                            "ApiId"
                          ]
                        },
                        "name": "ds",
                        "relationalDatabaseConfig": {
                          "rdsHttpEndpointConfig": {
                            "awsRegion": {
                              "Ref": "AWS::Region"
                            },
                            "dbClusterIdentifier": {
                              "Fn::Join": [
                                "",
                                [
                                  "arn:",
                                  {
                                    "Ref": "AWS::Partition"
                                  },
                                  ":rds:",
                                  {
                                    "Ref": "AWS::Region"
                                  },
                                  ":",
                                  {
                                    "Ref": "AWS::AccountId"
                                  },
                                  ":cluster:",
                                  {
                                    "Ref": "IntegCluster4261F36F"
                                  }
                                ]
                              ]
                            },
                            "awsSecretStoreArn": {
                              "Fn::Join": [
                                "",
                                [
                                  "arn:",
                                  {
                                    "Ref": "AWS::Partition"
                                  },
                                  ":secretsmanager:",
                                  {
                                    "Ref": "AWS::Region"
                                  },
                                  ":",
                                  {
                                    "Ref": "AWS::AccountId"
                                  },
                                  ":secret:integ-secretName"
                                ]
                              ]
                            },
                            "databaseName": "integdb"
                          },
                          "relationalDatabaseSourceType": "RDS_HTTP_ENDPOINT"
                        },
                        "serviceRoleArn": {
                          "Fn::GetAtt": [
                            "RdsServerlessV2APIdsServiceRole31B5B0D1",
                            "Arn"
                          ]
                        },
                        "type": "RELATIONAL_DATABASE"
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_appsync.CfnDataSource",
                      "version": "0.0.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_appsync.RdsDataSource",
                  "version": "0.0.0"
                }
              },
              "QueryGetallPostsResolver": {
                "id": "QueryGetallPostsResolver",
                "path": "appsync-rds-serverlessV2/RdsServerlessV2API/QueryGetallPostsResolver",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "appsync-rds-serverlessV2/RdsServerlessV2API/QueryGetallPostsResolver/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::AppSync::Resolver",
                      "aws:cdk:cloudformation:props": {
                        "apiId": {
                          "Fn::GetAtt": [
                            "RdsServerlessV2API9BB3798C",
                            "ApiId"
                          ]
                        },
                        "dataSourceName": "ds",
                        "fieldName": "allPosts",
                        "kind": "UNIT",
                        "requestMappingTemplate": "{\n      \"version\": \"2018-05-29\",\n      \"statements\": [\n        \"SELECT * FROM integdb\"\n      ]\n    }",
                        "responseMappingTemplate": "\n        #if($ctx.error)\n            $utils.error($ctx.error.message, $ctx.error.type)\n        #end\n        $utils.toJson($utils.rds.toJsonObject($ctx.result)[0])",
                        "typeName": "Query"
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_appsync.CfnResolver",
                      "version": "0.0.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_appsync.Resolver",
                  "version": "0.0.0"
                }
              },
              "QueryGetPostResolver": {
                "id": "QueryGetPostResolver",
                "path": "appsync-rds-serverlessV2/RdsServerlessV2API/QueryGetPostResolver",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "appsync-rds-serverlessV2/RdsServerlessV2API/QueryGetPostResolver/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::AppSync::Resolver",
                      "aws:cdk:cloudformation:props": {
                        "apiId": {
                          "Fn::GetAtt": [
                            "RdsServerlessV2API9BB3798C",
                            "ApiId"
                          ]
                        },
                        "dataSourceName": "ds",
                        "fieldName": "getPost",
                        "kind": "UNIT",
                        "requestMappingTemplate": "{\n      \"version\": \"2018-05-29\",\n      \"statements\": [\n        \"SELECT * FROM integdb WHERE id = :id\"\n      ]\n    }",
                        "responseMappingTemplate": "\n        #if($ctx.error)\n            $utils.error($ctx.error.message, $ctx.error.type)\n        #end\n        $utils.toJson($utils.rds.toJsonObject($ctx.result)[0])",
                        "typeName": "Query"
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_appsync.CfnResolver",
                      "version": "0.0.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_appsync.Resolver",
                  "version": "0.0.0"
                }
              },
              "MutationAddPostResolver": {
                "id": "MutationAddPostResolver",
                "path": "appsync-rds-serverlessV2/RdsServerlessV2API/MutationAddPostResolver",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "appsync-rds-serverlessV2/RdsServerlessV2API/MutationAddPostResolver/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::AppSync::Resolver",
                      "aws:cdk:cloudformation:props": {
                        "apiId": {
                          "Fn::GetAtt": [
                            "RdsServerlessV2API9BB3798C",
                            "ApiId"
                          ]
                        },
                        "dataSourceName": "ds",
                        "fieldName": "addPost",
                        "kind": "UNIT",
                        "requestMappingTemplate": "\n    {\n      \"version\": \"2018-05-29\",\n      \"statements\": [\n        \"INSERT INTO integdb VALUES (:id, :author, :title, :content, :url )\",\n        \"SELECT * WHERE id = :id\"\n      ],\n      \"variableMap\": {\n        \":id\": $util.toJson($util.autoId()),\n        \":author\": $util.toJson($ctx.args.author)\n        \":title\": $util.toJson($ctx.args.title)\n        \":content\": $util.toJson($ctx.args.content)\n        \":url\": $util.toJson($ctx.args.url)\n      }\n    }",
                        "responseMappingTemplate": "\n        #if($ctx.error)\n            $utils.error($ctx.error.message, $ctx.error.type)\n        #end\n        $utils.toJson($utils.rds.toJsonObject($ctx.result)[0])",
                        "typeName": "Mutation"
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_appsync.CfnResolver",
                      "version": "0.0.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_appsync.Resolver",
                  "version": "0.0.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_appsync.GraphqlApi",
              "version": "0.0.0"
            }
          },
          "BootstrapVersion": {
            "id": "BootstrapVersion",
            "path": "appsync-rds-serverlessV2/BootstrapVersion",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnParameter",
              "version": "0.0.0"
            }
          },
          "CheckBootstrapVersion": {
            "id": "CheckBootstrapVersion",
            "path": "appsync-rds-serverlessV2/CheckBootstrapVersion",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnRule",
              "version": "0.0.0"
            }
          }
        },
        "constructInfo": {
          "fqn": "aws-cdk-lib.Stack",
          "version": "0.0.0"
        }
      },
      "rds-serverlessV2-stack": {
        "id": "rds-serverlessV2-stack",
        "path": "rds-serverlessV2-stack",
        "children": {
          "DefaultTest": {
            "id": "DefaultTest",
            "path": "rds-serverlessV2-stack/DefaultTest",
            "children": {
              "Default": {
                "id": "Default",
                "path": "rds-serverlessV2-stack/DefaultTest/Default",
                "constructInfo": {
                  "fqn": "constructs.Construct",
                  "version": "10.3.0"
                }
              },
              "DeployAssert": {
                "id": "DeployAssert",
                "path": "rds-serverlessV2-stack/DefaultTest/DeployAssert",
                "children": {
                  "BootstrapVersion": {
                    "id": "BootstrapVersion",
                    "path": "rds-serverlessV2-stack/DefaultTest/DeployAssert/BootstrapVersion",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnParameter",
                      "version": "0.0.0"
                    }
                  },
                  "CheckBootstrapVersion": {
                    "id": "CheckBootstrapVersion",
                    "path": "rds-serverlessV2-stack/DefaultTest/DeployAssert/CheckBootstrapVersion",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnRule",
                      "version": "0.0.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Stack",
                  "version": "0.0.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "@aws-cdk/integ-tests-alpha.IntegTestCase",
              "version": "0.0.0"
            }
          }
        },
        "constructInfo": {
          "fqn": "@aws-cdk/integ-tests-alpha.IntegTest",
          "version": "0.0.0"
        }
      },
      "Tree": {
        "id": "Tree",
        "path": "Tree",
        "constructInfo": {
          "fqn": "constructs.Construct",
          "version": "10.3.0"
        }
      }
    },
    "constructInfo": {
      "fqn": "aws-cdk-lib.App",
      "version": "0.0.0"
    }
  }
}