"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const ec2 = require("aws-cdk-lib/aws-ec2");
const cdk = require("aws-cdk-lib");
const ecs = require("aws-cdk-lib/aws-ecs");
const app = new cdk.App();
const stack = new cdk.Stack(app, 'aws-ecs-integ-runtime');
const vpc = new ec2.Vpc(stack, 'Vpc', { maxAzs: 2 });
const cluster = new ecs.Cluster(stack, 'FargateCluster', {
    vpc,
});
const taskDefinitionwindows = new ecs.FargateTaskDefinition(stack, 'TaskDefWindows', {
    runtimePlatform: {
        operatingSystemFamily: ecs.OperatingSystemFamily.WINDOWS_SERVER_2019_CORE,
        cpuArchitecture: ecs.CpuArchitecture.X86_64,
    },
    cpu: 1024,
    memoryLimitMiB: 2048,
});
const taskDefinitiongraviton2 = new ecs.FargateTaskDefinition(stack, 'TaskDefGraviton2', {
    runtimePlatform: {
        operatingSystemFamily: ecs.OperatingSystemFamily.LINUX,
        cpuArchitecture: ecs.CpuArchitecture.ARM64,
    },
    cpu: 256,
    memoryLimitMiB: 1024,
});
taskDefinitionwindows.addContainer('windowsservercore', {
    logging: ecs.LogDriver.awsLogs({ streamPrefix: 'win-iis-on-fargate' }),
    portMappings: [{ containerPort: 80 }],
    image: ecs.ContainerImage.fromRegistry('mcr.microsoft.com/windows/servercore/iis:windowsservercore-ltsc2019'),
});
taskDefinitiongraviton2.addContainer('webarm64', {
    logging: ecs.LogDriver.awsLogs({ streamPrefix: 'graviton2-on-fargate' }),
    portMappings: [{ containerPort: 80 }],
    image: ecs.ContainerImage.fromRegistry('public.ecr.aws/nginx/nginx:latest-arm64v8'),
});
new ecs.FargateService(stack, 'FargateServiceWindowsRuntime', {
    cluster,
    taskDefinition: taskDefinitionwindows,
});
new ecs.FargateService(stack, 'FargateServiceGraviton2Runtime', {
    cluster,
    taskDefinition: taskDefinitiongraviton2,
});
app.synth();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW50ZWcucnVudGltZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbImludGVnLnJ1bnRpbWUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSwyQ0FBMkM7QUFDM0MsbUNBQW1DO0FBQ25DLDJDQUEyQztBQUUzQyxNQUFNLEdBQUcsR0FBRyxJQUFJLEdBQUcsQ0FBQyxHQUFHLEVBQUUsQ0FBQztBQUMxQixNQUFNLEtBQUssR0FBRyxJQUFJLEdBQUcsQ0FBQyxLQUFLLENBQUMsR0FBRyxFQUFFLHVCQUF1QixDQUFDLENBQUM7QUFFMUQsTUFBTSxHQUFHLEdBQUcsSUFBSSxHQUFHLENBQUMsR0FBRyxDQUFDLEtBQUssRUFBRSxLQUFLLEVBQUUsRUFBRSxNQUFNLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQztBQUdyRCxNQUFNLE9BQU8sR0FBRyxJQUFJLEdBQUcsQ0FBQyxPQUFPLENBQUMsS0FBSyxFQUFFLGdCQUFnQixFQUFFO0lBQ3ZELEdBQUc7Q0FDSixDQUFDLENBQUM7QUFFSCxNQUFNLHFCQUFxQixHQUFHLElBQUksR0FBRyxDQUFDLHFCQUFxQixDQUFDLEtBQUssRUFBRSxnQkFBZ0IsRUFBRTtJQUNuRixlQUFlLEVBQUU7UUFDZixxQkFBcUIsRUFBRSxHQUFHLENBQUMscUJBQXFCLENBQUMsd0JBQXdCO1FBQ3pFLGVBQWUsRUFBRSxHQUFHLENBQUMsZUFBZSxDQUFDLE1BQU07S0FDNUM7SUFDRCxHQUFHLEVBQUUsSUFBSTtJQUNULGNBQWMsRUFBRSxJQUFJO0NBQ3JCLENBQUMsQ0FBQztBQUVILE1BQU0sdUJBQXVCLEdBQUcsSUFBSSxHQUFHLENBQUMscUJBQXFCLENBQUMsS0FBSyxFQUFFLGtCQUFrQixFQUFFO0lBQ3ZGLGVBQWUsRUFBRTtRQUNmLHFCQUFxQixFQUFFLEdBQUcsQ0FBQyxxQkFBcUIsQ0FBQyxLQUFLO1FBQ3RELGVBQWUsRUFBRSxHQUFHLENBQUMsZUFBZSxDQUFDLEtBQUs7S0FDM0M7SUFDRCxHQUFHLEVBQUUsR0FBRztJQUNSLGNBQWMsRUFBRSxJQUFJO0NBQ3JCLENBQUMsQ0FBQztBQUVILHFCQUFxQixDQUFDLFlBQVksQ0FBQyxtQkFBbUIsRUFBRTtJQUN0RCxPQUFPLEVBQUUsR0FBRyxDQUFDLFNBQVMsQ0FBQyxPQUFPLENBQUMsRUFBRSxZQUFZLEVBQUUsb0JBQW9CLEVBQUUsQ0FBQztJQUN0RSxZQUFZLEVBQUUsQ0FBQyxFQUFFLGFBQWEsRUFBRSxFQUFFLEVBQUUsQ0FBQztJQUNyQyxLQUFLLEVBQUUsR0FBRyxDQUFDLGNBQWMsQ0FBQyxZQUFZLENBQUMscUVBQXFFLENBQUM7Q0FDOUcsQ0FBQyxDQUFDO0FBRUgsdUJBQXVCLENBQUMsWUFBWSxDQUFDLFVBQVUsRUFBRTtJQUMvQyxPQUFPLEVBQUUsR0FBRyxDQUFDLFNBQVMsQ0FBQyxPQUFPLENBQUMsRUFBRSxZQUFZLEVBQUUsc0JBQXNCLEVBQUUsQ0FBQztJQUN4RSxZQUFZLEVBQUUsQ0FBQyxFQUFFLGFBQWEsRUFBRSxFQUFFLEVBQUUsQ0FBQztJQUNyQyxLQUFLLEVBQUUsR0FBRyxDQUFDLGNBQWMsQ0FBQyxZQUFZLENBQUMsMkNBQTJDLENBQUM7Q0FDcEYsQ0FBQyxDQUFDO0FBRUgsSUFBSSxHQUFHLENBQUMsY0FBYyxDQUFDLEtBQUssRUFBRSw4QkFBOEIsRUFBRTtJQUM1RCxPQUFPO0lBQ1AsY0FBYyxFQUFFLHFCQUFxQjtDQUN0QyxDQUFDLENBQUM7QUFFSCxJQUFJLEdBQUcsQ0FBQyxjQUFjLENBQUMsS0FBSyxFQUFFLGdDQUFnQyxFQUFFO0lBQzlELE9BQU87SUFDUCxjQUFjLEVBQUUsdUJBQXVCO0NBQ3hDLENBQUMsQ0FBQztBQUVILEdBQUcsQ0FBQyxLQUFLLEVBQUUsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIGVjMiBmcm9tICdhd3MtY2RrLWxpYi9hd3MtZWMyJztcbmltcG9ydCAqIGFzIGNkayBmcm9tICdhd3MtY2RrLWxpYic7XG5pbXBvcnQgKiBhcyBlY3MgZnJvbSAnYXdzLWNkay1saWIvYXdzLWVjcyc7XG5cbmNvbnN0IGFwcCA9IG5ldyBjZGsuQXBwKCk7XG5jb25zdCBzdGFjayA9IG5ldyBjZGsuU3RhY2soYXBwLCAnYXdzLWVjcy1pbnRlZy1ydW50aW1lJyk7XG5cbmNvbnN0IHZwYyA9IG5ldyBlYzIuVnBjKHN0YWNrLCAnVnBjJywgeyBtYXhBenM6IDIgfSk7XG5cblxuY29uc3QgY2x1c3RlciA9IG5ldyBlY3MuQ2x1c3RlcihzdGFjaywgJ0ZhcmdhdGVDbHVzdGVyJywge1xuICB2cGMsXG59KTtcblxuY29uc3QgdGFza0RlZmluaXRpb253aW5kb3dzID0gbmV3IGVjcy5GYXJnYXRlVGFza0RlZmluaXRpb24oc3RhY2ssICdUYXNrRGVmV2luZG93cycsIHtcbiAgcnVudGltZVBsYXRmb3JtOiB7XG4gICAgb3BlcmF0aW5nU3lzdGVtRmFtaWx5OiBlY3MuT3BlcmF0aW5nU3lzdGVtRmFtaWx5LldJTkRPV1NfU0VSVkVSXzIwMTlfQ09SRSxcbiAgICBjcHVBcmNoaXRlY3R1cmU6IGVjcy5DcHVBcmNoaXRlY3R1cmUuWDg2XzY0LFxuICB9LFxuICBjcHU6IDEwMjQsXG4gIG1lbW9yeUxpbWl0TWlCOiAyMDQ4LFxufSk7XG5cbmNvbnN0IHRhc2tEZWZpbml0aW9uZ3Jhdml0b24yID0gbmV3IGVjcy5GYXJnYXRlVGFza0RlZmluaXRpb24oc3RhY2ssICdUYXNrRGVmR3Jhdml0b24yJywge1xuICBydW50aW1lUGxhdGZvcm06IHtcbiAgICBvcGVyYXRpbmdTeXN0ZW1GYW1pbHk6IGVjcy5PcGVyYXRpbmdTeXN0ZW1GYW1pbHkuTElOVVgsXG4gICAgY3B1QXJjaGl0ZWN0dXJlOiBlY3MuQ3B1QXJjaGl0ZWN0dXJlLkFSTTY0LFxuICB9LFxuICBjcHU6IDI1NixcbiAgbWVtb3J5TGltaXRNaUI6IDEwMjQsXG59KTtcblxudGFza0RlZmluaXRpb253aW5kb3dzLmFkZENvbnRhaW5lcignd2luZG93c3NlcnZlcmNvcmUnLCB7XG4gIGxvZ2dpbmc6IGVjcy5Mb2dEcml2ZXIuYXdzTG9ncyh7IHN0cmVhbVByZWZpeDogJ3dpbi1paXMtb24tZmFyZ2F0ZScgfSksXG4gIHBvcnRNYXBwaW5nczogW3sgY29udGFpbmVyUG9ydDogODAgfV0sXG4gIGltYWdlOiBlY3MuQ29udGFpbmVySW1hZ2UuZnJvbVJlZ2lzdHJ5KCdtY3IubWljcm9zb2Z0LmNvbS93aW5kb3dzL3NlcnZlcmNvcmUvaWlzOndpbmRvd3NzZXJ2ZXJjb3JlLWx0c2MyMDE5JyksXG59KTtcblxudGFza0RlZmluaXRpb25ncmF2aXRvbjIuYWRkQ29udGFpbmVyKCd3ZWJhcm02NCcsIHtcbiAgbG9nZ2luZzogZWNzLkxvZ0RyaXZlci5hd3NMb2dzKHsgc3RyZWFtUHJlZml4OiAnZ3Jhdml0b24yLW9uLWZhcmdhdGUnIH0pLFxuICBwb3J0TWFwcGluZ3M6IFt7IGNvbnRhaW5lclBvcnQ6IDgwIH1dLFxuICBpbWFnZTogZWNzLkNvbnRhaW5lckltYWdlLmZyb21SZWdpc3RyeSgncHVibGljLmVjci5hd3Mvbmdpbngvbmdpbng6bGF0ZXN0LWFybTY0djgnKSxcbn0pO1xuXG5uZXcgZWNzLkZhcmdhdGVTZXJ2aWNlKHN0YWNrLCAnRmFyZ2F0ZVNlcnZpY2VXaW5kb3dzUnVudGltZScsIHtcbiAgY2x1c3RlcixcbiAgdGFza0RlZmluaXRpb246IHRhc2tEZWZpbml0aW9ud2luZG93cyxcbn0pO1xuXG5uZXcgZWNzLkZhcmdhdGVTZXJ2aWNlKHN0YWNrLCAnRmFyZ2F0ZVNlcnZpY2VHcmF2aXRvbjJSdW50aW1lJywge1xuICBjbHVzdGVyLFxuICB0YXNrRGVmaW5pdGlvbjogdGFza0RlZmluaXRpb25ncmF2aXRvbjIsXG59KTtcblxuYXBwLnN5bnRoKCk7Il19