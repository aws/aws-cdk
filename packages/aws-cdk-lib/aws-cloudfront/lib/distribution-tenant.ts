import { Construct } from 'constructs';
import { CfnDistributionTenant } from './cloudfront.generated';
import { CfnTag, IResource, Resource, Stack } from '../../core';
import { addConstructMetadata } from '../../core/lib/metadata-resource';

/**
 * Interface for CloudFront Distribution Tenants
 */
export interface IDistributionTenant extends IResource {
  /**
   * The ID of the distribution this tenant is associated with.
   *
   * @attribute
   */
  readonly distributionId: string;

  /**
   * The name of the distribution tenant.
   *
   * @attribute
   */
  readonly distributionTenantName: string;

  /**
   * The domains associated with this tenant.
   *
   * @attribute
   */
  readonly domains: string[];

  /**
   * The ID of the connection group this tenant is associated with.
   *
   * @attribute
   */
  readonly connectionGroupId: string | undefined;
}

/**
 * Attributes for importing an existing distribution tenant
 */
export interface DistributionTenantAttributes {
  /**
   * The ID of the distribution the tenant is associated with.
   */
  readonly distributionId: string;

  /**
   * The name of the distribution tenant.
   */
  readonly distributionTenantName: string;

  /**
   * The domains associated with this tenant.
   */
  readonly domains: string[];

  /**
   * The ID of the connection group this tenant is associated with.
   * @default - the default Cloudfront assigned connection group
   */
  readonly connectionGroupId?: string;
}

/**
 * Customization properties for certificates, georestrictions, and web ACLs for a Distribution Tenant
 *
 * @see https://docs.aws.amazon.com/cdk/api/v2/docs/aws-cdk-lib.aws_cloudfront.CfnDistributionTenant.CustomizationsProperty.html
 */
export interface CustomizationProps extends CfnDistributionTenant.CustomizationsProperty {

}

/**
 * Properties for configuring an Amazon CloudFront managed ACM certificate for a Distribution Tenant
 *
 * @see https://docs.aws.amazon.com/cdk/api/v2/docs/aws-cdk-lib.aws_cloudfront.CfnDistributionTenant.ManagedCertificateRequestProperty.html
 */
export interface ManagedCertificateRequestProps extends CfnDistributionTenant.ManagedCertificateRequestProperty{

}

/**
 * Parameter properties for a Distribution Tenant
 *
 * @see https://docs.aws.amazon.com/cdk/api/v2/docs/aws-cdk-lib.aws_cloudfront.CfnDistributionTenant.ParameterProperty.html
 */
export interface ParameterProps extends CfnDistributionTenant.ParameterProperty{

}

/**
 * Properties for a Distribution Tenant
 */
export interface DistributionTenantProps {
  /**
   * The distribution ID for this tenant.
   */
  readonly distributionId: string;

  /**
   * The domains associated with this tenant.
   */
  readonly domains: string[];

  /**
   * The name of the distribution tenant.
   * @default - Autogenerated name
   */
  readonly distributionTenantName?: string;

  /**
   * The connection group ID associated with this tenant.
   * @default - the default cloudfront connection group ID
   */
  readonly connectionGroupId?: string;

  /**
   * Customization properties for certificates, georestrictions, and web ACLs for this Distribution Tenant
   * @default - no special customizations
   */
  readonly customizations?: CustomizationProps;

  /**
   * Whether the tenant is enabled.
   * @default true
   */
  readonly enabled?: boolean;

  /**
   * MProperties for configuring an Amazon CloudFront managed ACM certificate for this Distribution Tenant
   * @default - no managed certificate
   */
  readonly managedCertificateRequest?: ManagedCertificateRequestProps;

  /**
   * Parameter properties for this Distribution Tenant
   * @default - no special parameters
   */
  readonly parameters?: ParameterProps[];

  /**
   * Tags for this tenant.
   * @default - no tags
   */
  readonly tags?: DistributionTenantTag[];
}

/**
 * Tag for a Distribution Tenant
 */
export interface DistributionTenantTag extends CfnTag {

}

/**
 * A CloudFront distribution tenant.
 * @resource AWS::CloudFront::DistributionTenant
 */
export class DistributionTenant extends Resource implements IDistributionTenant {
  /**
   * Import an existing distribution tenant
   */
  public static fromDistributionTenantAttributes(scope: Construct, id: string, attrs: DistributionTenantAttributes): IDistributionTenant {
    return new class extends Resource implements IDistributionTenant {
      public readonly distributionId: string;
      public readonly distributionTenantName: string;
      public readonly domains: string[];
      public readonly connectionGroupId: string | undefined;

      constructor() {
        super(scope, id);
        this.distributionId = attrs.distributionId;
        this.distributionTenantName = attrs.distributionTenantName;
        this.domains = attrs.domains;
        this.connectionGroupId = attrs.connectionGroupId;
      }
    }();
  }

  public readonly distributionId: string;
  public readonly distributionTenantName: string;
  public readonly domains: string[];
  public readonly connectionGroupId: string | undefined;

  constructor(scope: Construct, id: string, props: DistributionTenantProps) {
    super(scope, id);

    addConstructMetadata(this, props);

    this.distributionTenantName = props.distributionTenantName ?? `${Stack.of(this).stackName}${this.node.id}`;
    this.domains = props.domains;
    this.distributionId = props.distributionId;

    const distributionTenant = new CfnDistributionTenant(this, 'Resource', {
      distributionId: props.distributionId,
      domains: props.domains,
      name: this.distributionTenantName,
      connectionGroupId: props.connectionGroupId,
      customizations: props.customizations,
      enabled: props.enabled ?? true,
      managedCertificateRequest: props.managedCertificateRequest,
      parameters: props.parameters,
      tags: props.tags,
    });

    this.connectionGroupId = distributionTenant.connectionGroupId;
  }
}
