// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`basic test 1`] = `
"// generated by cdk-dasm 

import { Stack, StackProps, Fn } from '@aws-cdk/core';
import { Construct } from 'constructs';
import sns = require('@aws-cdk/aws-sns');

export class MyStack extends Stack {
    constructor(scope: Construct, id: string, props: StackProps = {}) {
        super(scope, id, props);
        new sns.CfnTopic(this, 'MyTopic', {
            displayName: \\"hello hello\\",
        });
    }
}
"
`;

exports[`bucket-and-key 1`] = `
"// generated by cdk-dasm 

import { Stack, StackProps, Fn } from '@aws-cdk/core';
import { Construct } from 'constructs';
import kms = require('@aws-cdk/aws-kms');
import s3 = require('@aws-cdk/aws-s3');
import cdk = require('@aws-cdk/aws-cdk');

export class MyStack extends Stack {
    constructor(scope: Construct, id: string, props: StackProps = {}) {
        super(scope, id, props);
        new kms.CfnKey(this, 'MyBucketKeyC17130CF', {
            keyPolicy: {
              \\"statement\\": [
                {
                  \\"action\\": [
                    \\"kms:Create*\\",
                    \\"kms:Describe*\\",
                    \\"kms:Enable*\\",
                    \\"kms:List*\\",
                    \\"kms:Put*\\",
                    \\"kms:Update*\\",
                    \\"kms:Revoke*\\",
                    \\"kms:Disable*\\",
                    \\"kms:Get*\\",
                    \\"kms:Delete*\\",
                    \\"kms:ScheduleKeyDeletion\\",
                    \\"kms:CancelKeyDeletion\\"
                  ],
                  \\"effect\\": \\"Allow\\",
                  \\"principal\\": {
                    \\"aws\\": {
                      \\"Fn::Join\\": [
                        \\"\\",
                        [
                          \\"arn:\\",
                          {
                            \\"Ref\\": \\"AWS::Partition\\"
                          },
                          \\":iam::\\",
                          {
                            \\"Ref\\": \\"AWS::AccountId\\"
                          },
                          \\":root\\"
                        ]
                      ]
                    }
                  },
                  \\"resource\\": \\"*\\"
                }
              ],
              \\"version\\": \\"2012-10-17\\"
            },
            description: \\"Created by Pg12321Stack/MyBucket\\",
        });
        new s3.CfnBucket(this, 'MyBucketF68F3FF0', {
            bucketEncryption: {
              \\"serverSideEncryptionConfiguration\\": [
                {
                  \\"serverSideEncryptionByDefault\\": {
                    \\"kmsMasterKeyId\\": {
                      \\"Fn::GetAtt\\": [
                        \\"MyBucketKeyC17130CF\\",
                        \\"Arn\\"
                      ]
                    },
                    \\"sseAlgorithm\\": \\"aws:kms\\"
                  }
                }
              ]
            },
        });
        new cdk.CfnMetadata(this, 'CDKMetadata', {
            modules: \\"aws-cdk=0.28.0,@aws-cdk/aws-events=0.28.0,@aws-cdk/aws-iam=0.28.0,@aws-cdk/aws-kms=0.28.0,@aws-cdk/aws-s3=0.28.0,@aws-cdk/aws-s3-notifications=0.28.0,@aws-cdk/core=0.28.0,@aws-cdk/cx-api=0.28.0,@aws-cdk/region-info=0.28.0,jsii-runtime=node.js/v10.13.0\\",
        });
    }
}
"
`;

exports[`multiple of same type 1`] = `
"// generated by cdk-dasm 

import { Stack, StackProps, Fn } from '@aws-cdk/core';
import { Construct } from 'constructs';
import sns = require('@aws-cdk/aws-sns');

export class MyStack extends Stack {
    constructor(scope: Construct, id: string, props: StackProps = {}) {
        super(scope, id, props);
        new sns.CfnTopic(this, 'MyTopic', {
            displayName: \\"hello hello\\",
        });
        new sns.CfnTopic(this, 'MyTopicDos', {
            displayName: \\"hello again\\",
        });
    }
}
"
`;

exports[`no props 1`] = `
"// generated by cdk-dasm 

import { Stack, StackProps, Fn } from '@aws-cdk/core';
import { Construct } from 'constructs';
import s3 = require('@aws-cdk/aws-s3');

export class MyStack extends Stack {
    constructor(scope: Construct, id: string, props: StackProps = {}) {
        super(scope, id, props);
        new s3.CfnBucket(this, 'Boom');
    }
}
"
`;
